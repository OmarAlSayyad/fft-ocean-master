THREE.Ocean=function(e,r,t,i){function a(e,r){return void 0!==e?e:r}function s(e,r,t){return void 0!==e?e[r]:t}this.changed=!0,this.initial=!0,this.oceanCamera=new THREE.OrthographicCamera,this.oceanCamera.position.z=1,this.renderer=e,this.renderer.clearColor(16777215),this.scene=new THREE.Scene,this.renderer.context.getExtension("OES_texture_float"),this.renderer.context.getExtension("OES_texture_float_linear"),this.mirror=new THREE.MirrorRenderer(e,r,t),this.mirror.position.y=-10,i=i||{},this.sunDirection=a(i.SUN_DIRECTION,new THREE.Vector3(-1,1,1)),this.oceanColor=a(i.OCEAN_COLOR,new THREE.Vector3(.004,.016,.047)),this.skyColor=a(i.SKY_COLOR,new THREE.Vector3(3.2,9.6,12.8)),this.exposure=a(i.EXPOSURE,.35),this.geometryResolution=a(i.GEOMETRY_RESOLUTION,32),this.geometrySize=a(i.GEOMETRY_SIZE,2e3),this.resolution=a(i.RESOLUTION,64),this.floatSize=a(i.SIZE_OF_FLOAT,4),this.windX=s(i.INITIAL_WIND,0,10),this.windY=s(i.INITIAL_WIND,1,10),this.size=a(i.INITIAL_SIZE,250),this.choppiness=a(i.INITIAL_CHOPPINESS,1.5),this.matrixNeedsUpdate=!1;var n={format:THREE.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:THREE.FloatType},h=JSON.parse(JSON.stringify(n));h.minFilter=h.magFilter=THREE.LinearFilter,h.wrapS=h.wrapT=THREE.ClampToEdgeWrapping;var o=JSON.parse(JSON.stringify(n));o.minFilter=o.magFilter=THREE.NearestFilter,o.wrapS=o.wrapT=THREE.ClampToEdgeWrapping;var l=JSON.parse(JSON.stringify(n));l.minFilter=l.magFilter=THREE.NearestFilter,l.wrapS=l.wrapT=THREE.RepeatWrapping;var u=JSON.parse(JSON.stringify(n));u.minFilter=u.magFilter=THREE.LinearFilter,u.wrapS=u.wrapT=THREE.RepeatWrapping,this.initialSpectrumFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,l),this.spectrumFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,o),this.pingPhaseFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,o),this.pongPhaseFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,o),this.pingTransformFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,o),this.pongTransformFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,o),this.displacementMapFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,u),this.normalMapFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,u);var m=THREE.ShaderLib.ocean_sim_vertex,p=THREE.ShaderLib.ocean_subtransform,f=THREE.UniformsUtils.clone(p.uniforms);this.materialOceanHorizontal=new THREE.ShaderMaterial({uniforms:f,vertexShader:m.vertexShader,fragmentShader:"#define HORIZONTAL \n"+p.fragmentShader}),this.materialOceanHorizontal.uniforms.u_transformSize={type:"f",value:this.resolution},this.materialOceanHorizontal.uniforms.u_subtransformSize={type:"f",value:null},this.materialOceanHorizontal.uniforms.u_input={type:"t",value:null},this.materialOceanHorizontal.depthTest=!1;var c=THREE.ShaderLib.ocean_subtransform,E=THREE.UniformsUtils.clone(c.uniforms);this.materialOceanVertical=new THREE.ShaderMaterial({uniforms:E,vertexShader:m.vertexShader,fragmentShader:c.fragmentShader}),this.materialOceanVertical.uniforms.u_transformSize={type:"f",value:this.resolution},this.materialOceanVertical.uniforms.u_subtransformSize={type:"f",value:null},this.materialOceanVertical.uniforms.u_input={type:"t",value:null},this.materialOceanVertical.depthTest=!1;var d=THREE.ShaderLib.ocean_initial_spectrum,T=THREE.UniformsUtils.clone(d.uniforms);this.materialInitialSpectrum=new THREE.ShaderMaterial({uniforms:T,vertexShader:m.vertexShader,fragmentShader:d.fragmentShader}),this.materialInitialSpectrum.uniforms.u_wind={type:"v2",value:new THREE.Vector2},this.materialInitialSpectrum.uniforms.u_resolution={type:"f",value:this.resolution},this.materialInitialSpectrum.depthTest=!1;var S=THREE.ShaderLib.ocean_phase,g=THREE.UniformsUtils.clone(S.uniforms);this.materialPhase=new THREE.ShaderMaterial({uniforms:g,vertexShader:m.vertexShader,fragmentShader:S.fragmentShader}),this.materialPhase.uniforms.u_resolution={type:"f",value:this.resolution},this.materialPhase.depthTest=!1;var R=THREE.ShaderLib.ocean_spectrum,v=THREE.UniformsUtils.clone(R.uniforms);this.materialSpectrum=new THREE.ShaderMaterial({uniforms:v,vertexShader:m.vertexShader,fragmentShader:R.fragmentShader}),this.materialSpectrum.uniforms.u_initialSpectrum={type:"t",value:null},this.materialSpectrum.uniforms.u_resolution={type:"f",value:this.resolution},this.materialSpectrum.uniforms.u_choppiness.value=this.choppiness,this.materialSpectrum.depthTest=!1;var H=THREE.ShaderLib.ocean_normals,O=THREE.UniformsUtils.clone(H.uniforms);this.materialNormal=new THREE.ShaderMaterial({uniforms:O,vertexShader:m.vertexShader,fragmentShader:H.fragmentShader}),this.materialNormal.uniforms.u_displacementMap={type:"t",value:null},this.materialNormal.uniforms.u_resolution={type:"f",value:this.resolution},this.materialNormal.depthTest=!1;var _=THREE.ShaderLib.ocean_main,b=THREE.UniformsUtils.clone(_.uniforms),F=_.vertexShader,y=e.getContext();0===y.getParameter(y.MAX_VERTEX_TEXTURE_IMAGE_UNITS)&&(F=_.vertexShaderNoTexLookup),this.materialOcean=new THREE.ShaderMaterial({uniforms:b,vertexShader:F,fragmentShader:_.fragmentShader,side:THREE.FrontSide,wireframe:!1}),this.materialOcean.uniforms.u_geometrySize={type:"f",value:this.resolution},this.materialOcean.uniforms.u_displacementMap={type:"t",value:this.displacementMapFramebuffer},this.materialOcean.uniforms.u_reflection={type:"t",value:this.mirror.texture},this.materialOcean.uniforms.u_mirrorMatrix={type:"m4",value:this.mirror.textureMatrix},this.materialOcean.uniforms.u_normalMap={type:"t",value:this.normalMapFramebuffer},this.materialOcean.uniforms.u_oceanColor={type:"v3",value:this.oceanColor},this.materialOcean.uniforms.u_skyColor={type:"v3",value:this.skyColor},this.materialOcean.uniforms.u_sunDirection={type:"v3",value:this.sunDirection},this.materialOcean.uniforms.u_exposure={type:"f",value:this.exposure},this.materialOceanHorizontal.blending=0,this.materialOceanVertical.blending=0,this.materialInitialSpectrum.blending=0,this.materialPhase.blending=0,this.materialSpectrum.blending=0,this.materialNormal.blending=0,this.materialOcean.blending=0,this.screenQuad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2)),this.scene.add(this.screenQuad),this.generateSeedPhaseTexture(),this.generateMesh(),this.mirror.mesh=this.oceanMesh,r.add(this.oceanMesh)},THREE.Ocean.prototype.generateMesh=function(){var e=new THREE.PlaneBufferGeometry(1,1,this.geometryResolution,this.geometryResolution);this.oceanMesh=new THREE.Mesh(e,this.materialOcean)},THREE.Ocean.prototype.update=function(){this.overrideMaterial=this.materialOcean,this.changed&&(this.materialOcean.uniforms.u_size.value=this.size,this.materialOcean.uniforms.u_exposure.value=this.exposure,this.changed=!1),this.materialOcean.uniforms.u_normalMap.value=this.normalMapFramebuffer,this.materialOcean.uniforms.u_displacementMap.value=this.displacementMapFramebuffer,this.materialOcean.depthTest=!0},THREE.Ocean.prototype.render=function(){this.scene.overrideMaterial=null,this.changed&&this.renderInitialSpectrum(),this.mirror.render(),this.renderWavePhase(),this.renderSpectrum(),this.renderSpectrumFFT(),this.renderNormalMap(),this.scene.overrideMaterial=null},THREE.Ocean.prototype.generateSeedPhaseTexture=function(){this.pingPhase=!0;for(var e=new window.Float32Array(this.resolution*this.resolution*4),r=0;r<this.resolution;r++)for(var t=0;t<this.resolution;t++)e[r*this.resolution*4+4*t]=2*Math.random()*Math.PI,e[r*this.resolution*4+4*t+1]=0,e[r*this.resolution*4+4*t+2]=0,e[r*this.resolution*4+4*t+3]=0;this.pingPhaseTexture=new THREE.DataTexture(e,this.resolution,this.resolution,THREE.RGBAFormat),this.pingPhaseTexture.minFilter=THREE.NearestFilter,this.pingPhaseTexture.magFilter=THREE.NearestFilter,this.pingPhaseTexture.wrapS=THREE.ClampToEdgeWrapping,this.pingPhaseTexture.wrapT=THREE.ClampToEdgeWrapping,this.pingPhaseTexture.type=THREE.FloatType,this.pingPhaseTexture.needsUpdate=!0},THREE.Ocean.prototype.renderInitialSpectrum=function(){this.scene.overrideMaterial=this.materialInitialSpectrum,this.materialInitialSpectrum.uniforms.u_wind.value.set(this.windX,this.windY),this.materialInitialSpectrum.uniforms.u_size.value=this.size,this.renderer.render(this.scene,this.oceanCamera,this.initialSpectrumFramebuffer,!0)},THREE.Ocean.prototype.renderWavePhase=function(){this.scene.overrideMaterial=this.materialPhase,this.screenQuad.material=this.materialPhase,this.initial?(this.materialPhase.uniforms.u_phases.value=this.pingPhaseTexture,this.initial=!1):this.materialPhase.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer:this.pongPhaseFramebuffer,this.materialPhase.uniforms.u_deltaTime.value=this.deltaTime,this.materialPhase.uniforms.u_size.value=this.size,this.renderer.render(this.scene,this.oceanCamera,this.pingPhase?this.pongPhaseFramebuffer:this.pingPhaseFramebuffer),this.pingPhase=!this.pingPhase},THREE.Ocean.prototype.renderSpectrum=function(){this.scene.overrideMaterial=this.materialSpectrum,this.materialSpectrum.uniforms.u_initialSpectrum.value=this.initialSpectrumFramebuffer,this.materialSpectrum.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer:this.pongPhaseFramebuffer,this.materialSpectrum.uniforms.u_size.value=this.size,this.renderer.render(this.scene,this.oceanCamera,this.spectrumFramebuffer)},THREE.Ocean.prototype.renderSpectrumFFT=function(){var e,r,t=2*Math.log2(this.resolution);this.scene.overrideMaterial=this.materialOceanHorizontal;for(var i=this.materialOceanHorizontal,a=0;a<t;a++)0===a?(r=this.spectrumFramebuffer,e=this.pingTransformFramebuffer):a===t-1?(r=t%2==0?this.pingTransformFramebuffer:this.pongTransformFramebuffer,e=this.displacementMapFramebuffer):a%2==1?(r=this.pingTransformFramebuffer,e=this.pongTransformFramebuffer):(r=this.pongTransformFramebuffer,e=this.pingTransformFramebuffer),a===t/2&&(i=this.materialOceanVertical,this.scene.overrideMaterial=this.materialOceanVertical),i.uniforms.u_input.value=r,i.uniforms.u_subtransformSize.value=Math.pow(2,a%(t/2)+1),this.renderer.render(this.scene,this.oceanCamera,e)},THREE.Ocean.prototype.renderNormalMap=function(){this.scene.overrideMaterial=this.materialNormal,this.changed&&(this.materialNormal.uniforms.u_size.value=this.size),this.materialNormal.uniforms.u_displacementMap.value=this.displacementMapFramebuffer,this.renderer.render(this.scene,this.oceanCamera,this.normalMapFramebuffer,!0)};
//# sourceMappingURL=index.6d2f2178.js.map
