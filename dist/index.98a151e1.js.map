{"mappings":"","sources":["js/demo.js"],"sourcesContent":["ï»¿/**\n * @author jbouny / https://github.com/fft-ocean\n */\n\nvar DEMO =\n{\n\tms_Renderer : null,\n\tms_Camera : null,\n\tms_Scene : null,\n\tms_Controls : null,\n\tms_Ocean : null,\n\tms_Environment : \"night\",\n\tms_Raining : false,\n\n\tms_Commands : {\n\t\tstates : {\n\t\t\tup : false,\n\t\t\tright : false,\n\t\t\tdown : false,\n\t\t\tleft : false\n\t\t},\n\t\tmovements : {\n\t\t\tspeed : 0.0,\n\t\t\tangle : 0.0\n\t\t}\n\t},\n\n\tInitialize : function () {\n\n\t\tthis.ms_Renderer = new THREE.WebGLRenderer();\n\t\tthis.ms_Renderer.context.getExtension( 'OES_texture_float' );\n\t\tthis.ms_Renderer.context.getExtension( 'OES_texture_float_linear' );\n\t\tthis.ms_Renderer.setClearColor( 0x000000 );\n\n\t\tdocument.body.appendChild( this.ms_Renderer.domElement );\n\n\t\tthis.ms_Scene = new THREE.Scene();\n\n\t\tthis.ms_GroupShip = new THREE.Object3D();\n\t\tthis.ms_BlackPearlShip = new THREE.Object3D();\n\t\tthis.ms_Scene.add( this.ms_GroupShip );\n\t\tthis.ms_GroupShip.add( this.ms_BlackPearlShip );\n\t\t\n\n\t\tthis.ms_Camera = new THREE.PerspectiveCamera( 55.0, WINDOW.ms_Width / WINDOW.ms_Height, 0.5, 1000000 );\n\t\tthis.ms_Camera.position.set( -1500, 500, 10000 );\n\t\tthis.ms_Camera.lookAt( new THREE.Vector3() );\n\t\tthis.ms_BlackPearlShip.add( this.ms_Camera );\n\n\t\t// Initialize Orbit control\n\t\tthis.ms_Controls = new THREE.OrbitControls( this.ms_Camera, this.ms_Renderer.domElement );\n\t\tthis.ms_Controls.userPan = false;\n\t\tthis.ms_Controls.target.set( 0, 100.0, 0 );\n\t\tthis.ms_Controls.noKeys = true;\n\t\tthis.ms_Controls.userPanSpeed = 0;\n\t\tthis.ms_Controls.minDistance = 0;\n\t\tthis.ms_Controls.maxDistance = 20000.0;\n\t\tthis.ms_Controls.minPolarAngle = 0;\n\t\tthis.ms_Controls.maxPolarAngle = Math.PI * 0.75;\n\n\t\tthis.InitializeSound();\n\t\tthis.InitializeBouttonWithSound();\n\t\tthis.InitializeLoader();\n\t\tthis.InitializeScene();\n\n\t\tthis.InitGui();\n\t\tthis.InitCommands();\n\n\t},\n\t\n\tInitializeSound : function InitializeSound() {\n\t\t\n\t\tvar initSound = function initSound( url ) {\n\t\t\n\t\t\tif ( window.HTMLAudioElement ) {\n\t\t\t\n\t\t\t\tvar sound = new Audio('');\n\n\t\t\t\tif ( sound.canPlayType( 'audio/mp3' ) ) {\n\t\t\t\t\n\t\t\t\t\tvar sound = new Audio( url );\n\t\t\t\t\t\n\t\t\t\t\tsound.addEventListener( 'ended', function() {\n\t\t\t\t\t\tthis.currentTime = 0;\n\t\t\t\t\t\tthis.play();\n\t\t\t\t\t}, false );\n\t\t\t\t\t\n\t\t\t\t\treturn sound;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t};\n\t\t\n\t\tthis.ms_soundWaves = initSound( 'sound/waves.mp3' );\n\t\tthis.ms_soundRain = initSound( 'sound/rain.mp3' );\n\t\tthis.ms_soundHorn = initSound( 'sound/shipHorn.mp3' );\n\t\t\n\t\t\n\t},\n\n\t\n\tInitializeLoader : function InitializeLoader() {\n\t\n\t\tthis.ms_Loader = new THREE.LoadingManager();\n\t\t\n\t\tvar log = function( message, type, timeout ) {\n\t\t\tconsole.log( message );\n\t\t\tmessg( message, type, timeout );\n\t\t}\n\t\t\n\t\tvar delay = 1500;\n\t\tthis.ms_Loader.onProgress = function( item, loaded, total ) {\n\t\t\tlog( 'Loaded ' + loaded + '/' + total + ':' + item, 'info', delay );\n\t\t};\n\t\tthis.ms_Loader.onLoad = function () {\n\t\t\tlog( 'Loaded.', 'success', delay );\n\t\t};\n\t\tthis.ms_Loader.onError = function () {\n\t\t\tlog( 'Loading error.', 'error', delay );\n\t\t};\n\t\t\n\t\t\n\t\tthis.ms_ImageLoader = new THREE.ImageLoader( this.ms_Loader );\n\t\n\t},\n\n\tInitializeScene : function InitializeScene() {\n\n\t\t// Add light\n\t\tthis.ms_MainDirectionalLight = new THREE.DirectionalLight( 0xffffff, 1.5 );\n\t\tthis.ms_MainDirectionalLight.position.set( -0.2, 0.5, 1 );\n\t\tthis.ms_Scene.add( this.ms_MainDirectionalLight );\n\n\t\t// Add Black Pearl\n\t\tvar loader = new THREE.OBJMTLLoader(this.ms_Loader);\n\t\tthis.ms_BlackPearl = null;\n\t\tloader.load('/models/war3/ship.obj', '/models/war3/ship.mtl', function (object) {\n\t\t\tobject.position.y = 300.0;\n\t\t\t// Set scale\n\t\t\tobject.scale.set(40.0, 60.0, 30.0); // Adjust the scale if necessar6\n\n\t\t\t// Apply material properties\n\t\t\tif (object.children) {\n\t\t\t\tobject.children.forEach(function (child) {\n\t\t\t\t\tif (child.material) {\n\t\t\t\t\t\tchild.material.side = THREE.DoubleSide;\n\t\t\n\t\t\t\t\t\t// If using MeshPhongMaterial, ensure color is set correctly\n\t\t\t\t\t\tif (child.material instanceof THREE.MeshPhongMaterial) {\n\t\t\t\t\t\t\tchild.material.color = new THREE.Color(0xffffff); // Set the color to white or any desired color\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\n\t\t\tDEMO.ms_BlackPearlShip.add(object);\n\t\t\tDEMO.ms_BlackPearl = object;\n\t\t});\n\t\t\n\t\t\n\n\t\t// Add rain\n\t\t{\n\t\t\tvar size = 128;\n\t\t\tvar rainTexture = new THREE.Texture();\n\t\t\trainTexture.generateMipmaps = false;\n\t\t\trainTexture.magFilter = THREE.LinearFilter;\n\t\t\trainTexture.minFilter = THREE.LinearFilter;\n\t\t\tthis.ms_ImageLoader.load( 'img/water-drop.png', function ( image ) {\n\t\t\t\t\trainTexture.image = image;\n\t\t\t\t\trainTexture.needsUpdate = true;\n\t\t\t} );\n\n\t\t\tvar rainShader = THREE.ShaderLib['rain'];\n\n\t\t\tvar rainMaterial = new THREE.ShaderMaterial({\n\t\t\t\tfragmentShader: rainShader.fragmentShader,\n\t\t\t\tvertexShader: rainShader.vertexShader,\n\t\t\t\tuniforms: rainShader.uniforms,\n\t\t\t\ttransparent: true,\n\t\t\t\tdepthWrite: false\n\t\t\t});\n\t\t\trainMaterial.uniforms.texture.value = rainTexture;\n\n\t\t\tthis.ms_RainGeometry = new THREE.Geometry();\n\t\t\tfor ( i = 0; i < 100; i++ )\n\t\t\t{\n\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\tvertex.x = Math.random() * 2.0 * size - size;\n\t\t\t\tvertex.y = Math.random() * 2.0 * size - size;\n\t\t\t\tvertex.z = Math.random() * size - size * 0.5;\n\t\t\t\tthis.ms_RainGeometry.vertices.push( vertex );\n\t\t\t}\n\t\t\tthis.ms_Rain = new THREE.Points( this.ms_RainGeometry, rainMaterial );\n\t\t\tthis.ms_Camera.add( this.ms_Rain );\n\t\t\tthis.ms_Rain.position.setZ( - size * 0.75 ) ;\n\t\t}\n\n\t\t// Initialize Clouds\n\t\tthis.ms_CloudShader = new CloudShader( this.ms_Renderer, 512 );\n\t\tthis.ms_CloudShader.cloudMesh.scale.multiplyScalar( 4.0 );\n\t\tthis.ms_Scene.add( this.ms_CloudShader.cloudMesh );\n\n\t\t// Initialize Ocean\n\t\tvar gsize = 512;\n\t\tvar res = 512;\n\t\tvar gres = 256;\n\t\tvar origx = -gsize / 2;\n\t\tvar origz = -gsize / 2;\n\t\tthis.ms_Ocean = new THREE.Ocean( this.ms_Renderer, this.ms_Camera, this.ms_Scene,\n\t\t{\n\t\t\tINITIAL_SIZE : 200.0,\n\t\t\tINITIAL_WIND : [ 10.0, 10.0 ],\n\t\t\tINITIAL_CHOPPINESS : 3.6,\n\t\t\tCLEAR_COLOR : [ 1.0, 1.0, 1.0, 0.0 ],\n\t\t\tSUN_DIRECTION : this.ms_MainDirectionalLight.position.clone(),\n\t\t\tOCEAN_COLOR: new THREE.Vector3( 0.35, 0.4, 0.45 ),\n\t\t\tSKY_COLOR: new THREE.Vector3( 10.0, 13.0, 15.0 ),\n\t\t\tEXPOSURE : 0.15,\n\t\t\tGEOMETRY_RESOLUTION: gres,\n\t\t\tGEOMETRY_SIZE : gsize,\n\t\t\tRESOLUTION : res\n\t\t} );\n\n\t\tthis.LoadSkyBox();\n\t\tthis.LoadMountains();\n\t},\n\n\tInitGui : function InitGui() {\n\n\t\t// Initialize UI\n\t\tvar gui = new dat.GUI();\n\t\tdat.GUI.toggleHide();\n\n\t\tgui.add( this.ms_Ocean, \"size\", 10, 2000 ).onChange( function( v ) {\n\t\t\tthis.object.size = v;\n\t\t\tthis.object.changed = true;\n\t\t} );\n\t\tgui.add( this.ms_Ocean.materialSpectrum.uniforms.u_choppiness, \"value\", 0.1, 8 ).name( \"choppiness\" );\n\t\tgui.add( this.ms_Ocean, \"windX\", -50, 50 ).onChange( function ( v ) {\n\t\t\tthis.object.windX = v;\n\t\t\tthis.object.changed = true;\n\t\t} );\n\t\tgui.add( this.ms_Ocean, \"windY\", -50, 50 ).onChange( function ( v ) {\n\t\t\tthis.object.windY = v;\n\t\t\tthis.object.changed = true;\n\t\t} );\n\t\tgui.add( this.ms_Ocean, \"exposure\", 0.0, 0.5 ).onChange( function ( v ) {\n\t\t\tthis.object.exposure = v;\n\t\t\tthis.object.changed = true;\n\t\t} );\n\t\tgui.add( DEMO.ms_Ocean.materialOcean, \"wireframe\" );\n\n\t\tvar demo = this;\n\n\t\t$( '#env-selector > ul > li[key=\"' + this.ms_Environment + '\"]' ).addClass( 'selected' );\n\t\t$( '#env-selector > ul > li' ).click( function() {\n\t\t\tdemo.UpdateEnvironment( $( this ).attr('key') );\n\n\t\t\t$( '#env-selector > ul > li' ).removeClass( 'selected' );\n\t\t\t$( this ).addClass( 'selected' );\n\t\t} ).each( function() {\n\t\t\t$( this ).html( '<a href=\"#' + $( this ).attr('key') + '\">' + $( this ).html() + '</a>' );\n\t\t} ) ;\n\n\t},\n\n\tInitCommands : function InitCommands() {\n\n\t\tvar LEFT = 37,\n\t\t\tUP = 38,\n\t\t\tRIGHT = 39,\n\t\t\tDOWN = 40;\n\t\t\tE = 69;\n\n\t\tvar keyHandler = function keyHandler( action ) {\n\t\t\t\n\t\t\treturn function( event ) {\n\t\t\t\tvar key = event.which;\n\t\t\t\tif( key >= LEFT && key <= DOWN ) {\n\t\t\t\t\tswitch( key ) {\n\t\t\t\t\t\tcase UP : DEMO.ms_Commands.states.up = action ; break ;\n\t\t\t\t\t\tcase RIGHT : DEMO.ms_Commands.states.right = action ; break ;\n\t\t\t\t\t\tcase DOWN : DEMO.ms_Commands.states.down = action ; break ;\n\t\t\t\t\t\tcase LEFT : DEMO.ms_Commands.states.left = action ; break ;\n\t\t\t\t\t}\n\t\t\t\t}else if (key === E) {\n                    if (DEMO.ms_soundHorn) {\n                        if (action) {\n                            DEMO.ms_soundHorn.play().then(() => {\n                                console.log('Sound played on key press');\n                                DEMO.soundTimeout = setTimeout(function() {\n                                    DEMO.ms_soundHorn.pause();\n                                    DEMO.ms_soundHorn.currentTime = 0; // Reset the sound to the beginning\n                                    console.log('Sound stopped after 5 seconds');\n                                }, 5000); // Stop the sound after 5 seconds\n                            }).catch(error => {\n                                console.error('Error playing sound:', error);\n                            });\n                        }\n\t\t\t\t\t\t\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$( document ).keydown( keyHandler( true ) );\n\t\t$( document ).keyup( keyHandler( false ) );\n\n\t},\n\n\tLoadMountains : function LoadSkyBox() {\n\n\t\tvar demo = this;\n\n\t\tvar mountainTexture = new THREE.Texture();\n\t\tmountainTexture.generateMipmaps = false;\n\t\tmountainTexture.magFilter = THREE.LinearFilter;\n\t\tmountainTexture.minFilter = THREE.LinearFilter;\n\t\tthis.ms_ImageLoader.load( 'img/mountains.png', function ( image ) {\n\t\t\t\tmountainTexture.image = image;\n\t\t\t\tmountainTexture.needsUpdate = true;\n\t\t} );\n\n\n\t\tvar mountainsMaterial = new THREE.MeshBasicMaterial( {\n\t\t\tmap: mountainTexture,\n\t\t\ttransparent: true,\n\t\t\tside: THREE.BackSide,\n\t\t\tdepthWrite: false\n\t\t} );\n\n\t\tvar addMountain = function addMountain( size ) {\n\n\t\t\tvar moutains = new THREE.Mesh(\n\t\t\t\tnew THREE.CylinderGeometry( size, size, 35000, 32, 1, true ),\n\t\t\t\tmountainsMaterial\n\t\t\t);\n\t\t\tmoutains.position.y = 10000;\n\t\t\tdemo.ms_Scene.add( moutains );\n\n\t\t} ;\n\n\t\t// Add twice with different size in order to avoid some artifacts on the reflection\n\t\taddMountain( 120000 );\n\t\taddMountain( 150000 );\n\n\t\t// Add a black cylinder to hide the skybox under the water\n\t\tvar cylinder = new THREE.Mesh(\n\t\t\tnew THREE.CylinderGeometry( 150000, 150000, 150000, 32, 1, true ),\n\t\t\tnew THREE.MeshBasicMaterial( { color: new THREE.Color( 1, 1, 1 ), side: THREE.BackSide } )\n\t\t);\n\t\tcylinder.position.y = -80000;\n\t\tdemo.ms_Scene.add( cylinder );\n\n\t},\n\n\tLoadSkyBox : function LoadSkyBox() {\n\n\t\tvar cubeShader = THREE.ShaderLib['cube'];\n\n\t\tvar skyBoxMaterial = new THREE.ShaderMaterial( {\n\t\t\tfragmentShader: cubeShader.fragmentShader,\n\t\t\tvertexShader: cubeShader.vertexShader,\n\t\t\tuniforms: cubeShader.uniforms,\n\t\t\tside: THREE.BackSide\n\t\t} );\n\n\t\tthis.ms_SkyBox = new THREE.Mesh(\n\t\t\tnew THREE.BoxGeometry( 450000, 450000, 450000 ),\n\t\t\tskyBoxMaterial\n\t\t);\n\n\t\tthis.ms_Scene.add( this.ms_SkyBox );\n\n\t\t// https://stackoverflow.com/questions/3552944/how-to-get-the-anchor-from-the-url-using-jquery\n\t\tvar url = window.location.href, idx = url.indexOf(\"#\");\n\t\tvar anchor = idx != -1 ? url.substring(idx+1) : null;\n\t\tvar environmentParameter = anchor;\n\n\t\tif( environmentParameter !== null ) {\n\t\t\tthis.ms_Environment = environmentParameter;\n\t\t}\n\n\t\tthis.UpdateEnvironment( this.ms_Environment );\n\n\t},\n\n\tUpdateEnvironment : function UpdateEnvironment( key ) {\n\n\t\tvar textureName = '';\n\t\tvar textureExt = \".jpg\";\n\t\tvar directionalLightPosition = null;\n\t\tvar directionalLightColor = null;\n\t\tvar raining = false;\n\n\t\tswitch( key ) {\n\t\t\tcase 'night':\n\t\t\t\ttextureName = 'grimmnight';\n\t\t\t\tdirectionalLightPosition = new THREE.Vector3( -0.3, 0.3, 1 );\n\t\t\t\tdirectionalLightColor = new THREE.Color( 1, 1, 1 );\n\t\t\t\training = true;\n\t\t\t\tbreak;\n\t\t\tcase 'morning':\n\t\t\t\ttextureName = 'clouds';\n\t\t\t\tdirectionalLightPosition = new THREE.Vector3( -1, 0.5, 0.8 );\n\t\t\t\tdirectionalLightColor = new THREE.Color( 1, 0.95, 0.8 );\n\t\t\t\tbreak;\n\t\t\tcase 'day':\n\t\t\t\ttextureName = 'sky';\n\t\t\t\tdirectionalLightPosition = new THREE.Vector3( -0.5, 0.5, -0.6 );\n\t\t\t\tdirectionalLightColor = new THREE.Color( 1, 0.95, 0.9 );\n\t\t\t\tbreak;\n\t\t\tcase 'cloudy':\n\t\t\t\ttextureName = 'miramar';\n\t\t\t\tdirectionalLightPosition = new THREE.Vector3( 0.3, 1.0, 0.5 );\n\t\t\t\tdirectionalLightColor = new THREE.Color( 0.9, 0.95, 1 );\n\t\t\t\training = true;\n\t\t\t\tbreak;\n\t\t\tcase 'sunset':\n\t\t\t\ttextureName = 'sunset';\n\t\t\t\tdirectionalLightPosition = new THREE.Vector3( -0.7, 0.2, -1 );\n\t\t\t\tdirectionalLightColor = new THREE.Color( 1, 0.8, 0.5 );\n\t\t\t\tbreak;\n\t\t\tcase 'interstellar':\n\t\t\t\ttextureName = 'interstellar';\n\t\t\t\tdirectionalLightPosition = new THREE.Vector3( -0.7, 1.0, -0.4 );\n\t\t\t\tdirectionalLightColor = new THREE.Color( 0.8, 1.0, 0.95 );\n\t\t\t\tbreak;\n\t\t\tcase 'apocalypse':\n\t\t\t\ttextureName = 'violent_days';\n\t\t\t\tdirectionalLightPosition = new THREE.Vector3( 1, 0.3, 1 );\n\t\t\t\tdirectionalLightColor = new THREE.Color( 1, 0.85, 0.3 );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t};\n\n\t\tthis.ms_Environment = key;\n\t\tthis.ms_Raining = raining;\n\t\tthis.ms_MainDirectionalLight.position.copy( directionalLightPosition );\n\t\tthis.ms_MainDirectionalLight.color.copy( directionalLightColor );\n\t\tthis.ms_Ocean.materialOcean.uniforms.u_sunDirection.value.copy( this.ms_MainDirectionalLight.position );\n\t\tif ( raining ) {\n\t\t\tthis.ms_soundRain.play();\n\n\t\t}\n\t\telse {\n\t\t\tthis.ms_soundRain.pause();\n\t\t}\n\t\t\n\t\tvar sources = [\n\t\t\t'img/' + textureName + '_west' + textureExt,\n\t\t\t'img/' + textureName + '_east' + textureExt,\n\t\t\t'img/' + textureName + '_up' + textureExt,\n\t\t\t'img/' + textureName + '_down' + textureExt,\n\t\t\t'img/' + textureName + '_south' + textureExt,\n\t\t\t'img/' + textureName + '_north' + textureExt\n\t\t];\n\t\tvar images = [];\n\n\t\tvar cubeMap = new THREE.CubeTexture( images );\n\t\tcubeMap.flipY = false;\n\n\t\tvar imageLoader = this.ms_ImageLoader;\n\t\tvar loaded = 0;\n\t\tvar loadTexture = function ( i ) {\n\t\t\timageLoader.load( sources[ i ], function ( image ) {\n\t\t\t\tcubeMap.images[ i ] = image;\n\t\t\t\tloaded ++;\n\t\t\t\tif ( loaded === 6 ) {\n\t\t\t\t\tcubeMap.needsUpdate = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = sources.length; i < il; ++ i ) {\n\t\t\tloadTexture( i );\n\t\t}\n\t\t\n\t\tcubeMap.format = THREE.RGBFormat;\n\t\tcubeMap.generateMipmaps = false;\n\t\tcubeMap.magFilter = THREE.LinearFilter;\n\t\tcubeMap.minFilter = THREE.LinearFilter;\n\n\t\tthis.ms_SkyBox.material.uniforms['tCube'].value = cubeMap;\n\t\tthis.ms_soundWaves.play();\n\t\t\n\t\t\n\t},\n\n\tDisplay : function () {\n\n\t\tthis.ms_Renderer.render( this.ms_Scene, this.ms_Camera );\n\t\t\n\n\t},\n\n\tUpdate : function () {\n\n\t\t// Update camera position\n\t\tif( this.ms_Camera.position.y < 0.0 ) {\n\t\t\tthis.ms_Camera.position.y = 2.0;\n\t\t}\n\n\t\t// Update black ship displacements\n\t\tthis.UpdateCommands();\n\t\tthis.ms_GroupShip.rotation.y += this.ms_Commands.movements.angle;\n\t\tthis.ms_BlackPearlShip.rotation.z = -this.ms_Commands.movements.angle * 10.0;\n\t\tthis.ms_BlackPearlShip.rotation.x = this.ms_Commands.movements.speed * 0.0001;//animation for movement the ship front and back\n\t\tvar shipDisplacement = (new THREE.Vector3(0, 0, -2)).applyEuler(this.ms_GroupShip.rotation).multiplyScalar( 20.0 * this.ms_Commands.movements.speed );\n\t\tthis.ms_GroupShip.position.add( shipDisplacement );\n\n\t\tvar currentTime = new Date().getTime();\n\t\tthis.ms_Ocean.deltaTime = ( currentTime - lastTime ) / 1000 || 0.0;\n\t\tlastTime = currentTime;\n\n\t\t// Update black ship movements\n\t\tif( this.ms_BlackPearl !== null )\n\t\t{\n\t\t\tvar animationRatio = 1.0 + this.ms_Commands.movements.speed * 0.05;\n\t\t\tthis.ms_BlackPearl.rotation.y = Math.cos( currentTime * 0.0008 ) * 0.001 - 0.025;\n\t\t\tthis.ms_BlackPearl.rotation.x = Math.sin( currentTime * 0.001154 + 0.78 ) * 0.015 + 0.05;//animation front and back\n\t\t\tthis.ms_BlackPearl.rotation.y = Math.PI/2;\n\t\t}\n\t\t\n\t\t\n\n\t\t// Update rain\n\t\tif( this.ms_Raining ) {\n\t\t\tvar seed = 1;\n\t\t\tvar fastRandom = function fastRandom() {\n\t\t\t\t// https://stackoverflow.com/questions/521295/javascript-random-seeds\n\t\t\t\tvar x = Math.sin( seed++ ) * 10000;\n\t\t\t\treturn x - Math.floor( x );\n\t\t\t}\n\t\t\tfor( i in this.ms_RainGeometry.vertices )\n\t\t\t{\n\t\t\t\tvar speed = 4.0;\n\t\t\t\tthis.ms_RainGeometry.vertices[i].y -= fastRandom() * speed + speed;\n\t\t\t\tif( this.ms_RainGeometry.vertices[i].y < -50 )\n\t\t\t\t\tthis.ms_RainGeometry.vertices[i].y = 50;\n\t\t\t}\n\t\t\tthis.ms_Rain.rotation.set( -this.ms_Camera.rotation.x, -this.ms_Camera.rotation.y, -this.ms_Camera.rotation.z, \"ZYX\" );\n\t\t\tthis.ms_RainGeometry.verticesNeedUpdate = true;\n\t\t}\n\n\t\t// Render ocean reflection\n\t\tthis.ms_Camera.remove( this.ms_Rain );\n\t\tthis.ms_Ocean.render();\n\t\tif( this.ms_Raining )\n\t\t\tthis.ms_Camera.add( this.ms_Rain );\n\n\t\t// Updade clouds\n\t\tthis.ms_CloudShader.update();\n\n\t\t// Update ocean data\n\t\tthis.ms_Ocean.update();\n\t\t\n\t\tthis.ms_Controls.update();\n\t\tthis.Display();\n\n\t},\n\n\tUpdateCommands : function UpdateCommands() {\n\n\t\tvar states = this.ms_Commands.states;\n\n\t\t// Update speed\n\t\tvar targetSpeed = 0.0;\n\t\tif( states.up ) {\n\t\t\ttargetSpeed = 1.0;\n\t\t}\n\t\telse if( states.down ) {\n\t\t\ttargetSpeed = -1.0;\n\t\t}\n\t\tvar curSpeed = this.ms_Commands.movements.speed ;\n\t\tthis.ms_Commands.movements.speed = curSpeed + ( targetSpeed - curSpeed ) * 0.02;\n\n\t\t// Update angle\n\t\tvar targetAngle = 0.0;\n\t\tif( states.left ) {\n\t\t\ttargetAngle = Math.PI * 0.001;\n\t\t}\n\t\telse if( states.right ) {\n\t\t\ttargetAngle = -Math.PI * 0.001;\n\t\t}\n\t\tif( states.down ) {\n\t\t\ttargetAngle *= -1.0;\n\t\t}\n\t\t\n\t\tvar curAngle = this.ms_Commands.movements.angle ;\n\t\tthis.ms_Commands.movements.angle = curAngle + ( targetAngle - curAngle ) * 0.02;\n\n\t},\n\n\tResize : function ( inWidth, inHeight ) {\n\n\t\tthis.ms_Camera.aspect = inWidth / inHeight;\n\t\tthis.ms_Camera.updateProjectionMatrix();\n\t\tthis.ms_Renderer.setSize( inWidth, inHeight );\n\t\tthis.Display();\n\n\t},\n\t\n}\n"],"names":[],"version":3,"file":"index.98a151e1.js.map"}