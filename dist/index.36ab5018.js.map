{"mappings":"AAAA;;CAEC,GAED,MAAM,SAAS,CAAC,OAAO,GAAG;IAEzB,UAAU;QACP,SAAS;YAAE,MAAM;YAAK,OAAO;QAAK;IACpC;IAED,cAAc;QACX;QAEA;QAEA;QACA;QAEA;QAEA;QACA;QACA;KACF,CAAC,IAAI,CAAE;IAER,gBAAgB;QACb;QAEA;QAEA;QACA;QACA;QACA;QACA;KACF,CAAC,IAAI,CAAE;AAET","sources":["js/shaders/RainShader.js"],"sourcesContent":["/**\n * @author jbouny / https://github.com/fft-ocean\n */\n \nTHREE.ShaderLib['rain'] = {\n\n\tuniforms: {\n    texture: { type: 't', value: null }\n  },\n  \n\tvertexShader: [\n    'attribute vec3 color;',\n\n    'varying vec3 vColor;',\n\n    'void main() {',\n    '  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );',\n\n    '  vColor = color;',\n\n    '  gl_PointSize = 50.0 * abs( modelViewMatrix[1].y );',\n    '  gl_Position = projectionMatrix * mvPosition;',\n    '}'\n\t].join( '\\n' ),\n  \n\tfragmentShader: [\n    'uniform sampler2D texture;',\n\n    'varying vec3 vColor;',\n\n    'void main() {',\n    '  vec4 startColor = vec4( vColor, 1.0 );',\n    '  vec4 finalColor;',\n    '  gl_FragColor = texture2D( texture, gl_PointCoord );',\n    '}'\n\t].join( '\\n' )\n  \n};"],"names":[],"version":3,"file":"index.36ab5018.js.map","sourceRoot":"/__parcel_source_root/"}