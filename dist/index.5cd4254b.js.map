{"mappings":"AAEA,MAAM,cAAc,GAAG,SAAU,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO;IAEhE,MAAM,QAAQ,CAAC,IAAI,CAAC,IAAI;IACxB,IAAI,CAAC,IAAI,GAAG,YAAY,IAAI,CAAC,EAAE;IAE/B,SAAS,kBAAmB,KAAK,EAAE,YAAY;QAC9C,OAAO,UAAU,YAAY,QAAQ;IACtC;IAEA,UAAU,WAAW,CAAC;IAEtB,IAAI,CAAC,iBAAiB,GAAG;IAEzB,IAAI,QAAQ,kBAAkB,QAAQ,YAAY,EAAE;IACpD,IAAI,SAAS,kBAAkB,QAAQ,aAAa,EAAE;IACtD,IAAI,CAAC,QAAQ,GAAG,kBAAkB,QAAQ,QAAQ,EAAE;IAEpD,IAAI,CAAC,QAAQ,GAAG;IAChB,IAAI,CAAC,KAAK,GAAG;IACb,IAAI,CAAC,WAAW,GAAG,IAAI,MAAM,KAAK;IAClC,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,OAAO,CAAC,GAAG,GAAG;IACtC,IAAI,CAAC,mBAAmB,GAAG,IAAI,MAAM,OAAO;IAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,MAAM,OAAO;IACvC,IAAI,CAAC,cAAc,GAAG,IAAI,MAAM,OAAO,CAAC,GAAG,GAAG;IAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,MAAM,OAAO;IAElC,IAAK,kBAAkB,MAAM,iBAAiB,EAC7C,IAAI,CAAC,MAAM,GAAG;SAET;QACL,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,iBAAiB;QACzC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG;IACzB;IAEA,IAAI,CAAC,aAAa,GAAG,IAAI,MAAM,OAAO;IAEtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;IAErC,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,QAAQ;IAE9B,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,iBAAiB,CAAC,OAAO;IAClD,IAAI,CAAC,WAAW,GAAG,IAAI,MAAM,iBAAiB,CAAC,OAAO;IAEtD,IAAK,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,SAAU;QAC1E,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG;QAC/B,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG;IACpC;IAEA,IAAI,CAAC,mBAAmB;IACxB,IAAI,CAAC,MAAM;AACZ;AAEA,MAAM,cAAc,CAAC,SAAS,GAAG,OAAO,MAAM,CAAC,MAAM,QAAQ,CAAC,SAAS;AAEvE,MAAM,cAAc,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAU,WAAW;IAEtE,sDAAsD;IACtD,IAAI,CAAC,mBAAmB;IACxB,IAAI,CAAC,iBAAiB,GAAG;IAEzB,gFAAgF;IAChF,IAAI,aAAa,YAAY,MAAM;IACnC,YAAY,MAAM,GAAG,IAAI,CAAC,YAAY;IAEtC,0CAA0C;IAC1C,YAAY,MAAM,CAAC;IACnB,YAAY,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,GAAG,YAAY,WAAW;IAE3E,4BAA4B;IAC5B,IAAI,CAAC,MAAM;IACX,IAAI,CAAC,iBAAiB,GAAG;IAEzB,8CAA8C;IAC9C,YAAY,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,GAAG,YAAY,OAAO;IACvE,YAAY,MAAM,GAAG;IAErB,yCAAyC;IACzC,YAAY,mBAAmB;AAChC;AAEA,MAAM,cAAc,CAAC,SAAS,CAAC,mBAAmB,GAAG;IAEpD,IAAK,IAAI,CAAC,MAAM,IAAI,WACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM;IAGxB,SAAS,KAAK,CAAC;QAAI,OAAO,IAAI,IAAI,IAAI,KAAK,IAAI;IAAG;IAElD,IAAI,CAAC,iBAAiB;IACtB,IAAI,CAAC,MAAM,CAAC,iBAAiB;IAE7B,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW;IAEtE,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW;IAEpD,IAAI,CAAC,MAAM,GAAG,AAAC,IAAI,MAAM,OAAO,CAAC,GAAG,GAAG,GAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ;IACxE,IAAI,eAAe,AAAC,IAAI,MAAM,OAAO,CAAC,GAAG,GAAG,GAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ;IAC/E,IAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,GAAI;QACxC,IAAI,aAAa,AAAC,IAAI,MAAM,OAAO,CAAC,GAAG,GAAG,GAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ;QAC3E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;IACrB;IAEA,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,mBAAmB;IAClE,gBAAgB;IAChB,KAAK,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM;IAChC,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ;IAE3B,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW;IAE3D,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,GAAG;IAC9B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc;IACpD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB;IAEhD,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,cAAc;IAC/D,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM;IAClC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ;IAE7B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI;IACnB,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc;IACxC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM;IAEnC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC;IAChC,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;IAC9B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;IACzB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;IAE7C,IAAI,CAAC,YAAY,CAAC,sBAAsB;IACxC,IAAI,CAAC,YAAY,CAAC,iBAAiB;IACnC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW;IAE7E,4BAA4B;IAC5B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,KAAK,KAAK,KAChC,KAAK,KAAK,KAAK,KACf,KAAK,KAAK,KAAK,KACf,KAAK,KAAK,KAAK;IACrB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB;IAC9D,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB;IAEhE,sHAAsH;IACtH,uFAAuF;IACvF,IAAI,CAAC,WAAW,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;IAC9E,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB;IAElE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;IAE7H,IAAI,IAAI,IAAI,MAAM,OAAO;IACzB,IAAI,mBAAmB,IAAI,CAAC,YAAY,CAAC,gBAAgB;IAEzD,EAAE,CAAC,GAAG,AAAC,CAAA,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,iBAAiB,QAAQ,CAAC,EAAE,AAAD,IAAK,iBAAiB,QAAQ,CAAC,EAAE;IAC5F,EAAE,CAAC,GAAG,AAAC,CAAA,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,iBAAiB,QAAQ,CAAC,EAAE,AAAD,IAAK,iBAAiB,QAAQ,CAAC,EAAE;IAC5F,EAAE,CAAC,GAAG;IACN,EAAE,CAAC,GAAG,AAAC,CAAA,MAAM,iBAAiB,QAAQ,CAAC,GAAG,AAAD,IAAK,iBAAiB,QAAQ,CAAC,GAAG;IAE3E,oCAAoC;IACpC,IAAI,IAAI,IAAI,MAAM,OAAO;IACzB,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;IAE3D,mDAAmD;IACnD,iBAAiB,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;IAClC,iBAAiB,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;IAClC,iBAAiB,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,MAAM,IAAI,CAAC,QAAQ;IACzD,iBAAiB,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC;IAEnC,IAAI,mBAAmB,IAAI,MAAM,OAAO;IACxC,iBAAiB,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW;IAC9D,IAAI,CAAC,GAAG,GAAG;AACZ;AAEA,MAAM,cAAc,CAAC,SAAS,CAAC,MAAM,GAAG,SAAU,aAAa;IAE9D,IAAK,IAAI,CAAC,iBAAiB,EAC1B,IAAI,CAAC,mBAAmB;IAGzB,IAAI,CAAC,iBAAiB,GAAG;IAEzB,wEAAwE;IACxE,IAAK,IAAI,CAAC,KAAK,KAAK,aAAa,IAAI,CAAC,KAAK,YAAY,MAAM,KAAK,EAAG;QACpE,IAAI,gBAAgB,AAAC,kBAAkB,aAAa,gBAAgB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO;QAC7F,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE,eAAe;IAC1E;AAED","sources":["js/effects/MirrorRenderer.js"],"sourcesContent":["\n\nTHREE.MirrorRenderer = function (renderer, camera, scene, options) {\n\t\n\tTHREE.Object3D.call(this);\n\tthis.name = 'mirror_' + this.id;\n\n\tfunction optionalParameter (value, defaultValue) {\n\t\treturn value !== undefined ? value : defaultValue;\n\t};\n\n\toptions = options || {};\n\t\n\tthis.matrixNeedsUpdate = true;\n\t\n\tvar width = optionalParameter(options.textureWidth, 512);\n\tvar height = optionalParameter(options.textureHeight, 512);\n\tthis.clipBias = optionalParameter(options.clipBias, 0.0);\n\t\n\tthis.renderer = renderer;\n\tthis.scene = scene;\n\tthis.mirrorPlane = new THREE.Plane();\n\tthis.normal = new THREE.Vector3(0, 0, 1);\n\tthis.cameraWorldPosition = new THREE.Vector3();\n\tthis.rotationMatrix = new THREE.Matrix4();\n\tthis.lookAtPosition = new THREE.Vector3(0, 0, -1);\n\tthis.clipPlane = new THREE.Vector4();\n\t\n\tif ( camera instanceof THREE.PerspectiveCamera ) {\n\t\tthis.camera = camera;\n\t}\n\telse  {\n\t\tthis.camera = new THREE.PerspectiveCamera();\n\t\tconsole.log(this.name + ': camera is not a Perspective Camera!')\n\t}\n\n\tthis.textureMatrix = new THREE.Matrix4();\n\n\tthis.mirrorCamera = this.camera.clone();\n\t\n\tthis.mesh = new THREE.Object3D();\n\t\n\tthis.texture = new THREE.WebGLRenderTarget(width, height);\n\tthis.tempTexture = new THREE.WebGLRenderTarget(width, height);\n\t\n\tif ( !THREE.Math.isPowerOfTwo(width) || !THREE.Math.isPowerOfTwo(height) ) {\n\t\tthis.texture.generateMipmaps = false;\n\t\tthis.tempTexture.generateMipmaps = false;\n\t}\n\n\tthis.updateTextureMatrix();\n\tthis.render();\n};\n\nTHREE.MirrorRenderer.prototype = Object.create(THREE.Object3D.prototype);\n\nTHREE.MirrorRenderer.prototype.renderWithMirror = function (otherMirror) {\n\n\t// update the mirror matrix to mirror the current view\n\tthis.updateTextureMatrix();\n\tthis.matrixNeedsUpdate = false;\n\n\t// set the camera of the other mirror so the mirrored view is the reference view\n\tvar tempCamera = otherMirror.camera;\n\totherMirror.camera = this.mirrorCamera;\n\n\t// render the other mirror in temp texture\n\totherMirror.render(true);\n\totherMirror.material.uniforms.mirrorSampler.value = otherMirror.tempTexture;\n\n\t// render the current mirror\n\tthis.render();\n\tthis.matrixNeedsUpdate = true;\n\n\t// restore material and camera of other mirror\n\totherMirror.material.uniforms.mirrorSampler.value = otherMirror.texture;\n\totherMirror.camera = tempCamera;\n\n\t// restore texture matrix of other mirror\n\totherMirror.updateTextureMatrix();\n};\n\nTHREE.MirrorRenderer.prototype.updateTextureMatrix = function () {\n\n\tif ( this.parent != undefined ) {\n\t\tthis.mesh = this.parent;\n\t}\n\n\tfunction sign(x) { return x ? x < 0 ? -1 : 1 : 0; }\n\n\tthis.updateMatrixWorld();\n\tthis.camera.updateMatrixWorld();\n\n\tthis.cameraWorldPosition.setFromMatrixPosition(this.camera.matrixWorld);\n\n\tthis.rotationMatrix.extractRotation(this.matrixWorld);\n\n\tthis.normal = (new THREE.Vector3(0, 1, 0)).applyEuler(this.mesh.rotation);\n\tvar cameraLookAt = (new THREE.Vector3(0, 0, 1)).applyEuler(this.camera.rotation);\n\tif ( this.normal.dot(cameraLookAt) < 0 ) {\n\t\tvar meshNormal = (new THREE.Vector3(0, 0, 1)).applyEuler(this.mesh.rotation);\n\t\tthis.normal.reflect(meshNormal);\n\t}\n\n\tvar view = this.mesh.position.clone().sub(this.cameraWorldPosition);\n\t//view.y -= 0.1;\n\tview.reflect(this.normal).negate();\n\tview.add(this.mesh.position);\n\n\tthis.rotationMatrix.extractRotation(this.camera.matrixWorld);\n\n\tthis.lookAtPosition.set(0, 0, -1);\n\tthis.lookAtPosition.applyMatrix4(this.rotationMatrix);\n\tthis.lookAtPosition.add(this.cameraWorldPosition);\n\n\tvar target = this.mesh.position.clone().sub(this.lookAtPosition);\n\ttarget.reflect(this.normal).negate();\n\ttarget.add(this.mesh.position);\n\n\tthis.up.set(0, -1, 0);\n\tthis.up.applyMatrix4(this.rotationMatrix);\n\tthis.up.reflect(this.normal).negate();\n\n\tthis.mirrorCamera.position.copy(view);\n\tthis.mirrorCamera.up = this.up;\n\tthis.mirrorCamera.lookAt(target);\n\tthis.mirrorCamera.aspect = this.camera.aspect;\n\n\tthis.mirrorCamera.updateProjectionMatrix();\n\tthis.mirrorCamera.updateMatrixWorld();\n\tthis.mirrorCamera.matrixWorldInverse.getInverse(this.mirrorCamera.matrixWorld);\n\n\t// Update the texture matrix\n\tthis.textureMatrix.set(0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0);\n\tthis.textureMatrix.multiply(this.mirrorCamera.projectionMatrix);\n\tthis.textureMatrix.multiply(this.mirrorCamera.matrixWorldInverse);\n\n\t// Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n\t// Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\tthis.mirrorPlane.setFromNormalAndCoplanarPoint(this.normal, this.mesh.position);\n\tthis.mirrorPlane.applyMatrix4(this.mirrorCamera.matrixWorldInverse);\n\n\tthis.clipPlane.set(this.mirrorPlane.normal.x, this.mirrorPlane.normal.y, this.mirrorPlane.normal.z, this.mirrorPlane.constant);\n\n\tvar q = new THREE.Vector4();\n\tvar projectionMatrix = this.mirrorCamera.projectionMatrix;\n\n\tq.x = (sign(this.clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n\tq.y = (sign(this.clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n\tq.z = -1.0;\n\tq.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\n\n\t// Calculate the scaled plane vector\n\tvar c = new THREE.Vector4();\n\tc = this.clipPlane.multiplyScalar(2.0 / this.clipPlane.dot(q));\n\n\t// Replacing the third row of the projection matrix\n\tprojectionMatrix.elements[2] = c.x;\n\tprojectionMatrix.elements[6] = c.y;\n\tprojectionMatrix.elements[10] = c.z + 1.0 - this.clipBias;\n\tprojectionMatrix.elements[14] = c.w;\n\t\n\tvar worldCoordinates = new THREE.Vector3();\n\tworldCoordinates.setFromMatrixPosition(this.camera.matrixWorld);\n\tthis.eye = worldCoordinates;\n};\n\nTHREE.MirrorRenderer.prototype.render = function (isTempTexture) {\n\n\tif ( this.matrixNeedsUpdate ) {\n\t\tthis.updateTextureMatrix();\n\t}\n\n\tthis.matrixNeedsUpdate = true;\n\n\t// Render the mirrored view of the current scene into the target texture\n\tif ( this.scene !== undefined && this.scene instanceof THREE.Scene ) {\n\t\tvar renderTexture = (isTempTexture !== undefined && isTempTexture)? this.tempTexture : this.texture;\n        this.renderer.render(this.scene, this.mirrorCamera, renderTexture, true);\n\t}\n\n};"],"names":[],"version":3,"file":"index.5cd4254b.js.map","sourceRoot":"/__parcel_source_root/"}