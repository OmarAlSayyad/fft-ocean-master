{"mappings":"ACCa,IA8BwK,EAAE,EASoE,EAAE,EAOM,EACrO,EACkd,EACxV,EAEnG,EAAE,EAGiO,EAAE,EAAmK,EAC/Y,EAW4d,EAC1gB,EAQgW,EACzR,EAGyE,EAAoB,EAE8F,EAGzH,EAEyH,EAAyK,EAIjD,EAAsI,EACjN,EAIhD,EAA+N,EAMnF,EAIV,EAAE,EAAE,EAK9T,EAA+N,EAGpI,EAMG,EAAE,EAI+N,EAC5G,EACvP,EAAoB,EAAoB,EACic,EAE3W,EAC6G,EAAoB,EAAoB,EAAoB,EAG3L,EAKsM,EAC1I,EAAoB,EAE2H,GAAoB,GAE5C,GACpF,GAAoB,GAAoB,GAEjJ,GAA7F,GAA6E,GAAY,GAC8W,GACjb,GAI0M,GACvN,GAAoB,GAAoB,GAC7C,GACmW,GAAoB,GAevY,GAAuI,GAAuG,GAAuG,GAA+G,GACxL,GAA6G,GAA6G,GACnV,GAAuH,GAGlK,GAAoB,GAA2K,GAAgL,GACje,GAA4K,GA2B3I,GAAqI,GAAqI,GAAuI,GAClX,GAAwI,GA4B8J,GAAqI,GAC1X,GAAuI,GAA6I,GACjX,GAOuN,GACmH,GAAiB,GAU1N,GAAqL,GAyB1C,GAuCvB,GA8D7O,GAAoB,GAKtB,GAAoB,GAAgB,GAqBjC,GAcJ,GACD,GAAoB,GAElC,GAAiC,GAA0D,GAAsC,GAC/D,GA8L7D,GA+CvB,GAAO,GASkL,GAEpI,GAAoB,GAAuB,GAAoB,GA4D5B,GAAK,GAAoB,GAAoB,GAAuB,GAA4T,GA8Fjc,GAA4F,GAC8K,GAApB,GAGvO,GAKG,GAAE,GAAE,GAAoB,GAAmB,GAKjC,GAAoB,GAAoB,GAI7C,GAAoB,GAAoB,GAMpC,GAOwG,GAAoB,GAG9H,GAAoB,GAAoB,GAz1BjF,GAAM,CAAC,SAAS,IAAI,CAAE,CAAA,YAAa,OAAO,QAAQ,OAAO,GAAG,CAAC,OAAO,QAAQ,IAAO,aAAc,OAAO,SAAS,aAAc,OAAO,QAAS,CAAA,OAAO,OAAO,CAAC,EAAA,EAC/K,KAAK,IAAI,KAAK,qBAAqB,EAAE,KAAK,IAAI,KAAK,oBAAoB,EAAE,WAAW,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,KAAK,MAAM,SAAS,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,KAAK,qBAAqB,CAAC,EAAE,EAAE,KAAK,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,wBAAwB,CAAC,KAAK,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,8BAA8B,AAAC,MAAK,IAAI,KAAK,qBAAqB,EAAE,KAAK,IAAI,KAAK,UAAU,EAAG,CAAA,KAAK,qBAAqB,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,GAAI,CAAA,EAAE,CAAA,GAAI,EAAE,KAAK,UAAU,CAAC,WAAW,EAAE,EAC9f,EAAE,EAAE,GAAS,OAAN,EAAE,EAAE,EAAS,CAAC,CAAA,EAAG,KAAK,IAAI,KAAK,oBAAoB,EAAE,KAAK,IAAI,KAAK,YAAY,EAAG,CAAA,KAAK,oBAAoB,CAAC,SAAS,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,CAAA,CAAE,IAAI,KAAK,IAAI,KAAK,IAAI,EAAG,CAAA,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA,EAAG,KAAK,IAAI,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,IAAI,OAAO,cAAc,EAAE,OAAO,cAAc,CAAC,SAAS,SAAS,CAAC,OAAO,CAAC,IAAI,WAAW,OAAO,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,4BAA4B,CAAC,EAAE,AAAA,CAAC,GAAG,GAAM,KAAK,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,EAAE,GAAM,YAAY,CAAC,EAAE,GAAM,YAAY,CAAC,EAC7e,GAAM,aAAa,CAAC,EAAE,GAAM,iBAAiB,CAAC,EAAE,GAAM,oBAAoB,CAAC,EAAE,GAAM,qBAAqB,CAAC,EAAE,GAAM,cAAc,CAAC,EAAE,GAAM,YAAY,CAAC,EAAE,GAAM,gBAAgB,CAAC,EAAE,GAAM,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,EAAE,GAAM,UAAU,CAAC,EAAE,GAAM,WAAW,CAAC,EAAE,GAAM,aAAa,CAAC,EAAE,GAAM,QAAQ,CAAC,EAAE,GAAM,UAAU,CAAC,EAAE,GAAM,YAAY,CAAC,EAAE,GAAM,UAAU,CAAC,EAAE,GAAM,cAAc,CAAC,EAAE,GAAM,gBAAgB,CAAC,EAAE,GAAM,mBAAmB,CAAC,EAAE,GAAM,gBAAgB,CAAC,EAAE,GAAM,cAAc,CAAC,EAAE,GAAM,WAAW,CAAC,IAC1e,GAAM,gBAAgB,CAAC,IAAI,GAAM,uBAAuB,CAAC,IAAI,GAAM,WAAW,CAAC,IAAI,GAAM,WAAW,CAAC,IAAI,GAAM,UAAU,CAAC,IAAI,GAAM,SAAS,CAAC,IAAI,GAAM,cAAc,CAAC,IAAI,GAAM,sBAAsB,CAAC,IAAI,GAAM,cAAc,CAAC,IAAI,GAAM,sBAAsB,CAAC,IAAI,GAAM,cAAc,CAAC,IAAI,GAAM,sBAAsB,CAAC,IAAI,GAAM,cAAc,CAAC,IAAI,GAAM,sBAAsB,CAAC,IAAI,GAAM,sBAAsB,CAAC,IAAI,GAAM,UAAU,CAAC,EAAE,GAAM,WAAW,CAAC,EAAE,GAAM,SAAS,CAAC,EAAE,GAAM,cAAc,CAAC,EACze,GAAM,UAAU,CAAC,EAAE,GAAM,iBAAiB,CAAC,EAAE,GAAM,YAAY,CAAC,EAAE,GAAM,aAAa,CAAC,EAAE,GAAM,iBAAiB,CAAC,EAAE,GAAM,YAAY,CAAC,EAAE,GAAM,YAAY,CAAC,EAAE,GAAM,SAAS,CAAC,IAAI,GAAM,qBAAqB,CAAC,IAAI,GAAM,qBAAqB,CAAC,IAAI,GAAM,gCAAgC,CAAC,IAAI,GAAM,gCAAgC,CAAC,IAAI,GAAM,0BAA0B,CAAC,IAAI,GAAM,cAAc,CAAC,IAAI,GAAM,mBAAmB,CAAC,KAAK,GAAM,sBAAsB,CAAC,KAAK,GAAM,aAAa,CAAC,KACzd,GAAM,0BAA0B,CAAC,KAAK,GAAM,yBAAyB,CAAC,KAAK,GAAM,YAAY,CAAC,KAAK,GAAM,yBAAyB,CAAC,KAAK,GAAM,wBAAwB,CAAC,KAAK,GAAM,gBAAgB,CAAC,KAAK,GAAM,QAAQ,CAAC,KAAK,GAAM,SAAS,CAAC,KAAK,GAAM,iBAAiB,CAAC,KAAK,GAAM,OAAO,CAAC,KAAK,GAAM,eAAe,CAAC,KAAK,GAAM,SAAS,CAAC,KAAK,GAAM,aAAa,CAAC,KAAK,GAAM,qBAAqB,CAAC,KAAK,GAAM,qBAAqB,CAAC,KAAK,GAAM,oBAAoB,CAAC,KAAK,GAAM,WAAW,CAAC,KAAK,GAAM,SAAS,CAAC,KACnf,GAAM,UAAU,CAAC,KAAK,GAAM,eAAe,CAAC,KAAK,GAAM,oBAAoB,CAAC,KAAK,GAAM,UAAU,CAAC,GAAM,UAAU,CAAC,GAAM,oBAAoB,CAAC,KAAK,GAAM,qBAAqB,CAAC,KAAK,GAAM,qBAAqB,CAAC,KAAK,GAAM,qBAAqB,CAAC,KAAK,GAAM,uBAAuB,CAAC,KAAK,GAAM,uBAAuB,CAAC,KAAK,GAAM,wBAAwB,CAAC,KAAK,GAAM,wBAAwB,CAAC,KAC/X,GAAM,SAAS,CAAC,WAAW,QAAQ,KAAK,CAAC,0EAA0E,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,IAAI,CAAC,8DAA8D,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,IAAI,CAAC,kEAAkE,EAAE,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,KAAK,CAAC,mEAAmE,CAAC,EAC/d,GAAM,cAAc,CAAC,WAAW,QAAQ,KAAK,CAAC,mFAAmF,IAAI,CAAC,UAAU,CAAC,SAAS,aAAa,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,EAAE,OAAO,GAAI,UAAU,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EACjZ,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,SAAS,CAAC,EAAiH,OAA/G,aAAa,GAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,UAAW,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,UAAW,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAkF,OAAhF,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,CAAE,AAAA,CAAA,GAAG,GAAG,GAAA,EAAK,IAAI,IAAI,CAAC,CAAC,CAAE,AAAA,CAAA,GAAG,EAAE,GAAA,EAAK,IAAI,IAAI,CAAC,CAAC,CAAE,AAAA,CAAA,AAAE,IAAF,CAAE,EAAK,IAAW,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAA6B,OAA3B,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,OAAO,WAAW,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAA0B,OAAxB,EAAE,GAAI,CAAA,GAAG,CAAA,EAAG,EAAE,GAAI,CAAA,GAAG,CAAA,EAAU,EAAE,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,CAAC,OAAO,SAAS,CAAC,CAC7f,CAAC,CAAC,CAAC,EAA+M,OAA7M,EAAE,GAAM,IAAI,CAAC,eAAe,CAAC,EAAE,GAAG,EAAE,GAAM,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,GAAM,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAG,CAAA,EAAE,IAAI,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAA,EAAW,IAAI,AAAA,CAAC,IAAI,SAAS,SAAS,CAAC,EAAE,IAA8H,EAA1H,EAAE,SAAS,CAAC,EAAoG,OAAlF,EAAhB,CAAA,EAAE,WAAW,EAAb,GAAqB,QAAQ,IAAI,CAAC,yCAAyC,EAAE,qBAA4B,CAAC,EAAI,GAAG,EAAE,kCAAkC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,IAAK,MAAM,GAAG,EAAE,qCAAqC,IAAI,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC,CACzgB,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,EAAE,2CAA2C,IAAI,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,KAAM,KAAK,OAAO,GAAG,EAAE,6DAA6D,IAAI,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KACpf,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,mEAAmE,IAAI,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,KAAM,KAAK,MAAM,GAAG,EAAE,qDAAqD,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,KAAM,KAAK,OAAO,GAAG,EAAE,6EAA6E,IAAI,CAAC,GAAG,OAAO,EACzkB,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,MAAM,GAAG,EAAE,qBAAqB,IAAI,CAAC,GAAG,CAAmB,GAAG,IAAd,CAAA,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAO,MAAM,AAAN,EAAgB,OAAO,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,IAAI,IAAI,AAAA,CACvZ,OADwZ,GAAG,EAAE,EAAE,MAAM,EAC9e,CAAA,KAAK,IAD4e,CAAA,EAAE,GAAM,aAAa,CAAC,EAAE,AAAF,EAC5f,IAAI,CAAC,MAAM,CAAC,GAAG,QAAQ,IAAI,CAAC,8BAA8B,EAAA,EAAW,IAAI,AAAA,EAAE,MAAM,WAAW,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,EAAmC,OAAjC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,kBAAkB,SAAS,CAAC,CAAC,CAAC,EAAyF,OAAvF,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAU,IAAI,AAAA,EAAE,kBAAkB,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAuE,OAArE,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAU,IAAI,AAAA,EAAE,qBAAqB,WAAW,IAAI,EACrhB,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAkC,OAAjC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,qBAAqB,WAAsF,OAA3E,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,OAAO,WAAW,OAAO,IAAI,IAAI,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,WAAW,MAAM,AAAC,CAAA,SAAS,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAA,EAAK,KAAK,CAAC,GAAG,EAAE,OAAO,SAAS,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAmE,EAA/D,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,GAAK,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAG,CAAA,EAAE,CAAA,EACnf,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,OAAO,GAAG,KAAK,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAG,CAAA,EAAE,EAAE,EAAE,CAAA,EAAG,KAAM,MAAK,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,KAAM,MAAK,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAmB,OAAlB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAS,CAAC,EAAE,SAAS,WAAW,MAAM,OAAQ,CAAA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAA,EAAG,IAAK,CAAA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAA,EAAG,IAAK,CAAA,IAAI,IAAI,CAAC,CAAC,CAAC,CAAA,EAAG,GAAG,EAAE,UAAU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,GAAiD,OAA9C,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAAsC,OAApC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,UAAU,SAAS,CAAC,CAAC,CAAC,EAA+C,OAA7C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,UAAU,SAAS,CAAC,EACvd,OADyd,IAAI,CAAC,CAAC,EACrf,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,SAAS,SAAS,CAAC,EAAsC,OAApC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,eAAe,SAAS,CAAC,EAAgC,OAA9B,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAuE,OAArE,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAE,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAE,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAS,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,AAAA,EAAE,UAAU,SAAS,CAAC,EAAsC,OAApC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAQ,IAAI,AAAA,EAAE,QAAQ,SAAS,CAAC,CAAC,CAAC,EACza,OAD2a,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,AAAF,EAAI,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EACtf,EAAE,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAC,CAAC,EACnB,GAAM,aAAa,CAAC,CAAC,UAAU,SAAS,aAAa,SAAS,KAAK,MAAM,WAAW,QAAQ,MAAM,SAAS,MAAM,SAAS,OAAO,SAAS,MAAM,EAAE,eAAe,SAAS,KAAK,IAAI,WAAW,QAAQ,MAAM,SAAS,UAAU,SAAS,UAAU,QAAQ,WAAW,QAAQ,UAAU,SAAS,MAAM,SAAS,eAAe,QAAQ,SAAS,SAAS,QAAQ,SAAS,KAAK,MAAM,SAAS,IAAI,SAAS,MAAM,cAAc,SAAS,SAAS,SAAS,UAAU,MAAM,SAAS,SAAS,UAAU,SAAS,YAAY,QAC1f,eAAe,QAAQ,WAAW,SAAS,WAAW,SAAS,QAAQ,QAAQ,WAAW,SAAS,aAAa,QAAQ,cAAc,QAAQ,cAAc,QAAQ,cAAc,QAAQ,cAAc,MAAM,WAAW,QAAQ,SAAS,SAAS,YAAY,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,WAAW,QAAQ,UAAU,SAAS,YAAY,SAAS,YAAY,QAAQ,QAAQ,SAAS,UAAU,SAAS,WAAW,SAAS,KAAK,SAAS,UAAU,SAAS,KAAK,QAAQ,MAAM,MAAM,YAAY,SAClf,KAAK,QAAQ,SAAS,SAAS,QAAQ,SAAS,UAAU,SAAS,OAAO,QAAQ,MAAM,SAAS,MAAM,SAAS,SAAS,SAAS,cAAc,SAAS,UAAU,QAAQ,aAAa,SAAS,UAAU,SAAS,WAAW,SAAS,UAAU,SAAS,qBAAqB,SAAS,UAAU,SAAS,WAAW,QAAQ,UAAU,SAAS,UAAU,SAAS,YAAY,SAAS,cAAc,QAAQ,aAAa,QAAQ,eAAe,QAAQ,eAAe,QAAQ,eAAe,SAAS,YAAY,SACvf,KAAK,MAAM,UAAU,QAAQ,MAAM,SAAS,QAAQ,SAAS,OAAO,QAAQ,iBAAiB,QAAQ,WAAW,IAAI,aAAa,SAAS,aAAa,QAAQ,eAAe,QAAQ,gBAAgB,QAAQ,kBAAkB,MAAM,gBAAgB,QAAQ,gBAAgB,SAAS,aAAa,QAAQ,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,YAAY,SAAS,KAAK,IAAI,QAAQ,SAAS,MAAM,QAAQ,UAAU,QAAQ,OAAO,SAAS,UAAU,SAAS,OAAO,SAAS,cAAc,SACpf,UAAU,SAAS,cAAc,SAAS,cAAc,SAAS,WAAW,SAAS,UAAU,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,WAAW,SAAS,OAAO,QAAQ,IAAI,SAAS,UAAU,SAAS,UAAU,QAAQ,YAAY,QAAQ,OAAO,SAAS,WAAW,SAAS,SAAS,QAAQ,SAAS,SAAS,OAAO,SAAS,OAAO,SAAS,QAAQ,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,KAAK,SAAS,YAAY,MAAM,UAAU,QAAQ,IAAI,SAAS,KAAK,MAAM,QAAQ,SAC1f,OAAO,SAAS,UAAU,QAAQ,OAAO,SAAS,MAAM,SAAS,MAAM,SAAS,WAAW,SAAS,OAAO,SAAS,YAAY,QAAQ,EAAE,GAAM,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,EAC1O,GAAM,UAAU,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,UAAU,CAAC,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE,AAAA,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE,AAAA,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE,AAAA,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE,AAAA,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAkE,OAAhE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,MAAM,WAAW,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EACzf,KAAK,SAAS,CAAC,EAA0E,OAAxE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAI,aAAa,GAAM,KAAK,CAAC,MAAM,MAAM,mGAAmG,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,KAAK,CACuF,MADtF,QAAQ,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,QAC7e,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,QAAQ,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,QAAQ,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,QAAQ,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,QAAQ,GAAI,CAAA,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAM,CAAC,IAAI,GAAE,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,iBAAiB,SAAS,CAAC,CAC/gB,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,GAAyF,OAAtF,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,sBAAsB,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EACrH,OADuH,EAAE,EAAG,CAAA,EAAE,GAAG,KAAK,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,EAAE,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,CAAA,EAAG,EAAE,GAAG,EAAE,EAAG,CAAA,EAAE,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,EAAE,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,CAAA,EAAG,EAAE,EAAG,CAAA,EAAE,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,EAAE,CACxf,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,CAAA,EAAI,CAAA,EAAE,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAA,EAAG,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,mBAA6C,SAAS,CAAC,CAAC,CAAC,EAAiN,OAA/M,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAsB,KAAb,CAAA,EAAE,EAAE,GAAG,CAAC,GAAG,CAAA,EAAU,CAAA,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA,EAAG,EAAE,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,GAAU,IAAI,AAAA,EAAK,QAAQ,WAAwC,OAA7B,IAAI,CAAC,SAAS,GAAG,SAAS,GAAU,IAAI,AAAA,EAAE,UAAU,WACjc,OAD4c,IAAI,CAAC,EAAE,EACtgB,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,AAAA,EAAE,SAAS,WAAW,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,AAAA,EAAE,OAAO,WAAW,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,UAAU,WAAW,IAAI,EAAE,IAAI,CAAC,MAAM,GAA2H,OAAxH,IAAI,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA,EAAI,CAAA,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,CAAA,EAAG,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EACzf,SAAS,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,KAAK,IAAI,EAAG,CAAA,QAAQ,IAAI,CAAC,0GAA0G,IAAI,CAAC,mBAAmB,CAAC,EAAE,EAAA,EAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,EAAE,oBAAoB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAyH,OAAxH,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,EAC/d,OADie,QAAQ,IAAI,CAAC,mHACve,EAAE,eAAe,CAAC,IAAI,CAAC,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,IAAI,CAAC,GAAG,IAAI,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAiF,GAAhF,EAAE,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAA,EAAG,IAAI,CAAC,IAAI,CAAC,GAAM,GAAG,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE,UAAM,KAAK,KAAK,GAAG,CAAC,GAAU,CAAA,IAAI,CAAC,EAAE,CAAC,GAAI,CAAA,EAAE,IAAI,CAAC,EAAC,AAAD,EAAI,IAAI,CAAC,EAAE,CAAC,GAAI,CAAA,EAAE,IAAI,CAAC,EAAC,AAAD,EAAI,IAAI,CAAC,EAAE,CAAC,GAAI,CAAA,EAAE,IAAI,CAAC,EAAC,AAAD,EAAI,IAAI,CAAC,EAAE,CAAC,GAAI,CAAA,EAAE,IAAI,CAAC,EAAC,AAAD,CAAI,GAAK,EAAE,KAAK,GAAG,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,GAAG,EAAE,EACpf,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,IAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,AAAA,EAAE,UAAU,SAAS,CAAC,CAAC,CAAC,EAAsG,OAApG,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,QAAQ,SAAS,CAAC,CAAC,CAAC,EAAiG,OAA/F,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,AAAF,EAAI,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAQ,CAAC,EAAE,SAAS,SAAS,CAAC,EAChgB,OADkgB,IAAI,CAAC,gBAAgB,CACzhB,EAAS,IAAI,AAAA,EAAE,iBAAiB,WAAW,CAAC,EAAE,GAAM,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,EAAE,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACvK,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,OAAO,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAoB,OAAlB,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAW,OAAT,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAW,OAAT,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAM,MAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAM,SAAQ,MAAM,MAAM,0BAA0B,EAAG,CAAC,EAAE,aAAa,SAAS,CAAC,EAAE,OAAO,GAAG,KAAK,EAAE,OAAO,IAAI,CAAC,CAAC,AAAC,MAAK,EAAE,OAAO,IAAI,CAAC,CAAC,AAAC,SAAQ,MAAM,MAAM,0BAA0B,EAAG,CAAC,EAAE,MAAM,WAAW,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EACnf,KAAK,SAAS,CAAC,EAAwB,OAAtB,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,SAAE,AAAG,KAAK,IAAI,EAAS,CAAA,QAAQ,IAAI,CAAC,yFAAyF,IAAI,CAAC,UAAU,CAAC,EAAE,EAA7I,GAAgJ,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,CAAA,EAAE,UAAU,SAAS,CAAC,EAAsB,OAApB,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAAgC,OAA9B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,CAAC,CAAC,EAA8B,OAA5B,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,SAAE,AAAG,KAAK,IAAI,EAAS,CAAA,QAAQ,IAAI,CAAC,yFACjf,IAAI,CAAC,UAAU,CAAC,EAAE,EAD6b,GAC1b,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,CAAA,EAAE,UAAU,SAAS,CAAC,EAAsB,OAApB,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAAgC,OAA9B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,SAAS,SAAS,CAAC,EAA0B,OAAxB,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,eAAe,SAAS,CAAC,EAAsB,OAApB,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAA0B,OAAxB,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,EAAoD,OAAlD,IAAI,EAAG,CAAA,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAA,EAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EACpc,OADsc,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CACvf,EAAE,CAAC,AAAD,EAAU,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAAoD,OAAlD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAU,IAAI,AAAA,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,EAAgG,OAA9F,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAU,IAAI,AAAA,EAAE,YAAsC,SAAS,CAAC,CAAC,CAAC,EAA8E,OAA5E,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAU,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAK,MAAM,WAA+D,OAApD,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,WACzb,OADoc,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EACpf,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,MAAM,WAA+D,OAApD,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,YAAY,WAAqH,OAA1G,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,OAAO,WAAyC,OAA9B,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAA,EAAE,SAAS,WAAW,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,AAAA,EAAE,OAAO,WAAW,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,gBAAgB,WAAW,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAC3hB,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,UAAU,WAAW,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,WAAW,SAAS,CAAC,EAAE,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,kBAAkB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAc,OAAO,EAAE,EAAE,AAAxB,CAAA,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAe,CAAC,EAAE,UAAU,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,GAA0C,OAAvC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,GAAU,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAgD,OAA9C,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAE,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAS,IAAI,AAAA,EAAE,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAgD,OAA9C,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,CAAC,GAChgB,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,AAAA,EAAE,UAAU,SAAS,CAAC,CAAC,CAAC,EAA8C,OAA5C,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAQ,IAAI,AAAA,EAAE,QAAQ,SAAS,CAAC,CAAC,CAAC,EAAiE,OAA/D,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,AAAF,EAAI,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAC,EAAE,cAAc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAA2E,OAAzE,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAQ,IAAI,AAAA,CAAC,EAAE,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAC5X,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,OAAO,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAA6B,OAA3B,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAW,OAAT,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAW,OAAT,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAW,OAAT,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAM,MAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAM,MAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAM,SAAQ,MAAM,MAAM,0BAA0B,EAAG,CAAC,EAAE,aAAa,SAAS,CAAC,EAAE,OAAO,GAAG,KAAK,EAAE,OAAO,IAAI,CAAC,CAAC,AAAC,MAAK,EAAE,OAAO,IAAI,CAAC,CAAC,AAAC,MAAK,EAAE,OAAO,IAAI,CAAC,CAAC,AAAC,SAAQ,MAAM,MAAM,0BACrf,EAAG,CAAC,EAAE,MAAM,WAAW,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,EAAmC,OAAjC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,SAAE,AAAG,KAAK,IAAI,EAAS,CAAA,QAAQ,IAAI,CAAC,yFAAyF,IAAI,CAAC,UAAU,CAAC,EAAE,EAA7I,GAAgJ,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,CAAA,EAAE,UAAU,SAAS,CAAC,EAAgC,OAA9B,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAA+C,OAA7C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,CAC1gB,CAAC,EAA4C,OAA1C,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,SAAE,AAAG,KAAK,IAAI,EAAS,CAAA,QAAQ,IAAI,CAAC,yFAAyF,IAAI,CAAC,UAAU,CAAC,EAAE,EAA7I,GAAgJ,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,CAAA,EAAE,UAAU,SAAS,CAAC,EAAgC,OAA9B,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAA+C,OAA7C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,SAAS,SAAS,CAAC,CAAC,CAAC,SAAE,AAAG,KAAK,IAAI,EAAS,CAAA,QAAQ,IAAI,CAAC,mGAC1d,IAAI,CAAC,eAAe,CAAC,EAAE,EADia,GAC9Z,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,CAAA,EAAE,eAAe,SAAS,CAAC,EAAgC,OAA9B,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,CAAC,CAAC,EAA+C,OAA7C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,WAAmC,SAAS,CAAC,EAA0N,MAAxN,CAAC,GAAI,aAAa,GAAM,KAAK,EAAE,QAAQ,KAAK,CAAC,8FAA8F,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,UAAU,AAAV,EAAY,IAAI,CAAC,eAAe,CAAC,EAAE,YAAY,CAAC,IAAW,IAAI,AAAA,EAC3f,eAAuC,SAAS,CAAC,CAAC,CAAC,EAAqF,OAAnF,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,UAAU,AAAV,EAAY,IAAI,CAAC,eAAe,CAAC,EAAE,gBAAgB,CAAC,EAAE,IAAW,IAAI,AAAA,EAAK,aAAa,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAkG,OAAjG,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAqH,OAApH,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAQ,IAAI,AAAA,EACrf,gBAAgB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAkB,EAAE,EAAG,CAAA,AAAtB,CAAA,EAAE,EAAE,QAAQ,AAAR,CAAmB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAE,AAAF,EAAwH,OAAnH,IAAI,CAAC,CAAC,CAAE,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,AAAH,EAAK,EAAE,IAAI,CAAC,CAAC,CAAE,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,AAAH,EAAK,EAAE,IAAI,CAAC,CAAC,CAAE,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,AAAH,EAAK,EAAS,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAW,EAAE,AAAZ,CAAA,EAAE,EAAE,CAAC,AAAD,EAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAgF,OAA9E,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA,EAAG,CAAA,EAAE,CAAA,CAAA,EAAG,CAAA,GAAE,CAAA,CAAA,EAAG,CAAA,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA,EAAG,CAAA,EAAE,CAAA,CAAA,EAAG,CAAA,GAAE,CAAA,CAAA,EAAG,CAAA,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAA,CAAA,EAAG,CAAA,EAAE,CAAA,CAAA,EAAG,CAAA,GAAE,CAAA,CAAA,EAAG,CAAA,EAAS,IAAI,AAAA,EAAE,QAAgC,SAAS,CAAC,EACva,OADya,KAAK,IAC1gB,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,EAAE,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,GAAU,IAAI,CAAC,eAAe,CAAC,EAAE,EAAK,UAAkC,SAAS,CAAC,EAAuG,OAArG,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,EAAE,gBAAgB,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,gBAAgB,GAAU,IAAI,CAAC,eAAe,CAAC,EAAE,EAAK,mBAAmB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAoH,OAAnH,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,GAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EACxe,OAD0e,IAAI,CAAC,CAAC,EAC5gB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,EAAqE,OAAnE,IAAI,EAAG,CAAA,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAA,EAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAA6E,OAA3E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAU,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAA6E,OAA3E,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAU,IAAI,AAAA,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,EACvW,OADyW,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EACnf,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAU,IAAI,AAAA,EAAE,YAAsC,SAAS,CAAC,CAAC,CAAC,EAAkF,OAAhF,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAU,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAK,MAAM,WAAyF,OAA9E,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,WAAsF,OAA3E,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,MAAM,WAAyF,OAA9E,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EACvf,YAAY,WAA0K,OAA/J,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,OAAO,WAAwD,OAA7C,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAA,EAAE,SAAS,WAAW,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,AAAA,EAAE,OAAO,WAAW,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,gBAAgB,WAAW,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAC9gB,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,UAAU,WAAW,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,UAAU,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,GAA0C,OAAvC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,GAAU,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAuE,OAArE,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAE,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAE,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAS,IAAI,AAAA,EAAE,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAgD,OAA9C,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,IAAI,EAAE,OAAO,QAAQ,IAAI,CAAC,6FACjb,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAA0D,OAAzD,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAA8C,OAA7C,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAS,IAAI,AAAA,EAAE,gBAA0C,SAAS,CAAC,EAAwE,OAAtE,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,EAAE,IAAI,CAAC,GAAG,SAAS,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAU,IAAI,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,EAAE,EAAK,eAAuC,SAAS,CAAC,EAChd,OADkd,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,EAAE,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,GAC1gB,IAAI,CAAC,GAAG,CAAC,EAAE,EAAK,QAAgC,SAAS,CAAC,EAAoC,OAAlC,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAgB,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,cAAc,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAK,QAAQ,SAAS,CAAC,EAA2C,OAAzC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAI,CAAA,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM,EAAA,EAAW,KAAK,IAAI,CAAC,GAAM,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,EAAE,WAAW,SAAS,CAAC,EAAE,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,kBAAkB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAc,OAAO,EAAE,EAAE,EAAE,EAAE,AAA5B,CAAA,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAmB,CAAC,EAAE,2BAA2B,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,KAAK,CAAC,4GAA4G,EAC/kB,uBAAuB,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,KAAK,CAAC,oGAAoG,EAAE,sBAAsB,SAAS,CAAC,EAAwG,OAAtG,QAAQ,IAAI,CAAC,yFAAgG,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,mBAAmB,SAAS,CAAC,EAAkG,OAAhG,QAAQ,IAAI,CAAC,mFAA0F,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,oBAAoB,SAAS,CAAC,CACvgB,CAAC,EAAoG,OAAlG,QAAQ,IAAI,CAAC,qFAA4F,IAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,EAAE,sBAAsB,SAAS,CAAC,EAAoE,OAAlE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAQ,IAAI,AAAA,EAAE,mBAAmB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,EAAE,MAAM,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,EAAE,MAAM,GACxZ,OAD2Z,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CACrf,EAAS,IAAI,AAAA,EAAE,oBAAoB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAyC,OAAxC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAQ,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,AAAA,EAAE,UAAU,SAAS,CAAC,CAAC,CAAC,EAA4D,OAA1D,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAQ,IAAI,AAAA,EAAE,QAAQ,SAAS,CAAC,CAAC,CAAC,EAA+E,OAA7E,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,AAAF,EAAI,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAC,EAAE,cAAc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAC5Z,OAD8Z,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAC1f,EAAE,KAAK,CAAC,EAAE,EAAE,CAAQ,IAAI,AAAA,CAAC,EAAE,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,EACpH,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,OAAO,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAsC,OAApC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAW,OAAT,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAW,OAAT,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAW,OAAT,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAW,OAAT,IAAI,CAAC,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAM,MAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAM,MAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAM,MAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAM,SAAQ,MAAM,MAAM,0BAA0B,EAAG,CAAC,EAAE,aAAa,SAAS,CAAC,EAAE,OAAO,GAAG,KAAK,EAAE,OAAO,IAAI,CAAC,CAAC,AAC9f,MAAK,EAAE,OAAO,IAAI,CAAC,CAAC,AAAC,MAAK,EAAE,OAAO,IAAI,CAAC,CAAC,AAAC,MAAK,EAAE,OAAO,IAAI,CAAC,CAAC,AAAC,SAAQ,MAAM,MAAM,0BAA0B,EAAG,CAAC,EAAE,MAAM,WAAW,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,EAA6D,OAA3D,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,SAAE,AAAG,KAAK,IAAI,EAAS,CAAA,QAAQ,IAAI,CAAC,yFAAyF,IAAI,CAAC,UAAU,CAAC,EAAE,EAA7I,GAAgJ,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,CAAA,EACpf,UAAU,SAAS,CAAC,EAA0C,OAAxC,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAA8D,OAA5D,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,CAAC,CAAC,EAA0D,OAAxD,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,SAAE,AAAG,KAAK,IAAI,EAAS,CAAA,QAAQ,IAAI,CAAC,yFAAyF,IAAI,CAAC,UAAU,CAAC,EAAE,EAA7I,GAAgJ,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,IAAI,CAAA,EAAE,UAAU,SAAS,CAAC,EACne,OADqe,IAAI,CAAC,CAAC,EAC3gB,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAA8D,OAA5D,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,eAAe,SAAS,CAAC,EAA0C,OAAxC,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAgK,OAA/J,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAS,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,EACha,OADka,IAAI,EAAG,CAAA,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EACxf,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAA,EAAI,CAAA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA,EAAU,IAAI,AAAA,EAAE,2BAA2B,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAA6E,OAA3E,KAAK,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,EAAI,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,EAAU,IAAI,AAAA,EAAE,+BAA+B,SAAS,CAAC,EAAyB,IAAnB,EAAE,EAAE,EAAmB,EAAE,AAAnB,CAAA,EAAE,EAAE,QAAQ,AAAR,CAAgB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,QAAI,IAAI,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE,GAAO,GAAG,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,GAAG,CAAC,EAAE,IAAI,GACnf,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,GAAU,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,IAAQ,EAAE,KAAK,EAAE,CAAC,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,EAAG,CAAA,EAAE,EAAE,EAAE,EAAE,UAAA,EAAa,CAAA,AAAe,EAAE,EAAjB,CAAA,EAAE,KAAK,IAAI,CAAC,EAAA,EAAS,EAAE,EAAE,CAAA,EAAG,EAAE,EAAE,IAAI,EAAG,CAAA,EAAE,WAAW,EAAE,EAAE,EAAE,UAAA,EAAa,CAAA,AAAe,EAAE,EAAjB,CAAA,EAAE,KAAK,IAAI,CAAC,EAAA,EAAS,EAAE,EAAE,CAAA,EAAG,IAAI,EAAG,CAAA,EAAE,EAAE,WAAW,EAAE,CAAA,EAAI,CAAA,AAAe,EAAE,EAAjB,CAAA,EAAE,KAAK,IAAI,CAAC,EAAA,EAAS,EAAE,EAAE,CAAA,EAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,KAAgE,KAAK,KAAK,GAAG,CAA9D,EAAE,KAAK,IAAI,CAAE,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,AAAC,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAI,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,KAAuB,CAAA,EAAE,CAAA,EAAG,IAAI,CAAC,CAAC,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,CAAC,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,CAAC,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,AAAC,CAAA,EAAE,EAAE,EAAE,CAAA,EACpf,IAAU,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAAsG,OAApG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAU,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAAsG,OAApG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAU,IAAI,AAAA,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,EAA8L,OAA5L,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAU,IAAI,AAAA,EAAE,YACte,SAAS,CAAC,CAAC,CAAC,EAAsF,OAApF,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAAU,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAK,MAAM,WAAmH,OAAxG,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,WAA+G,OAApG,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,MAAM,WACnZ,OAD8Z,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAC7f,IAAI,AAAA,EAAE,YAAY,WAA+N,OAApN,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,OAAO,WAAuE,OAA5D,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAQ,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,AAAA,EAAE,SAAS,WAAW,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,AAAA,EACtf,OAAO,WAAW,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,gBAAgB,WAAW,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,UAAU,WAAW,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,UAAU,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,GAA0C,OAAvC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,GAAU,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAA8F,OAA5F,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAE,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAE,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAE,IAAI,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,CAAA,AAAA,EAAG,EAAS,IAAI,AAAA,EAAE,YAAY,SAAS,CAAC,CAAC,CAAC,CACpf,CAAC,EAAgD,OAA9C,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,AAAA,EAAE,UAAU,SAAS,CAAC,CAAC,CAAC,EAA0E,OAAxE,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAQ,IAAI,AAAA,EAAE,QAAQ,SAAS,CAAC,CAAC,CAAC,EAA6F,OAA3F,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,AAAF,EAAI,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAQ,CAAC,EAAE,cAAc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EACvY,OADyY,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CACzf,EAAE,KAAK,CAAC,EAAE,EAAE,CAAQ,IAAI,AAAA,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,GAAM,KAAK,CAAC,YAAY,AAAA,EAAE,GAAM,KAAK,CAAC,cAAc,CAAC,0BAA0B,KAAK,CAAC,KAAK,GAAM,KAAK,CAAC,YAAY,CAAC,MAClO,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,KAAK,CAAC,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE,AAAA,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE,AAAA,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE,AAAA,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,MAAM,AAAA,EAAE,IAAI,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAmF,OAAjF,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,MAAM,WAAW,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CACvf,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,SAAS,CAAC,EAAsF,OAApF,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,sBAAsB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,GAAM,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAEqB,MAFH,QAAjB,CAAA,EAAE,GAAG,IAAI,CAAC,MAAM,AAAN,EAAkB,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,OAAO,KAAK,GAAG,CAAC,GAAI,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,EAAA,EAAK,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAA,CAAA,EAAI,QAAQ,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,OAAO,KAAK,GAAG,CAAC,GAC3f,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,EAAA,EAAK,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAA,CAAA,EAAI,QAAQ,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,OAAO,KAAK,GAAG,CAAC,GAAI,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,EAAA,EAAK,CAAA,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,EAAA,CAAC,EAAI,QAAQ,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,OAAO,KAAK,GAAG,CAAC,GAAI,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,EAAA,EAAK,CAAA,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,EAAA,CAAC,EAAI,QAAQ,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,OAAO,KAAK,GAAG,CAAC,GAAI,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,EAAA,EAAK,CAAA,IAAI,CAAC,EAAE,CACvf,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,EAAA,CAAC,EAAI,QAAQ,EAAG,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,OAAO,KAAK,GAAG,CAAC,GAAI,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,EAAA,EAAK,CAAA,IAAI,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAA,CAAA,EAAI,QAAQ,IAAI,CAAC,kEAAkE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAK,CAAC,IAAI,GAAE,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,kBAA0C,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAsG,OAApG,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,EAAE,0BAA0B,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,GAAU,IAAI,AAAA,EAAK,eAAe,SAAS,CAAC,CACtgB,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,OAAA,EAAuB,EAAE,IAAI,GAAM,UAAU,CAAQ,SAAS,CAAC,EAAE,EAAE,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,GAAK,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,AAAA,EAAE,UAAU,SAAS,CAAC,EAAmG,OAAjG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,AAAF,EAAI,IAAI,CAAC,gBAAgB,GAAU,IAAI,AAAA,EAAE,QAAQ,SAAS,CAAC,CAAC,CAAC,EACjZ,OADmZ,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,AAAF,EAAI,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EACpf,EAAE,CAAC,IAAI,CAAC,MAAM,CAAQ,CAAC,EAAE,UAAU,SAAS,CAAC,EAAE,OAAO,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,SAAS,SAAS,CAAC,EAA0B,OAAxB,IAAI,CAAC,gBAAgB,CAAC,EAAS,IAAI,AAAA,EAAE,iBAAiB,WAAW,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,AAAA,EACvU,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,KAAK,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAsC,OAApC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAU,IAAI,AAAA,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAAgD,OAA9C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAS,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAM,AAAN,EAAS,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,GAAG,EAAE,MAAM,SAAS,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAO,AAAP,EAAS,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,WAAW,WAAW,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,WAAW,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAC3iB,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,4BAAA,EAA4C,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAiC,OAA/B,GAAI,CAAA,EAAE,GAAM,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAA,EAAW,CAAC,GAAK,oBAAoB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAkE,OAAhE,EAAE,IAAI,CAAC,4BAA4B,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,GAAM,OAAO,CAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,aAAa,SAAS,CAAC,EAC5e,OAD8e,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAC/hB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,GAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,IAAS,KAAU,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,CAAC,IAAS,CAAC,IAAS,EACrQ,GAAM,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAoC,OAAlC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAU,IAAI,AAAA,EAAE,cAAc,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,AAAA,EAAE,oBAAA,EAAoC,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,cAAc,CAAC,IAAoD,OAAhD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAU,IAAI,AAAA,GAAK,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EACvd,OADyd,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAC1f,IAAI,AAAA,EAAE,UAAU,WAA0E,OAA/D,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAS,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAgB,IAAI,AAAA,EAAE,MAAM,WAAW,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAM,AAAN,EAAS,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,GAAG,EAAE,KAAK,SAAS,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAO,AAAP,EAAS,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,cAAc,SAAS,CAAC,EAAkC,OAAhC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,eAAe,SAAS,CAAC,EAAkC,OAAhC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,eAAe,SAAS,CAAC,EACrf,OADuf,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GACjiB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAU,IAAI,AAAA,EAAE,cAAc,SAAS,CAAC,EAAE,MAAO,CAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,CAAO,EAAE,YAAY,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,AAAM,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,EAAE,MAAM,AAAC,CAAA,GAAG,IAAI,GAAM,OAAO,AAAP,EAAS,GAAG,CAAC,AAAC,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,EAAI,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,EAAG,AAAC,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,EAAI,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,EAAG,EAAE,kBAAkB,SAAS,CAAC,EAAE,MAAO,CAAA,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,GAAG,CAAC,CAAC,CAC3f,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,CAAO,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAM,AAAN,EAAS,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,eAAA,EAA+B,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,MAAM,EAAE,GAAK,UAAU,SAAS,CAAC,EAA0C,OAAxC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAS,IAAI,AAAA,EAAE,MAAM,SAAS,CAAC,EAA0C,OAAxC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAS,IAAI,AAAA,EAAE,UAAU,SAAS,CAAC,EAAkC,OAAhC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAClf,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,IAAS,IAAS,KAAU,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,CAAC,IAAS,CAAC,IAAS,CAAC,IAAS,EAC5L,GAAM,IAAI,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAoC,OAAlC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAU,IAAI,AAAA,EAAE,cAAc,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,AAAA,EAAE,oBAAA,EAAoC,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,cAAc,CAAC,IAAoD,OAAhD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAU,IAAI,AAAA,GAAK,aAAA,EAA6B,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAC3D,OAD4D,EAAE,iBAAiB,CAAC,CAAC,GAClf,IAAI,CAAC,SAAS,GAAG,EAAE,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,QAAQ,CAAC,GAAG,KAAK,IAAI,GAAE,GAAG,aAAa,GAAM,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,YAAY,CAAC,EAAE,WAAW,EAAE,EAAE,aAAa,CAAC,QAAQ,GAAG,aAAa,GAAM,cAAc,EAAE,KAAK,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,EAAE,WAAW,EAAE,EAAE,aAAa,CAAC,GAAE,GAAU,IAAI,AAAA,GAAK,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EACre,OADue,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAC/gB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAS,IAAI,AAAA,EAAE,UAAU,WAAgG,OAArF,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAS,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAgB,IAAI,AAAA,EAAE,MAAM,WAAW,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAM,AAAN,EAAS,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,GAAG,EAAE,KAAK,SAAS,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAO,AAAP,EAAS,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,cAAc,SAAS,CAAC,EAAkC,OAAhC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,eAAe,SAAS,CAAC,EACrf,OADuf,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GACphB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,eAAe,SAAS,CAAC,EAA+C,OAA7C,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAU,IAAI,AAAA,EAAE,cAAc,SAAS,CAAC,EAAE,MAAO,CAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,CAAO,EAAE,YAAY,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,AAAM,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAM,AAAN,EAAS,GAAG,CAAC,AAAC,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,AAAA,EAAI,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CACpf,IAAI,CAAC,GAAG,CAAC,CAAA,AAAA,EAAI,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,EAAI,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,AAAA,EAAI,AAAA,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,EAAI,CAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,EAAG,EAAE,kBAAkB,SAAS,CAAC,EAAE,MAAO,CAAA,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,IAAG,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,AAAD,CAAO,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAM,AAAN,EAAS,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,eAAA,EAA+B,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,MAAM,EAAE,GAAK,iBAAA,EAAiC,EAChgB,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAiF,MAAzD,AAAtB,CAAA,EAAE,GAAG,IAAI,GAAM,MAAM,AAAN,EAAS,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,GAAU,CAAC,GAAK,UAAU,SAAS,CAAC,EAA0C,OAAxC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAS,IAAI,AAAA,EAAE,MAAM,SAAS,CAAC,EAA0C,OAAxC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAS,IAAI,AAAA,EAAE,YAAA,EAA4B,EAAE,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,CAAQ,SAAS,CAAC,EACY,OADV,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CACpf,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,GAAU,IAAI,AAAA,GAAK,UAAU,SAAS,CAAC,EACpf,OADsf,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GACnhB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAM,OAAO,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,IAAI,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,UAAU,MAAM,EAAE,QAAQ,KAAK,CAAC,gFAAgF,EACvS,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,OAAO,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAgE,OAA/D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,SAAS,WAAuC,OAA5B,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAU,IAAI,AAAA,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAW,AAAX,EAAa,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,SAAS,CAAC,EAAsE,OAApE,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,EACpb,OADsb,QAAQ,IAAI,CAAC,kGAC5b,EAAE,YAAY,CAAC,IAAI,CAAC,EAAE,qBAAqB,SAAS,CAAC,EAA4H,OAA1H,QAAQ,IAAI,CAAC,6GAAoH,IAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,oBAA4C,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,MAAM,AAAN,EAAQ,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAK,cAAsC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAC5f,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,MAAM,CAAC,EAAE,QAAO,AAAP,EAAU,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,EAAK,eAAe,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAyE,OAAxE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAS,IAAI,AAAA,EAAE,YAAY,WAAW,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,WAAW,SAAS,CAAC,CACxf,CAAC,EAAE,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAA0Q,GAAzoC,GAAnC,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,AAAF,EAAY,CAAC,GAAG,EAAE,MAAM,MAAM,+DAA2J,OAA5F,QAAQ,IAAI,CAAC,+DAA+D,IAAI,CAAC,QAAQ,GAAU,IAAI,AAAA,CAC3e,OAD4e,IAAI,CAAC,cAAc,CAAC,EACngB,GAAU,IAAI,AAAA,EAAE,UAAU,WAAW,IAAI,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAyE,OAAxE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,qBAAqB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAA2G,OAA1G,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAQ,CAAC,EAAE,gBAAgB,SAAS,CAAC,EAAiC,OAA/B,IAAI,CAAC,UAAU,CAAC,GAAG,SAAS,GAAU,IAAI,AAAA,EAAE,mBAAmB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAC5Z,OAD6Z,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CACtf,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAQ,IAAI,AAAA,EAAE,UAAU,SAAS,CAAC,EAAuB,OAArB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,QAAQ,WAAW,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,AAAA,CAAC,EAAE,GAAM,OAAO,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,IAAI,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,UAAU,MAAM,EAAE,QAAQ,KAAK,CAAC,gFAAgF,EACzY,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,OAAO,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAuH,OAAtH,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAS,IAAI,AAAA,EAAE,SAAS,WAAqD,OAA1C,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAU,IAAI,AAAA,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,GAAM,OAAM,AAAN,EAAS,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,SAAS,CAAC,EAAgC,OAA9B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAS,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,EAC9d,OADge,QAAQ,IAAI,CAAC,0EACte,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,aAAa,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAkD,OAAjD,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAQ,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAoE,OAAnE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAS,IAAI,AAAA,EAAE,UAAU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAA8D,OAA5D,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAU,IAAI,AAAA,EAAE,gBAAwC,SAAS,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CACrf,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,GAAiH,OAA9G,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAS,IAAI,AAAA,EAAK,sBAAsB,SAAS,CAAC,EAAE,CAAC,GAAI,aAAa,GAAM,KAAK,EAAE,QAAQ,KAAK,CAAC,wGAAwG,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,GACzf,EAAE,KAAK,GAAG,CAAC,GAAG,GAAG,QAAQ,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,QAAQ,EAAE,KAAK,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,EAAG,QAAQ,EAAE,KAAK,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,EAAG,QAAQ,EAAE,KAAK,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CACxf,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAA,EAAG,QAAQ,EAAE,KAAK,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAA,EAAG,QAAQ,EAAE,KAAK,EAAG,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAA,EAAyD,OAAtD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAS,IAAI,AAAA,EAAE,0BAA0B,SAAS,CAAC,EAC5Z,OAD8Z,QAAQ,IAAI,CAAC,kGACpa,IAAI,CAAC,0BAA0B,CAAC,EAAE,EAAE,2BAA2B,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAsJ,OAApJ,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAG,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAS,IAAI,AAAA,EAAE,OAAmC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAC3f,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAyP,OAAxP,EAAE,UAAU,CAAC,EAAE,GAAG,SAAS,GAAG,IAAI,EAAE,MAAM,IAAK,CAAA,EAAE,CAAC,CAAC,CAAA,EAAG,EAAE,YAAY,CAAC,EAAE,GAAG,SAAS,GAAG,IAAI,EAAE,MAAM,IAAK,CAAA,EAAE,CAAC,EAAE,KAAK,EAAE,YAAY,CAAC,EAAE,GAAG,SAAS,EAAA,EAAI,EAAE,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAK,SAAS,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,KAAK,IAAI,EAAG,CAAA,QAAQ,IAAI,CAAC,oGAAoG,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAA,EAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,iBAAiB,SAAS,CAAC,CAC7gB,CAAC,EAAE,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAChK,OADitf,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAS,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAwM,OAAvM,IAAI,CAAC,gBAAgeAAe,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAChX,OADiX,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EACrf,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAS,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,EAAqJ,OAAnJ,QAAQ,IAAI,CAAC,sIAA6I,EAAE,eAAe,CAAC,IAAI,CAAC,EAAE,gBAAgB,SAAS,CAAC,EAAiH,OAA/G,QAAQ,IAAI,CAAC,kGAAyG,EAAE,YAAY,CAAC,IAAI,CAAC,EAAE,qBAAqB,SAAS,CAAC,EAClf,OADof,QAAQ,IAAI,CAAC,6GAC1f,IAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,oBAA4C,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,MAAM,AAAN,EAAQ,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAK,cAAsC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,MAAM,CAAC,EAAE,QAAO,AAAP,EAAU,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAC1f,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,EAAK,WAAW,SAAS,CAAC,EAAE,QAAQ,IAAI,CAAC,oGAAoG,EAAE,kBAAkB,CAAC,IAAI,CAAC,EAAE,YAAY,SAAS,CAAC,EAA6G,OAA3G,QAAQ,IAAI,CAAC,8FAAqG,EAAE,YAAY,CAAC,IAAI,CAAC,EAAE,YAAY,WAAW,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAE,CAAA,CAAC,EAAE,EAAE,EAAE,EAAE,EACnf,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAE,CAAA,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,CAAC,CAAC,GAAG,CAAE,CAAA,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,CAAC,CAAC,GAAG,CAAE,CAAA,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,CAAE,EAAE,UAAU,WAAW,IAAoB,EAAhB,EAAE,IAAI,CAAC,QAAQ,CAA2J,OAAxqBAAqB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAC3S,OAD4S,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CACrf,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAQ,CAAC,EAAE,YAAoC,WAAW,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,QAAQ,IAAI,CAAC,wGAAwG,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAK,YAAY,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAA+B,OAA9B,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAQ,IAAI,AAAA,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EACzf,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CACgpfoC,GAAlC,CAAA,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,AAAH,EAAa,CAAC,GAAG,EAAE,MAAM,MAAM,qEAC3V,OADga,QAAQ,IAAI,CAAC,qEAC7b,IAAI,CAAC,QAAQ,GAAU,IAAI,AAAA,CAA0B,OAAzB,IAAI,CAAC,cAAc,CAAC,EAAE,GAAU,IAAI,AAAA,EAAE,UAAU,SAAS,CAAC,EAAE,QAAQ,KAAK,CAAC,gDAAgD,EAAE,QAAQ,SAAS,CAAC,EAAE,QAAQ,KAAK,CAAC,8CAA8C,EAAE,QAAQ,SAAS,CAAC,EAAE,QAAQ,KAAK,CAAC,8CAA8C,EAAE,QAAQ,SAAS,CAAC,EAAE,QAAQ,KAAK,CAAC,8CAA8C,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,KAAK,CAAC,mDAAmD,EAAE,MAAM,SAAS,CAAC,EAAE,IAAI,EAClgB,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAyG,OAAxG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAS,IAAI,AAAA,EAAE,kBAAkB,WAAW,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,gBAAgB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAA4C,OAA1C,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAU,IAAI,AAAA,EAAE,cAAc,SAAS,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,GAC1b,OAD6b,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EACpf,EAAE,EAAE,EAAE,GAAU,IAAI,AAAA,EAAE,cAAc,SAAS,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,GAA4D,OAAzD,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAU,IAAI,AAAA,EAAE,cAAc,SAAS,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,GAA4D,OAAzD,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAU,IAAI,AAAA,EAAE,iBAAiB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAA8F,OAA5F,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAU,IAAI,AAAA,EAAE,UAAU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EACzc,OAD2c,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EACnf,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAU,IAAI,AAAA,EAAE,QAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAuE,OAArE,IAAI,CAAC,0BAA0B,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAU,IAAI,AAAA,EAAE,UAAoC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,EAAG,CAAA,EAAE,IAAI,CAAC,WAAW,IAAK,CAAA,EAAE,CAAC,CAAA,EAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EACjT,OADmT,EAAE,QAAQ,CAAC,EAAE,EACxf,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,qBAAqB,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAS,IAAI,AAAA,EAAK,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAkL,OAAjL,CAAC,CAAC,EAAE,CAAC,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAE,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAS,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACxd,IAAI,EAAE,CADod,CAAA,EAAE,EAAE,KAAK,GAAG,CAAC,GAAM,IAAI,CAAC,QAAQ,CAAC,GAC/f,GAD8d,EACjd,OAAO,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,iBAAiB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA0J,OAAxJ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAE,CAAA,AAAC,CAAA,EAAE,CAAA,EAAG,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAE,CAAA,AAAC,CAAA,EAAE,CAAA,EAAG,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAE,CAAA,AAAC,CAAA,EAAE,CAAA,EAAG,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAS,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,EAAuB,OAArB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,QAAQ,WAAW,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAC9f,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,AAAA,CAAC,EAAE,GAAM,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,AAAA,EACpM,GAAM,GAAG,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAA6C,OAA3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAU,IAAI,AAAA,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAA8D,OAA5D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS,EAAS,IAAI,AAAA,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,MAAM,AAAC,CAAA,GAAG,IAAI,GAAM,OAAM,AAAN,EAAS,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAA,EAAsB,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAiC,OAA/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAW,IAAI,AAAA,GAAK,oBAAoB,SAAS,CAAC,CAC1f,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,gBAAgB,SAAS,CAAC,EAAE,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,iBAAA,EAAiC,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,SAAE,AAAG,EAAE,EAAS,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAG,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,EAAS,EAAE,iBAAiB,CAAC,GAAE,GAC7f,mBAAA,EAAmC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAuH,EAAnH,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,QAAQ,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,GACsE,OADjE,EAAE,EAAG,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAG,CAAA,AAAM,GAAN,EAAE,EAAE,EAAO,GAAG,EAAE,EAAE,EAAG,CAAA,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,EAAG,CAAA,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,CAAA,EAA+B,EAAE,CAAzB,CAAA,EAAE,KAAK,GAAG,CAAC,EAAE,CAAE,CAAA,EAAnB,CAAA,EAAE,CAAA,EAAqB,CAAA,EAAA,EAAS,EAAE,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,EACvd,EAAE,CAD8d,CAAA,EAAE,KAAK,GAAG,CAAC,EAAE,CAAE,CAAA,EAApB,CAAA,EAAE,CAAC,CAAA,EAAqB,CAAA,EAAA,EAC9e,EAAE,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,EAAG,GAAG,CAAC,EAAG,CAAA,AAAwB,EAAE,EAA1B,CAAA,EAAE,KAAK,GAAG,CAAC,EAAE,CAAE,CAAA,CAAC,EAAE,EAAE,CAAA,EAAA,EAAU,CAAC,EAAE,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAA,EAAG,GAAG,EAAG,CAAA,EAAE,EAAgC,EAAE,AAAhC,CAAA,EAAE,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAA,EAAQ,CAAA,EAAE,EAAE,CAAA,EAAG,CAAA,EAAI,CAAA,AAAuB,EAAE,EAAzB,CAAA,EAAE,KAAK,GAAG,CAAC,EAAE,CAAE,CAAA,EAAE,EAAE,CAAA,EAAA,EAAU,EAAE,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAA,CAAA,EAAK,CAAA,EAAE,EAAE,EAAE,CAAC,EAAE,EAAyB,EAAE,CAAzB,CAAA,EAAE,KAAK,GAAG,CAAC,EAAE,CAAE,CAAA,EAAE,EAAE,CAAA,EAAA,EAAS,EAAE,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAA,EAAG,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC,GAAU,CAAC,GAAK,qBAAqB,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,MAAM,GAAG,EAAE,MAAM,AAAA,EAAE,eAAA,EAA+B,EAC5gB,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,MAAM,QAAC,AAAG,EAAE,EAAS,MAAsB,EAAE,EAAnB,CAAA,EAAE,KAAK,IAAI,CAAC,EAAE,EAAd,EAAuB,GAAG,EAAS,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,GAAE,GAAK,oBAAoB,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,QAAO,CAAA,IAAI,GAAG,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAA,CAAO,EAAE,gBAAgB,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,SAAE,AAAG,IAAI,EAAS,IAAI,EAAE,eAAe,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,KACzc,GAD8c,CAAA,EAAE,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,EAC/f,EAAE,QAAO,AAAP,EAAU,CAAA,EAAc,EAAE,IAAI,EAAE,eAAe,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,OAAO,OAAO,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,iBAAA,EAAiC,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,OAAO,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,GAAK,aAAa,SAAS,CAAC,CAAC,CAAC,EAAgB,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAzE,EAAE,EAAE,EAAE,EAAE,EAAqE,EAAE,IAAI,CAAC,MAAM,OACrW,CADsW,GAAG,EAAG,CAAA,EAAG,AAAA,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAI,CAAA,EAAG,AAAA,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,GAAG,EAAG,CAAA,EAAG,AAAA,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAI,CAAA,EAAG,AAAA,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAC3f,EAAE,CAAA,AAAA,EAAM,EAAE,GAAG,EAAE,GAAS,MAAQ,CAAA,EAAE,GAAG,GAAI,CAAA,GAAE,CAAA,EAAE,CAAA,EAAK,CAAA,EAAE,GAAG,GAAI,CAAA,GAAE,CAAA,EAAE,CAAA,EAAE,GAAG,EAAG,CAAA,EAAG,AAAA,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAI,CAAA,EAAG,AAAA,CAAA,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,EAAM,EAAE,GAAG,EAAE,GAAS,MAAQ,CAAA,EAAE,GAAG,GAAI,CAAA,GAAE,CAAA,EAAE,CAAA,EAAK,CAAA,EAAE,GAAG,GAAI,CAAA,GAAE,CAAA,EAAE,CAAA,EAAS,EAAE,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,GAAE,EAAE,iBAAA,EAAiC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAkF,GAAhF,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,GAA8B,EAA3B,CAAA,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAArB,EAA+B,CAAC,GAAG,EAAE,OAAO,KAAK,EAAE,CAAC,MAAM,IAAG,CAAA,EAAE,CAAA,EACte,OAAO,IADie,CAAA,EAAE,GACpf,EAAE,CAAC,QAA2F,CAAxE,EAAE,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,GAAkD,EAA/C,CAAA,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,EAAE,GAAxC,GAAqG,EAAtC,CAAA,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,GAA/B,GAA2C,EAAE,EAAE,GAApD,KAAuF,EAArB,CAAA,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAX,EAAyB,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAK,aAAa,SAAS,CAAC,EAAyI,OAAvI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,GAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EACve,GAAM,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,EAChG,GAAM,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,MAAM,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAoC,OAAlC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAS,IAAI,AAAA,EAAE,aAAA,EAA6B,EAAE,IAAI,GAAM,IAAI,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,AAAC,MAAK,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,GAAG,MAAM,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC,CAAC,EAAE,GAA4B,OAAzB,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,GAAU,IAAI,AAAA,GAAK,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAAkD,OAAhD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAQ,IAAI,AAAA,EACnf,MAAM,WAAW,OAAO,GAAG,IAAI,CAAC,MAAM,AAAA,EAAE,cAAc,SAAS,CAAC,EAAE,OAAO,EAAE,iBAAiB,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,AAAA,EAAE,gBAAgB,SAAS,CAAC,EAAE,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,AAAA,EAAE,iBAAiB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,IAAI,GAAM,OAAO,CACjZ,OADkZ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAG,CAAA,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,GAAG,EAAE,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAA,EAC7f,CAAC,EAAE,eAAe,SAAS,CAAC,EAAmF,MAA7D,AAApB,CAAA,EAAE,GAAG,IAAI,GAAM,IAAI,AAAJ,EAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,cAAc,CAAC,IAAI,CAAC,MAAM,EAAS,CAAC,EAAE,aAAa,SAAS,CAAC,EAAiE,OAA/D,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,iBAAiB,GAAU,IAAI,AAAA,EAAE,UAAU,SAAS,CAAC,EAAqB,OAAnB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,AAAA,CAAC,EAC1W,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,KAAK,CAAC,AAAA,EAC/N,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,OAAO,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAA+E,OAA9E,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAU,IAAI,AAAA,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,IAAI,AAAA,EAAE,cAAc,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CACrf,EAAE,CAAC,CAAC,GAAG,CAAiS,OAAhS,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,SAAS,GAAU,IAAI,AAAA,EAAE,gBAAA,EAAgC,EAAE,IAAI,GAAM,MAAM,CAAQ,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,QAAQ,CAC3Y,OAD4Y,OAAO,EAAE,cAAc,EAAE,EAAE,qBAAqB,GAAG,EAAE,IAAI,CAAC,EAAE,cAAc,EAAE,EAAE,YAAY,CAAC,EAAE,WAAW,EAC7e,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAK,iBAAiB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,aAAA,EAA6B,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,CAAA,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CACzf,IAAI,EAAE,EAAE,eAAe,CAAC,GAAG,EAAE,EAAE,eAAe,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAK,cAAc,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,EACzS,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,KAAK,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAsC,OAApC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAS,IAAI,AAAA,EAAE,cAAc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAyC,OAAvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAS,IAAI,AAAA,EAAE,8BAA8B,SAAS,CAAC,CAAC,CAAC,EAAwD,OAAtD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,EAAS,IAAI,AAAA,EAAE,qBAAA,EAAqC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EACpZ,OADsZ,EAAE,GAAE,UAAU,CAAC,EAAE,GAAG,KAAK,CAAC,GAAE,UAAU,CAAC,EAAE,IAAI,SAAS,GAAG,IAAI,CAAC,6BAA6B,CAAC,EACrf,GAAU,IAAI,AAAA,GAAK,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAAsD,OAApD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAQ,IAAI,AAAA,EAAE,UAAU,WAAW,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAkD,OAA/C,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAS,IAAI,AAAA,EAAE,OAAO,WAAkD,OAAvC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAU,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,AAAA,EAAE,iBAAiB,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,AAAA,EAAE,aAAa,SAAS,CAAC,CAC5f,CAAC,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAO,AAAP,EAAS,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC,EAAE,EAAE,mBAAmB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,KAAK,EAAgC,OAA9B,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,GAAG,EAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,aAAA,EAA6B,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,IAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAG,AAAG,IAAI,EACnY,EAD8c,CAAA,EAC1f,CAAE,CAAA,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,AAAR,EAAU,CAAA,GAAO,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,CAAC,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,EADkV,IAAI,IAAI,CAAC,eAAe,CAAC,EAAE,KAAK,EAAS,EAAE,IAAI,CAAC,EAAE,KAAK,QACxY,GAAK,cAAc,SAAS,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,OAAM,AAAN,EAAS,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,YAAA,EAA4B,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,GAAE,eAAe,CAAC,GAAG,EAAE,GAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,IAA6D,OAA1D,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,6BAA6B,CAAC,EAAE,GAAU,IAAI,AAAA,GAAK,UAAU,SAAS,CAAC,EACte,OADwe,IAAI,CAAC,QAAQ,EACxgB,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,EAAS,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,AAAA,CAAC,EACnH,GAAM,IAAI,CAAC,CAAC,YAAA,EAA4B,GAAE,iEAAiE,KAAK,CAAC,IAAI,GAAE,MAAM,IAAI,GAAE,EAAW,WAAW,IAAI,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,EAAC,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,EAAC,CAAC,EAAE,CAAC,IAAK,CAAA,GAAG,IAAI,CAAA,GAAE,SAAS,SAAS,KAAK,MAAM,GAAG,CAAA,EAAG,GAAE,AAAE,GAAF,GAAK,KAAI,EAAE,EAAC,CAAC,EAAE,CAAC,EAAC,CAAC,KAAK,EAAE,AAAE,EAAF,GAAI,EAAE,GAAC,AAAD,EAAI,OAAO,GAAE,IAAI,CAAC,GAAG,GAAK,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,YAAY,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,gBAAgB,SAAS,CAAC,CAAC,CAAC,EAAE,MAAO,AAAA,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,EAAE,UAAU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EACtf,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,CAAE,EAAE,WAAW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,SAAE,AAAG,GAAG,EAAS,EAAK,GAAG,EAAS,EAAuB,AAArB,CAAA,EAAG,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,CAAA,EAAY,EAAG,CAAA,EAAE,EAAE,CAAA,CAAE,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,SAAE,AAAG,GAAG,EAAS,EAAK,GAAG,EAAS,EAAuB,AAArB,CAAA,EAAG,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,CAAA,EAAY,EAAE,EAAG,CAAA,EAAG,CAAA,EAAE,EAAE,EAAA,EAAI,EAAA,CAAG,EAAE,SAAS,WAAW,MAAM,AAAC,CAAA,MAAM,KAAK,MAAM,GAAG,IAAI,KAAK,MAAM,EAAA,EAAI,KAAK,EAAE,QAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,GAAI,CAAA,EAAE,EAAE,CAAA,EAAG,EAAE,UAAU,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,MAAM,GAAI,CAAA,EAAE,CAAA,CAAE,EAAE,gBAAgB,SAAS,CAAC,EAAE,OAAO,EAAG,CAAA,GAAG,KAAK,MAAM,EAAA,CAAG,EAAE,QAAA,EAAwB,GAAE,KAAK,EAAE,CACxf,IAAW,SAAS,CAAC,EAAE,OAAO,EAAE,EAAC,GAAK,QAAA,EAAwB,GAAE,IAAI,KAAK,EAAE,CAAQ,SAAS,CAAC,EAAE,OAAO,EAAE,EAAC,GAAK,aAAa,SAAS,CAAC,EAAE,OAAO,GAAK,CAAA,EAAE,EAAE,CAAA,GAAI,IAAI,CAAC,EAAE,eAAe,SAAS,CAAC,EAAmD,OAAjD,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,KAAc,CAAC,CAAC,EACvP,GAAM,MAAM,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAwB,OAAtB,EAAE,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,GAAI,CAAA,EAAE,CAAA,EAAS,AAAC,CAAA,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,CAAA,EAAG,EAAG,AAAA,CAAA,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAyB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAArC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAoB,CAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,AAAA,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAC7I,OAD0K,EAAE,KAAK,KAAK,CAAvC,EAAE,AAAC,CAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,EAAG,GAAkB,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EACnfqBAAqB,CAAC,WAAW,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,EAAkE,IAAhE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAI,CAAA,EAAE,GAAA,EAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EACnf,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAkB,AAAhB,CAAA,EAAE,KAAK,KAAK,CAAC,EAAA,IAAO,GAAI,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA,EAAiB,OAAd,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAQ,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,GAA0C,IAAvC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,IAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAgH,IAAnF,EAAE,KAAK,IAAI,CAAC,EAAxC,CAAA,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,AAAF,EAAmB,EAAE,KAAK,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAI,CAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,EAAG,EAAE,EAAG,CAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA,EAAO,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAClf,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,OAAO,AAAA,EAAE,GAAM,QAAQ,CAAC,MAAM,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAuF,MAA9D,AAAvB,CAAA,EAAE,GAAG,IAAI,GAAM,OAAO,AAAP,EAAU,UAAU,CAAC,EAAE,GAAG,GAAE,UAAU,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,IAAyB,EAAtB,CAAA,EAAE,EAAE,QAAQ,EAAZ,EAA0B,EAAE,cAAc,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,GAClc,GAAM,QAAQ,CAAC,kBAAkB,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAE,UAAU,CAAC,EAAE,GAAG,GAAE,UAAU,CAAC,EAAE,GAAG,GAAE,UAAU,CAAC,EAAE,GAAG,EAAE,GAAE,GAAG,CAAC,IAAG,EAAE,GAAE,GAAG,CAAC,IAAG,EAAE,GAAE,GAAG,CAAC,IAAG,IAAI,EAAE,GAAE,GAAG,CAAC,IAAG,EAAE,GAAE,GAAG,CAAC,IAAG,IAAI,EAAE,EAAE,EAAE,EAAE,QAAyB,CAAvB,EAAE,GAAG,IAAI,GAAM,OAAO,CAAI,IAAI,GAAS,EAAE,GAAG,CAAC,GAAG,GAAG,KAAU,EAAG,AAAA,CAAA,EAAE,EAAE,EAAE,CAAA,EAAf,CAAA,EAAE,EAAE,CAAA,EAAgB,EAAG,AAAA,CAAA,EAAE,EAAE,EAAE,CAAA,EAAG,EAAS,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAE,GACvX,GAAM,QAAQ,CAAC,aAAa,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAiD,OAAO,GAAG,AAAzD,CAAA,EAAE,GAAM,QAAQ,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,GAA5C,EAA2D,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,AAAA,GACzK,GAAM,QAAQ,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,QAAQ,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAA+C,OAA7C,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAU,IAAI,AAAA,EAAE,wBAAwB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAwD,OAAtD,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAS,IAAI,AAAA,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAAqD,OAAnD,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,IAAA,EAAoB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,WACtb,OADic,GAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CACxf,IAAI,CAAC,CAAC,EAAQ,GAAG,GAAE,KAAK,CAAC,IAAG,MAAM,EAAE,GAAK,SAAS,SAAS,CAAC,EAAE,MAAM,AAAC,CAAA,GAAG,IAAI,GAAM,OAAO,AAAP,EAAS,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,cAAc,CAAC,EAAE,EAAE,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,GAAM,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE,MAAO,AAAA,CAAA,GAAG,IAAI,GAAM,KAAI,AAAJ,EAAO,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,mBAAmB,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,GAAM,QAAQ,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,cAAc,SAAS,CAAC,EAAE,OAAO,GAAM,QAAQ,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EACnf,OAAO,SAAS,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,GAAE,EAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAC5M,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,KAAK,CAAC,MAAM,WAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,KAAK,WAAW,EAAE,KAAK,IAAI,KAAK,WAAW,CAAC,GAAG,CAAC,KAAK,WAAW,CAAC,GAAG,GAAG,KAAK,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,WAAW,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,eAAe,WAA2B,OAAhB,IAAI,CAAC,QAAQ,GAAU,IAAI,CAAC,WAAW,AAAA,EAAE,SAAS,WAAW,IAAI,EAAE,EAA8C,GAA5C,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,GAAM,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,KAAK,WAAW,EAAE,KAAK,IAAI,KAAK,WAAW,CAAC,GAAG,CAAC,KAAK,WAAW,CAAC,GAAG,GAAG,KAAK,GAAG,GACzf,EAAE,KAAM,CAAA,EAAE,IAAI,CAAC,OAAO,AAAP,CAAS,CAAA,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,GAAM,eAAe,CAAC,WAAW,EACvG,GAAM,eAAe,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,eAAe,CAAC,MAAM,SAAS,CAAC,EAAE,EAAE,gBAAgB,CAAC,GAAM,eAAe,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,GAAM,eAAe,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,mBAAmB,CAAC,GAAM,eAAe,CAAC,SAAS,CAAC,mBAAmB,CAAC,EAAE,aAAa,CAAC,GAAM,eAAe,CAAC,SAAS,CAAC,aAAa,AAAA,EAAE,iBAAiB,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,IAAI,CAAC,UAAU,EAAG,CAAA,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,EAAG,IAAI,EAAE,IAAI,CAAC,UAAU,AAAC,MAAK,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,CAAC,CAAC,EAAE,CAAC,EAAC,AAAD,EAAI,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IACrf,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,iBAAiB,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAQ,EAAE,oBAAoB,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,KAAK,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,EAAG,CAAA,KAAK,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,cAAc,SAAS,CAAC,EAAE,GAAG,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAChf,AAAA,SAAS,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE,QAAQ,AAAA,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAS,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,IAAI,WAAiG,OAAtF,QAAQ,IAAI,CAAC,yEAAgF,IAAI,CAAC,MAAM,AAAA,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,GAAG,CAAC,IAAI,CAAA,EAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAC5f,EAAE,EAAE,CAAC,EAAE,CAAC,CAAE,CAAA,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,SAAS,CAAC,cAAc,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,cAAc,SAAS,CAAC,CAAC,CAAC,EAAE,aAAa,EAAE,iBAAiB,CAAE,CAAA,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,SAAS,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,EAAA,EAAI,aAAa,EAAE,kBAAkB,CAAE,CAAA,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,SAAS,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,kBAAkB,CAAC,EAAE,WAAW,CAAA,EAAG,QAAQ,KAAK,CAAC,4CAA4C,EAC/f,gBAAgB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAyB,OAAxB,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAU,CAAC,EAAE,iBAAiB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,MAAM,OAAO,CAAC,GAAG,OAAO,QAAQ,IAAI,CAAC,8DAA8D,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,GAAa,OAAV,EAAE,IAAI,CAAC,GAAU,CAAC,CAAC,CAAC,EAAG,IACrS,GAAM,QAAQ,CAAC,WAAW,OAAO,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAM,eAAe,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAM,QAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,KAAK,CAAC,EAAE,IAAI,GAAM,UAAU,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC,WAAW,EAAE,YAAY,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,WAAW,EAAE,iBAAiB,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,EAAE,SAAS,CAAC,WAAW,CAAC,EACngB,MAAM,CAAC,EAAE,WAAW,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,EAAE,gBAAgB,CAAC,MAAM,IAAI,GAAM,OAAO,AAAA,EAAE,aAAa,CAAC,MAAM,IAAI,GAAM,OAAO,AAAA,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAM,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EACpc,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,GAAM,QAAQ,CAAC,uBAAuB,CAAC,CAAC,EAC1F,GAAM,QAAQ,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,QAAQ,CAAC,IAAI,YAAY,CAAgF,OAA/E,QAAQ,IAAI,CAAC,kEAAyE,IAAI,CAAC,QAAQ,CAAC,KAAK,AAAA,EAAE,IAAI,WAAW,EAAE,CAAC,QAAQ,IAAI,CAAC,kEAAkE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,eAAe,CAAC,QAAQ,IAAI,CAAC,gGAAgG,EAAE,IAAI,cAAc,EAAE,CAAC,QAAQ,IAAI,CAAC,gGAAgG,EAC9iB,IAAI,YAAY,EAAE,CAAC,QAAQ,IAAI,CAAC,4EAA4E,EAAE,YAAY,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,yBAAyB,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,qBAAqB,SAAS,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,EAAE,sBAAsB,SAAS,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAE,EAAE,0BAA0B,SAAS,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAC/gB,YAAA,EAA4B,GAAE,IAAI,GAAM,UAAU,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAsD,OAApD,GAAE,gBAAgB,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAU,IAAI,AAAA,GAAK,OAAA,EAAuB,GAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAU,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAE,EAAE,GAAK,OAAA,EAAuB,GAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAU,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAE,EAAE,GAAK,OAAA,EAAuB,GAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAU,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAE,EAAE,GAAK,eAAA,EAA+B,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CACrgB,CAAC,EAAoF,OAAlF,GAAE,IAAI,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAE,cAAc,CAAC,IAAW,IAAI,AAAA,GAAK,UAAU,SAAS,CAAC,CAAC,CAAC,EAAiH,OAA/G,QAAQ,IAAI,CAAC,kGAAyG,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,UAAA,EAA0B,GAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAU,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,eAAe,CAAC,GAAE,EAAE,GAAK,UAAA,EAA0B,GAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAU,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,eAAe,CAAC,GAAE,EAAE,GAAK,UAAA,EAA0B,GAClgB,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAU,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,eAAe,CAAC,GAAE,EAAE,GAAK,aAAa,SAAS,CAAC,EAAE,OAAO,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,YAAA,EAA4B,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,OAAO,EAAE,YAAY,CAAC,GAAE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,GAAK,MAAA,EAAsB,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,GAAE,MAAM,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,GAAE,GAAK,IAAI,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,MAAM,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,UAAU,MAAM,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,EAC3f,OAAO,IAAI,AAAA,QAAI,IAAI,IAAI,CAAQ,QAAQ,KAAK,CAAC,kEAAkE,GAAQ,aAAa,GAAM,QAAQ,CAAE,CAAA,OAAO,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,CAAC,KAAK,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAA,EAAI,QAAQ,KAAK,CAAC,gEAAgE,GAAU,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,UAAU,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAA6B,CAAA,KAA3B,CAAA,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAxB,GAAoC,CAAA,EAAE,MAAM,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,KAAK,SAAS,GAClhB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAA,CAAG,EAAE,eAAe,SAAS,CAAC,EAA4F,OAA1F,QAAQ,IAAI,CAAC,6EAAoF,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,cAAc,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,EAAE,gBAAgB,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,oBAAoB,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,mBAAmB,CAAC,EAAE,GAAG,GAAG,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC,EAAE,iBAAiB,SAAS,CAAC,EACxd,OAD0d,EAC1gB,GAAG,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAU,EAAE,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,kBAAA,EAAkC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAyF,OAAvF,EAAE,GAAG,IAAI,GAAM,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAE,EAAE,IAAU,CAAC,GAAK,gBAAA,EAAgC,GAAE,IAAI,GAAM,UAAU,CAAQ,SAAS,CAAC,EAAkD,OAAhD,EAAE,GAAG,IAAI,GAAM,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAU,EAAE,iBAAiB,CAAC,GAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,GAAK,aAAA,EAA6B,GACnf,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,UAAU,CAAQ,SAAS,CAAC,EAAsF,OAApF,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAE,GAAE,GAAU,CAAC,GAAK,iBAAA,EAAiC,GAAE,IAAI,GAAM,UAAU,CAAQ,SAAS,CAAC,EAAoD,OAAlD,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAU,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,GAAE,GAAK,QAAQ,WAAW,EAAE,SAAS,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,gBAAgB,SAAS,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,IAAI,EAC1f,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,EAAE,kBAAkB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,AAAC,QAAO,GAAI,CAAA,EAAE,GAAG,EAAE,iBAAiB,CAAC,EAAA,CAAG,EAAE,aAAa,WAAW,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,kBAAkB,SAAS,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,GAAM,CAAA,CAAC,IAAI,IAAI,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAA,GAAE,CAAA,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CACvf,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE,EAAE,OAAO,SAAS,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAS,EAAL,EAAE,EAAE,CAAG,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,QAAO,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,EACtK,GADwK,GAAI,CAAA,EAAE,CAAC,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,QAAQ,IAAI,KAAK,SAAS,UAAU,iBAAiB,CAAA,EAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAG,AAAH,EAAM,OAAO,KAAK,SAAS,CAAC,IAAI,CAAC,QAAQ,GAClf,CAAA,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,AAAR,EAAU,CAAC,IAAI,IAAI,CAAC,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,AAAP,EAAS,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAoL,OAAnL,GAAI,CAAA,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAG,CAAA,EAAE,UAAU,CAAC,CAAA,EAAG,EAAE,EAAE,MAAM,EAAG,CAAA,EAAE,SAAS,CAAC,CAAA,EAAG,EAAE,EAAE,MAAM,EAAG,CAAA,EAAE,QAAQ,CAAC,CAAA,EAAG,EAAE,EAAE,MAAM,EAAG,CAAA,EAAE,MAAM,CAAC,CAAA,CAAA,EAAW,CAAC,EAAE,MAAM,SAAS,CAAC,EAAE,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAW,AAAX,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAE7c,GAF+c,KAAK,IAC3f,GAAI,CAAA,EAAE,CAAC,CAAA,EAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,sBAAsB,CAAC,EAAE,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAC1f,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,EAAE,QAAQ,GAAM,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,KAAK,IAAI,OAAO,IAAI,AAAA,CAAC,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,eAAe,CAAC,EACzN,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAM,KAAK,CAAC,EAAE,IAAI,GAAM,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,EAChS,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,KAAK,CAAC,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,KAAK,GAAO,IAAJ,EAAE,EAAM,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,EAAE,CAAC,KAAK,GAAG,OAAO,IAAI,AAAA,CAAC,EACnb,GAAM,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAuF,OAArF,QAAQ,IAAI,CAAC,wEAA+E,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EACtU,GAAM,eAAe,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,eAAe,CAAC,IAAI,QAAQ,CAAwF,OAAvF,QAAQ,IAAI,CAAC,0EAAiF,IAAI,CAAC,KAAK,CAAC,MAAM,AAAA,EAAE,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,AAAA,EAAE,IAAI,YAAY,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,WAAW,SAAS,CAAC,EAAiB,OAAf,IAAI,CAAC,OAAO,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAA8F,OAA5F,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAQ,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CACpf,GAAG,EAAE,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,OAAO,IAAI,AAAA,EAAE,UAAU,SAAS,CAAC,EAAoB,OAAlB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAU,IAAI,AAAA,EAAE,gBAAgB,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,MAAK,IAAI,GAAI,CAAA,QAAQ,IAAI,CAAC,8DAA8D,GAAG,EAAE,IAAI,GAAM,KAAK,AAAL,EAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,AAAA,CAAC,OAAO,IAAI,AAAA,EAAE,iBAAiB,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAC1f,EAAE,CAAC,AAAA,CAAC,OAAO,IAAI,AAAA,EAAE,kBAAkB,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,MAAK,IAAI,GAAI,CAAA,QAAQ,IAAI,CAAC,iEAAiE,GAAG,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,AAAA,CAAC,OAAO,IAAI,AAAA,EAAE,kBAAkB,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,MAAK,IAAI,GAAI,CAAA,QAAQ,IAAI,CAAC,iEAAiE,GAAG,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,AAAA,CAAC,OAAO,IAAI,AAAA,EAC1f,kBAAkB,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,MAAK,IAAI,GAAI,CAAA,QAAQ,IAAI,CAAC,iEAAiE,GAAG,EAAE,IAAI,GAAM,OAAO,AAAP,EAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,AAAA,CAAC,OAAO,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,EAAwC,OAAtC,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAU,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAgC,OAA9B,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,AAAA,EACnf,KAAK,SAAS,CAAC,CAAC,CAAC,EAAkC,OAAhC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAkC,OAAhC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAkC,OAAhC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAuD,OAArD,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAyE,OAAvE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,QAAQ,SAAS,CAAC,CACrgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAA2F,OAAzF,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,GAAM,eAAe,CAAC,IAAI,UAAU,GAAG,EAAE,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,GAAM,eAAe,CAAC,IAAI,WAAW,GAAG,EAAE,EAAE,GAAM,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,GAAM,eAAe,CAAC,IAAI,kBAAkB,GAAG,EAAE,EAClc,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,GAAM,eAAe,CAAC,IAAI,WAAW,GAAG,EAAE,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,GAAM,eAAe,CAAC,IAAI,YAAY,GAAG,EAAE,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,GAAM,eAAe,CAAC,IAAI,WAAW,GAAG,EAAE,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,GAAM,eAAe,CAAC,IAAI,YAAY,GAAG,EAAE,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,GAAM,eAAe,CAAC,IAAI,aAAa,GAAG,EAAE,EACxc,GAAM,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,GAAM,eAAe,CAAC,IAAI,aAAa,GAAG,EAAE,EAAE,GAAM,sBAAsB,CAAC,SAAS,CAAC,CAAC,CAAC,EAA6H,OAA3H,QAAQ,IAAI,CAAC,8GAAoH,IAAK,GAAM,eAAe,CAAC,EAAE,GAAI,UAAU,CAAC,CAAC,EAAE,EAAE,GAAM,wBAAwB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,GAAM,wBAAwB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,eAAe,CAAC,SAAS,EACjgB,GAAM,wBAAwB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,wBAAwB,CAAC,GAAM,wBAAwB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAA6F,OAA3F,GAAM,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAQ,IAAI,AAAA,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAC9Z,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,iBAAiB,CAAC,IAAI,QAAQ,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,AAAA,EAAE,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,AAAA,EAAE,IAAI,YAAY,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,WAAW,SAAS,CAAC,EAAiB,OAAf,IAAI,CAAC,OAAO,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,AAAA,EAAE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,OAAO,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,CACpf,CAAC,EAAwC,OAAtC,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAU,IAAI,AAAA,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAM,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,GAAM,0BAA0B,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,iBAAiB,CAAC,SAAS,EAAE,GAAM,0BAA0B,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,0BAA0B,CACxZ,GAAM,0BAA0B,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAA+F,OAA7F,GAAM,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAQ,IAAI,AAAA,EAAE,GAAM,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,EACpS,GAAM,0BAA0B,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,0BAA0B,CAAC,IAAI,QAAQ,CAAwF,OAAvF,QAAQ,IAAI,CAAC,0EAAiF,IAAI,CAAC,KAAK,CAAC,MAAM,AAAA,EAAE,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAoD,OAAlD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAsD,OAApD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EACrc,OADuc,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAC1f,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAsD,OAApD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,KAAK,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,AAAA,EAAE,KAAK,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,AAAA,EAAE,KAAK,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,AAAA,EAAE,KAAK,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,AAAA,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EACpa,OADsa,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAC5e,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAwG,OAAtG,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAS,IAAI,AAAA,EAAE,QAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAA+H,OAA7H,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAS,IAAI,AAAA,CAAC,EAC9T,GAAM,QAAQ,CAAC,WAAW,OAAO,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAM,eAAe,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAC/f,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAClD,GAAM,QAAQ,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,QAAQ,CAAC,YAAY,SAAS,CAAC,EAAE,IAAI,IAAI,EAAG,AAAA,CAAA,IAAI,GAAM,OAAO,AAAP,EAAS,eAAe,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,CAAC,GAAO,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAiB,AAAhB,CAAA,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,AAAF,EAAK,MAAM,CAAC,YAAY,CAAC,GAAG,SAAS,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,aAAa,CAAC,EAAE,CAAC,YAAY,CAAC,GAAG,SAAS,EAAE,CAAC,OAAO,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,GAAG,OAAO,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,iBAAiB,CAC1f,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,QAAgC,SAAS,CAAC,EAA2E,OAAzE,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,OAAO,AAAP,EAAS,GAAE,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAU,IAAI,AAAA,EAAK,QAAgC,SAAS,CAAC,EAA2E,OAAzE,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,OAAO,AAAP,EAAS,GAAE,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAU,IAAI,AAAA,EAAK,QAAgC,SAAS,CAAC,EAA2E,OAAzE,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,OAAO,AAAP,EAAS,GAAE,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAU,IAAI,AAAA,EAAK,UAAkC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9a,OADgb,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,OAAO,AAAP,EACtf,GAAE,eAAe,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAU,IAAI,AAAA,EAAK,MAA8B,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAA2E,OAAzE,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,OAAO,AAAP,EAAS,GAAE,SAAS,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAU,IAAI,AAAA,EAAK,OAA+B,SAAS,CAAC,EAAE,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,QAAQ,AAAR,EAAU,GAAE,MAAM,CAAC,GAAG,GAAE,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,GAAE,MAAM,CAAC,EAAK,mBAAmB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,IAAI,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,IACjf,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAE,MAAK,IAAI,GAAI,CAAA,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAC,AAAD,EAAI,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,IAAI,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,IAAI,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,IAAI,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,IAAI,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,IACnf,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,GAAG,EAAE,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,KAAK,IAAI,GAAG,EAAE,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,EAAE,GAAG,KAAK,IAAI,GAAE,GAAc,EAAE,AAAb,CAAA,EAAE,EAAE,MAAM,AAAN,EAAW,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtf,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAoK,OAAjK,IAAI,CAAC,kBAAkB,GAAG,OAAO,EAAE,WAAW,EAAG,CAAA,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,KAAK,EAAA,EAAI,OAAO,EAAE,cAAc,EAAG,CAAA,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,KAAK,EAAA,EAAW,IAAI,AAAA,EAAE,OAAO,WAAW,IAAI,CAAC,kBAAkB,GAAG,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,MAAM,GAA+B,OAA5B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAS,CAAC,EAAE,UAAU,WAAW,IAAI,CAAC,qBAAqB,GAAG,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAM,OAAO,CAC/a,OADgb,EAAE,GAAG,CAAC,EACxf,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,GAAU,IAAI,AAAA,EAAE,mBAAmB,WAAW,IAAI,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,SAAS,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,qBAAqB,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAoC,IAAlC,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,EAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,GAAM,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EACpf,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAK,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,AAAgB,CAAC,CAAC,AAAlB,CAAA,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,AAAF,EAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAM,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,SAAS,GAAO,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAsC,IAAI,AAAtB,CAAA,EAAE,AAAlB,CAAA,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,AAAF,EAAO,aAAa,AAAb,EAAoB,MAAM,CACnf,CAAA,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,EAAI,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAA,CAAG,EAAE,oBAAoB,WAA6B,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,AAAgB,CAAhB,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,AAAF,EAAK,oBAAoB,CAAC,EAAE,oBAAoB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,oBAAoB,CAAC,EAAE,MAAM,CAAC,KAAK,GAAG,EAAE,uBAAuB,EAAG,CAAA,EAAE,uBAAuB,CAAC,EAAC,AAAD,EAAI,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,uBAAuB,CAAC,EAAE,CAAC,EAAE,uBAAuB,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,EAAE,uBAAuB,CAAC,EAAE,CAC/gB,EAAE,aAAa,CAAC,EAAE,CAAC,KAAK,GAAG,IAAI,EAAE,IAAI,GAAM,QAAQ,CAAwB,IAAvB,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,IADxH,EAAE,EAAE,EAAE,EAAE,EACyJ,EAAE,EAAvC,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAS,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,AAAA,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CACtZ,IADuZ,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAC1gB,EAAE,kBAAkB,GAAG,EAAE,oBAAoB,GAAG,EAAE,EAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,CAAK,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,AAAgB,CAAhB,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,AAAF,EAAK,MAAM,CAAC,EAAE,oBAAoB,CAAC,EAAE,aAAa,CAAC,EAAE,uBAAuB,AAAA,EAAE,gBAAgB,WAAW,QAAQ,IAAI,CAAC,uDAAuD,EAAE,qBAAqB,WAAW,IAAI,IAAI,EAC5f,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,GAAI,CAAA,GAAG,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAA,EAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,mBAAmB,WAAW,OAAO,IAAI,CAAC,WAAW,EAAG,CAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAM,IAAI,AAAJ,EAAM,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,sBAAsB,WAAW,OAAO,IAAI,CAAC,cAAc,EAAG,CAAA,IAAI,CAAC,cAAc,CAAC,IAAI,GAAM,MAAM,AAAN,EAAQ,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAI,aAAa,GAAM,QAAQ,CAAC,QAAQ,KAAK,CAAC,sEAC1c,OAAO,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,CAAC,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,KAAK,IAAI,GAAI,CAAA,EAAG,AAAA,CAAA,IAAI,GAAM,OAAO,AAAP,EAAS,eAAe,CAAC,EAAA,EAAI,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,EAAG,MAAK,IAAI,GAAG,EAAE,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAK,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAW,EAAP,EAAE,CAAC,CAAC,EAAE,CAAG,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,IAAI,GAAM,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAgF,IAA7E,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,IAAI,GAAG,EAAE,MAAM,CAAC,YAAY,CAAC,GAAG,SAAS,GAAG,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EACvf,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,KAAK,IAAI,GAAG,EAAE,YAAY,CAAC,GAAG,SAAS,GAAG,EAAE,aAAa,CAAC,IAAI,CAAC,GAA6B,IAA1B,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,GAAI,CAAA,EAAE,aAAa,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAK,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,IAAI,EAAE,CAAK,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,EAAE,CAAC,GAAI,aAAa,GAAM,IAAI,CAAC,QAAQ,KAAK,CAAC,kEAAkE,GAAI,CAAA,EAAE,gBAAgB,EAAE,EAAE,YAAY,GACtf,IAAI,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,MAAM,CAAA,CAAE,EAAE,cAAc,WAAW,IAAmB,EAAmB,EAAE,EAApC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAG,EAAE,IAAuB,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAuF,KAAK,IAAI,CAAC,CAA1E,EAAE,KAAK,KAAK,CAAC,AAAhC,CAAA,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,AAAF,EAAkB,CAAC,CAAC,GAAG,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,GAAgB,CAAE,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAU,IAAT,EAAE,EAAE,CAAC,EAAE,EAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,AAAgB,CAAhB,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,AAAF,EAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EACngB,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,GAAmD,OAAhD,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAS,CAAC,EAAE,OAAO,WAAW,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE,CAAE,CAAA,GAAG,CAAA,CAAE,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,QAAQ,UAAM,KAAK,IAAI,CAAC,CAAC,EAAE,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAvC,CAAC,CAAC,EAAE,AAAgD,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,QAAQ,UAAM,KAAK,IAAI,CAAC,CAAC,EAAE,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,MAAM,KAAlC,CAAC,CAAC,EAAE,AAA6C,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,QAAQ,GAC9f,EAAE,CAAC,CAAC,QAAQ,UAAM,KAAK,IAAI,CAAC,CAAC,EAAE,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAnC,CAAC,CAAC,EAAE,AAA4C,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,QAAQ,IAAI,KAAK,WAAW,UAAU,iBAAiB,CAAC,EAAuE,GAArE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAG,AAAH,EAAS,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,IAAsB,EAAlB,EAAE,IAAI,CAAC,UAAU,CAAG,IAAI,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,AAAF,EAAI,OAAO,CAAC,CAAM,IAAI,EAAE,EAAX,EAAE,EAAE,CAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAC3f,EAAE,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,MAAM,GAAG,EAAE,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAI,CAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAA,EAAI,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,GAAG,GAAI,CAAA,EAAE,EAAE,aAAa,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAA,EAAI,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,GAAI,CAAA,EAAE,EAAE,YAAY,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAA,CAAG,CAClY,OADmY,EAAE,IAAI,CACzf,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,MAAM,EAAG,CAAA,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA,EAAG,EAAE,EAAE,MAAM,EAAG,CAAA,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,AAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAS,CAAC,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAkB,IAAd,EAAE,EAAE,KAAK,CAAC,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAQ,IAAJ,EAAE,EAAM,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,EAAG,CAAA,IAAI,CAAC,aAAa,CAAC,EAAE,CACjgB,EAAE,AAAF,EAAI,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,AAAA,EAAE,QAAQ,WAAW,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,SAAS,EAAE,CAAC,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,eAAe,CAAC,EAChS,GAAM,cAAc,CAAC,WAAW,OAAO,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAM,eAAe,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAC5e,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,cAAc,CAAC,mBAAmB,GAAM,QAAQ,CAAC,SAAS,CAAC,kBAAkB,CAAC,sBAAsB,GAAM,QAAQ,CAAC,SAAS,CAAC,qBAAqB,CAAC,mBAAmB,WAAW,QAAQ,IAAI,CAAC,uFAAuF,EAAE,qBAAqB,WAAW,QAAQ,IAAI,CAAC,yFAAyF,EAAE,cAAc,SAAS,CAAC,EAAE,IAAI,EAC/e,EADif,EAAE,EAAE,CACnf,EAAE,EAAE,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,CAAA,EAAE,aAAa,GAAG,GAAI,CAAA,EAAE,EAAE,aAAa,CAAC,KAAK,IAAI,GAAI,CAAA,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,EAAA,EAAI,EAAE,CAAC,MAAM,EAAE,EAAE,cAAc,CAAC,CAAA,CAAE,CAAC,KAAK,IAAI,GAAI,CAAA,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,EAAA,EAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,aAAa,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,AAAC,CAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAC1f,EAAE,AAAC,CAAA,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,aAAa,CAC6E,IAD5E,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAG,CAAA,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,EAAA,EAAqB,IAAI,AAArB,CAAA,EAAE,EAAE,YAAY,AAAZ,EAAmB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAG,CAAA,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAA,EAAI,CAAC,IAAI,GAAc,CAAA,KAAK,IAAf,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,AAAF,EAAc,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAG,CAAA,QAAQ,IAAI,CAAC,2DACld,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAA,CAAA,EAAI,CAAC,IAAI,GAAc,CAAA,KAAK,IAAf,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,AAAF,EAAc,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAG,CAAA,QAAQ,IAAI,CAAC,4DAA4D,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAA,CAAA,EAAQ,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAA,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CACrf,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAoO,OAAnO,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAQ,IAAI,AAAA,EAAE,QAAQ,WAAW,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,SAAS,EAAE,CAAC,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,GAAM,cAAc,CAAC,SAAS,EACtX,GAAM,cAAc,CAAC,WAAW,OAAO,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAM,eAAe,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,MAAM,GAAQ,CAAC,EACxU,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,cAAc,CAAC,SAAS,SAAS,CAAC,EAAE,QAAQ,IAAI,CAAC,sEAAsE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,WAAW,OAAO,IAAI,CAAC,KAAK,AAAA,EAAE,SAAS,SAAS,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,aAAa,GAAM,eAAe,EAAE,CAAC,GAAI,aAAa,GAAM,0BAA0B,CAAE,CAAA,QAAQ,IAAI,CAAC,0EAA0E,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,GAAM,eAAe,CAAC,EACpgB,GAAA,EAAK,UAAU,EAAG,CAAA,QAAQ,IAAI,CAAC,2EAA2E,IAAI,CAAC,QAAQ,CAAC,EAAA,EAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,aAAa,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,AAAA,EAAE,gBAAgB,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE,AAAA,EAAE,IAAI,WAAW,CAAgF,OAA/E,QAAQ,KAAK,CAAC,iEAAwE,IAAI,CAAC,MAAM,AAAA,EAAE,IAAI,SAAS,CAA6E,OAA5E,QAAQ,IAAI,CAAC,+DAAsE,IAAI,CAAC,MAAM,AAAA,EAAE,YAAY,SAAS,CAAC,CACpf,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAG,QAAQ,IAAI,CAAC,wEAAwE,QAAQ,IAAI,CAAC,4DAA4D,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,eAAe,WAAW,QAAQ,IAAI,CAAC,kEAAkE,IAAI,CAAC,WAAW,EAAE,EAAE,SAAS,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,cAAc,KAAK,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,YAAY,WAAW,IAAI,CAAC,MAAM,CAAC,EAAE,AAAA,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CACxgB,CAAC,EAAE,YAAY,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,AAAC,MAAK,IAAI,GAAI,CAAA,EAAE,mBAAmB,CAAC,EAAE,KAAK,EAAE,EAAE,WAAW,CAAC,CAAC,CAAA,EAA4B,KAAK,IAA9B,CAAA,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,AAAN,GAAqB,CAAA,AAAA,CAAA,IAAI,GAAM,OAAO,AAAP,EAAS,eAAe,CAAC,GAAG,mBAAmB,CAAC,EAAE,KAAK,EAAE,EAAE,WAAW,CAAC,CAAC,CAAA,EAAG,OAAO,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,GAAG,OAAO,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,qBAAqB,EAAE,EAAE,QAAgC,SAAS,CAAC,EAA2E,OAAzE,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,OAAO,AAAP,EAAS,GAAE,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAU,IAAI,AAAA,EAAK,QAC/d,SAAS,CAAC,EAA2E,OAAzE,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,OAAO,AAAP,EAAS,GAAE,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAU,IAAI,AAAA,EAAK,QAAgC,SAAS,CAAC,EAA2E,OAAzE,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,OAAO,AAAP,EAAS,GAAE,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAU,IAAI,AAAA,EAAK,UAAkC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAiF,OAA/E,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,OAAO,AAAP,EAAS,GAAE,eAAe,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAU,IAAI,AAAA,EAAK,MAA8B,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAC9a,OADgb,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,OAAO,AAAP,EAAS,GAAE,SAAS,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAC/e,IAAI,AAAA,EAAK,OAA+B,SAAS,CAAC,EAAE,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,QAAQ,AAAR,EAAU,GAAE,MAAM,CAAC,GAAG,GAAE,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,GAAE,MAAM,CAAC,EAAK,OAAO,WAAW,IAAI,CAAC,kBAAkB,GAAG,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,MAAM,GAA+B,OAA5B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAS,CAAC,EAAE,cAAc,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,QAAQ,CAAC,GAAG,aAAa,GAAM,MAAM,EAAE,aAAa,GAAM,IAAI,CAAC,CAAC,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,WACnf,EAAE,iBAAiB,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,eAAe,CAAC,EAAE,MAAM,GAAG,EAAE,aAAa,EAAE,EAAE,aAAa,CAAC,MAAM,GAAG,EAAE,QAAQ,CAAC,MAAM,EAAG,CAAA,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,SAAS,CAAC,EAAE,aAAa,EAAA,EAAI,OAAO,EAAE,cAAc,EAAG,CAAA,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,KAAK,EAAA,EAAI,OAAO,EAAE,WAAW,EAAG,CAAA,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,KAAK,EAAA,CAAG,MAAM,aAAa,GAAM,IAAI,EAAE,aAAa,GAAM,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,OAAO,IAAI,AAAA,EAAE,iBAAiB,SAAS,CAAC,EAAE,IAAI,EAClhB,EAAE,QAAQ,CAAC,GAAG,aAAa,GAAM,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,gBAAgB,CAAC,GAAG,KAAK,IAAI,EAAE,OAAO,IAAI,CAAC,YAAY,CAAC,EAAG,CAAA,EAAE,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,EAAE,iBAAiB,CAAC,EAAE,iBAAiB,CAAC,EAAE,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,EAAE,aAAa,CAAC,EAAE,aAAa,CAAC,EAAE,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,EAAE,kBAAkB,CAAC,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC,EAAE,EAAE,CAAC,CAE7W,MAF8W,CAAC,IAAI,EAAE,kBAAkB,EAAG,CAAA,AAA2B,KAAK,IAAhC,CAAA,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,AAAR,GAAsB,CAAA,EAAE,iBAAiB,CAAC,EAAE,QAAQ,EAC5f,EAAE,WAAW,CAAC,CAAC,CAAA,EAAG,EAAE,kBAAkB,CAAC,CAAC,CAAA,EAAG,CAAC,IAAI,EAAE,iBAAiB,EAAG,CAAA,AAAyB,KAAK,IAA9B,CAAA,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,AAAN,GAAoB,CAAA,EAAE,iBAAiB,CAAC,EAAE,OAAO,EAAE,EAAE,WAAW,CAAC,CAAC,CAAA,EAAG,EAAE,iBAAiB,CAAC,CAAC,CAAA,EAAG,CAAC,IAAI,EAAE,gBAAgB,EAAG,CAAA,AAAwB,KAAK,IAA7B,CAAA,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,AAAL,GAAmB,CAAA,EAAE,eAAe,CAAC,EAAE,MAAM,EAAE,EAAE,WAAW,CAAC,CAAC,CAAA,EAAG,EAAE,gBAAgB,CAAC,CAAC,CAAA,EAAG,EAAE,uBAAuB,EAAG,CAAA,AAA+B,KAAK,IAApC,CAAA,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,AAAZ,GAA0B,CAAA,EAAE,SAAS,CAAC,EAAE,aAAa,EAAE,EAAE,WAAW,CAAC,CAAC,CAAA,EAAG,EAAE,uBAAuB,CAAC,CAAC,CAAA,EAAG,EAAE,gBAAgB,EAAG,CAAA,EAAE,aAAa,CAAC,EAAE,QAAQ,EAC7f,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAA,EAAU,IAAI,AAAA,EAAE,aAAa,SAAS,CAAC,EAAgE,OAA9D,EAAE,gBAAgB,CAAC,AAAC,CAAA,IAAI,GAAM,cAAc,AAAd,EAAgB,YAAY,CAAC,GAAU,IAAI,CAAC,kBAAkB,CAAC,EAAE,gBAAgB,CAAC,EAAE,mBAAmB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,aAAa,EAAE,EAAE,QAAQ,CAAC,MAAM,EAE3K,IAAI,IAAI,KAFqK,IAAI,CAAC,YAAY,CAAC,WAAY,IAAI,GAAM,eAAe,CAAC,EAAE,GAAI,iBAAiB,CAAC,EAAE,QAAQ,GAAG,EAAE,EAAE,OAAO,CAAC,MAAM,EAAG,CAAA,EAAE,IAAI,aAAa,EAAE,EAAE,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,SAAU,IAAI,GAAM,eAAe,CAAC,EAAE,GAAI,iBAAiB,CAAC,EAAE,OAAO,EAAA,EAC/f,EAAE,EAAE,MAAM,CAAC,MAAM,EAAG,CAAA,EAAE,IAAI,aAAa,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,QAAS,IAAI,GAAM,eAAe,CAAC,EAAE,GAAI,eAAe,CAAC,EAAE,MAAM,EAAA,EAAI,EAAE,EAAE,GAAG,CAAC,MAAM,EAAG,CAAA,EAAE,IAAI,aAAa,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,KAAM,IAAI,GAAM,eAAe,CAAC,EAAE,GAAI,iBAAiB,CAAC,EAAE,GAAG,EAAA,EAAI,EAAE,EAAE,IAAI,CAAC,MAAM,EAAG,CAAA,EAAE,IAAI,aAAa,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,MAAO,IAAI,GAAM,eAAe,CAAC,EAAE,GAAI,iBAAiB,CAAC,EAAE,IAAI,EAAA,EAAI,EAAE,EAAE,OAAO,CAAC,MAAM,EAAG,CAAA,EAAE,GAAK,CAAA,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,YAAY,WAAA,EAAa,EAAE,EAAE,OAAO,CAAC,MAAM,EAClgB,IAAI,CAAC,QAAQ,CAAE,IAAI,GAAM,eAAe,CAAC,EAAE,GAAI,gBAAgB,CAAC,EAAE,OAAO,EAAA,EAAI,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAc,EAAE,YAAY,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CACxF,OADyF,EAAE,EAAE,WAAW,CAAC,MAAM,EAAG,CAAA,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,iBAAiB,CAAC,EAAE,WAAW,EAAA,EAAI,EAAE,EAAE,WAAW,CAAC,MAAM,EAAG,CAAA,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,EAAE,WAAW,CAAC,MAAM,CACtgB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,iBAAiB,CAAC,EAAE,WAAW,EAAA,EAAI,OAAO,EAAE,cAAc,EAAG,CAAA,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,KAAK,EAAA,EAAI,OAAO,EAAE,WAAW,EAAG,CAAA,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,KAAK,EAAA,EAAW,IAAI,AAAA,EAAE,kBAAA,EAAkC,GAAE,IAAI,GAAM,OAAO,CAAQ,WAAW,OAAO,IAAI,CAAC,WAAW,EAAG,CAAA,IAAI,CAAC,WAAW,CAAC,IAAI,GAAM,IAAI,AAAJ,EAAM,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,SAAS,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,GAAE,SAAS,CAAC,EAAE,GAAG,EAAE,aAAa,CAAC,GAAE,CAAI,CAAA,KAAK,IAC1f,GAAG,IAAI,EAAE,MAAM,AAAN,GAAO,CAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EADqa,EACja,AAAA,CAAA,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAA,GAAI,QAAQ,KAAK,CAAC,oIAAoI,IAAI,CAAC,GAAK,qBAAA,EAAqC,GAAE,IAAI,GAAM,IAAI,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,WAAW,OAAO,IAAI,CAAC,cAAc,EAAG,CAAA,IAAI,CAAC,cAAc,CAAC,IAAI,GAAM,MAAM,AAAN,EAAQ,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAC9gB,GAAG,EAAE,CAAC,GAAE,SAAS,GAAG,IAAI,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,GAAE,SAAS,CAAC,EAAE,GAAG,GAAE,aAAa,CAAC,IAAG,GAAE,MAAM,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,GAAE,SAAS,CAAC,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,iBAAiB,CAAC,IAAI,CAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,QAAQ,KAAK,CAAC,+HAA+H,IAAI,CAAC,CAAC,GAAK,mBAAmB,WAAW,EAAE,qBAAqB,WAAW,IAAI,EAClgB,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,GAAM,eAAe,CAAC,IAAI,aAAa,EAAE,MAAM,EAAE,SAAS,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAqB,EAAE,EAAE,EAArB,EAAE,EAAE,MAAM,CAAC,KAAK,CAAO,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,AAAO,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAO,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,EACpf,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,AAAA,MAAM,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,EAAE,MAAM,CAAC,WAAW,CACpgB,CAAC,CAAC,CAAC,EAAE,gBAAgB,WAAW,QAAQ,IAAI,CAAC,6DAA6D,EAAE,eAAe,SAAS,CAAC,EAAE,QAAQ,IAAI,CAAC,4DAA4D,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAI,aAAa,GAAM,cAAc,CAAC,QAAQ,KAAK,CAAC,kFAAkF,OAAO,CAAC,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAsB,EAAlB,EAAE,IAAI,CAAC,UAAU,CAAG,IAAI,KAAK,EAAE,GAAG,KAAK,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CACzf,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,IAAI,AAAA,CAAC,EAAE,iBAAiB,WAAW,IAAI,IAAmC,EAAE,EAAE,EAAnC,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAO,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,AAAyB,EAAE,EAAE,KAAK,IAAI,CAAC,AAAvC,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAqC,EAAE,AAApC,CAAA,EAAE,CAAC,CAAC,EAAE,EAAE,AAAF,EAAgC,EAAE,AAA/B,CAAA,EAAE,CAAC,CAAC,EAAE,EAAE,AAAF,EAA2B,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,WAAW,IAAI,EAAE,CAAC,SAAS,CAAC,QAAQ,IAAI,KAAK,iBAAiB,UAAU,uBAAuB,CAAC,EAAuE,GAArE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAG,AAAH,EAAS,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,IAAsB,EAAlB,EAAE,IAAI,CAAC,UAAU,CAAG,IAAI,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,AAAF,EACrf,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAA0H,IAAI,KAA7H,OAAO,GAAI,CAAA,EAAE,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,EAAG,EAAE,IAAI,CAAC,UAAU,CAAY,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAE,CAAA,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAA6K,OAA9J,EAAE,AAAhB,CAAA,EAAE,IAAI,CAAC,MAAM,AAAN,EAAW,MAAM,EAAG,CAAA,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,GAAA,EAA2B,OAAtB,CAAA,EAAE,IAAI,CAAC,cAAc,AAAd,GAA0B,CAAA,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,GAAG,OAAO,EAAE,MAAM,AAAA,CAAA,EAAU,CAAC,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EACtiB,KAAK,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,AAAC,QAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,IAAmB,EAAf,EAAE,EAAE,UAAU,CAAG,IAAI,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAmB,IAAf,EAAE,EAAE,MAAM,CAAC,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,IAAI,AAAA,EAAE,QAAQ,WAAW,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,SAAS,EAAE,CAAC,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,GAAM,cAAc,CAAC,SAAS,EAAE,GAAM,cAAc,CAAC,QAAQ,CAAC,MAChY,GAAM,uBAAuB,CAAC,WAAW,GAAM,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,0BAA0B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE,GAAM,uBAAuB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,cAAc,CAAC,SAAS,EAAE,GAAM,uBAAuB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,uBAAuB,CAAC,GAAM,uBAAuB,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,EAAE,EACpa,GAAM,uBAAuB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,AAAC,QAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,IAAmB,EAAf,EAAE,EAAE,UAAU,CAAG,IAAI,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAmB,IAAf,EAAE,EAAE,MAAM,CAAC,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC,OAAO,IAAI,AAAA,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,GAAM,uBAAuB,CAAC,SAAS,EAAE,GAAM,MAAM,CAAC,WAAW,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAM,OAAO,AAAA,EAC3f,GAAM,MAAM,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,MAAM,CAAC,GAAM,MAAM,CAAC,SAAS,CAAC,iBAAiB,EAAgB,GAAE,IAAI,GAAM,UAAU,CAAQ,SAAS,CAAC,EAAoD,OAAlD,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAU,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,eAAe,CAAC,GAAE,GAAK,GAAM,MAAM,CAAC,SAAS,CAAC,MAAM,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,GAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,GAAE,GAAK,GAAM,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EACjiB,GAAM,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAA+I,OAA7I,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,kBAAkB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,gBAAgB,EAAS,IAAI,AAAA,EAChM,GAAM,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,EAAE,IAAI,GAAM,iBAAiB,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,GAAM,iBAAiB,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,GAAM,iBAAiB,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,GAAM,iBAAiB,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IACnf,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,GAAM,iBAAiB,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,GAAM,iBAAiB,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,GAAM,qBAAqB,CAAC,EAAE,EAAE,CAAC,OAAO,GAAM,SAAS,CAAC,UAAU,GAAM,YAAY,CAAC,UAAU,GAAM,YAAY,AAAA,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,iBAAiB,GAAG,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,eAAe,AAAC,CAAA,EAAE,eAAe,CAC1f,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,cAAc,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,cAAc,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,cAAc,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,cAAc,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,eAAe,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE,GAAM,UAAU,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,UAAU,CAC7X,GAAM,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,IAAI,CAAC,sBAAsB,EAAE,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,MAAM,CAAC,SAAS,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,kBAAkB,CACvY,GAAM,kBAAkB,CAAC,SAAS,CAAC,sBAAsB,CAAC,WAAW,IAAI,EAAE,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAG,AAAH,EAAO,CAAA,EAAE,IAAI,CAAC,IAAI,AAAJ,EAAM,EAAG,AAAA,CAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,AAAN,EAAS,CAAA,EAAE,IAAI,CAAC,IAAI,AAAJ,EAAM,EAAG,AAAA,CAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,AAAJ,EAAM,EAAE,EAAE,AAAC,CAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAK,AAAL,EAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAoK,OAAlK,GAAM,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAQ,IAAI,AAAA,EAC1f,GAAM,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAA2N,MAA1K,AAA/C,CAAA,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5C,EAAiD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAQ,CAAC,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,IAAI,CAAC,sBAAsB,EAAE,EAC1gB,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,MAAM,CAAC,SAAS,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CAAC,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,EAAA,EAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,EAAG,CAAA,EAAE,CAAA,IAAK,IAAI,CAAC,sBAAsB,EAAE,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,sBAAsB,EAAE,EAC9d,GAAM,iBAAiB,CAAC,SAAS,CAAC,sBAAsB,CAAC,WAAW,IAAI,EAAE,GAAM,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,GAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,GAAG,CAAC,GAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,AAAC,CAAA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,AAAL,EAAO,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,AAAC,CAAA,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,AAAN,EAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAC5hB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAgI,OAA9H,GAAM,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAQ,IAAI,AAAA,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAyK,MAAxH,AAA/C,CAAA,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5C,EAAiD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAQ,CAAC,EACnc,GAAM,KAAK,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,KAAK,CAAC,GAAM,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAsE,OAApE,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAS,IAAI,AAAA,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,EAAE,GAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EACzd,GAAM,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,YAAY,CAAC,GAAM,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAoF,MAAnC,AAA/C,CAAA,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5C,EAAiD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAU,CAAC,EACtM,GAAM,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAM,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,YAAY,CACrgB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,gBAAgB,CACnM,GAAM,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAC8E,OAD5E,GAAM,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,iBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAClgB,EAAE,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAQ,IAAI,AAAA,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAsH,MAArE,AAA/C,CAAA,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5C,EAAiD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAQ,CAAC,EAC3T,GAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAM,KAAK,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,eAAe,CAAC,GAAM,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAA0G,OAAxG,GAAM,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAQ,IAAI,AAAA,EACtf,GAAM,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAqK,MAApH,AAA/C,CAAA,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5C,EAAiD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAQ,CAAC,EAAE,GAAM,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC,EAAE,GAAM,UAAU,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,GAAM,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,UAAU,CAChgB,GAAM,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAiH,OAA/G,GAAM,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAQ,IAAI,AAAA,EAAE,GAAM,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAgL,MAA/H,AAA/C,CAAA,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5C,EAAiD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAQ,CAAC,EAC5Y,GAAM,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAM,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,eAAe,CAC5f,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,SAAS,CACxN,GAAM,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EACmC,OADjC,GAAM,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CACpgB,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAQ,IAAI,AAAA,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAA0O,MAAzL,AAA/C,CAAA,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5C,EAAiD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAQ,CAAC,EACtX,GAAM,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,EAAG,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA,CAAE,EAAE,IAAI,SAAS,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,AAAA,EAAE,MAAM,WAAW,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,MAAM,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,EACrV,GAAM,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,MAAM,CAAC,YAAY,KAAK,EAAE,eAAe,SAAS,CAAC,SAAiB,AAAG,IAAI,AAAtB,CAAA,EAAE,EAAE,KAAK,CAAC,IAAV,EAAwB,MAAM,CAAO,MAAK,EAAE,GAAG,GAAU,EAAE,IAAI,CAAC,KAAK,IAAG,EAAE,cAAc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,eAAuC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAyB,OAAO,KAAK,GAAG,CAAC,EAAE,KAAK,KAAK,CAAnD,EAAE,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,EAAiC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAU,EAAN,EAAE,EAAE,EAAI,EAAE,GAAM,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAG,QAAO,EAAE,EAAE,EAAE,IAAI,CAAC,GAAI,CAAA,EAAE,IAAI,GAAM,OAAO,CAC3f,AAAJ,CAAA,EAAE,EAAA,EAAI,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE,GAAG,CAAC,IAAI,GAAM,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,GAAG,CAAC,IAAI,GAAM,IAAI,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,SAAS,aAAa,CAAC,SAAU,CAAA,EAAE,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC,MAAM,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAE,CAAA,EAAE,WAAW,CAAC,CAAC,CAAC,EAAA,EAAI,EAAE,UAAU,CAAC,EAAE,GAAI,CAAA,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,EAAE,KAAK,CAAC,GAAM,cAAa,AAAb,EAAgB,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,EAAE,KAAK,CAAC,GAAM,cAAa,AAAb,CAAa,EAAI,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAI,CAAA,AACxc,KAAK,IAAI,AAD+b,CAAA,EAAE,CAAC,OAAO,GAAM,cAAc,CAAC,OAAO,GAAM,sBAAsB,AAAA,CAAA,CAChgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,AAAD,EAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA,AAAA,CAAA,EAAI,GAAI,CAAA,EAAE,UAAU,CAAC,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,MAAO,AAAA,CAAA,IAAI,CAAC,CAAC,EAAE,EAAE,EAAA,EAAK,CAAA,IAAI,CAAC,CAAC,EAAE,EAAE,CAAA,EAAG,IAAI,CAAC,CAAC,EAAE,AAAA,CAAC,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,CAAC,WAAW,EAAG,CAAA,EAAE,IAAI,CAAC,WAAW,AAAX,EAAa,KAAK,IAAI,IAAI,CAAA,GAAE,IAAI,GAAM,WAAW,AAAX,EAAa,IAAI,EAAE,sBAAsB,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,WAAW,EAAG,CAAA,UAAU,EAAE,EAAE,oBAAoB,UAAU,GAAI,CAAA,EAAE,mBAAA,CAAoB,CAItC,OAJuC,KAAK,IAAI,EAAE,QAAQ,EAAE,KAAK,IAAI,EAAK,CAAC,EAAE,QAAQ,CAAC,EAAG,CAAA,EAAE,QAAQ,CAAC,EAAK,CAAC,EAAE,QAAQ,CAAA,AAAA,EAAG,KAAK,IAAI,EAAE,WAAW,EACzf,CAAA,EAAE,WAAW,CAAC,EAAE,WAAU,AAAV,EAAa,KAAK,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAG,CAAA,EAAE,WAAW,CAAC,CAAC,CAAA,EAAG,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,SAAQ,AAAR,EAAW,KAAK,IAAI,EAAE,UAAU,EAAG,CAAA,EAAE,UAAU,CAAC,EAAE,UAAS,AAAT,EAAY,KAAK,IAAI,EAAE,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,OAAM,AAAN,EAAS,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,IAAI,CAAC,GAAM,QAAO,AAAP,EAAU,KAAK,IAAI,EAAE,WAAW,EAAG,CAAA,EAAE,IAAI,CAAC,GAAM,UAAS,AAAT,EAAY,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,SAAQ,AAAR,EAAW,KAAK,IAAI,EAAE,YAAY,EAAG,CAAA,SAAS,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,GAAM,UAAU,CAAC,EAAE,YAAY,EAAG,CAAA,EAAE,YAAY,CAAC,GAAM,YAAY,AAAZ,CAAY,EACnf,EAAE,YAAY,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAG,CAAA,EAAE,KAAK,CAAC,EAAE,QAAQ,AAAR,EAAU,EAAE,aAAa,EAAG,CAAA,EAAE,QAAQ,CAAC,EAAE,EAAE,aAAa,CAAA,EAAG,sBAAsB,GAAI,CAAA,EAAE,aAAa,EAAG,CAAA,EAAE,QAAQ,CAAC,EAAE,EAAE,aAAa,CAAA,EAAG,EAAE,YAAY,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,YAAY,AAAZ,CAAY,EAAG,KAAK,IAAI,EAAE,YAAY,EAAG,CAAA,QAAQ,IAAI,CAAC,0DAA0D,EAAE,OAAO,CAAC,EAAE,YAAY,AAAZ,EAAc,KAAK,IAAI,EAAE,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,OAAM,AAAN,EAAS,GAAI,CAAA,EAAE,UAAU,EAAE,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,EAAE,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,EAAE,cAAc,CACxf,EAAE,oBAAoB,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,WAAW,EAAE,QAAQ,CAAC,EAAE,cAAc,CAAC,EAAE,cAAc,CAAC,EAAE,YAAY,CAAC,EAAE,kBAAkB,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,eAAe,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC,EAAE,aAAa,CAAC,EAAE,aAAa,CAAC,EAAE,WAAW,CAAC,EAAE,iBAAiB,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,EAAE,SAAS,CAAC,EAAE,eAAe,CAAC,EAAE,eAAe,CAAC,EAAE,aAAa,CAAC,EAAE,mBAAmB,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,cAAc,EAAE,WAAW,CAAC,EAAE,iBAAiB,CACzf,EAAE,iBAAiB,CAAC,EAAE,eAAe,CAAC,EAAE,qBAAqB,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,WAAW,EAAE,QAAQ,CAAC,EAAE,cAAc,CAAC,EAAE,cAAc,CAAC,EAAE,YAAY,CAAC,EAAE,kBAAkB,CAAA,EAAG,EAAE,YAAY,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,YAAW,AAAX,EAAc,EAAE,eAAe,EAAG,CAAA,EAAE,WAAW,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,eAAe,CAAC,EAAE,eAAe,CAAA,EAAG,EAAE,IAAI,EAAK,CAAC,EAAE,CAAC,GAAG,KAAK,IAAI,EAAE,OAAO,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,OAAM,AAAN,EAAgB,CAAC,CAAI,EACzX,GAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,qBAAqB,AAAA,EACxS,GAAM,SAAS,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,SAAS,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,GAAM,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,IAAI,EAAE,OAAO,GAAG,WAAW,WAAW,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,eACY,OADG,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,gBAAgB,CAAC,OAAO,SAAS,CAAC,EAAE,GAAM,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,GAAG,EAAE,gBAAgB,CAAC,WAAW,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,gBAAgB,CAAC,QAAQ,SAAS,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,WAAW,EAAG,CAAA,EAAE,WAAW,CAC5f,IAAI,CAAC,WAAW,AAAX,EAAa,KAAK,IAAI,IAAI,CAAC,YAAY,EAAG,CAAA,EAAE,YAAY,CAAC,IAAI,CAAC,YAAY,AAAZ,EAAc,KAAK,IAAI,IAAI,CAAC,eAAe,EAAG,CAAA,EAAE,eAAe,CAAC,IAAI,CAAC,eAAe,AAAf,EAAiB,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,GAAU,CAAC,EAAE,gBAAgB,SAAS,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,mBAAmB,SAAS,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,qBAAqB,AAAA,EAClb,GAAM,WAAW,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,WAAW,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,GAAM,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,IAAI,EAAE,OAAO,GAAG,WAAW,WAAW,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,aAAa,CAAC,OACzK,OADgL,EAAE,gBAAgB,CAAC,OAAO,SAAS,CAAC,EAAE,GAAM,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,GAAG,EAAE,gBAAgB,CAAC,WAAW,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,gBAAgB,CAAC,QAAQ,SAAS,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,IAAI,CAAC,WAAW,EAAG,CAAA,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,AAAX,EAC5e,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,EAAS,CAAC,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,GAAM,UAAU,CAAC,SAAS,CAAC,EAAE,WAAY,OAAO,GAAI,CAAA,QAAQ,IAAI,CAAC,6EAA6E,EAAE,KAAK,CAAA,EAAG,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAC9T,GAAM,UAAU,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,UAAU,CAAC,IAAI,kBAAkB,CAA+J,OAA9J,KAAK,IAAI,IAAI,CAAC,iBAAiB,EAAG,CAAA,IAAI,CAAC,iBAAiB,CAAC,SAAS,aAAa,CAAC,MAAA,EAAQ,QAAQ,IAAI,CAAC,yDAAgE,IAAI,CAAC,iBAAiB,AAAA,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,UAAW,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,GAAM,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,GAAuC,AAApC,CAAA,EAAE,IAAI,GAAM,SAAS,CAAC,IAAI,CAAC,OAAO,CAAA,EAAI,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,kBAAkB,CAAC,IAAI,CAAC,eAAe,EAChhB,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAkB,IAAI,EAAE,AAAtB,CAAA,EAAE,KAAK,KAAK,CAAC,EAAb,EAAwB,QAAQ,CAAC,GAAG,KAAK,IAAI,EAAE,CAAC,GAAG,WAAW,EAAE,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,qBAAqB,EAAE,sDAAsD,MAAM,CAAC,GAAG,UAAU,EAAE,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,qBAAqB,EAAE,qDAAqD,MAAM,CAAC,CAAgB,EAAE,AAAjB,CAAA,EAAE,EAAE,KAAK,CAAC,EAAE,EAAZ,EAAmB,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,QAAQ,CAAC,EAAE,KAAK,IAClf,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,QAMoO,CANjO,AAAA,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,AAAA,CAAK,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,AAAoB,CAApB,EAAE,IAAI,GAAM,OAAO,AAAP,EAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAO,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,GAAG,AAAS,EAAE,AAAE,EAAb,CAAA,EAAE,CAAC,CAAC,IAAI,AAAJ,EAAW,EAAE,AAAE,EAAF,EAAI,EAAE,AAAE,EAAF,EAAI,EAAE,AAAE,GAAF,EAAK,EAAE,AAAE,GAAF,EAAK,EAAE,AAAE,GAAF,EAAK,GAAG,IAAI,EAAE,CACzU,GAD4V,AAAlB,CAAA,EAAE,IAAI,GAAM,KAAK,AAAL,EAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAmB,AAAlB,CAAA,EAAE,IAAI,GAAM,KAAK,AAAL,EAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CACrf,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAI,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,aAAa,CAAC,CAAA,EAAG,EAAE,EAAE,KAAK,CAAC,MAAM,CAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,AAAS,EAAE,CAAC,CAAC,EAAb,CAAA,EAAE,CAAC,CAAC,IAAI,AAAJ,EAAa,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,GAAG,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAA4E,GAAzE,GAAI,CAAA,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAA,EAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,GAAG,EAAE,aAAa,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,aAAa,CAAC,IAAI,CAAC,GACxc,GAAzD,GAAI,CAAA,AAAS,EAAE,CAAC,CAAZ,EAAE,CAAC,CAAC,IAAI,CAAO,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,EAAA,EAAO,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,AAAS,EAAE,CAAC,CAAZ,EAAE,CAAC,CAAC,IAAI,CAAO,CAAC,IAAI,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,IAAI,IAAI,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,CAAqG,GAAlF,AAAlB,CAAA,EAAE,IAAI,GAAM,KAAK,AAAL,EAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAI,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,CAAA,EAAG,EAAE,EAAE,KAAK,CAAC,MAAM,CAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,AAAS,EAAE,CAAC,CAAC,EAAb,CAAA,EAAE,CAAC,CAAC,IAAI,AAAJ,EAAa,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GACjd,GADod,GAAI,CAAA,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CACpgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,EAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,IAAI,CAAC,GAAsC,GAAnC,GAAI,CAAA,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAA,EAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAG,GAAI,AAAA,WAAW,IAAI,EAAE,KAAK,IAAI,EAAE,mBAAmB,CAAC,EAAE,mBAAmB,CAAC,EAAE,GAAG,EAAE,WAAW,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,CACpf,IAAI,GAAG,EAAE,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,WAAW,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,GAAI,CAAA,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,CAAC,MAAM,EAAG,CAAA,EAAE,WAAW,CAAC,MAAM,GAAG,EAAE,WAAW,CAAC,MAAM,EAAE,EAAE,WAAW,CAAC,MAAM,GAAG,EAAE,QAAQ,CAAC,MAAK,AAAL,GAAS,QAAQ,IAAI,CAAC,sCAAsC,EAAE,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE,WAAW,CAAC,MAAM,CAAC,uBAAuB,EAAE,WAAW,CAAC,MAAM,CAAC,mBAAmB,EAAE,SAAS,CAC3f,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,UAAU,AAAA,IAAM,AAAA,SAAS,CAAC,EAAE,GAAG,KAAK,IAAI,EAAE,YAAY,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAM,IAAJ,EAAE,EAAM,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,GAAM,OAAO,AAAC,CAAA,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,CAAC,IAAI,CACzf,EAAE,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,AAA4B,CAA5B,EAAE,IAAI,GAAM,KAAK,CAAC,SAAA,EAAY,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAG,GAAG,EAAE,kBAAkB,GAAG,EAAE,qBAAqB,GAAM,KAAK,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,CAAC,MAAM,EAAO,CAAC,SAAS,CAAC,EAA+E,CAAC,SAAS,EAAE,UAAzF,EAAE,GAAM,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAA+B,CAAC,CAAC,EAC/Z,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE,CAAA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,IAAO,CAAC,IAAI,GAAG,KAAK,IAAI,EAAE,OAAO,EAAC,EAAE,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,IAAO,KAAK,IAAI,EAAE,UAAU,EAAC,EAAE,UAAU,CAAC,EAAE,EAAE,GAAM,IAAI,GAAI,CAAA,EAAE,CAAC,EAAE,KAAK,IAAI,EAAE,MAAK,AAAL,GAAQ,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAK,KAAK,IAAI,EAAE,OAAO,EAAC,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,GAAM,qBAAqB,CAAC,IAAI,GAAM,cAAc,CACjc,GAAM,oBAAoB,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,qBAAqB,AAAA,EAC5F,GAAM,oBAAoB,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,oBAAoB,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,GAAM,SAAS,CAAC,EAAE,OAAO,EAAE,EAAE,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,AAAC,MAAK,IAAI,GAAI,CAAA,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,QAAQ,CAAC,IAAI,GAAM,eAAe,CAAC,EAAE,GAAA,EAAK,IAAwB,EAApB,EAAE,EAAE,IAAI,CAAC,UAAU,CAAG,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,EACxf,EAAE,YAAY,CAAC,EAAE,IAAI,GAAM,eAAe,CAAC,EAAE,EAAE,QAAQ,EAAE,CAAmD,GAAG,KAAK,IAA1D,CAAA,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,OAAO,AAAP,EAAsB,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,EAAmJ,OAAzH,KAAK,IAA7B,CAAA,EAAE,EAAE,IAAI,CAAC,cAAc,AAAd,GAA4B,CAAA,EAAE,IAAI,GAAM,OAAO,CAAC,KAAK,IAAI,EAAE,MAAM,EAAE,EAAE,SAAS,CAAC,EAAE,MAAM,EAAE,EAAE,cAAc,CAAC,IAAI,GAAM,MAAM,CAAC,EAAE,EAAE,MAAM,CAAA,EAAU,CAAC,CAAC,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAC7b,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,cAAc,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,GAAM,SAAS,CAAC,EAAE,OAAO,EAAE,EAAE,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,YAAY,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAA0E,OAAzE,KAAK,IAAI,CAAC,CAAC,EAAE,EAAE,QAAQ,IAAI,CAAC,0CAA0C,GAAU,CAAC,CAAC,EAAE,AAAA,EAAE,MAAM,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAK,CAAC,EAAE,IAAI,CAAC,CAKha,GALia,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,IACnf,EAAE,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,IAAG,AAAH,EAAM,KAAK,IAAI,EAAE,KAAK,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,SAAQ,AAAR,EAAW,KAAK,IAAI,EAAE,QAAQ,EAAG,CAAA,EAAE,QAAQ,CAAC,EAAE,QAAO,AAAP,EAAU,KAAK,IAAI,EAAE,YAAY,EAAG,CAAA,EAAE,YAAY,CAAC,EAAE,YAAW,AAAX,EAAc,KAAK,IAAI,EAAE,cAAc,EAAG,CAAA,EAAE,cAAc,CAAC,EAAE,cAAa,AAAb,EAAgB,KAAK,IAAI,EAAE,YAAY,EAAG,CAAA,EAAE,YAAY,CAAC,EAAE,YAAW,AAAX,EAAc,KAAK,IAAI,EAAE,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,OAAM,AAAN,EAAS,KAAK,IAAI,EAAE,QAAQ,EAClf,CAAA,EAAE,QAAQ,CAAC,EAAE,QAAO,AAAP,EAAU,KAAK,IAAI,EAAE,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,IAAG,AAAH,EAAM,KAAK,IAAI,EAAE,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,OAAM,AAAN,EAAS,KAAK,IAAI,EAAE,WAAW,EAAG,CAAA,EAAE,WAAW,CAAC,EAAE,WAAU,AAAV,EAAa,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,SAAQ,AAAR,EAAW,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,SAAQ,AAAR,EAAW,KAAK,IAAI,EAAE,UAAU,EAAG,CAAA,EAAE,UAAU,CAAC,EAAE,UAAS,AAAT,EAAY,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,SAAQ,AAAR,EAAW,KAAK,IAAI,EAAE,kBAAkB,EAAG,CAAA,EAAE,kBAAkB,CAAC,EAAE,kBAAiB,AAAjB,EAAoB,KAAK,IAAI,EAAE,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,IAAG,AAAH,EAAM,KAAK,IAAI,EAAE,eAAe,EAAG,CAAA,EAAE,eAAe,CACtf,EAAE,eAAc,AAAd,EAAiB,KAAK,IAAI,EAAE,GAAG,EAAG,CAAA,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,CAAA,EAAG,KAAK,IAAI,EAAE,QAAQ,EAAG,CAAA,EAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,EAAE,WAAW,CAAC,CAAC,CAAA,EAAG,KAAK,IAAI,EAAE,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,CAAA,EAAG,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,SAAQ,AAAR,EAAW,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,SAAS,CAAA,EAAG,EAAE,WAAW,EAAG,CAAA,EAAE,WAAW,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAA,EAAG,KAAK,IAAI,EAAE,eAAe,EAAG,CAAA,EAAE,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,eAAe,CAAA,EAAG,KAAK,IAAI,EAAE,iBAAiB,EACzf,CAAA,EAAE,iBAAiB,CAAC,EAAE,iBAAgB,AAAhB,EAAmB,KAAK,IAAI,EAAE,gBAAgB,EAAG,CAAA,EAAE,gBAAgB,CAAC,EAAE,gBAAe,AAAf,EAAkB,KAAK,IAAI,EAAE,WAAW,EAAG,CAAA,EAAE,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,WAAW,CAAA,EAAG,KAAK,IAAI,EAAE,MAAM,EAAG,CAAA,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,OAAO,CAAC,GAAM,iBAAgB,AAAhB,EAAmB,EAAE,YAAY,EAAG,CAAA,EAAE,YAAY,CAAC,EAAE,YAAW,AAAX,EAAc,KAAK,IAAI,EAAE,QAAQ,EAAG,CAAA,EAAE,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAA,EAAG,KAAK,IAAI,EAAE,iBAAiB,EAAG,CAAA,EAAE,iBAAiB,CAAC,EAAE,iBAAgB,AAAhB,EAAmB,KAAK,IAAI,EAAE,KAAK,EAAG,CAAA,EAAE,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,CAAA,EACxf,KAAK,IAAI,EAAE,cAAc,EAAG,CAAA,EAAE,cAAc,CAAC,EAAE,cAAa,AAAb,EAAmB,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAChS,GAAM,YAAY,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,YAAY,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,WAAW,EAAG,CAAA,IAAI,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,WAAW,CAAC,KAAK,EAAA,EAAI,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,GAAM,SAAS,CAAC,EAAE,OAAO,EAAE,EAAE,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,UAAU,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,WAAW,KAAK,IAAI,GAAG,EAAE,EAAE,GACxf,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,EAAE,GAA4D,OAAzD,KAAK,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,MAAM,EAAE,KAAK,IAAI,GAAG,EAAE,GAAU,CAAC,EAAE,gBAAgB,SAAS,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,GAAM,UAAU,CAAC,EAAE,IAAI,GAAM,oBAAoB,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,IAAK,gBAAgB,IAAK,sBAAsB,EAAE,IAAI,EAAK,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,aAAa,CAAC,EAAE,cAAc,EAAE,KAAM,KAAK,cAAc,IAAK,eAAe,EACvf,IAAI,GAAM,WAAW,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa,CAAC,EAAE,cAAc,CAAC,EAAE,aAAa,EAAE,KAAM,KAAK,uBAAuB,EAAE,IAAI,GAAM,oBAAoB,CAAC,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,EAAE,KAAM,KAAK,iBAAiB,EAAE,IAAI,GAAM,cAAc,CAAC,EAAE,MAAM,CAAC,EAAE,QAAQ,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,EAAE,KAAM,KAAK,mBAAmB,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,MAAM,CAAC,EAAE,cAAc,CAAC,EAAE,cAAc,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,EAAE,KAAM,KAAK,iBAAiB,EAChgB,IAAI,GAAM,cAAc,CAAC,EAAE,MAAM,CAAC,EAAE,aAAa,CAAC,EAAE,cAAc,CAAC,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,EAAE,KAAM,KAAK,uBAAuB,EAAE,IAAI,GAAM,oBAAoB,CAAC,EAAE,MAAM,CAAC,EAAE,aAAa,CAAC,EAAE,cAAc,CAAC,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,EAAE,KAAM,KAAK,uBAAuB,EAAE,IAAI,GAAM,oBAAoB,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,EAAE,KAAM,KAAK,sBAAsB,EAAE,IAAI,GAAM,mBAAmB,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,EAAE,KAAM,KAAK,qBAAqB,EAAE,IAAI,GAAM,kBAAkB,CAAC,EAAE,MAAM,CACvgB,EAAE,MAAM,EAAE,KAAM,KAAK,sBAAsB,EAAE,IAAI,GAAM,mBAAmB,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,EAAE,KAAM,KAAK,eAAe,EAAE,IAAI,GAAM,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,aAAa,CAAC,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,EAAE,KAAM,KAAK,gBAAgB,EAAE,IAAI,GAAM,aAAa,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,cAAc,CAAC,EAAE,eAAe,CAAC,EAAE,GAAG,EAAE,KAAM,KAAK,oBAAoB,EAAE,IAAI,GAAM,iBAAiB,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,cAAc,CAAC,EAAE,eAAe,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,EAAE,KAAM,KAAK,eAAe,EACvf,IAAI,GAAM,YAAY,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,KAAM,KAAK,iBAAiB,EAAE,EAAE,KAAK,CAAC,GAAG,KAAM,KAAK,WAAW,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,KAAM,SAAQ,QAAQ,IAAI,CAAC,kDAAkD,EAAE,IAAI,CAAC,KAAK,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,IAAG,AAAH,EAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,eAAe,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,GAAM,cAAc,CAAC,EAAE,WAAW,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAE,CAAA,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,YAAY,SAAS,CAAC,CAC9f,CAAC,EAAyF,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,IAAI,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,GAAM,cAAc,CAAC,GAAG,EAAE,IAAI,GAAM,WAAW,CAAC,GAAG,EAAE,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,4BAA4B,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,WAAW,CAAC,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,AAA3V,SAAW,CAAC,EAAyB,OAAvB,EAAE,OAAO,CAAC,SAAS,CAAC,GAAU,EAAE,IAAI,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,EAAuQ,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,cAAc,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,QAAE,AAAG,UAAW,OAAO,EAAS,GAAE,QAAQ,IAAI,CAAC,uEACrc,GAAU,EAAK,CAAC,EAAE,CAAA,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,MAAK,IAAI,EAAE,KAAK,EAAE,QAAQ,IAAI,CAAC,+CAA+C,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,QAAQ,IAAI,CAAC,sCAAsC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAE,CAAA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,IAAG,AAAH,EAAM,KAAK,IAAI,EAAE,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAA,EAAG,KAAK,IAAI,EAAE,MAAM,EAAG,CAAA,EAAE,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAA,EAAG,KAAK,IAAI,EAAE,MAAM,EAAG,CAAA,EAAE,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,MAAM,CAAC,EAAE,CAChhB,EAAE,MAAM,CAAC,EAAE,CAAA,EAAG,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,CAAA,EAAG,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,CAAA,EAAG,KAAK,IAAI,EAAE,UAAU,EAAG,CAAA,EAAE,UAAU,CAAC,EAAE,UAAS,AAAT,EAAY,MAAM,OAAO,CAAC,EAAE,IAAI,GAAI,CAAA,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,WAAA,EAA2B,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAQ,EAAE,SAAS,CAAC,EAA0E,OAAxE,KAAK,IAAI,CAAC,CAAC,EAAE,EAAE,QAAQ,IAAI,CAAC,yCAAyC,GAAU,CAAC,CAAC,EAAE,AAAA,EAAE,IAArG,EAAyG,EAAE,SAAS,CAAC,EAC5b,OAD8b,KAAK,IAAI,CAAC,CAAC,EAAE,EAAE,QAAQ,IAAI,CAAC,yCAC7d,GAAU,CAAC,CAAC,EAAE,AAAA,EAAE,OAAO,EAAE,IAAI,EAAE,IAAK,QAAQ,EAAE,IAAI,GAAM,KAAK,CAAC,KAAM,KAAK,oBAAoB,EAAE,IAAI,GAAM,iBAAiB,CAAC,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,KAAM,KAAK,qBAAqB,EAAE,IAAI,GAAM,kBAAkB,CAAC,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,KAAM,KAAK,eAAe,EAAE,IAAI,GAAM,YAAY,CAAC,EAAE,KAAK,EAAE,KAAM,KAAK,mBAAmB,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,KAAK,CAAC,EAAE,SAAS,EAAE,KAAM,KAAK,aAAa,EAAE,IAAI,GAAM,UAAU,CAAC,EAAE,KAAK,CAAC,EAAE,SAAS,CAAC,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,KAAM,KAAK,YAAY,EAC7f,IAAI,GAAM,SAAS,CAAC,EAAE,KAAK,CAAC,EAAE,SAAS,CAAC,EAAE,QAAQ,CAAC,EAAE,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,KAAM,KAAK,kBAAkB,EAAE,IAAI,GAAM,eAAe,CAAC,EAAE,KAAK,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,KAAM,KAAK,OAAO,EAAE,IAAI,GAAM,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,GAAG,KAAM,KAAK,MAAM,EAAE,IAAI,GAAM,GAAG,CAAC,KAAM,KAAK,OAAO,EAAE,IAAI,GAAM,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,KAAM,KAAK,aAAa,IAAK,SAAS,EAAE,IAAI,GAAM,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,GAAG,KAAM,KAAK,SAAS,EAAE,IAAI,GAAM,MAAM,CAAC,EAAE,EAAE,QAAQ,GAAG,KAAM,KAAK,QAAQ,EAAE,IAAI,GAAM,KAAK,CACngB,KAAM,SAAQ,EAAE,IAAI,GAAM,QAAQ,AAAA,CACtB,GADuB,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,IAAG,AAAH,EAAM,KAAK,IAAI,EAAE,MAAM,CAAE,CAAA,GAAE,SAAS,CAAC,EAAE,MAAM,EAAE,GAAE,SAAS,CAAC,EAAE,QAAQ,CAAC,EAAE,UAAU,CAAC,EAAE,KAAK,CAAA,EAAI,CAAA,KAAK,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,KAAK,IAAI,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,KAAK,IAAI,EAAE,KAAK,EAAE,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,KAAK,CAAA,EAAG,KAAK,IAAI,EAAE,UAAU,EAAG,CAAA,EAAE,UAAU,CAAC,EAAE,UAAS,AAAT,EAAY,KAAK,IAAI,EAAE,aAAa,EAAG,CAAA,EAAE,aAAa,CAAC,EAAE,aAAY,AAAZ,EAAe,KAAK,IAAI,EAAE,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,OAAM,AAAN,EAAS,KAAK,IAAI,EAAE,QAAQ,EAAG,CAAA,EAAE,QAAQ,CAC7f,EAAE,QAAO,AAAP,EAAa,KAAK,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,KAAK,EAAE,QAAQ,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAA0C,MAAK,IAA9C,CAAA,EAAE,EAAE,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAA,GAAc,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAI,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,qBAAqB,AAAA,EACvV,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,aAAa,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAyB,AAAvB,CAAA,EAAE,IAAI,GAAM,OAAO,CAAC,EAApB,EAAyB,WAAW,CAAC,CAAC,EAAE,KAAK,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,GAAM,iBAAiB,CAAC,GAAM,mBAAmB,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAC7a,GAAM,mBAAmB,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,mBAAmB,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,GAAM,WAAW,CAAC,EAAE,IAAI,GAAM,SAAS,CAAC,IAAI,CAAC,OAAO,EAC8N,OAD5N,EAAE,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAK,CAAA,EAAE,EAAE,OAAO,CAAC,EAAA,GAAG,CAAA,KAAK,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,EAAG,CAAA,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,IAAG,AAAH,EAAM,EAAE,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,GAAM,mBAAmB,CAAC,EAAE,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,GAAM,mBAAmB,CAC/f,EAAE,SAAS,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,GAAM,YAAY,CAAC,EAAE,SAAS,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,GAAM,wBAAwB,CAAC,EAAE,UAAU,CAAC,KAAK,IAAI,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,KAAK,IAAI,EAAE,MAAM,EAAG,CAAA,EAAE,MAAM,CAAC,EAAE,MAAM,AAAN,EAAQ,KAAK,IAAI,EAAE,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,IAAG,AAAH,EAAM,KAAK,IAAI,EAAE,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,OAAM,AAAN,EAAS,IAAI,EAAE,WAAW,EAAG,CAAA,EAAE,SAAS,CAAC,GAAM,YAAY,AAAZ,EAAc,EAAE,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAD1H,CAC4H,EAAE,EAAE,GAAU,CAAC,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAC7b,GAAM,uBAAuB,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EACjH,GAAM,uBAAuB,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,uBAAuB,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,iBAAiB,AAAC,CAAA,EAAE,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,SAAS,CAAC,IAAI,CAAC,OAAO,EAAsE,GAApE,EAAE,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,eAAe,CAAC,eAAkB,MAAM,OAAO,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,QAAQ,EAAE,OAAO,AAAA,EAAO,IAAL,CAAA,GAAG,CAAA,GAAU,CAAA,IAAI,EAAE,WAAW,EAAG,CAAA,EAAE,SAAS,CAAC,GAAM,YAAY,AAAZ,EAAc,EAAE,MAAM,CACtf,EAAE,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,EAAA,CAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAoB,GAAG,AAArB,CAAA,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,EAAf,EAAuB,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,AAAA,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,MAAM,AAAA,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,AAAC,CAAA,IAAI,EAAE,WAAW,EAAG,CAAA,EAAE,SAAS,CAAC,GAAM,YAAW,AAAX,EAAc,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,GACpf,EAAE,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC,EAAE,eAAe,SAAS,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EACnE,GAAM,QAAQ,CAAC,WAAW,OAAO,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAM,eAAe,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,GAAM,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAM,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAM,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAM,sBAAsB,CAAC,IAAI,CAAC,aAAa,CAAC,GAAM,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAM,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAC1f,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAC7K,GAAM,QAAQ,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,QAAQ,CAAC,IAAI,aAAa,CAAC,OAAO,IAAI,CAAC,YAAY,AAAA,EAAE,IAAI,YAAY,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,UAAU,SAAS,CAAC,EAAE,GAAG,KAAK,IAAI,EAAE,IAAI,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,IAAI,EAAE,QAAQ,IAAI,CAAC,oBAAoB,EAAE,iCAAiC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,AAAC,MAAK,IAAI,EAAE,QAAQ,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,yCAAyC,aAAa,GAAM,KAAK,CAAC,EAAE,GAAG,CAAC,GAAG,aAAa,GAAM,OAAO,EAAE,aAAa,GAAM,OAAO,CAAC,EAAE,IAAI,CAAC,GAC3f,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,SAAS,CAAC,EAAE,IAAI,EAAE,CAAC,SAAS,CAAC,QAAQ,IAAI,KAAK,WAAW,UAAU,iBAAiB,CAAC,EAGkX,OAHhX,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAG,AAAH,EAAM,IAAI,CAAC,KAAK,YAAY,GAAM,KAAK,EAAG,CAAA,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAA,EAAI,IAAI,CAAC,QAAQ,YAAY,GAAM,KAAK,EAAG,CAAA,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAA,EAAI,IAAI,CAAC,QAAQ,YAAY,GAAM,KAAK,EAAG,CAAA,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAA,EAAI,KAAK,IAAI,IAAI,CAAC,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,AAAT,EAAW,IAAI,CAAC,GAAG,YAAY,GAAM,OAAO,EACpf,CAAA,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,AAAJ,EAAM,IAAI,CAAC,QAAQ,YAAY,GAAM,OAAO,EAAG,CAAA,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,AAAJ,EAAM,IAAI,CAAC,QAAQ,YAAY,GAAM,OAAO,EAAG,CAAA,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,AAAJ,EAAM,IAAI,CAAC,OAAO,YAAY,GAAM,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,SAAQ,AAAR,EAAW,IAAI,CAAC,SAAS,YAAY,GAAM,OAAO,EAAG,CAAA,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,eAAe,YAAY,GAAM,OAAO,EAAG,CAAA,EAAE,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,IAAI,CACvgB,EAAE,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,AAAhB,EAAkB,IAAI,CAAC,WAAW,YAAY,GAAM,OAAO,EAAG,CAAA,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,AAAJ,EAAM,IAAI,CAAC,MAAM,YAAY,GAAM,OAAO,EAAG,CAAA,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,YAAW,AAAX,EAAc,KAAK,IAAI,IAAI,CAAC,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,AAAJ,EAAM,KAAK,IAAI,IAAI,CAAC,eAAe,EAAG,CAAA,EAAE,eAAe,CAAC,IAAI,CAAC,eAAe,AAAf,EAAiB,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,GAAG,GAAM,QAAQ,EAAG,CAAA,EAAE,YAAY,CAAC,IAAI,CAAC,YAAY,AAAZ,EAAc,KAAK,IACpf,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,GAAG,GAAM,aAAa,EAAG,CAAA,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,AAAP,EAAS,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,GAAG,GAAM,cAAc,EAAG,CAAA,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,AAAR,EAAU,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,GAAM,SAAS,EAAG,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,AAAJ,EAAM,EAAE,IAAI,CAAC,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,IAAI,CAAC,OAAM,AAAN,EAAS,CAAC,IAAI,IAAI,CAAC,WAAW,EAAG,CAAA,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,AAAX,EAAa,EAAE,IAAI,CAAC,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,IAAI,CAAC,SAAQ,AAAR,EAAW,CAAC,IAAI,IAAI,CAAC,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,AAAT,EAAW,EAAE,IAAI,CAAC,kBAAkB,EAAG,CAAA,EAAE,kBAAkB,CAAC,IAAI,CAAC,kBAAiB,AAAjB,EAA2B,CAAC,EAC5f,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAC8G,OAD5G,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,aAAa,CACpgB,EAAE,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE,mBAAmB,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAQ,IAAI,AAAA,EAAE,OAAO,WAAW,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,QAAQ,EAAE,EAAE,QAAQ,WAAW,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,SAAS,EAAE,EAAE,IAAI,YAAY,CAAC,QAAQ,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,WAAW,EAAE,CAAC,QAAQ,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,kCAAkC,EAAE,IAAI,SAAS,CAClc,OADmc,QAAQ,IAAI,CAAC,SAC1f,IAAI,CAAC,IAAI,CAAC,gCAAuC,IAAI,GAAM,KAAK,AAAA,CAAC,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,eAAe,CAAC,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,UAAU,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EACxd,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CAAC,GAAM,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAiM,OAA/L,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAQ,IAAI,AAAA,EACnU,GAAM,kBAAkB,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,kBAAkB,CACpY,GAAM,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAoN,OAAlN,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAQ,IAAI,AAAA,EACjR,GAAM,iBAAiB,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,GAAM,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAM,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAM,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAChgB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CACrK,GAAM,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EACqF,OADnF,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAChgB,IAAI,CAAC,iBAAiB,CAAC,EAAE,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAQ,IAAI,AAAA,EACjJ,GAAM,mBAAmB,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,sBAAsB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,UAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAM,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,GAAM,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAM,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EACrgB,GAAM,mBAAmB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,mBAAmB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,mBAAmB,CACrJ,GAAM,mBAAmB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EACyE,OADvE,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,iBAAiB,CAC7f,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAQ,IAAI,AAAA,EACvI,GAAM,iBAAiB,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,UAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAM,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAM,KAAK,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,IAAI,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAC5f,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,GAAM,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAM,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAI,CAAC,YAAY,CAAC,GAAM,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CAC1gB,GAAM,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAEyD,OAFvD,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,WAAW,EAC7f,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAC1f,EAAE,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAQ,IAAI,AAAA,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CACnb,GAAM,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAqH,OAAnH,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAQ,IAAI,AAAA,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,kBAAkB,CACzf,GAAM,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAqH,OAAnH,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAQ,IAAI,AAAA,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,SAAS,CAAC,aAAa,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EACxU,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,aAAa,CAAC,OAAO,WAAW,IAAI,IAAI,EAAE,CAAC,SAAS,CAAC,QAAQ,IAAI,KAAK,WAAW,UAAU,kBAAkB,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,AAAA,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,IAA2B,OAAvB,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAQ,CAAC,EAAE,MAAM,WAAW,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,IAA2B,OAAvB,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAQ,CAAC,CAAC,EAAE,GAAM,gBAAgB,CAAC,GAAM,aAAa,CACtgB,GAAM,cAAc,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,GAAM,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,cAAc,CACnX,GAAM,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAA6L,OAA3L,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAQ,IAAI,AAAA,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,EAAqF,OAAnF,QAAQ,IAAI,CAAC,sEAA6E,IAAI,GAAM,cAAc,CAAC,EAAE,EAClZ,GAAM,qBAAqB,CAAC,SAAS,CAAC,EAAwF,OAAtF,QAAQ,IAAI,CAAC,yEAAgF,IAAI,GAAM,cAAc,CAAC,EAAE,EAAE,GAAM,sBAAsB,CAAC,SAAS,CAAC,EAAyF,OAAvF,QAAQ,IAAI,CAAC,0EAAiF,IAAI,GAAM,cAAc,CAAC,EAAE,EACpU,GAAM,cAAc,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,+FAAgG,IAAI,CAAC,cAAc,CAAC,gEAAiE,IAAI,CAAC,OAAO,CAAC,GAAM,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,GAAM,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CACvf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,AAAA,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,KAAK,IAAI,GAAI,CAAA,KAAK,IAAI,EAAE,UAAU,EAAE,QAAQ,KAAK,CAAC,2FAA2F,IAAI,CAAC,SAAS,CAAC,EAAA,CAAG,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,cAAc,CACza,GAAM,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EACA,OADE,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAM,aAAa,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,YAAY,CACxf,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAQ,IAAI,AAAA,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAA6K,MAA5H,AAA/C,CAAA,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5C,EAAiD,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,cAAc,CAAQ,CAAC,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,EAAE,GAAM,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,cAAc,CAAC,SAAS,EACrd,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CAAC,GAAM,cAAc,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,cAAc,CACpY,GAAM,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAA6H,OAA3H,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAQ,IAAI,AAAA,EACtL,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAM,cAAc,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,wBAAwB,CACpf,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAM,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,GAAM,OAAO,CAAC,eAAe,CAAC,GAAM,SAAS,CACtY,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,OAAO,CAAC,IAAI,YAAY,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EAC1F,OAD4F,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,gBAAgB,CACpgB,EAAE,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAQ,IAAI,AAAA,EAAE,OAAO,SAAS,CAAC,EAAE,GAAG,KAAK,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,QAAQ,IAAI,KAAK,UAAU,UAAU,gBAAgB,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,IAAI,CAAC,SAAS,CAAC,UAAU,IAAI,CAAC,SAAS,CAAC,WAAW,IAAI,CAAC,UAAU,AAAA,EAAE,GAAG,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EACxf,IAAI,CAAC,KAAK,CAAqD,GAApD,KAAK,IAAI,EAAE,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,EAAA,EAAO,KAAK,IAAI,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,IAAiC,EAA7B,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,AAAG,MAAK,IAAI,EAAE,SAAS,CAAC,EAAE,EAAG,CAAA,AAAmC,CAAnC,EAAE,SAAS,aAAa,CAAC,SAAA,EAAY,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,UAAU,CAAC,MAAM,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,CAAA,EAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,SAAS,CAAC,aAAa,IAAI,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,AAAA,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,WAAW,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,SAAS,EAAE,EAAE,YAAY,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,GAC5gB,GAAM,SAAS,CAAC,CAA4C,GAA3C,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,EAAK,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,EAAE,KAAK,GAAM,cAAc,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,EAAE,KAAM,MAAK,GAAM,mBAAmB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,KAAM,MAAK,GAAM,sBAAsB,CAAC,IAAI,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,KAAK,EAAE,KAAK,GAAM,cAAc,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,EAAE,KAAM,MAAK,GAAM,mBAAmB,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,KAAM,MAAK,GAAM,sBAAsB,CAAC,IAAI,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC,EAC7f,GAAG,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAG,CAAA,EAAE,CAAC,CAAC,EAAE,EAAE,CAAA,AAAA,CAAE,CAAC,CAAC,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,GAAM,OAAO,CAAC,SAAS,EAAE,GAAM,cAAc,CAAC,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,OAAO,CAAC,SAAS,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,aAAa,CAClZ,GAAM,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,GAAM,qBAAqB,CAAC,GAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,OAAO,CAAC,SAAS,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,WAAW,CAAC,GAAM,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAiE,OAA/D,GAAM,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAQ,IAAI,AAAA,EACrZ,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,OAAO,CAAC,SAAS,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CACrU,GAAM,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,EAAE,GAAM,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,OAAO,CAAC,SAAS,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,WAAW,CACrY,GAAM,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,WAAW,sBAAsB,GAAG,EAAE,UAAU,GAAG,EAAE,gBAAgB,EAAG,CAAA,EAAE,WAAW,CAAC,CAAC,CAAA,CAAE,EAAE,GAAG,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,OAAO,CAAC,SAAS,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,YAAY,CAAC,GAAM,KAAK,CAAC,WAAW,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAC/d,GAAM,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,KAAK,CAAC,GAAM,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,cAAc,CAAC,CAAC,MAAM,SAAS,KAAK,MAAM,EAAE,EAAE,EAAE,GAAM,MAAM,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,MAAM,CACvW,GAAM,MAAM,CAAC,SAAS,CAAC,OAAO,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,GAAG,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,GAAE,iBAAiB,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,IAAI,EAAE,GAAE,mBAAmB,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAG,CAAA,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,cAAc,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,KAAK,GAAG,MAAM,EAAE,KAAK,KAAK,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,CAA8D,GAA7D,GAAE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,GAAE,IAAI,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,IAAM,OAAO,EAAE,WAAW,EAAE,CAAC,IACpf,GAAE,iBAAiB,CAAC,EAAE,WAAW,EAAE,CAAC,IAAI,EAAE,EAAG,CAAA,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,AAAA,EAAG,CAAA,EAAG,EAAE,EAAE,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,GAAG,aAAa,GAAM,cAAc,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAK,GAAM,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,EACpgB,GAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAqR,OAAlR,KAAK,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAG,CAAA,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAA,EAAI,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAG,CAAA,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAA,EAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAQ,CAAC,EACvX,GAAM,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAqE,OAAnE,QAAQ,IAAI,CAAC,sDAA6D,IAAI,GAAM,MAAM,CAAC,EAAE,EAAE,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAyE,OAAvE,QAAQ,IAAI,CAAC,0DAAiE,IAAI,GAAM,MAAM,CAAC,EAAE,EAAE,EACtQ,GAAM,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,OAAO,QAAQ,IAAI,CAAC,mGAAmG,IAAI,GAAM,YAAY,CAAC,EAAE,GAAG,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAAM,SAAS,KAAK,MAAM,EAAE,EAAE,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,IAAI,CAChd,GAAM,IAAI,CAAC,SAAS,CAAC,OAAO,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,GAAG,CAAC,GAAE,IAAI,GAAM,MAAM,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAA8G,GAA7G,OAAO,EAAE,cAAc,EAAE,EAAE,qBAAqB,GAAG,GAAE,IAAI,CAAC,EAAE,cAAc,EAAE,GAAE,YAAY,CAAC,IAAI,CAAC,WAAW,EAAK,CAAC,IAAI,EAAE,GAAG,CAAC,oBAAoB,CAAC,IAAG,CAAC,GAAE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,GAAE,IAAI,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,IAAG,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,YAAY,GAAM,YAAY,CAAC,EAAE,EAAE,GAAG,aACrf,GAAM,cAAc,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,GAAG,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,GAAoC,AAAjC,CAAA,EAAE,GAAE,mBAAmB,CAAC,EAAE,EAAE,EAAE,EAA9B,EAAmC,GAAI,CAAA,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW,EAA+B,AAA7B,CAAA,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAA,EAAK,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,KAAK,UAAU,KAAK,OAAO,IAAI,AAAA,EAAA,CAAG,MAAM,IAAI,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,EACtf,EAAE,EAAE,GAAoC,AAAjC,CAAA,EAAE,GAAE,mBAAmB,CAAC,EAAE,EAAE,EAAE,EAAA,EAAK,GAAI,CAAA,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW,EAA+B,AAA7B,CAAA,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAA,EAAK,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,KAAK,KAAK,UAAU,KAAK,OAAO,IAAI,AAAA,EAAA,CAAG,MAAM,GAAG,aAAa,GAAM,QAAQ,CAAC,IAAI,AAAa,EAAE,AAAf,CAAA,EAAE,EAAE,QAAQ,AAAR,EAAa,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAA2C,AAAzC,CAAA,EAAE,GAAE,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAA,EAAK,GAAI,CAAA,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW,EAA+B,AAA7B,CAAA,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAA,EAAK,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,GAAG,YAAY,CAAC,IAAI,CAAC,WAAW,EAChgB,MAAM,EAAE,KAAK,KAAK,UAAU,KAAK,OAAO,IAAI,AAAA,EAAA,CAAG,CAAC,GAAK,GAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,EAC/J,GAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAqR,OAAlR,KAAK,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAG,CAAA,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAA,EAAI,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAG,CAAA,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAA,EAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAQ,CAAC,EAAE,GAAM,SAAS,CAAC,EAAE,GAAM,UAAU,CAAC,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAC/e,GAAM,YAAY,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,IAAI,CAAC,SAAS,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,YAAY,CAAC,GAAM,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAAM,SAAS,KAAK,MAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,IAAI,CACzc,GAAM,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,WAAW,GAAG,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAChX,GAAM,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,SAAS,CAAC,SAAE,AAAG,KAAK,IAAI,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAQ,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAC,QAAQ,IAAI,CAAC,sDAAsD,EAAE,iCAAwC,EAAC,EACxP,GAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAiI,OAA/H,GAAM,QAAQ,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAU,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,GAAG,CAAC,EAAE,IAAI,GAAM,MAAM,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAC5f,OAAO,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,IAAI,GAAI,CAAA,OAAO,EAAE,cAAc,EAAE,EAAE,qBAAqB,GAAG,EAAE,IAAI,CAAC,EAAE,cAAc,EAAE,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,oBAAoB,CAAC,IAAK,CAAA,EAAE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,GAAG,OAAO,EAAE,WAAW,EAAE,CAAC,IAAI,EAAE,iBAAiB,CAAC,EAAE,WAAW,CAAA,CAAA,GAAe,GAAG,aAAa,GAAM,cAAc,EAAC,GAAG,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,CACra,GADsa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACtf,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,GAAM,EAAE,IAAI,GAAG,GAAM,QAAQ,CAAE,CAAA,GAAG,OAAO,EAAE,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,QAA1C,MAAwD,GAAG,OAAO,EAAE,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAM,UAAU,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,IAD+E,EAAE,EAAE,EACrB,EAA1D,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,GAAQ,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,GAAS,KAAK,IAAI,EAAE,EAAE,EAAG,CAAA,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAA,EAAI,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,GAAG,GAAG,EAAE,KAAK,IAAI,GAAM,KAAK,CAAC,EACrf,EAAE,EAAE,GAAM,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,UAAU,KAAK,KAAK,CAAC,EAAE,GAAG,OAAO,IAAI,AAAA,GAAG,MAAM,IAAI,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,CAAwD,GAAvD,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,GAAM,EAAE,IAAI,GAAG,GAAM,QAAQ,CAAE,CAAA,GAAG,OAAO,EAAE,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,QAA1C,MAAwD,GAAG,OAAO,EAAE,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAM,UAAU,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW,EAA+B,AAA7B,CAAA,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAA1B,EAA+B,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAG,CAAA,KAAK,IAAI,EAAE,EAAE,EAAG,CAAA,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,EAC9f,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAA,EAAU,EAAE,AAAR,CAAA,EAAE,EAAE,CAAA,EAAM,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,GAAG,GAAG,EAAE,KAAK,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,GAAM,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,MAAM,EAAE,OAAO,IAAI,AAAA,EAAA,CAAG,OAAM,GAAG,aAAa,GAAM,QAAQ,CAAC,IAAI,IAAI,EAAE,aAAa,GAAM,gBAAgB,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE,GAAG,KAAK,IAAI,EAAE,CAA4B,GAA3B,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE,IAAI,CAAC,qBAAqB,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAClf,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,eAAe,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,eAAe,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,eAAe,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,GAAM,QAAQ,CAAE,CAAA,GAAG,OAAO,EAAE,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,QAA1C,MAAwD,GAAG,OAAO,EAAE,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,GAAM,UAAU,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW,EAA+B,AAA7B,CAAA,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAA1B,EAA+B,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EACxf,CAAA,EAAE,EAAE,aAAa,CAAC,EAAE,CAAC,MAAM,EAAG,CAAA,EAAE,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAA,EAAI,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,GAAG,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,IAAI,AAAA,EAAA,CAAG,CAAC,EAAE,CAAC,IAAI,GAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,EAC7S,GAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAuR,OAApR,KAAK,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAG,CAAA,EAAE,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAA,EAAI,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAG,CAAA,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAA,EAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAQ,CAAC,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EACngB,GAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,IAAI,CAAC,GAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAA8D,OAA5D,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAQ,IAAI,AAAA,EACzJ,GAAM,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAC4B,GAD1B,IAAI,CAAC,gBAAgB,CAAC,KAAK,IAAI,GAAE,EAAK,IAAI,CAAC,cAAc,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAE,CAAA,EAAE,KAAK,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,GAAM,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,aAAa,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAM,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAM,UAAU,CAAC,GAAM,SAAS,CAAA,EACjgB,IAAI,CAAC,YAAY,CAAC,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAK,KAAK,IAAI,EAAE,IAAI,CAAC,iBAAiB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,QAAQ,IAAI,QAAQ,IAAI,CAAC,mDAAmD,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EACzU,GAAM,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,WAAW,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,GAAM,OAAO,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,EAC7N,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAK,AAAA,CAAA,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,AAAF,GAAK,EAAE,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAM,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAO,CAAA,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,AAAF,GAAG,CAAA,EAAE,MAAM,CAAE,CAAA,EAAE,MAAM,CAAC,UAAU,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAA,EAAG,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,EAAE,UAAU,CAAC,EAAE,KAAK,CAAA,CAAC,EAClX,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAQ,WAAW,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,GAAE,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,GAAE,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAG,CAAA,IAAI,CAAC,gBAAgB,EAAG,CAAA,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAA,CAAE,GAAK,GAAM,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,EACrc,GAAM,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAA6J,GAA3J,GAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,CAAC,UAAU,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,CAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,GAAM,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,QAAQ,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,EAAM,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAChe,KAAK,AAD6d,CAAA,EACzf,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,AAAF,EAAU,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAM,QAAQ,CAAC,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,IAAI,CAAC,SAAS,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,WAAW,CAAC,GAAM,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,IAAI,CAAC,iBAAiB,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,GAAG,EAAE,IAAI,CAAC,WAAW,AAAX,EAAa,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,EAChhB,GAAM,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,oBAAoB,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,YAAY,GAAM,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,eAAe,EAAG,OAAW,EAAE,EAAE,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAClU,GAAM,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,aAAa,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,aAAa,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,IAAI,CAAC,4CAA4C,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,EAAG,IAAI,CAAC,IAAI,CAAC,EAC5d,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,IAAI,CAAC,SAAS,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,aAAa,CAC1Y,GAAM,aAAa,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,mBAAmB,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,oBAAoB,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EACzW,GAAM,aAAa,CAAC,SAAS,CAAC,eAAe,CAAC,WAAW,IAAI,EAAE,IAAI,CAAC,QAAQ,AAAC,CAAA,EAAE,UAAU,EAAG,CAAA,EAAE,UAAU,CAAC,CAAC,CAAA,EAAG,IAAI,IAAI,EAAE,EAAE,EAAE,UAAU,CAAC,EAAE,kBAAkB,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,MAAM,CAAC,CAAQ,CAAC,CAAR,EAAE,CAAC,CAAC,EAAE,CAAK,EAAG,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,IAAS,IAAI,CAAC,GAAQ,CAAA,EAAG,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,CAAA,EAAE,EAAE,KAAK,EAAG,CAAA,EAAE,KAAK,CAAC,CAAA,EAAG,EAAE,EAAE,GAAG,EAAG,CAAA,EAAE,GAAG,CAAC,CAAA,EAAG,GAAI,CAAA,EAAE,CAAA,CAAE,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,EAC3X,GAAM,aAAa,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAG,CAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAA,EAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,AAAC,CAAA,EAAG,CAAA,IAAI,CAAC,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAE,AAAA,CAAA,EAAE,GAAG,CAAC,EAAE,KAAI,AAAJ,EAAO,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAA,EAAG,QAAQ,IAAI,CAAC,kCAAkC,EAAE,kCAAkC,EAC1a,GAAM,aAAa,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,AAAC,CAAA,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAK,IAAI,CAAC,YAAY,CAAK,CAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,IAAI,AAAJ,GAAK,CAAA,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAG,CAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAA,EAAG,EAAE,IAAI,CAAC,IAAI,EAAG,CAAA,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAA,CAAA,EAAQ,CAAA,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,IAAI,EAAG,CAAA,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAO,AAAP,CAAO,EAAG,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,GAAM,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,qBAAqB,CAChgB,IAAI,IAAI,CAAC,eAAe,EAAG,CAAA,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA,EAAG,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,kBAAkB,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAE,CAAA,GAAG,GAAI,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAA,EAAG,GAAG,GAAI,CAAA,CAAC,CAAC,EAAE,CAAC,CAAA,CAAE,EAC1Z,GAAM,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAoQ,OAAlQ,GAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,kBAAkB,CAAQ,IAAI,AAAA,EAC5T,GAAM,GAAG,CAAC,WAAW,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,AAAA,EAAE,QAAQ,CAAC,IAAI,WAA4E,OAAjE,QAAQ,IAAI,CAAC,oDAA2D,IAAI,CAAC,MAAM,AAAA,CAAC,CAAC,EAAE,EAAE,GAAM,GAAG,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,GAAG,CACnV,GAAM,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,CAAE,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,AAAR,EAAU,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAM,GAAG,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,CAAE,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,AAAR,EAAU,KAAK,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,AAAA,EACrU,GAAM,GAAG,CAAC,SAAS,CAAC,OAAO,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,GAAE,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,IAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,OAAO,CAAC,EAAE,EAAE,GACxM,GAAM,GAAG,CAAC,SAAS,CAAC,MAAM,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,GAAE,qBAAqB,CAAC,EAAE,WAAW,EAAE,GAAE,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,GAAE,UAAU,CAAC,IAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,MAAM,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAClZ,GAAM,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,KAAK,GAAG,EAAE,QAAQ,CAAC,CAAC,OAAO,IAAI,AAAA,EAAE,GAAM,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAiD,AAA/C,CAAA,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5C,EAAiD,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,AAAA,EAAE,CAAC,OAAO,CAAC,EAC5a,GAAM,MAAM,EAAgB,GAAE,IAAI,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAE,IAAI,aAAa,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,GAAE,IAAI,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA6B,CAA3B,GAAE,IAAI,GAAM,cAAc,EAAG,QAAQ,CAAC,IAAI,GAAM,eAAe,CAAC,GAAE,IAAI,GAAE,YAAY,CAAC,WAAW,IAAI,GAAM,eAAe,CAAC,GAAE,IAAI,GAAE,YAAY,CAAC,KAAK,IAAI,GAAM,eAAe,CAAC,GAAE,IAAW,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,GAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,GAAM,cAAc,AAAA,GAAK,GAAM,MAAM,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EACthB,GAAM,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,MAAM,CAAC,GAAM,MAAM,CAAC,SAAS,CAAC,OAAO,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,CAAC,CAAC,EAAE,GAAE,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,iBAAiB,CAAC,GAAG,CAAA,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,KAAK,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,OAAO,IAAI,AAAA,EAAE,GAAK,GAAM,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAM,IAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAG,IAAI,CAAC,IAAI,CAAC,EAC3Z,GAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAA2I,OAAxI,KAAK,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAG,CAAA,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAA,EAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAQ,CAAC,EAAE,GAAM,QAAQ,CAAC,GAAM,MAAM,CAAC,GAAM,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,KAAK,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EACpgB,GAAM,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,SAAS,CAAC,GAAM,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,EAAA,EAAI,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,KAAK,CAAC,SAAA,EAAW,KAAK,IAAI,GAAI,CAAA,EAAE,GAAM,cAAc,AAAd,EAAgB,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,EAAE,EAC3X,GAAM,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,IAAI,EAA2B,EAAzB,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAG,EAAE,CAAA,CAAA,EAAG,IAAI,CAAC,cAAc,CAAC,CAAC,AAAD,EAAE,EAAE,CAAA,CAAA,EAAG,IAAI,CAAC,cAAc,CAAC,CAAC,AAAD,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,AAAqB,CAArB,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,AAAF,EAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,cAAc,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAK,CAAA,EAAE,cAAc,CAAC,EAAE,QAAO,AAAP,CAAS,EAC9U,GAAM,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,cAAc,EAAE,IAAI,CAAC,oBAAoB,CAAC,EAAE,oBAAoB,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,AAAA,EAAE,GAAM,KAAK,CAAC,WAAW,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,KAAK,CACrf,GAAM,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAwO,OAAtO,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,EAAE,GAAG,EAAG,CAAA,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,KAAK,EAAA,EAAI,OAAO,EAAE,gBAAgB,EAAG,CAAA,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,KAAK,EAAA,EAAI,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,gBAAgB,CAAQ,IAAI,AAAA,EAAE,GAAM,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,GAAG,EAAE,GAAM,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EACpf,GAAM,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,KAAM,EAAE,GAAM,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,GAAM,WAAW,CAAC,CAAC,EAAE,GAAM,WAAW,CAAC,iBAAiB,CAAC,sFAAuF,GAAM,WAAW,CAAC,sBAAsB,CAAC,kEAAmE,GAAM,WAAW,CAAC,kBAAkB,CAAC,8EAC/e,GAAM,WAAW,CAAC,cAAc,CAAC,qHAAsH,GAAM,WAAW,CAAC,mBAAmB,CAAC,0FAA4F,GAAM,WAAW,CAAC,YAAY,CAAC,2CAA2C,GAAM,WAAW,CAAC,kBAAkB,CAAC,0CAA0C,GAAM,WAAW,CAAC,qBAAqB,CAAC,4jCAC1d,GAAM,WAAW,CAAC,cAAc,CAAC,6DAA8D,GAAM,WAAW,CAAC,mBAAmB,CAAC,wDAAyD,GAAM,WAAW,CAAC,iBAAiB,CAAC,sDAAuD,GAAM,WAAW,CAAC,YAAY,CAAC,yDAA0D,GAAM,WAAW,CAAC,MAAM,CAAC,u6FAC3Y,GAAM,WAAW,CAAC,oBAAoB,CAAC,2HAA4H,GAAM,WAAW,CAAC,sBAAsB,CAAC,oJAAqJ,GAAM,WAAW,CAAC,2BAA2B,CAAC,qJAC/Y,GAAM,WAAW,CAAC,oBAAoB,CAAC,sMAAyM,GAAM,WAAW,CAAC,yBAAyB,CAAC,wEAAyE,GAAM,WAAW,CAAC,eAAe,CAAC,iwDACvY,GAAM,WAAW,CAAC,oBAAoB,CAAC,uWAAuX,GAAM,WAAW,CAAC,kBAAkB,CAAC,sLACnc,GAAM,WAAW,CAAC,aAAa,CAAC,mcAChC,GAAM,WAAW,CAAC,YAAY,CAAC,kcAC/B,GAAM,WAAW,CAAC,iBAAiB,CAAC,iLAA2L,GAAM,WAAW,CAAC,iBAAiB,CAAC,gHAAiH,GAAM,WAAW,CAAC,sBAAsB,CAAC,mGAC7Z,GAAM,WAAW,CAAC,0BAA0B,CAAC,mjCAC7C,GAAM,WAAW,CAAC,qBAAqB,CAAC,guFACxC,GAAM,WAAW,CAAC,qBAAqB,CAAC,4tHACxC,GAAM,WAAW,CAAC,0BAA0B,CAAC,8uCAC7C,GAAM,WAAW,CAAC,wBAAwB,CAAC,gGAAiG,GAAM,WAAW,CAAC,mBAAmB,CAAC,uGAAwG,GAAM,WAAW,CAAC,wBAAwB,CAAC,wDAAyD,GAAM,WAAW,CAAC,oBAAoB,CAAC,uIACra,GAAM,WAAW,CAAC,yBAAyB,CAAC,+IAAoJ,GAAM,WAAW,CAAC,uBAAuB,CAAC,6IAAkJ,GAAM,WAAW,CAAC,kBAAkB,CAAC,wQACja,GAAM,WAAW,CAAC,YAAY,CAAC,gKAAmK,GAAM,WAAW,CAAC,iBAAiB,CAAC,sDAAuD,GAAM,WAAW,CAAC,qBAAqB,CAAC,uJACrU,GAAM,WAAW,CAAC,0BAA0B,CAAC,qFAAuF,GAAM,WAAW,CAAC,kBAAkB,CAAC,gVACzK,GAAM,WAAW,CAAC,uBAAuB,CAAC,kLAAuL,GAAM,WAAW,CAAC,kBAAkB,CAAC,0qBACtQ,GAAM,WAAW,CAAC,uBAAuB,CAAC,0tBAC1C,GAAM,WAAW,CAAC,cAAc,CAAC,8MAAgN,GAAM,WAAW,CAAC,kBAAkB,CAAC,snNACtR,GAAM,WAAW,CAAC,uBAAuB,CAAC,kfAC1C,GAAM,WAAW,CAAC,qBAAqB,CAAC,2HAA6H,GAAM,WAAW,CAAC,gBAAgB,CAAC,iJAAqJ,GAAM,WAAW,CAAC,eAAe,CAAC,kOAC/X,GAAM,WAAW,CAAC,oBAAoB,CAAC,uiCACvC,GAAM,WAAW,CAAC,eAAe,CAAC,qXAA4X,GAAM,WAAW,CAAC,iBAAiB,CAAC,6WAClc,GAAM,WAAW,CAAC,oBAAoB,CAAC,iMAAoM,GAAM,WAAW,CAAC,yBAAyB,CAAC,sEAAuE,GAAM,WAAW,CAAC,iBAAiB,CAAC,uFAClY,GAAM,WAAW,CAAC,eAAe,CAAC,6GAA+G,GAAM,WAAW,CAAC,UAAU,CAAC,gFAAiF,GAAM,WAAW,CAAC,gBAAgB,CAAC,sMAClS,GAAM,WAAW,CAAC,cAAc,CAAC,qOAAuO,GAAM,WAAW,CAAC,SAAS,CAAC,kOACpS,GAAM,WAAW,CAAC,eAAe,CAAC,+QAClC,GAAM,aAAa,CAAC,CAAC,MAAM,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAuB,EAAnB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAI,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,AAAA,CAAC,OAAO,CAAC,EAAE,MAAM,SAAS,CAAC,EAAE,IAAS,EAAL,EAAE,CAAC,EAAI,IAAI,KAAK,EAAW,IAAI,IAAI,KAAhB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAe,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,AAAC,CAAA,aAAa,GAAM,KAAK,EAAE,aAAa,GAAM,OAAO,EAAE,aAAa,GAAM,OAAO,EAAE,aAAa,GAAM,OAAO,EAAE,aAAa,GAAM,OAAO,EAAE,aAAa,GAAM,OAAO,EAAE,aAAa,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE,OAAO,CAAC,CAAC,EAC5d,GAAM,WAAW,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,MAAM,IAAI,GAAM,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,aAAa,CAAC,KAAK,KAAK,MAAM,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,SAAS,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,OAAO,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,WAAW,CAAC,KAAK,IAAI,MAAM,EAAE,EAAE,aAAa,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,gBAAgB,CAAC,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,eAAe,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,kBAAkB,CAAC,KAAK,IACvgB,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,YAAY,CAAC,KAAK,IAAI,MAAM,IAAI,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,UAAU,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,YAAY,CAAC,KAAK,KAAK,MAAM,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,kBAAkB,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,iBAAiB,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,MAAM,KAAM,EAAE,QAAQ,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,OAAO,CAAC,KAAK,IAAI,MAAM,GAAG,EAAE,SAAS,CAAC,KAAK,IAAI,MAAM,IAAI,GAAM,KAAK,CAAC,SAAS,CAAC,EACnf,OAAO,CAAC,kBAAkB,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,0BAA0B,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,sBAAsB,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,yBAAyB,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,wBAAwB,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,2BAA2B,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,gBAAgB,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,mBAAmB,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,mBAAmB,CAAC,KAAK,MAAM,MAAM,EAAE,AAAA,EAAE,gBAAgB,CAAC,KAAK,MAAM,MAAM,EAAE,AAAA,EAAE,eAAe,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,kBAAkB,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EACzf,mBAAmB,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,kBAAkB,CAAC,KAAK,MAAM,MAAM,EAAE,AAAA,EAAE,kBAAkB,CAAC,KAAK,MAAM,MAAM,EAAE,AAAA,EAAE,kBAAkB,CAAC,KAAK,MAAM,MAAM,EAAE,AAAA,EAAE,eAAe,CAAC,KAAK,MAAM,MAAM,EAAE,AAAA,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,MAAM,IAAI,GAAM,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,aAAa,CAAC,KAAK,KAAK,MAAM,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,KAAK,IAAI,MAAM,KAAM,EAAE,QAAQ,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,OAAO,CAAC,KAAK,IAAI,MAAM,GAAG,EACzf,SAAS,CAAC,KAAK,IAAI,MAAM,IAAI,GAAM,KAAK,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,KAAK,KAAK,MAAM,EAAE,AAAA,EAAE,cAAc,CAAC,KAAK,MAAM,MAAM,EAAE,AAAA,EAAE,WAAW,CAAC,KAAK,MAAM,MAAM,EAAE,AAAA,EAAE,eAAe,CAAC,KAAK,MAAM,MAAM,EAAE,AAAA,EAAE,aAAa,CAAC,KAAK,MAAM,MAAM,EAAE,AAAA,CAAC,CAAC,EAC5O,GAAM,SAAS,CAAC,CAAC,MAAM,CAAC,SAAS,GAAM,aAAa,CAAC,KAAK,CAAC,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,KAAK,CAAC,GAAM,WAAW,CAAC,GAAG,CAAC,GAAM,WAAW,CAAC,SAAS,CAAC,EAAE,aAAa,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,qBAAqB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CACtf,gBAAgB,GAAM,WAAW,CAAC,SAAS,CAAC,GAAM,WAAW,CAAC,UAAU,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,qBAAsB,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,UAAW,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,eAAe,CAC7gB,GAAM,WAAW,CAAC,aAAa,CAAC,GAAM,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,gDAAgD,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,mBAAmB,CAAC,GAAM,WAAW,CAAC,gBAAgB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,sBAAsB,CAAC,GAAM,WAAW,CAAC,mBAAmB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAChgB,GAAM,WAAW,CAAC,yBAAyB,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAAC,4IAA+I,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,yDAC/d,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,wBAAwB,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,4DAA6D,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,SAAS,GAAM,aAAa,CAAC,KAAK,CAAC,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,GAAG,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,KAAK,IAAI,MAAM,IAAI,GAAM,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC,qGAC3a,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,0BAA0B,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,qBAAqB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,gBAAgB,GAAM,WAAW,CAAC,SAAS,CAAC,GAAM,WAAW,CAAC,UAAU,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,kBAAkB,CACjgB,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,aAAa,CAAC,GAAM,WAAW,CAAC,qBAAqB,CAAC,GAAM,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,2JAC3e,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,mBAAmB,CAAC,GAAM,WAAW,CAAC,gBAAgB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,sBAAsB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAAC,oGACha,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,uQAAsR,GAAM,WAAW,CAAC,eAAe,CAC9gB,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,wBAAwB,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,4DAA6D,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,GAAM,aAAa,CAAC,KAAK,CAAC,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,KAAK,CAAC,GAAM,WAAW,CAAC,QAAQ,CAAC,GAAM,WAAW,CAAC,WAAW,CAAC,GAAM,WAAW,CAAC,OAAO,CAAC,GAAM,WAAW,CAAC,SAAS,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,GAAG,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,KAAK,IACjgB,MAAM,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,KAAK,IAAI,MAAM,IAAI,GAAM,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC,kGAAmG,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,2BAA2B,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,wBAAwB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CACtgB,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,qBAAqB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,gBAAgB,GAAM,WAAW,CAAC,SAAS,CAAC,GAAM,WAAW,CAAC,UAAU,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,0EAA2E,GAAM,WAAW,CAAC,YAAY,CACjgB,GAAM,WAAW,CAAC,sBAAsB,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,qCAAsC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,aAAa,CAAC,GAAM,WAAW,CAAC,mBAAmB,CAAC,GAAM,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,yIACvY,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,mBAAmB,CAAC,GAAM,WAAW,CAAC,gBAAgB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,sBAAsB,CAAC,GAAM,WAAW,CAAC,mBAAmB,CAAC,GAAM,WAAW,CAAC,sBAAsB,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,0BAA0B,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,GAAM,WAAW,CAAC,qBAAqB,CACvhB,GAAM,WAAW,CAAC,uBAAuB,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAAC,wLAA4L,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CACphB,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,qBAAqB,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,wBAAwB,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,4DAA6D,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,GAAM,aAAa,CAAC,KAAK,CAAC,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,SAAS,CAAC,EAAE,aAAa,CAAC,4CAChe,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,qBAAqB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,gBAAgB,GAAM,WAAW,CAAC,YAAY,CAAC,kPAA2P,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,eAAe,CAC/f,GAAM,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,gDAAgD,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,mBAAmB,CAAC,GAAM,WAAW,CAAC,0BAA0B,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAAC,oGAAsG,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,qBAAqB,CAC7gB,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,qCAAsC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,4DAA6D,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,GAAM,aAAa,CAAC,KAAK,CAAC,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,SAAS,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,UAAU,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,EAAE,EAAE,aAAa,CAAC,oFACzb,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,gBAAgB,GAAM,WAAW,CAAC,YAAY,CAAC,qJAAwJ,GAAM,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,iIAAiI,GAAM,WAAW,CAAC,MAAM,CAC5gB,GAAM,WAAW,CAAC,mBAAmB,CAAC,GAAM,WAAW,CAAC,iBAAiB,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAAC,0KAAgL,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,qCAAsC,GAAM,WAAW,CAAC,YAAY,CAAC,4DAA6D,CAAC,IAAI,CAAC,KAAK,EAC3f,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,KAAK,IAAI,MAAM,GAAG,EAAE,QAAQ,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,EAAE,aAAa,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,gBAAgB,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,oEAAoE,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAC7hB,gBAAgB,GAAM,WAAW,CAAC,oBAAoB,CAAC,gQAAyQ,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,EAAE,aAAa,CAAC,wBAAwB,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAC7gB,gEAAiE,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,gDAAgD,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAAC,oFAAqF,GAAM,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,IACzgB,MAAM,IAAI,EAAE,MAAM,CAAC,KAAK,IAAI,MAAM,EAAE,CAAC,EAAE,aAAa,CAAC,+BAA+B,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,4JAA8J,GAAM,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,iFAAiF,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAC/gB,4GAA6G,GAAM,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,IAAI,MAAM,IAAI,EAAE,MAAM,CAAC,KAAK,IAAI,MAAM,EAAE,CAAC,EAAE,aAAa,CAAC,+BAA+B,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,4JACpW,GAAM,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,mFAAmF,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAAC,oQAAoQ,GAAM,WAAW,CAAC,oBAAoB,CACvgB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,aAAa,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,GAAM,WAAW,CAAC,oBAAoB,CAAC,GAAM,WAAW,CAAC,uBAAuB,CAAC,gBAAgB,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,YAAY,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,GAAM,WAAW,CAAC,eAAe,CAAC,GAAM,WAAW,CAAC,cAAc,CAAC,GAAM,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,eAAe,CAAC,GAAM,WAAW,CAAC,MAAM,CAAC,GAAM,WAAW,CAAC,yBAAyB,CAC5gB,yVAA8V,GAAM,WAAW,CAAC,oBAAoB,CAAC,2JAAkK,CAAC,IAAI,CAAC,KAAK,CAAC,EACnjB,GAAM,aAAa,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,GAAI,CAAA,GAAG,EAAE,GAAG,EAAE,GAAG,CAAA,EAAG,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS,IAAI,GAAE,IAAI,GAAG,EAAE,QAAQ,CAAC,GAAG,GAAG,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,CAAC,SAAS,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,GAAE,KAAK,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,cAAc,GAAG,IAAI,IAAI,GAAE,KAAK,EAAE,CAAC,SAAS,EAAE,CAAC,EAAa,AAAX,CAAA,EAAE,EAAE,MAAM,AAAN,EAAS,mBAAmB,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI,EAAE,GAAE,GAAG,CAAC,GAAG,GAAG,EAAE,KAAK,EAAE,EAAE,yBAAyB,CAAC,EAAE,aAAa,CAAC,EAAE,yBAAyB,MAAM,CAAC,GAAG,KAAK,IAAI,EAAE,WAAW,CAAC,MAAM,EAAE,EAAE,aAAa,CAAC,EAAE,cAAc,CAAC,CAAC,GAAE,MAAM,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAC/gB,SAAS,EAAE,CAAC,EAAa,AAAX,CAAA,EAAE,EAAE,MAAM,AAAN,EAAS,mBAAmB,CAAC,UAAU,GAAG,IAAI,EAAE,GAAE,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,IAAI,EAAE,cAAc,CAAC,CAAmC,GAAlC,EAAE,aAAa,CAAC,EAAE,cAAc,EAAK,aAAa,GAAM,qBAAqB,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,iBAAiB,CAAC,EAAE,kBAAkB,CAAC,EAAE,EAAE,EAAE,kBAAkB,CAAC,EAAE,mBAAmB,CAAC,EAAE,OAAO,EAAE,iBAAiB,CAAC,EAAE,kBAAkB,EAAE,EAAE,kBAAkB,CAAC,EAAE,mBAAmB,EAAE,GAAE,MAAM,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,EAAa,AAAX,CAAA,EAAE,EAAE,MAAM,AAAN,EAAS,mBAAmB,CAAC,UAAU,GAAG,EAAE,GAAG,GAAE,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,EAC9f,GAAE,GAAG,CAAC,GAAG,OAAO,AAAC,CAAA,EAAE,OAAO,CAAC,KAAK,EAAE,KAAK,IAAI,GAAG,GAAG,cAAc,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,AAAA,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,WAAW,GAAG,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,QAAQ,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,AAAA,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,WAAW,GAAG,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,AAAA,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAE,CAAA,EAAE,WAAW,CAAE,CAAA,EAAE,EAAG,EAAE,EAAE,CAAA,EAAK,CAAA,EAAE,EAAG,EAAE,EAAE,CAAA,EAC3e,KAAK,IAAZ,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAe,CAAA,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,GAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA,EAAI,CAAA,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,GAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,EAAA,CAAG,CACqV,SAAS,EAAE,CAAC,CAC1f,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,KAAK,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,eAAe,CAAC,gBAAgB,CAAC,EAAE,kBAAkB,CAAC,EAAE,WAAW,EAAE,EAAE,YAAY,CAAC,eAAe,CAAC,EAAE,eAAe,EAAE,GAAG,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,gBAAgB,CAAC,EAAE,kBAAkB,CAAC,EAAE,WAAW,EAAE,EAAE,YAAY,CAAC,eAAe,CAAC,EAAE,eAAe,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,QAAQ,AAAR,EAAU,EAAE,GAAG,IAAI,EAAE,EAAE,EACrf,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,GAAG,qBAAqB,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,IAAI,GAAG,GAAM,UAAU,CAAC,GAAE,MAAM,CAAC,EAAE,SAAS,EAAE,GAAE,OAAO,CAAC,EAAE,SAAS,EAAE,GAAE,YAAY,CAAC,EAAE,IAAI,GAAG,GAAM,QAAQ,EAAE,CAAC,IAAI,EAAE,WAAW,CAAC,GAAE,WAAW,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE,kBAAkB,CAAC,EAAE,aAAa,CAAC,EAAE,aAAa,EAAE,GAAE,WAAW,CAAC,GAAM,UAAU,EAAE,GAAE,YAAY,CAAC,EAAE,SAAS,EAAE,GAAE,YAAY,CAAC,EAAE,SAAS,EAAE,GAAE,aAAa,CAAC,EAAE,UAAU,EAAE,GAAE,aAAa,CAAC,EAAE,UAAU,EAAE,GAAE,gBAAgB,CAAC,EAAE,aAAa,CAClgB,EAAE,mBAAmB,CAAC,EAAE,kBAAkB,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAE,GAAG,CAAC,GAAG,GAAG,EAAE,WAAW,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,GAAE,GAAG,CAAC,GAAG,EAAE,GAAG,aAAa,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,cAAc,CAAC,EAAE,GAAG,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,IAAI,EAAE,EAAE,gBAAgB,CAAC,UAAU,QAAQ,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE,QAAQ,GAAG,KAAK,IAAI,EAAE,QAAQ,CAAC,MAAM,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAM,SAAS,CAAC,EAAE,QAAQ,CAAC,AAAC,CAAA,EAAE,aAAa,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,GAAM,aAAa,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,aAAa,EAAE,YAAY,CAAC,eAAe,EAAE,cAAc,AAAA,CAAC,MAAM,EAAE,aAAa,CACphB,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,aAAa,EAAE,YAAY,CAAC,eAAe,EAAE,cAAc,AAAA,CAAE,CAAA,EAAE,aAAa,CAAC,EAAE,aAAa,CAAC,EAAE,GAAG,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,aAAa,GAAG,GAAG,EAAE,YAAY,CAAC,IAAI,IAAI,EAAE,EAAE,wBAAwB,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,IAAI,GAAG,CAAC,CAAC,cAAc,EAAE,EAAE,EAAE,wBAAwB,GAAG,GAAG,EAAE,YAAY,CAAC,IAAI,EAAE,EAAE,wBAAwB,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,IAAI,GAAG,CAAC,CAAC,cAAc,EAAE,EAAE,EAAE,wBAAwB,EAAG,CAAA,EAAE,YAAY,CAAC,EAAE,CAAC,IACne,EADue,EAAE,EAAE,OAAO,CAAC,WAAW,GAC5f,IAAI,KAAK,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,CAAA,GAAG,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,WAAW,GAAG,EAAE,EAAE,aAAa,CAAC,QAAQ,CACwN,GADvN,EAAE,EAAE,GAAG,IAAK,CAAA,EAAE,UAAU,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA,EAAG,EAAE,EAAE,GAAG,IAAK,CAAA,KAAK,IAAK,CAAA,EAAE,CAAC,CAAA,EAAG,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAA,EAAM,CAAA,GAAG,IAAI,EAAA,GAAG,CAAA,EAAE,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,CAAC,EAAE,EAAE,gBAAgB,CAAC,QAAQ,EAAE,GAAG,sBAAsB,EAAE,EAAE,SAAS,CAAC,EAAE,aAAa,CAAC,EAAG,CAAA,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,GAAG,AAAH,GAAM,IAAI,IAAK,CAAA,GAAG,CAAA,EAAG,AAAC,CAAA,aAAa,GAAM,cAAc,EACjgB,aAAa,GAAM,iBAAiB,EAAE,EAAE,MAAM,AAAN,GAAS,KAAK,IAAI,EAAE,cAAc,EAAG,CAAA,GAAE,qBAAqB,CAAC,EAAE,WAAW,EAAE,EAAE,SAAS,CAAC,EAAE,cAAc,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,CAAA,EAAG,AAAC,CAAA,aAAa,GAAM,iBAAiB,EAAE,aAAa,GAAM,mBAAmB,EAAE,aAAa,GAAM,iBAAiB,EAAE,aAAa,GAAM,cAAc,EAAE,EAAE,QAAQ,AAAR,GAAW,KAAK,IAAI,EAAE,UAAU,EAAE,EAAE,gBAAgB,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,EAAE,kBAAkB,CAAC,QAAQ,CAAA,EAAK,EAAE,QAAQ,EAAC,GAAG,EAAE,UAAU,EAAE,KAAK,IAAI,EAAE,UAAU,EAAE,EAAE,gBAAgB,CAAC,EAAE,UAAU,CAAC,CAAC,EACpf,EAAE,UAAU,CAAC,QAAQ,EAAE,EAAE,iBAAiB,EAAE,KAAK,IAAI,EAAE,iBAAiB,EAAE,EAAE,gBAAgB,CAAC,EAAE,iBAAiB,CAAC,CAAC,EAAE,EAAE,iBAAiB,CAAC,QAAQ,EAAE,GAAG,mBAAmB,EAAE,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,gBAAgB,CAAC,CAAC,GAAG,KAAK,IAAI,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,gBAAgB,EAAE,EAAE,SAAS,CAAC,EAAE,gBAAgB,CAAC,EAAE,QAAQ,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE,iBAAiB,EAAE,EAAE,SAAS,CAAC,EAAE,iBAAiB,CAAC,EAAE,QAAQ,CAAC,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EACjgB,EAAE,QAAQ,CAAC,YAAY,EAAE,KAAK,IAAI,EAAE,kBAAkB,EAAE,EAAE,gBAAgB,CAAC,EAAE,kBAAkB,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE,CAAsK,GAArK,GAAG,EAAE,GAAG,EAAG,CAAA,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,aAAa,GAAM,GAAG,CAAE,CAAA,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,GAAE,AAAF,EAAK,aAAa,GAAM,OAAO,EAAG,CAAA,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,OAAO,AAAP,CAAO,EAAM,aAAa,GAAM,iBAAiB,EAAE,aAAa,GAAM,mBAAmB,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,IAAS,EAAE,EAAE,EAAc,EAAG,EAAE,EAAG,EAAG,EAAlC,EAAE,CAAC,EAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAqB,EAAG,EAAE,kBAAkB,CAAC,EAAG,AAA9B,GAAiC,WAAW,CAAC,MAAM,CAAC,EAAG,AAAvD,GAA0D,WAAW,CAAC,SAAS,CACngB,EAAG,AADib,GAC9a,KAAK,CAAC,MAAM,CAAC,EAAG,AAD8Z,GAC3Z,KAAK,CAAC,SAAS,CAAC,EAAG,AADwY,GACrY,KAAK,CAAC,SAAS,CAAC,EAAG,AADkX,GAC/W,KAAK,CAAC,MAAM,CAAC,GAAG,AAD+V,GAC5V,IAAI,CAAC,MAAM,CAAC,GAAG,AAD6U,GAC1U,IAAI,CAAC,SAAS,CAAC,GAAG,AADwT,GACrT,IAAI,CAAC,SAAS,CAAC,GAAG,AADmS,GAChS,IAAI,CAAC,UAAU,CAAC,GAAG,AAD6Q,GAC1Q,IAAI,CAAC,SAAS,CAAC,GAAG,AADwP,GACrP,IAAI,CAAC,SAAS,CAAC,GAAG,AADmO,GAChO,IAAI,CAAC,MAAM,CAAC,GAAG,AADiN,GAC9M,IAAI,CAAC,SAAS,CAAC,GAAG,AAD4L,GACzL,IAAI,CAAC,YAAY,CAAC,GAAG,AADoK,GACjK,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAM,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAW,AAAP,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAK,UAAU,EAAG,CAAA,EAAG,EAAE,KAAK,CAAC,EAAG,EAAE,SAAS,CAAC,EAAE,EAAE,QAAQ,CAAC,aAAa,GAAM,YAAY,CAAC,EAAE,OAAO,EAAG,CAAA,GAAG,EAAG,CAAC,CAAC,GAAG,EAAG,CAAC,CAAC,GAClf,EAAG,CAAA,AAAA,EAAG,aAAa,GAAM,gBAAgB,CAAE,CAAA,IAAI,EAAE,EAAE,OAAO,EAAG,CAAA,GAAG,qBAAqB,CAAC,EAAE,WAAW,EAAE,GAAE,qBAAqB,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,IAAG,GAAG,kBAAkB,CAAC,GAAY,CAAE,CAAC,AAAX,CAAA,GAAG,EAAE,EAAA,EAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAG,GAAG,EAAG,GAAI,IAAI,CAAA,CAAA,EAAI,aAAa,GAAM,UAAU,CAAE,CAAA,IAAI,EAAE,EAAE,OAAO,EAAG,CAAA,AAAQ,EAAE,EAAV,GAAG,EAAE,GAAW,EAAG,GAAI,GAAE,qBAAqB,CAAC,EAAE,WAAW,EAAE,GAAE,YAAY,CAAC,GAAI,CAAE,CAAC,GAAG,EAAE,CAAC,GAAE,CAAC,CAAC,CAAE,CAAC,GAAG,EAAE,CAAC,GAAE,CAAC,CAAC,CAAE,CAAC,GAAG,EAAE,CAAC,GAAE,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAA,CAAA,EAAI,aAAa,GAAM,SAAS,CACrf,CAAA,IAAI,EAAE,EAAE,OAAO,EAAG,CAAA,AAAQ,EAAE,GAAV,GAAG,EAAE,GAAW,EAAG,GAAI,GAAG,qBAAqB,CAAC,EAAE,WAAW,EAAE,GAAE,IAAI,CAAC,IAAI,YAAY,CAAC,GAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,GAAE,qBAAqB,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,IAAG,GAAG,kBAAkB,CAAC,GAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAA,CAAA,EAAI,aAAa,GAAM,eAAe,EAAG,CAAA,IAAI,EAAE,EAAE,OAAO,EAAG,CAAA,GAAG,qBAAqB,CAAC,EAAE,WAAW,EAAE,GAAG,kBAAkB,CAAC,GAAY,EAAE,CAAC,AAAX,CAAA,GAAG,EAAE,EAAA,EAAS,EAAE,CACtf,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,EAAG,EAAE,WAAW,CAAC,EAAE,GAAG,GAAG,EAAE,GAAI,EAAE,GAAG,GAAG,EAAG,GAAI,IAAI,CAAA,CAAA,CAAC,EAAW,IAAP,EAAE,EAAE,GAAO,EAAE,KAAK,GAAG,CAAC,EAAG,MAAM,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,CAAE,CAAC,EAAE,CAAC,EAAS,IAAP,EAAE,EAAE,GAAO,EAAE,KAAK,GAAG,CAAC,EAAG,MAAM,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,CAAE,CAAC,EAAE,CAAC,EAAS,IAAP,EAAE,EAAE,GAAO,EAAE,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAS,IAAP,EAAE,EAAE,GAAO,EAAE,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAS,IAAP,EAAE,EAAE,GAAO,EAAE,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAE,CAJoE,GAIjE,WAAW,CAAC,MAAM,CAAC,GAAG,AAJ2C,GAIxC,KAAK,CAAC,MAAM,CAAC,GAAG,AAJwB,GAIrB,IAAI,CAAC,MAAM,CAAC,GAAG,AAJM,GAIH,IAAI,CAAC,MAAM,CAAC,GAAG,AAJZ,GAIe,OAAO,CAAC,EAAE,CAAC,EAAE,AAJ5B,GAI+B,OAAO,CAAC,EAAE,CAAC,EAAE,AAJ5C,GAI+C,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAI,GACtf,EAAE,iBAAiB,CAAC,KAAK,CAAC,AAA7B,GAAgC,OAAO,CAAC,EAAE,qBAAqB,CAAC,KAAK,CAAC,AAAtE,GAAyE,WAAW,CAAC,MAAM,CAAC,EAAE,yBAAyB,CAAC,KAAK,CAAC,AAA9H,GAAiI,WAAW,CAAC,SAAS,CAAC,EAAE,eAAe,CAAC,KAAK,CAAC,AAA/K,GAAkL,KAAK,CAAC,MAAM,CAAC,EAAE,kBAAkB,CAAC,KAAK,CAAC,AAA1N,GAA6N,KAAK,CAAC,SAAS,CAAC,EAAE,kBAAkB,CAAC,KAAK,CAAC,AAAxQ,GAA2Q,KAAK,CAAC,SAAS,CAAC,EAAE,eAAe,CAAC,KAAK,CAAC,AAAnT,GAAsT,KAAK,CAAC,MAAM,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,AAA1V,GAA6V,IAAI,CAAC,MAAM,CAAC,EAAE,iBAAiB,CAAC,KAAK,CAAC,AAAnY,GAAsY,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,CAAC,KAAK,CAAC,AAA/a,GAAkb,IAAI,CAAC,SAAS,CAAC,EAAE,kBAAkB,CAAC,KAAK,CAAC,AAA5d,GAA+d,IAAI,CAAC,UAAU,CAAC,EAAE,iBAAiB,CAAC,KAAK,CACxgB,AADA,GACG,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,CAAC,KAAK,CAAC,AAD5C,GAC+C,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,AADrF,GACwF,IAAI,CAAC,MAAM,CAAC,EAAE,uBAAuB,CAAC,KAAK,CAAC,AADpI,GACuI,IAAI,CAAC,SAAS,CAAC,EAAE,0BAA0B,CAAC,KAAK,CAAC,AADzL,GAC4L,IAAI,CAAC,YAAY,CAAC,EAAE,wBAAwB,CAAC,KAAK,CAAC,AAD/O,GACkP,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,IAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,aAAa,GAAM,iBAAiB,EAAE,aAAa,GAAM,mBAAmB,EAAE,aAAa,GAAM,iBAAiB,CAAC,CACtD,GADuD,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,QAAQ,EAAG,CAAA,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,QAAO,AAAP,EAAU,EAAE,GAAG,CAAC,KAAK,CACpf,EAAE,GAAG,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,WAAW,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAG,CAAA,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,EAAE,cAAc,AAAd,EAAuB,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,EAAE,eAAe,CAAC,GAAG,EAAE,eAAe,CAAC,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,WAAW,EAAG,CAAA,GAAG,EAAE,WAAU,AAAV,EAAgB,KAAK,IAAI,GAAG,CAAC,IAArN,GAAyN,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,MAAM,YAAY,GAAM,qBAAqB,CAC5gB,EAAE,GAAG,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE,eAAe,AAAA,CAAC,GAAG,aAAa,GAAM,iBAAiB,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,MAAM,GAAG,aAAa,GAAM,kBAAkB,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,OAAO,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,MAAM,GAAG,aAAa,GAAM,cAAc,CAAE,CAAA,GAAG,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,KAAK,CAC9f,EAAE,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,MAAO,aAAa,GAAM,iBAAiB,CAAE,CAAA,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,EAAE,QAAQ,EAAG,CAAA,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,iBAAiB,CAAC,KAAK,CAAC,EAAE,iBAAiB,AAAjB,EAAmB,EAAE,WAAW,EAAG,CAAA,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,WAAW,AAAX,EAAa,EAAE,OAAO,EAAG,CAAA,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,SAAQ,AAAR,EAAW,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,WAAW,CAAA,EAAG,EAAE,eAAe,EACjgB,CAAA,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE,eAAe,CAAC,EAAE,iBAAiB,CAAC,KAAK,CAAC,EAAE,iBAAiB,CAAC,EAAE,gBAAgB,CAAC,KAAK,CAAC,EAAE,gBAAe,AAAf,CAAe,EAAI,aAAa,GAAM,iBAAiB,CAAE,CAAA,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,OAAM,AAAN,EAAS,aAAa,GAAM,kBAAkB,EAAG,CAAA,EAAE,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,AAAP,EAAS,GAAG,EAAE,aAAa,EAAE,CAAC,EAAE,WAAW,EAAE,EAAE,YAAY,CAAC,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,AAAC,CAAA,GAAG,UAAU,EAAG,CAAA,cAAc,GAAM,SAAS,EAAE,cAAc,GAAM,gBAAe,AAAf,GAAoB,CAAA,EAAE,SAAS,CAAC,KAAK,CAAC,GAAG,CACzgB,GAAG,SAAS,CAAC,EAAE,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,IAAA,CAAK,CAAC,IAAI,IAAsB,GAAG,GAArB,GAAG,EAAE,YAAY,CAAO,GAAG,EAAE,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,GAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,GAAE,WAAW,CAAC,CAAC,IAAI,GAAG,GAAE,IAAI,CAAC,GAAE,GAAE,KAAK,CAAC,GAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,IAAI,IAAK,KACD,IAAK,IADC,EAAE,SAAS,CAAC,GAAE,IAAG,KAAM,KAAK,KACF,IAAK,IADE,EAAE,SAAS,CAAC,GAAE,IAAG,KAAM,KAAK,KAAK,EAAE,SAAS,CAAC,GAAE,EAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,EAAE,KAAM,KAAK,KAAK,EAAE,SAAS,CAAC,GAAE,EAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,EAAE,KAAM,KAAK,KAAK,EAAE,SAAS,CAAC,GAC5f,EAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,CAAC,EAAC,CAAC,EAAE,EAAE,KAAM,KAAK,MACiC,IAAK,MADhC,EAAE,UAAU,CAAC,GAAE,IAAG,KAAM,KAAK,MACiC,IAAK,KADhC,EAAE,UAAU,CAAC,GAAE,IAAG,KAAM,KAAK,MACgC,IAAK,MAD/B,EAAE,UAAU,CAAC,GAAE,IAAG,KAAM,KAAK,MAAM,EAAE,UAAU,CAAC,GAAE,IAAG,KAAM,KAAK,MACH,IAAK,KADI,EAAE,UAAU,CAAC,GAAE,IAAG,KAAM,KAAK,MAAM,EAAE,UAAU,CAAC,GAAE,IAAG,KAAM,KAAK,YAAY,EAAE,gBAAgB,CAAC,GAAE,CAAC,EAAE,IAAG,KAAM,KAAK,YAAY,EAAE,gBAAgB,CAAC,GAAE,CAAC,EAAE,IAAG,KAAsE,KAAK,KAAK,EAAE,SAAS,CAAC,GAAE,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,KAAM,KAAK,KAAK,EAAE,SAAS,CAAC,GAAE,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,KAAM,KAAK,KAAK,EAAE,SAAS,CAAC,GACzf,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,KAAM,KAAK,IAAI,EAAE,SAAS,CAAC,GAAE,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,KAAgJ,KAAK,MAAM,KAAK,IAAI,GAAE,MAAM,EAAG,CAAA,GAAE,MAAM,CAAC,IAAI,aAAa,EAAE,GAAE,MAAM,CAAA,EAAG,IAAI,IAAI,GAAE,EAAE,GAAG,EAAE,GAAG,GAAE,MAAM,CAAC,GAAE,GAAG,KAAI,IAAI,EAAE,GAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAC,CAAC,GAAE,CAAC,CAAC,CAAC,GAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAC,CAAC,GAAE,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,GAAE,GAAE,MAAM,EAAE,KAAM,KAAK,MAAM,KAAK,IAAI,GAAE,MAAM,EAAG,CAAA,GAAE,MAAM,CAAC,IAAI,aAAa,EAAE,GAAE,MAAM,CAAA,EAAG,IAAI,IAAI,GAAG,GAAE,EAAE,GAAG,GAAE,MAAM,CAAC,GAAE,GAAG,KAAI,IAClf,EAAE,GAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAC,CAAC,GAAE,CAAC,CAAC,CAAC,GAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAC,CAAC,GAAE,CAAC,CAAC,CAAC,GAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAC,CAAC,GAAE,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,GAAE,GAAE,MAAM,EAAE,KAAM,KAAK,MAAM,KAAK,IAAI,GAAE,MAAM,EAAG,CAAA,GAAE,MAAM,CAAC,IAAI,aAAa,EAAE,GAAE,MAAM,CAAA,EAAG,IAAI,IAAI,GAAG,GAAE,EAAE,GAAG,GAAE,MAAM,CAAC,GAAE,GAAG,KAAI,IAAI,EAAE,GAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAC,CAAC,GAAE,CAAC,CAAC,CAAC,GAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAC,CAAC,GAAE,CAAC,CAAC,CAAC,GAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAC,CAAC,GAAE,CAAC,CAAC,CAAC,GAAE,MAAM,CAAC,GAAG,EAAE,CAAC,EAAC,CAAC,GAAE,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,GAAE,GAAE,MAAM,EAAE,KAAM,KAAK,KAAK,EAAE,gBAAgB,CAAC,GAAE,CAAC,EAAE,GAAE,QAAQ,EAAE,KAAM,KAAK,MAAqE,IAA/D,KAAK,IAAI,GAAE,MAAM,EAAG,CAAA,GAAE,MAAM,CAAC,IAAI,aAAa,EAAE,GAAE,MAAM,CAAA,EAAG,GAAE,EAAM,GAAG,GAAE,MAAM,CAAC,GAAE,GAAG,KAAI,EAAC,CAAC,GAAE,CAAC,oBAAoB,CAAC,GAAE,MAAM,CACngB,EAAE,IAAG,EAAE,gBAAgB,CAAC,GAAE,CAAC,EAAE,GAAE,MAAM,EAAE,KAAM,KAAK,KAAK,EAAE,gBAAgB,CAAC,GAAE,CAAC,EAAE,GAAE,QAAQ,EAAE,KAAM,KAAK,MAAsE,IAAhE,KAAK,IAAI,GAAE,MAAM,EAAG,CAAA,GAAE,MAAM,CAAC,IAAI,aAAa,GAAG,GAAE,MAAM,CAAA,EAAG,GAAE,EAAM,GAAG,GAAE,MAAM,CAAC,GAAE,GAAG,KAAI,EAAC,CAAC,GAAE,CAAC,oBAAoB,CAAC,GAAE,MAAM,CAAC,GAAG,IAAG,EAAE,gBAAgB,CAAC,GAAE,CAAC,EAAE,GAAE,MAAM,EAAE,KAAM,KAAK,IAAkC,GAA9B,GAAG,GAAE,GAAG,IAAI,EAAE,SAAS,CAAC,GAAE,IAAO,CAAC,GAAG,SAAS,GAAG,cAAc,GAAM,WAAW,EAAE,MAAM,OAAO,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAE,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM,EAAC,GAAG,EAAE,GAAG,OAAO,EAAE,GAAG,SAAS,GAAG,GAAG,OAAO,CAAC,CAAC,GAAG,yBAAyB,EAC1hB,CAAA,GAAG,gBAAgB,CAAC,UAAU,GAAG,GAAG,yBAAyB,CAAC,EAAE,aAAa,GAAG,GAAG,QAAQ,EAAA,EAAI,GAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,IAAI,GAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,GAAG,yBAAyB,EAAE,EAAE,WAAW,CAAC,EAAE,mBAAmB,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,GAAG,cAAc,GAAM,iBAAiB,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,WAAW,GAAM,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,iBAAiB,EAAE,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,cAAc,EAAE,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,GAAM,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,GACvf,GAAM,IAAI,CAAC,YAAY,CAAC,GAAG,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,EAA8B,IAA5B,EAAE,EAAE,gBAAgB,CAAC,GAAG,IAAQ,GAAG,EAAE,EAAE,GAAG,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,KAAK,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,GAAM,UAAU,EAAE,GAAG,MAAM,GAAG,GAAM,SAAS,CAAC,GAAG,GAAE,2BAA2B,GAAG,OAAO,CAAC,IAAI,GAAE,oBAAoB,CAAC,EAAE,2BAA2B,CAAC,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE,GAAG,IAAI,EAAE,QAAQ,IAAI,CAAC,mGAAmG,GAAE,UAAU,CAAC,EAAE,2BAA2B,CACzhB,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,OAAO,GAAG,GAAE,UAAU,CAAC,EAAE,2BAA2B,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,GAAE,UAAU,CAAC,EAAE,2BAA2B,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,CAAE,CAAA,GAAG,eAAe,EAAE,IAAI,EAAE,cAAc,CAAC,EAAE,gBAAgB,EAAE,GAAG,SAAS,CAAC,GAAG,OAAO,CAAI,GAAG,QAAQ,EAAC,GAAG,QAAQ,CAAC,GAAG,MAAM,GAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,IAAI,GAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,GAAG,yBAAyB,EAAC,MAAM,GAAG,cAAc,GAAM,qBAAqB,CAAC,CAAC,IAAI,GAAG,GAAG,GAAE,aAAa,CAAC,EAAE,QAAQ,CACvgB,IAAI,GAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,GAAE,GAAG,CAAC,IAAI,cAAc,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,IAAI,KAAM,KAAK,KAA0C,IAArC,KAAK,IAAI,GAAE,MAAM,EAAG,CAAA,GAAE,MAAM,CAAC,EAAC,AAAD,EAAI,GAAE,EAAM,GAAG,GAAE,KAAK,CAAC,MAAM,CAAC,GAAE,GAAG,KAAI,GAAE,MAAM,CAAC,GAAE,CAAC,IAAiC,IAA7B,EAAE,UAAU,CAAC,GAAE,GAAE,MAAM,EAAE,GAAE,EAAM,GAAG,GAAE,KAAK,CAAC,MAAM,CAAC,GAAE,GAAG,KAAI,GAAG,GAAE,KAAK,CAAC,GAAE,CAAC,GAAG,GAAE,MAAM,CAAC,GAAE,CAAC,IAAI,GAAG,UAAU,CAAC,GAAG,IAAI,KAAM,SAAQ,QAAQ,IAAI,CAAC,8CAA8C,GAAG,CAAC,CAAC,CAAC,CAC9Q,OAD+Q,EAAE,gBAAgB,CAAC,EAAE,eAAe,CAAC,CAAC,EAAE,EAAE,eAAe,CAAC,QAAQ,EAAE,EAAE,YAAY,EAAE,EAAE,gBAAgB,CAAC,EAAE,YAAY,CACpf,CAAC,EAAE,EAAE,YAAY,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE,WAAW,EAAE,EAAE,gBAAgB,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,QAAQ,EAAS,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,iBAAiB,CAAC,WAAW,CAAC,EAAE,EAAE,qBAAqB,CAAC,WAAW,CAAC,EAAE,EAAE,yBAAyB,CAAC,WAAW,CAAC,EAAE,EAAE,eAAe,CAAC,WAAW,CAAC,EAAE,EAAE,kBAAkB,CAAC,WAAW,CAAC,EAAE,EAAE,kBAAkB,CAAC,WAAW,CAAC,EAAE,EAAE,eAAe,CAAC,WAAW,CAAC,EAAE,EAAE,cAAc,CAAC,WAAW,CAAC,EAAE,EAAE,iBAAiB,CAAC,WAAW,CAAC,EAAE,EAAE,iBAAiB,CAAC,WAAW,CAAC,EAAE,EAAE,kBAAkB,CAAC,WAAW,CACpgB,EAAE,EAAE,iBAAiB,CAAC,WAAW,CAAC,EAAE,EAAE,iBAAiB,CAAC,WAAW,CAAC,EAAE,EAAE,cAAc,CAAC,WAAW,CAAC,EAAE,EAAE,uBAAuB,CAAC,WAAW,CAAC,EAAE,EAAE,0BAA0B,CAAC,WAAW,CAAC,EAAE,EAAE,wBAAwB,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,EAAE,GAA0I,OAAvI,GAAG,GAAG,WAAW,EAAE,QAAQ,IAAI,CAAC,gCAAgC,EAAE,+CAA+C,GAAG,WAAW,EAAE,IAAI,EAAS,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAG,CAAA,EAAE,aAAa,CAAC,EAAE,EAAE,cAAc,CACzf,EAAE,EAAE,KAAK,GAAG,EAAE,aAAa,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,EAAE,KAAK,GAAG,EAAE,aAAa,CAAC,EAAE,EAAE,kBAAkB,CAAC,EAAE,EAAE,SAAS,GAAG,EAAE,aAAa,CAAC,EAAE,EAAE,kBAAkB,CAAC,EAAE,EAAE,SAAS,EAAA,EAAK,CAAA,EAAE,aAAa,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,aAAa,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,aAAa,EAAE,EAAE,KAAK,GAAG,GAAM,mBAAmB,EAAE,EAAE,KAAK,GAAG,GAAM,mBAAmB,EAAE,QAAQ,IAAI,CAAC,mIAAmI,EAAE,UAAU,CACzf,MAAM,EAAE,aAAa,CAAC,EAAE,EAAE,kBAAkB,CAAC,EAAE,EAAE,SAAS,GAAG,EAAE,aAAa,CAAC,EAAE,EAAE,kBAAkB,CAAC,EAAE,EAAE,SAAS,GAAG,EAAE,SAAS,GAAG,GAAM,aAAa,EAAE,EAAE,SAAS,GAAG,GAAM,YAAY,EAAE,QAAQ,IAAI,CAAC,qIAAqI,EAAE,UAAU,CAAC,KAAA,EAAO,AAAE,CAAA,EAAE,GAAE,GAAG,CAAC,iCAAA,GAAoC,CAAA,EAAE,IAAI,GAAG,GAAM,SAAS,EAAE,OAAO,GAAE,GAAG,CAAC,2BAAA,GAA6B,CAAA,EAAE,IAAI,GAAG,GAAM,aAAa,EAAE,OAC/e,GAAE,GAAG,CAAC,gCAAA,GAAoC,CAAA,EAAE,EAAE,UAAU,EAAE,GAAE,GAAG,CAAC,GAAG,mBAAkB,AAAlB,GAAuB,CAAA,EAAE,aAAa,CAAC,EAAE,EAAE,0BAA0B,CAAC,KAAK,GAAG,CAAC,EAAE,UAAU,CAAC,GAAG,gBAAgB,KAAK,GAAE,GAAG,CAAC,GAAG,mBAAmB,CAAC,EAAE,UAAU,AAAV,CAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,SAAS,aAAa,CAAC,UAC1Q,OADoR,EAAE,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,MAAM,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,QAAQ,IAAI,CAAC,0CACve,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,GAAU,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,eAAe,CAAC,EAAE,WAAW,CAAC,GAAG,EAAE,oBAAoB,CAAC,EAAE,WAAW,CAAC,EAAE,iBAAiB,CAAC,EAAE,GAAE,GAAG,CAAC,GAAG,cAAc,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,gBAAgB,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,CAAC,EAAE,aAAa,CAAE,CAAA,EAAE,mBAAmB,CAAC,EAAE,YAAY,CAAC,EAAE,iBAAiB,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,uBAAuB,CAAC,EAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,EAAE,YAAY,CAAC,EAAA,EAAI,EAAE,WAAW,EAAE,EAAE,aAAa,CAAE,CAAA,EAAE,mBAAmB,CAAC,EAAE,YAAY,CAC9gB,EAAE,aAAa,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,EAAE,uBAAuB,CAAC,EAAE,WAAW,CAAC,EAAE,wBAAwB,CAAC,EAAE,YAAY,CAAC,EAAA,EAAI,EAAE,mBAAmB,CAAC,EAAE,YAAY,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,OAAO,IAAI,GAAM,aAAa,EAAE,IAAI,GAAM,0BAA0B,EAAE,IAAI,GAAM,yBAAyB,CAAC,EAAE,OAAO,CAAC,EAAE,MAAM,AAAA,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,GAAM,cAAc,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,IAAI,GAAM,mBAAmB,CAAC,OAAO,EAAE,aAAa,CAAC,GAAG,IAAI,GAAM,sBAAsB,CAAC,OAAO,EAAE,eAAe,CACtf,GAAG,IAAI,GAAM,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,IAAI,GAAM,0BAA0B,CAAC,OAAO,EAAE,sBAAsB,CAAC,GAAG,IAAI,GAAM,yBAAyB,CAAC,OAAO,EAAE,qBAAqB,CAAC,GAAG,IAAI,GAAM,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,IAAI,GAAM,yBAAyB,CAAC,OAAO,EAAE,qBAAqB,CAAC,GAAG,IAAI,GAAM,wBAAwB,CAAC,OAAO,EAAE,oBAAoB,CAAC,GAAG,IAAI,GAAM,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC,GAAG,IAAI,GAAM,qBAAqB,CAAC,OAAO,EAAE,sBAAsB,CAAC,GAAG,IAAI,GAAM,qBAAqB,CAAC,OAAO,EAAE,sBAAsB,CACxiB,GAAG,IAAI,GAAM,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,GAAG,IAAI,GAAM,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,IAAI,GAAM,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,IAAI,GAAM,iBAAiB,CAAC,OAAO,EAAE,cAAc,CAAC,GAAG,IAAI,GAAM,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,IAAI,GAAM,eAAe,CAAC,OAAO,EAAE,YAAY,CAAC,GAAG,IAAI,GAAM,SAAS,CAAC,OAAO,EAAE,KAAK,CAAmC,GAAG,OAArC,CAAA,EAAE,GAAE,GAAG,CAAC,yBAAR,GAA+C,IAAI,GAAM,aAAa,CAAC,OAAO,EAAE,cAAc,CAAC,GAAG,IAAI,GAAM,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG,IAAI,GAAM,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,IAAI,GAAM,UAAU,CAAC,OAAO,EAAE,IAAI,CAC5gB,GAAG,IAAI,GAAM,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,IAAI,GAAM,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,GAAG,IAAI,GAAM,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,IAAI,GAAM,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC,GAAG,IAAI,GAAM,uBAAuB,CAAC,OAAO,EAAE,qBAAqB,CAAC,GAAG,IAAI,GAAM,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,IAAI,GAAM,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,IAAI,GAAM,cAAc,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,IAAI,GAAM,sBAAsB,CAAC,OAAO,EAAE,mBAAmB,CAAC,GAAG,IAAI,GAAM,cAAc,CAAC,OAAO,EAAE,SAAS,CACvf,GAAG,IAAI,GAAM,sBAAsB,CAAC,OAAO,EAAE,mBAAmB,CAAC,GAAG,IAAI,GAAM,cAAc,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,IAAI,GAAM,sBAAsB,CAAC,OAAO,EAAE,mBAAmB,CAAC,GAAG,IAAI,GAAM,cAAc,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,IAAI,GAAM,sBAAsB,CAAC,OAAO,EAAE,mBAAmB,CAAC,GAAG,IAAI,GAAM,sBAAsB,CAAC,OAAO,EAAE,kBAAkB,CAA0C,GAAG,OAA5C,CAAA,EAAE,GAAE,GAAG,CAAC,gCAAR,EAAqD,CAAC,GAAG,IAAI,GAAM,oBAAoB,CAAC,OAAO,EAAE,4BAA4B,CAAC,GAAG,IAAI,GAAM,qBAAqB,CAAC,OAAO,EAAE,6BAA6B,CACxiB,GAAG,IAAI,GAAM,qBAAqB,CAAC,OAAO,EAAE,6BAA6B,CAAC,GAAG,IAAI,GAAM,qBAAqB,CAAC,OAAO,EAAE,6BAA6B,AAAA,CAA2C,GAAG,OAA7C,CAAA,EAAE,GAAE,GAAG,CAAC,iCAAR,EAAsD,CAAC,GAAG,IAAI,GAAM,uBAAuB,CAAC,OAAO,EAAE,+BAA+B,CAAC,GAAG,IAAI,GAAM,uBAAuB,CAAC,OAAO,EAAE,+BAA+B,CAAC,GAAG,IAAI,GAAM,wBAAwB,CAAC,OAAO,EAAE,gCAAgC,CAAC,GAAG,IAAI,GAAM,wBAAwB,CAAC,OAAO,EAAE,gCAAgC,AAAA,CAC5e,GAAG,OAD0e,CAAA,EACvgB,GAAE,GAAG,CAAC,mBADigB,EACje,CAAC,GAAG,IAAI,GAAM,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,IAAI,GAAM,WAAW,CAAC,OAAO,EAAE,OAAO,AAAA,CAAC,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,sBAAsB,GAAM,QAAQ,EAAU,IAKqP,EAFtZ,EAHqK,EAAE,KAAK,IAAI,AAAvB,CAAA,EAAE,GAAG,CAAC,CAAA,EAAmB,MAAM,CAAC,EAAE,MAAM,CAAC,SAAS,aAAa,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,KAAK,IAAI,EAAE,KAAK,EAAC,EAAE,KAAK,CAAI,EAAE,KAAK,IAAI,EAAE,KAAK,EAAC,EAAE,KAAK,CAAI,EAAE,KAAK,IAAI,EAAE,OAAO,EAAC,EAAE,OAAO,CAAI,EAAE,KAAK,IAAI,EAAE,SAAS,EAAC,EAAE,SAAS,CAAI,EAAE,KAAK,IAAI,EAAE,kBAAkB,EAAC,EAAE,kBAAkB,CAClf,EAAE,KAAK,IAAI,EAAE,qBAAqB,EAAC,EAAE,qBAAqB,CAAI,EAAE,IAAI,GAAM,KAAK,CAAC,GAAG,EAAG,EAAE,EAAE,EAAE,CAAC,EAAG,EAAE,CAAC,EAAE,GAAG,EAAG,EAAE,CAAC,EAAG,GAAG,EAAG,EAAE,CAAC,EAAG,GAAG,EAAG,EAAE,CAAC,EAAG,GAAG,EAAG,IAAI,aAAa,GAAG,EAAG,EAAE,CAAC,EAAG,EAAE,AAAC,CAAA,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,EACnf,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,GAAG,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAG,IAAI,GAAM,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,UAAU,EAAE,AAAA,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,OAAO,EAAE,AAAA,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,CAAC,UAAU,EAAE,CAAC,OAAO,EAAE,AAAA,EAAE,KAAK,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,aAAa,EAAE,CAAC,UAAU,EAAE,AAAA,CAAC,EAAE,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAE,CAAA,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,GACpf,OAAO,GAAG,SAAS,IAAI,EAAQ,GAAG,CAA2J,GAA1J,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,mBAAmB,EAAE,sBAAsB,CAAC,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC,QAAQ,IAAI,EAAE,UAAU,CAAC,qBAAqB,GAAM,OAAO,EAAE,CAAC,GAAG,OAAO,EAAE,UAAU,CAAC,SAAS,KAAK,6DAA8D,MAAK,+BAAgC,CAAC,EAAE,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,EAAE,CAAC,MAAM,EAAG,CAAC,QAAQ,KAAK,CAAC,wBAAwB,EAAG,CAAC,IAAI,GAAE,IAAI,GAAM,eAAe,CAAC,GAAG,GAAE,GAAG,CAAC,qBAAqB,GAAE,GAAG,CAAC,4BACvf,GAAE,GAAG,CAAC,0BAA0B,GAAE,GAAG,CAAC,iCAAiC,GAAE,GAAG,CAAC,4BAA4B,GAAE,GAAG,CAAC,0BAA0B,GAAE,GAAG,CAAC,2BAA4B,CAAA,GAAM,cAAc,CAAC,QAAQ,CAAC,UAAA,EAAY,IAAI,GAAG,IAAI,GAAM,iBAAiB,CAAC,EAAE,GAAE,GAAG,GAAE,IAAI,GAAM,UAAU,CAAC,EAAE,GAAE,GAAG,GAAE,IAAI,GAAM,eAAe,CAAC,GAAG,IAAI,GAAM,YAAY,CAAC,EAAE,GAAE,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,GAAM,aAAa,CAAC,IAAI,CAAC,GAAI,CAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,GAAM,mBAAmB,CAAC,EAAE,GAAE,IAAI,GAAG,IAAI,GAAM,0BAA0B,CAAC,EAC1f,GAAE,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAE,IAAI,CAAC,KAAK,CAAC,GAAE,IAAI,GAAG,IAAI,GAAM,cAAc,CAAC,IAAI,CAAC,EAAE,GAAI,CAAA,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,IAAI,GAAM,YAAY,CAAC,IAAI,CAAC,GAAI,GAAG,IAAI,GAAM,eAAe,CAAC,IAAI,CAAC,EAAI,CAAA,IAAI,CAAC,UAAU,CAAC,WAAW,OAAO,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,WAAW,OAAO,EAAE,oBAAoB,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAE,GAAG,CAAC,sBAAsB,WAAW,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAyB,WAAW,GAAG,KAAK,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,GAAE,GAAG,CAAC,kCAC1e,OAAO,EAAE,OAAO,EAAE,EAAE,YAAY,CAAC,EAAE,8BAA8B,EAAE,CAAC,EAAK,IAAI,CAAC,YAAY,CAAC,WAAW,OAAO,GAAG,SAAS,AAAA,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,OAAO,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,GAAI,CAAA,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,IAAA,EAAM,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,UAAU,CAC5f,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE,GAAE,cAAc,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,OAAO,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,EAAG,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,OAAO,CAAE,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,EAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAG,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAK,CAAA,KAAK,IAAI,GAAG,CAAA,GAAE,CAAA,GAAG,EAAE,gBAAgB,AAAhB,EAAoB,CAAA,KAAK,IAAI,GAAG,CAAA,GAAE,CAAA,GAAG,EAAE,gBAAgB,AAAhB,EAAoB,CAAA,KAAK,IAAI,GAAG,CAAA,GAAE,CAAA,GAAG,EAAE,kBAAkB,AAAlB,EAAmB,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE,gBAAgB,CAAC,EACzhB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE,gBAAgB,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE,kBAAkB,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,mBAAmB,CAAC,mBAAmB,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAE,cAAc,GAAG,IAAI,EAAE,GAAE,GAAG,CAAC,GAC3F,GAD8F,EAAE,YAAY,EAAE,CAAC,EAAE,QAAQ,EAAG,CAAA,EAAE,QAAQ,CAAC,EAAE,YAAY,EAAA,EAAI,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,EAAG,CAAA,EAAE,MAAM,CAAC,EAAE,YAAY,EAAA,EAAI,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAG,CAAA,EAAE,EAAE,CAAC,EAAE,YAAY,EAAA,EAChgB,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAG,CAAA,EAAE,KAAK,CAAC,EAAE,YAAY,EAAA,EAAI,EAAE,EAAE,aAAa,GAAG,EAAE,YAAY,EAAG,CAAA,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,QAAQ,EAAE,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,aAAa,CAAC,EAAE,YAAY,EAAE,GAAE,eAAe,CAAC,EAAE,QAAQ,EAAE,EAAE,mBAAmB,CAAC,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,EAAA,EAAO,EAAE,UAAU,CAAC,CAAuC,GAAtC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,MAAM,EAAK,sBAAsB,EAAE,IAAI,EAAE,EAAE,OAAO,GAAG,GAAM,WAAW,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,WAAW,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,AAAF,EAAI,EAAE,EAAE,AAAC,CAAA,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC,AAAD,EAAI,EAAE,EAAG,AAAA,CAAA,CAAC,CAAC,EACpf,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAC,AAAD,EAAI,CAAE,CAAA,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,EAAE,GAAE,eAAe,CAAC,EAAE,MAAM,EAAE,EAAE,mBAAmB,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,GAAG,EAAG,CAAA,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,OAAO,CAAC,EAAE,YAAY,EAAE,GAAE,eAAe,CAAC,EAAE,EAAE,EAAE,EAAE,mBAAmB,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,EAAA,EAAI,EAAE,SAAS,EAAE,EAAE,YAAY,GAAG,GAAM,QAAQ,EAAG,CAAA,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,KAAK,EAAE,EAAE,UAAU,CAAC,EAAE,YAAY,CAC3gB,EAAE,UAAU,CAAC,EAAE,YAAY,EAAE,GAAE,eAAe,CAAC,EAAE,KAAK,EAAE,EAAE,mBAAmB,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,EAAA,EAAI,GAAE,uBAAuB,GAAG,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAgF,GAA9C,AAAhC,CAAA,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,SAAS,AAAT,IAAc,IAAK,CAAA,GAAG,EAAE,EAAE,CAAC,CAAA,EAAgC,KAAK,IAAlC,CAAA,EAAE,EAAE,qBAAqB,AAArB,EAAoC,CAAU,IAAT,EAAE,EAAE,CAAC,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,EAAG,CAAA,EAAE,MAAM,CAAC,CAAA,EAAG,IAAI,EAAE,EAAE,eAAe,CAAK,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CACpf,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAE,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,EAAE,YAAY,CAAC,cAAc,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,YAAY,EAAE,EAAE,MAAM,EAAE,EAAE,YAAY,CAAC,cAAc,EAAE,EAAE,MAAM,CAAC,EAAE,CAAA,EAAI,CAAA,CAAC,IAAI,EAAE,YAAY,EAAE,EAAE,eAAe,CAAC,cAAc,GAAG,CAAC,IAAI,EAAE,YAAY,EAAE,EAAE,eAAe,CAAC,cAAc,EAAA,CAAsB,QAAO,AAAzB,CAAA,EAAE,EAAE,WAAW,EAAf,EAA2B,qBAAqB,EAAE,EAAE,UAAU,CAAC,EAAE,qBAAqB,CAAC,GAAI,EAAE,CAAC,CAAC,CACnY,GADoY,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,GAAG,qBAAqB,CAAC,EAAA,EAAI,OAAO,EAAQ,AAAL,CAAA,EAAE,EAAA,EAAK,QAAQ,CAAC,GACvf,EAAE,GAAM,EAAE,CAAC,EAAE,CAAC,IAAa,EAAT,EAAE,KAAK,EAAI,GAAG,aAAa,GAAM,uBAAuB,EAAqC,OAAlC,CAAA,EAAE,GAAE,GAAG,CAAC,yBAAA,EAAoC,CAAC,QAAQ,KAAK,CAAC,kJAAkJ,MAAM,CAAC,CAAC,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,GAAE,cAAc,GAAG,IAAkE,EAA9D,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,aAAa,GAAG,EAAE,EAAE,sBAAsB,CAAG,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,IAAI,EAAE,CAAC,GAAE,eAAe,CAAC,GAAG,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,GAAG,kBAAkB,CAAC,GACngB,GAAG,aAAa,GAAM,0BAA0B,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAoI,GAAnI,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE,mBAAmB,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,iBAAiB,CAAE,AAAA,CAAA,EAAE,EAAE,CAAA,EAAG,EAAE,KAAK,CAAC,iBAAiB,EAAK,aAAa,GAAM,0BAA0B,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,QAAQ,KAAK,CAAC,mJAAmJ,MAAM,CAAC,CAAC,EAAE,wBAAwB,CAAC,EAAE,EAAE,gBAAgB,EAAE,KAAK,IACtf,EAAE,iBAAiB,EAAG,CAAA,EAAE,iBAAiB,CAAC,EAAE,gBAAgB,CAAC,EAAE,KAAK,AAAL,CAAM,CAAC,MAAM,GAAG,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE,mBAAmB,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,aAAa,GAAM,wBAAwB,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,QAAQ,KAAK,CAAC,mJAAmJ,MAAM,CAAC,CAAC,EAAE,wBAAwB,CAAC,EAAE,EAAE,gBAAgB,EAAE,KAAK,IAAI,EAAE,iBAAiB,EAAG,CAAA,EAAE,iBAAiB,CAAC,EAAE,gBAAgB,CACrf,EAAE,KAAK,AAAL,CAAM,CAAC,MAAM,GAAG,KAAK,IAAI,GAAW,KAAK,IAAZ,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAe,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,eAAe,CAAC,EAAE,GAAG,KAAM,MAAK,EAAE,EAAE,eAAe,CAAC,EAAE,GAAG,KAAM,MAAK,EAAE,EAAE,eAAe,CAAC,EAAE,GAAG,KAAM,SAAQ,EAAE,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAE,uBAAuB,EAAE,CAAC,OAAO,GAAG,EAAE,UAAU,CAAC,EAAE,oBAAoB,CAAC,GAAG,kBAAkB,CAAC,GAAG,CAAC,KAAK,IAAI,GAAkB,CAAA,EAAE,CAAC,MAAM,AAAvB,CAAA,EAAE,EAAE,SAAS,AAAT,EAAqB,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAA,EAAG,aAAa,GAAM,IAAI,CAAE,CAAA,CAAC,IAAI,EAAE,SAAS,CAAE,CAAA,GAAE,YAAY,CAAC,EAAE,kBAAkB,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,KAAK,CAAA,EAC7f,EAAE,OAAO,CAAC,EAAE,SAAS,EAAE,aAAa,GAAM,uBAAuB,EAAE,EAAE,EAAE,iBAAiB,CAAC,EAAE,eAAe,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAA,EAAG,aAAa,GAAM,IAAI,CAAE,CAAA,AAAc,KAAK,IAAnB,CAAA,EAAE,EAAE,SAAS,AAAT,GAAuB,CAAA,EAAE,CAAA,EAAG,GAAE,YAAY,CAAC,EAAE,GAAG,aAAa,GAAM,YAAY,CAAC,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC,EAAE,UAAU,EAAE,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAA,EAAG,aAAa,GAAM,MAAM,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAA,CAAE,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAI,aAAa,GAAM,MAAM,CAAC,QAAQ,KAAK,CAAC,8EACld,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,iBAAiB,GAAG,OAAO,EAAE,MAAM,EAAE,EAAE,iBAAiB,GAAG,EAAE,kBAAkB,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,GAAG,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,EAAE,kBAAkB,EAAE,GAAG,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAG,EAAG,EAAG,EAAE,GAAG,EAAG,MAAM,CAAC,EAAE,EAAG,MAAM,CAAC,EAAE,AA3DnJ,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,GAAG,aAAa,GAAM,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,GAAG,aAAa,GAAM,MAAM,CAAC,EAAG,IAAI,CAAC,QAAQ,GAAG,aAAa,GAAM,SAAS,CAAC,EAAG,IAAI,CAAC,QAAQ,GAAG,aAAa,GAAM,qBAAqB,CAAC,CAAC,IAAI,EAAE,CAAE,CAAA,EAAE,QAAQ,CAAC,WAAW,CAAE,CAAA,EAAE,EAAG,EAAE,EAAE,CAAA,EAAK,CAAA,EAAE,EAAG,EAAE,EAAE,CAAA,EAAI,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,MAAM,GAAG,CAAA,aAAa,GAAM,IAAI,EAAE,aAAa,GAAM,IAAI,EAC/f,aAAa,GAAM,MAAM,AAAN,GAAU,CAAA,aAAa,GAAM,WAAW,EAAE,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,aAAa,EAAE,CAAC,IAAI,GAAG,gBAAgB,CAAC,EAAA,EAAG,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,EAAC,GAAG,CAAC,IAAI,GAAG,WAAW,EAAG,CAAA,GAAE,qBAAqB,CAAC,EAAE,WAAW,EAAE,GAAE,eAAe,CAAC,GAAA,EAAK,EAAE,GAAG,MAAM,CAAC,GAAG,aAAa,GAAM,gBAAgB,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,aAAa,CAAC,AAAC,EAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,GAAE,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,GAAE,CAAC,EAAC,CAAkB,IAAjB,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EA0D9L,GAAG,EAAG,MAAM,CAAC,EAAE,EAAE,EAAG,MAAM,CAAC,EAAG,EAAE,EAAG,MAAM,CAAC,EAAG,EAAE,EAAG,MAAM,CAAC,EAAG,EAAE,CAAC,IAAI,GAAG,WAAW,EAAG,CAAA,EAAG,IAAI,CAAC,GAAG,EAAG,IAAI,CAAC,EAAA,EAAI,GAAG,MAAM,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,GAAI,AAAA,CAAA,IAAI,CAAC,SAAS,EAChgB,CAAA,GAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,gBAAgB,CAAE,CAAA,AAAqB,EAAE,EAAG,EAAE,EAAE,EAA9B,EAAE,EAAE,gBAAgB,EAAe,EAAE,EAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAG,EAAE,EAAE,EAAE,EAAA,EAAK,CAAA,GAAE,WAAW,CAAC,GAAM,UAAU,EAAE,EAAE,EAAG,EAAE,EAAE,GAAG,EAAE,EAAG,EAAE,EAAE,GAAG,EAAE,EAAG,EAAE,EAAE,GAAG,EAAE,EAAG,EAAE,EAAE,EAAA,EAAI,GAAG,MAAM,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,EAAE,EAAE,GAAG,IAAI,GAAG,EAAE,eAAe,EAAE,EAAE,SAAS,GAAG,GAAM,aAAa,EAAE,EAAE,SAAS,GAAG,GAAM,YAAY,EAAG,CAAA,aAAa,GAAM,qBAAqB,CAAE,CAAA,GAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,GAAE,GAAG,CAAC,GAAG,cAAc,EAAE,EAAE,cAAc,CAAC,EAAE,gBAAgB,EACzgB,GAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,KAAA,EAAQ,CAAA,GAAE,WAAW,CAAC,EAAE,UAAU,CAAC,GAAE,GAAG,CAAC,GAAG,cAAc,EAAE,EAAE,cAAc,CAAC,EAAE,UAAU,EAAE,GAAE,WAAW,CAAC,EAAE,UAAU,CAAC,KAAA,CAAI,EAAI,GAAE,YAAY,CAAC,CAAC,GAAG,GAAE,aAAa,CAAC,CAAC,GAAG,GAAE,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,GAAM,YAAY,CAAC,GAAE,OAAO,CAAC,EAAE,SAAS,EAAG,CAAA,IAAI,GAAM,oBAAoB,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,GAAM,YAAY,CAAC,EAAE,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAE,QAAQ,CAAC,EAAE,cAAc,EAAE,GAAE,MAAM,CAAC,EAAE,SAAS,CAAA,CAAE,EAC1f,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,GAAE,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE,SAAS,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,GAAG,KAAK,IAAI,EAAE,QAAQ,IAAI,CAAC,wEAAwE,QAAQ,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,IAAI,CAAC,yEAAyE,OAAO,CAAC,KAAK,IAAI,EAAE,WAAW,EAAG,CAAA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,gBAAgB,CAAC,UAAU,GAAG,EAAE,cAAc,CAAC,EAAE,aAAa,GAAG,GAAG,QAAQ,EAAA,EAAI,GAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,GAAG,GAAE,WAAW,CAAC,EAAE,UAAU,CACrgB,EAAE,cAAc,EAAE,EAAE,WAAW,CAAC,EAAE,mBAAmB,CAAC,EAAE,KAAK,EAAE,EAAE,WAAW,CAAC,EAAE,8BAA8B,CAAC,EAAE,gBAAgB,EAAE,EAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,EAAE,eAAe,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,cAAc,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,GAAM,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,GAAG,GAAM,IAAI,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,CAAC,EAAE,GAAG,IAAI,EAAE,EAAE,OAAO,CAAC,GAAG,aAAa,GAAM,WAAW,EAAC,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,CACrf,EAAE,EAAE,EAAE,EAAE,IAAI,CAAE,CAAA,EAAE,eAAe,CAAC,CAAC,CAAC,MAAM,GAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,OAAO,GAAG,aAAa,GAAM,iBAAiB,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,GAAM,UAAU,EAAE,EAAE,MAAM,GAAG,GAAM,SAAS,CAAC,GAAG,GAAE,2BAA2B,GAAG,OAAO,CAAC,GAAG,GAAE,oBAAoB,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,IAAI,CAAC,kGAAkG,GAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,CAC1f,EAAE,EAAE,EAAE,EAAE,IAAI,OAAO,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,CAAK,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,eAAe,CAAC,CAAC,CAAC,MAAM,GAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAE,CAAA,EAAE,eAAe,EAAE,GAAG,EAAE,cAAc,CAAC,EAAE,UAAU,EAAE,EAAE,SAAS,CAAC,EAAE,OAAO,CAAI,EAAE,QAAQ,EAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,MAAM,GAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,GAAG,GAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,cAAc,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,aAAa,GAAM,qBAAqB,CAAC,GAAG,GAAG,KAAK,IAAI,GAAE,GAAG,CAAC,GAAG,kBAAkB,CAAC,CAAC,IAAI,EAAE,GAAE,GAAG,CAAC,EAClf,MAAK,IAAI,EAAE,WAAW,EAAG,CAAA,EAAE,WAAW,CAAC,CAAC,CAAA,EAAG,KAAK,IAAI,EAAE,aAAa,EAAG,CAAA,EAAE,aAAa,CAAC,CAAC,CAAA,EAAG,EAAE,gBAAgB,CAAC,UAAU,GAAG,EAAE,cAAc,CAAC,EAAE,aAAa,GAAG,GAAG,QAAQ,GAAG,IAAI,EAAE,GAAM,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,GAAG,GAAM,IAAI,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,kBAAkB,CAAC,EAAE,CAAC,EAAE,mBAAmB,CAAC,EAAE,CAAC,GAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,EAAE,cAAc,EAAE,EAAE,EAAE,gBAAgB,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,CAAC,EAAE,CAAC,EAAE,iBAAiB,GAAG,EAAE,mBAAmB,CAAC,EAAE,CAAC,EAAE,kBAAkB,GAClgB,GAAE,UAAU,CAAC,EAAE,2BAA2B,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,kBAAkB,CAAC,EAAE,CAAC,EAAE,EAAE,2BAA2B,CAAC,GAAG,EAAE,EAAE,mBAAmB,CAAC,EAAE,CAAC,EAAG,CAAA,EAAE,eAAe,EAAE,GAAG,EAAE,cAAc,CAAC,EAAE,gBAAgB,CAAC,MAAM,EAAE,kBAAkB,CAAC,EAAE,iBAAiB,GAAG,EAAE,mBAAmB,CAAC,EAAE,cAAc,CAAC,EAAE,cAAc,CAAC,mBAAmB,CAAC,EAAE,kBAAkB,GAAG,GAAE,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,cAAc,EAAE,EAAE,EAAE,UAAU,CAAC,EAAE,GAAG,GAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,kBAAkB,CACzgB,EAAE,EAAE,UAAU,EAAE,EAAE,cAAc,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,uBAAuB,CAAC,EAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,EAAE,YAAY,CAAC,EAAE,mBAAmB,EAAE,EAAE,WAAW,EAAE,EAAE,aAAa,EAAE,EAAE,uBAAuB,CAAC,EAAE,WAAW,CAAC,EAAE,wBAAwB,CAAC,EAAE,YAAY,CAAC,EAAE,mBAAmB,EAAE,EAAE,EAAE,mBAAmB,CAAC,GAAG,EAAE,eAAe,EAAE,GAAG,EAAE,cAAc,CAAC,EAAE,UAAU,CAAE,CAAA,EAAE,GAAE,WAAW,CAAC,EAAE,gBAAgB,CAAC,MAAM,GAAE,WAAW,CAAC,EAAE,UAAU,CAAC,MAAM,EAAE,gBAAgB,CAAC,EAAE,YAAY,CAAC,MAAM,EAAE,eAAe,CAAC,EAAE,WAAW,CAC5gB,KAAK,CAAC,EAAG,CAAA,EAAE,GAAE,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,kBAAkB,CAAC,EAAE,cAAc,CAAC,CAAC,EAAE,kBAAkB,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAA,EAAI,CAAA,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAA,EAAI,IAAI,IAAK,CAAA,EAAE,eAAe,CAAC,EAAE,WAAW,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,CAAA,EAAG,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAK,aAAa,GAAM,iBAAiB,CAAiH,CAAA,GAAG,GAAE,GAAG,CAAC,GAAG,kBAAkB,EAAC,GAAG,EAAE,MAAM,GAAG,GAAM,UAAU,CAAC,QAAQ,KAAK,CAAC,6HAClf,CAAC,IAAI,EAAE,CAAC,CAAE,CAAA,GAAE,GAAG,CAAC,GAAG,kBAAkB,GAAG,IAAK,CAAA,EAAE,eAAe,CAAC,EAAE,WAAW,CAAC,GAAE,GAAG,CAAC,GAAG,kBAAkB,EAAE,EAAE,CAAC,CAAA,EAAG,EAAE,sBAAsB,CAAC,EAAE,WAAW,IAAI,EAAE,oBAAoB,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,aAAa,CAAC,GAAG,QAAQ,KAAK,CAAC,8GAA8G,GAAG,EAAE,eAAe,CAAC,EAAE,WAAW,CAAC,GAAG,E,MAD3E,QAAQ,KAAK,CAAC,2FAC8D,EAAE,IAAI,CAAC,qBAAqB,CAAC,WACpa,OAD+a,QAAQ,IAAI,CAAC,gGACrb,GAAE,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,yBAAyB,CAAC,WAAiI,OAAtH,QAAQ,IAAI,CAAC,yGAAgH,GAAE,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,2BAA2B,CAAC,WAAqI,OAA1H,QAAQ,IAAI,CAAC,6GAAoH,GAAE,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,6BAA6B,CAAC,WAC9d,OADye,QAAQ,IAAI,CAAC,oHAC/e,GAAE,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAC,8BAA8B,CAAC,WAA8I,OAAnI,QAAQ,IAAI,CAAC,sHAA6H,GAAE,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAAC,mBAAmB,CAAC,WAAqH,OAA1G,QAAQ,IAAI,CAAC,6FAAoG,GAAE,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,sBAAsB,CAAC,WAAW,OAAO,GAAG,cAAc,AAAA,EAChgB,IAAI,CAAC,uBAAuB,CAAC,WAA+H,OAApH,QAAQ,IAAI,CAAC,uGAA8G,GAAE,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,QAAQ,IAAI,CAAC,yDAAyD,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,QAAQ,IAAI,CAAC,yDAAyD,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,QAAQ,IAAI,CAAC,0DAA0D,EACnf,IAAI,CAAC,eAAe,CAAC,WAAW,QAAQ,IAAI,CAAC,4DAA4D,EAAE,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC,iBAAiB,CAAC,IAAI,WAAW,OAAO,GAAG,OAAO,AAAA,EAAE,IAAI,SAAS,CAAC,EAAE,QAAQ,IAAI,CAAC,qEAAqE,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,IAAI,WAAW,OAAO,GAAG,IAAI,AAAA,EAAE,IAAI,SAAS,CAAC,EAAE,QAAQ,IAAI,CAAC,+DAA+D,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,IAAI,WAAW,OAAO,GAAG,QAAQ,AAAA,EACxf,IAAI,SAAS,CAAC,EAAE,QAAQ,IAAI,CAAC,uEAAuE,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,IAAI,WAAW,OAAO,GAAG,KAAK,AAAA,EAAE,IAAI,SAAS,CAAC,EAAE,QAAQ,IAAI,CAAC,iEAAiE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAChR,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,GAAM,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,GAAM,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,GAAM,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,GAAM,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EACnf,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,GAAM,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,GAAM,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,WAAW,EAAC,EAAE,WAAW,CAAI,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE,aAAa,EAAC,EAAE,aAAa,CAAI,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,EAAE,cAAc,CAAC,EAAE,cAAc,CAAC,IAAI,EACtU,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,iBAAiB,CAAC,QAAQ,SAAS,CAAC,CAAC,CAAC,EAAK,CAAA,IAAI,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAA,GAAE,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAA1E,CAA4E,EAAE,MAAM,WAAW,MAAM,AAAC,CAAA,IAAI,IAAI,CAAC,WAAU,AAAV,EAAa,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC,EACvH,OADyH,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CACngB,EAAE,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,cAAc,CAAQ,IAAI,AAAA,EAAE,QAAQ,WAAW,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,SAAS,EAAE,CAAC,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,GAAM,iBAAiB,CAAC,SAAS,EAAE,GAAM,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,GAAM,qBAAqB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,iBAAiB,CAAC,SAAS,EAC9c,GAAM,qBAAqB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,qBAAqB,CAC7E,GAAM,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAE,CAAA,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,GAAG,EAAE,KAAK,GAAG,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,KAAK,EAAE,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,0BAA0B,GAAG,OAAO,EAAE,QAAQ,KAAK,CAAC,sIAAsI,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,QAAQ,AAAC,CAAA,aAAa,GAAM,0BAA0B,CAAC,EAAE,wBAAwB,CAAC,EAClgB,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,iBAAiB,EAAE,EAAE,wBAAwB,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,EACjG,GAAM,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAE,CAAA,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,YAAY,aAAa,EAAE,GAAG,CAAC,0BAA2B,CAAA,EAAE,EAAE,YAAY,CAAC,EAAE,CAAA,EAAI,CAAA,EAAE,EAAE,cAAc,CAAC,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,GAAG,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,KAAK,EAAE,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,yBAA0B,QAAO,EAAE,QAAQ,KAAK,CAAC,kIAC/a,EAAE,0BAA0B,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC,EAC7E,GAAM,eAAe,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,CAAC,CAAE,CAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAmC,EAAjC,GAAG,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAO,OAAO,GAAG,IAAK,iCAAiC,EAAE,EAAE,YAAY,CAAC,mCAAmC,EAAE,YAAY,CAAC,uCAAuC,EAAE,YAAY,CAAC,yCAAyC,KAAM,KAAK,gCAAgC,EAAE,EAAE,YAAY,CAAC,kCAAkC,EAAE,YAAY,CAAC,sCAAsC,EAAE,YAAY,CAAC,wCACvd,KAAM,KAAK,iCAAiC,EAAE,EAAE,YAAY,CAAC,mCAAmC,EAAE,YAAY,CAAC,yCAAyC,KAAM,SAAQ,EAAE,EAAE,YAAY,CAAC,EAAE,CAA+E,OAA9E,OAAO,GAAG,QAAQ,IAAI,CAAC,wBAAwB,EAAE,6BAAoC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtR,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,UAAU,EAAE,CAAC,GAAG,EAAE,EAAE,wBAAwB,CAAC,EAAE,aAAa,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE,EAAE,wBAAwB,CAAC,EAAE,eAAe,CAAC,EAAE,UAAU,EAAE,SAAS,CAAC,MAAM,QAAQ,EAAE,SAAS,CAAC,MAAM,YAAY,GAAG,EAAE,EAAE,wBAAwB,CAAC,EAAE,aAAa,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,EAAE,EAAE,wBAAwB,CAAC,EAAE,eAAe,CAAC,EAAE,YAAY,EAAE,SAAS,CAAC,UAAU,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,QAC9e,IAAI,CAAC,sBAAsB,CAAC,KAAK,IAAI,EAAE,sBAAsB,EAAC,EAAE,sBAAsB,CAAI,IAAI,CAAC,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,uBAAuB,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE,YAAY,CAAC,EAAE,8BAA8B,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,YAAY,CAAC,EAAE,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,YAAY,CAAC,EAAE,yBAAyB,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,YAAY,CAAC,EAAE,kBAAkB,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE,YAAY,CAAC,EAAE,0BAA0B,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,mBAAmB,EACrgB,IAAI,CAAC,mBAAmB,CAAC,EAAE,YAAY,CAAC,EAAE,4BAA4B,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,qBAAqB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,qBAAqB,CAAqB,AAApB,CAAA,EAAE,EAAE,IAAI,CAAC,SAAS,CAAA,IAAM,IAAI,CAAC,SAAS,EAAG,CAAA,QAAQ,IAAI,CAAC,uBAAuB,IAAI,CAAC,SAAS,CAAC,uBAAuB,EAAE,YAAY,IAAI,CAAC,SAAS,CAAC,CAAA,EAAG,IAAI,CAAC,sBAAsB,EAAG,CAAA,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,iBAAA,CAAkB,EAC7d,GAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAa,IAAyB,EAArB,EAAE,CAAC,CAAC,AAAnB,CAAA,EAAE,EAAE,MAAM,AAAN,EAAiB,EAAE,CAAC,CAAC,UAAU,CAAG,IAAI,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,mBAAmB,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAY,AAAX,CAAA,EAAE,EAAE,GAAG,CAAC,EAAR,EAAa,SAAS,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAqG,MAAK,IAAxG,CAAA,EAAE,aAAa,GAAM,0BAA0B,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,EAAE,GAAG,CAAC,GAAG,aAAa,AAAb,GAA2B,CAAA,EAAE,YAAY,CAAC,GAAG,aAAa,GAAM,0BAA0B,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,EAAA,CAAG,CAAC,IAAI,EAAE,CAAC,CAAE,CAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,IACja,EADqa,EAAE,EAAE,QAAQ,QAAC,AAAG,KAAK,IACrf,CAAC,CAAC,EAAE,EAAE,CAAC,CAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,EAAE,gBAAgB,CAAC,UAAU,GAAS,aAAa,GAAM,cAAc,CAAC,EAAE,EAAE,aAAa,GAAM,QAAQ,EAAG,CAAA,KAAK,IAAI,EAAE,eAAe,EAAG,CAAA,EAAE,eAAe,CAAE,AAAA,CAAA,IAAI,GAAM,cAAc,AAAd,EAAgB,aAAa,CAAC,EAAA,EAAI,EAAE,EAAE,eAAe,AAAf,EAAiB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,UAAU,GAAU,EAAC,CAAC,EAC3R,GAAM,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,aAAa,GAAM,0BAA0B,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,EAAG,MAAK,IAAI,EAAE,aAAa,CAAE,CAAA,EAAE,aAAa,CAAC,EAAE,YAAY,GAAG,EAAE,UAAU,CAAC,EAAE,EAAE,aAAa,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,EAAE,YAAY,CAAC,EAAE,WAAW,EAAE,EAAE,OAAO,CAAC,EAAE,OAAO,AAAP,EAAS,EAAE,OAAO,GAAG,EAAE,OAAO,EAAG,CAAA,EAAE,UAAU,CAAC,EAAE,EAAE,aAAa,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC,QAAQ,KAAK,CAAC,2KAC7c,CAAA,EAAE,aAAa,CAAC,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,iBAAiB,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,KAAK,GAAG,EAAE,WAAW,CAAC,KAAK,CAAC,CAAA,EAAG,EAAE,OAAO,CAAC,EAAE,OAAO,AAAP,CAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAQ,OAAO,KAAK,IAAnB,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAsB,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,EAAG,KAAK,EAAE,OAAO,CAAC,IAAI,CAAA,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA,CAAK,CAAC,IAAI,EAAE,IAAI,GAAM,eAAe,CAAC,EAAE,EAAE,EAAG,CAAA,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAE,OAAO,aAAa,GAAM,0BAA0B,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,EAAE,GAAG,CAAC,GAAG,aAAa,AAAA,EAAE,IAAI,CAAC,qBAAqB,CAClgB,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,KAAK,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,UAAU,CAAc,GAAb,EAAE,EAAE,QAAQ,CAAI,OAAO,EAAE,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,AAAC,CAAA,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,IAAI,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAA6G,OAA5B,EAA9E,EAAE,IAAI,GAAM,eAAe,CAAC,GAAK,CAAA,MAAM,EAAE,KAAK,CAAC,YAAY,WAAA,EAAa,GAAG,GAAO,EAAE,oBAAoB,EAAS,EAAE,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAC3f,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,EAAG,CAAA,EAAE,QAAQ,YAAY,GAAM,QAAQ,EAAE,EAAE,gBAAgB,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,UAAU,CAAuC,IAAI,IAAI,KAA9C,OAAO,GAAG,EAAE,EAAE,EAAE,oBAAoB,EAAe,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,EAAsB,IAAI,KAAxB,EAAE,EAAE,eAAe,CAAY,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,EACrS,GAAM,YAAY,CAAC,WAAkH,SAAS,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAYD,EAAgR,EAZ3Q,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,aAAa,CAAC,YAAY,CAAC,EAAE,EAAE,aAAa,CAAC,cAAc,CAAC,EAAE,sBAAuB,CAAA,EAAE,aAAa,GAAG,GAAM,YAAY,CAAC,EAAE,qBAAqB,EAAE,aAAa,GAAG,GAAM,gBAAgB,EAAG,CAAA,EAAE,yBAAA,EAA2B,IAAI,EAAE,mBAAmB,EAAE,yBAAyB,EAAE,2BAChf,GAAG,EAAE,MAAM,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,KAAK,GAAM,qBAAqB,CAAC,KAAK,GAAM,qBAAqB,CAAC,EAAE,mBAAmB,KAAM,MAAK,GAAM,gCAAgC,CAAC,KAAK,GAAM,gCAAgC,CAAC,EAAE,sBAAsB,KAAM,MAAK,GAAM,0BAA0B,CAAC,EAAE,oBAAoB,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,KAAK,GAAM,qBAAqB,CAAC,KAAK,GAAM,gCAAgC,CAAC,EAAE,wBAAwB,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,GAAM,iBAAiB,CAAC,EAAE,2BACxe,KAAM,MAAK,GAAM,YAAY,CAAC,EAAE,sBAAsB,KAAM,MAAK,GAAM,YAAY,CAAC,EAAE,qBAAqB,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,EAAE,AAFvH,SAAW,CAAC,EAAE,IAAS,EAAL,EAAE,EAAE,CAAG,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,EAAC,IAAI,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAEmB,GAAG,EAAE,EAAE,aAAa,GAYzE,OAZ4E,aAAa,GAAM,iBAAiB,CAAC,EAAE,EAAE,GAAI,CAAA,EAAE,CAAC,aAAa,EAAE,SAAS,CAAC,UAAU,aAAa,EAAE,SAAS,CAAC,QAAQ,uBAAuB,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,sBAAsB,CAAC,0BAA0B,GAAG,EAAE,UAAU,CAAC,sBAAsB,GAAG,EAAE,WAAW,CAAC,uBAAuB,GAAG,wBAAwB,EAAE,0BAC9e,EAAE,YAAY,CAAC,4BAA4B,EAAE,cAAc,CAAC,2BAA2B,EAAE,aAAa,CAAC,2BAA2B,EAAE,aAAa,CAAC,uBAAuB,EAAE,UAAU,CAAC,qBAAqB,EAAE,QAAQ,CAAC,EAAE,GAAG,CAAC,kBAAkB,GAAG,EAAE,MAAM,CAAC,qBAAqB,GAAG,EAAE,MAAM,CAAC,WAAW,EAAE,GAAG,EAAE,QAAQ,CAAC,uBAAuB,GAAG,EAAE,KAAK,CAAC,oBAAoB,GAAG,EAAE,WAAW,CAAC,0BAA0B,GAAG,EAAE,OAAO,CAAC,sBAAsB,GAAG,EAAE,SAAS,CAAC,wBAAwB,GAAG,EAAE,eAAe,EACrf,EAAE,sBAAsB,CAAC,8BAA8B,GAAG,EAAE,WAAW,CAAC,0BAA0B,GAAG,EAAE,QAAQ,CAAC,uBAAuB,GAAG,EAAE,YAAY,CAAC,oBAAoB,GAAG,EAAE,WAAW,CAAC,sBAAsB,GAAG,EAAE,QAAQ,CAAC,uBAAuB,GAAG,EAAE,gBAAgB,CAAC,uBAAuB,GAAG,EAAE,YAAY,CAAC,2BAA2B,GAAG,EAAE,YAAY,EAAE,CAAC,IAAI,EAAE,WAAW,CAAC,2BAA2B,GAAG,EAAE,WAAW,CAAC,uBAAuB,GAAG,EAAE,SAAS,CAAC,qBAAqB,GAAG,EAAE,gBAAgB,CACrf,wBAAwB,GAAG,EAAE,gBAAgB,CAAC,WAAW,EAAE,GAAG,EAAE,cAAc,CAAC,0BAA0B,GAAG,EAAE,eAAe,CAAC,8BAA8B,GAAG,EAAE,sBAAsB,CAAC,0BAA0B,GAAG,EAAE,sBAAsB,EAAE,EAAE,UAAU,CAAC,GAAG,CAAC,kBAAkB,8BAA8B,GAAG,4BAA4B,gCAAgC,iCAAiC,2BAA2B,6BAA6B,+BAA+B,2BACve,yBAAyB,qBAAqB,mBAAmB,yBAA0B,SAAS,0BAA0B,gCAAiC,gCAAiC,gCAAiC,gCAAiC,2BAA4B,iCAAmC,iCAAmC,iCAAmC,iCAAmC,SAAU,iCAAmC,iCACvd,iCAAmC,iCAAmC,UAAW,SAAS,sBAAsB,6BAA8B,8BAA+B,SAAS,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,SAAS,EAAE,EAAE,WAAW,EAAE,EAAE,WAAW,CAAC,kDAAkD,GAAG,EAAE,sBAAsB,EAAE,EAAE,UAAU,CAAC,GAAG,CAAC,kBAAkB,wCAAwC,GAAG,aAAa,EAAE,SAAS,CAAC,UAAU,aAAa,EAAE,SAAS,CAAC,QAAQ,uBAC1e,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,0BAA0B,EAAE,YAAY,CAAC,4BAA4B,EAAE,cAAc,CAAC,2BAA2B,EAAE,aAAa,CAAC,2BAA2B,EAAE,aAAa,CAAC,uBAAuB,EAAE,UAAU,CAAC,EAAE,SAAS,CAAC,qBAAqB,EAAE,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC,sBAAsB,GAAG,EAAE,WAAW,CAAC,uBAAuB,GAAG,wBAAwB,EAAE,EAAE,MAAM,EAAE,EAAE,GAAG,CAAC,kBAAkB,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,mBAAmB,GAAG,EAAE,GAAG,CAAC,kBAAkB,GAAG,EAAE,MAAM,CAAC,qBACjf,GAAG,EAAE,MAAM,CAAC,WAAW,EAAE,GAAG,EAAE,MAAM,CAAC,WAAW,EAAE,GAAG,EAAE,MAAM,CAAC,WAAW,EAAE,GAAG,EAAE,QAAQ,CAAC,uBAAuB,GAAG,EAAE,KAAK,CAAC,oBAAoB,GAAG,EAAE,WAAW,CAAC,0BAA0B,GAAG,EAAE,OAAO,CAAC,sBAAsB,GAAG,EAAE,SAAS,CAAC,wBAAwB,GAAG,EAAE,WAAW,CAAC,0BAA0B,GAAG,EAAE,QAAQ,CAAC,uBAAuB,GAAG,EAAE,YAAY,CAAC,oBAAoB,GAAG,EAAE,WAAW,CAAC,sBAAsB,GAAG,EAAE,KAAK,CAAC,gBAAgB,GAAG,EAAE,WAAW,CAAC,uBAAuB,GAAG,EAAE,SAAS,CAAC,qBACnf,GAAG,EAAE,gBAAgB,CAAC,wBAAwB,GAAG,EAAE,gBAAgB,CAAC,WAAW,EAAE,GAAG,EAAE,cAAc,CAAC,0BAA0B,GAAG,EAAE,sBAAsB,CAAC,0BAA0B,GAAG,EAAE,sBAAsB,EAAE,EAAE,UAAU,CAAC,GAAG,CAAC,kBAAkB,8BAA8B,GAAG,2BAA2B,+BAA+B,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAA,EAAO,EAAE,EAAE,EAAE,EAAE,GAAM,WAAW,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,GAAG,EAAE,GAAM,WAAW,CAAC,EAAE,EAAE,eAAe,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,GAAG,KAAK,IACrf,EAAE,mBAAmB,CAAC,EAAE,kBAAkB,CAAC,EAAE,EAAE,EAAE,mBAAmB,EAAE,CAAC,IAAI,EAAE,YAAY,EAAE,EAAE,kBAAkB,CAAC,EAAE,EAAE,YAAY,EAAE,WAAW,CAAC,GAAG,EAAE,EAAE,iBAAiB,CAAC,GAAG,EAAE,EAAE,gBAAgB,CAAC,GAAG,EAAE,EAAE,gBAAgB,CAAC,GAAG,EAAE,EAAE,CAAC,EAAK,CAAC,IAAI,EAAE,mBAAmB,CAAC,EAAE,EAAE,WAAW,EAAE,CAAA,EAAE,CAAC,EAAE,QAAQ,KAAK,CAAC,qCAAqC,EAAE,QAAQ,GAAG,qBAAqB,EAAE,mBAAmB,CAAC,EAAE,EAAE,eAAe,EAAE,uBAAuB,EAAE,EAAE,EAA/M,EAA0N,KAAK,EAAE,QAAQ,IAAI,CAAC,6CAC/c,GAAW,CAAA,KAAK,GAAG,KAAK,CAAA,GAAE,CAAA,EAAE,CAAC,CAAA,EAAE,GAAI,CAAA,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,aAAa,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAA,EAAG,EAAE,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,GAAS,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,KAAK,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,mBAAmB,CAAC,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,gBAAgB,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,kBAAkB,CAAC,EAAE,GAAG,EAAE,EAAE,WAAW,CAAC,MAAO,CAAA,KAAK,GAAG,IAAI,EAAE,MAAM,CAAC,GAAI,CAAA,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,EAAQ,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,IACxf,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,mBAAmB,CAAC,EAAE,EAAE,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,eAAe,CAAC,EAAE,GAAG,IAAI,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,iBAAiB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,aAAa,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,WAAgF,OAArE,QAAQ,IAAI,CAAC,wDAA+D,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,WAAW,CAAC,IAAI,WAAoF,OAAzE,QAAQ,IAAI,CAAC,4DAAmE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,GACnf,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,EAAS,IAAI,AAAA,CAAC,IAC9G,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,kBAAkB,QAAQ,mBAAmB,SAAS,kBAAkB,QAAQ,oBAAoB,UAAU,kBAAkB,QAAQ,kBAAkB,QAAQ,mBAAmB,SAAS,eAAe,QAAQ,EAAE,EAAE,ycAAyc,KAAK,CAAC,IAAK,CAAA,IAAI,CAAC,aAAa,CAC7uB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,CAAA,EAAE,UAAU,EAAE,CAAC,IAAI,EAAE,OAAO,EAAG,CAAA,aAAa,GAAM,gBAAgB,EAAE,IAAI,aAAa,GAAM,UAAU,EAAE,IAAI,aAAa,GAAM,SAAS,EAAE,IAAI,aAAa,GAAM,eAAe,EAAE,GAAA,CAAI,CAAO,IAAN,EAAE,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,CAAA,EAAE,UAAU,EAAG,CAAA,aAAa,GAAM,SAAS,EAAE,IAAI,aAAa,GAAM,gBAAgB,EAAE,GAAA,CAAI,CAC0C,OADzC,EAAE,EAAE,EAAE,mBAAmB,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,gBAAgB,CAAC,EAAE,KAAM,CAAA,EAAE,KAAK,KAAK,CAAE,AAAA,CAAA,EAAE,iBAAiB,CAClgB,EAAA,EAAI,GAAG,KAAK,IAAI,GAAG,aAAa,GAAM,WAAW,EAAyC,AAAtC,CAAA,EAAE,KAAK,GAAG,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAA,EAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,IAAI,CAAC,mCAAmC,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,4BAA4B,EAAE,iCAAgC,EAAI,EAAE,EAAE,YAAY,GAAG,OAAO,EAAE,SAAS,EAAoC,AAAjC,CAAA,EAAE,EAAE,eAAe,CAAC,EAAE,SAAS,CAAA,IAAM,EAAE,SAAS,EAAE,QAAQ,IAAI,CAAC,oCAAoC,EAAE,SAAS,CAAC,uBAAuB,EAAE,YAAmB,CAAC,SAAS,EAAE,UAAU,EAAE,uBAAuB,EAAE,cAAc,CACjgB,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,gBAAgB,CAAC,CAAC,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,aAAa,EAAE,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,aAAa,GAAM,OAAO,CAAC,YAAY,EAAE,OAAO,GAAG,GAAM,WAAW,CAAC,gBAAgB,EAAE,eAAe,CAAC,uBAAuB,EAAE,sBAAsB,CAAC,SAAS,EAAE,QAAQ,CAC1f,SAAS,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,YAAY,CAAC,aAAa,EAAE,YAAY,CAAC,gBAAgB,EAAE,eAAe,CAAC,gBAAgB,EAAE,eAAe,CAAC,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,cAAc,EAAE,WAAW,EAAE,iBAAiB,EAAE,SAAS,CAAC,OAAO,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE,cAAc,EAAE,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,YAAY,EAAE,IAAI,GAAG,GAAM,UAAU,CAAC,UAAU,EAAE,IAAI,GAC5f,GAAM,QAAQ,AAAA,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAiF,GAAhF,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,cAAc,EAAE,EAAE,IAAI,CAAC,EAAE,YAAY,CAAA,EAAM,KAAK,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,KAAK,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,KAAK,CAAC,CAA2D,OAA1D,KAAK,IAAI,GAAI,CAAA,EAAE,IAAI,GAAM,YAAY,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,EAAA,EAAW,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,GAAG,GACngB,EAAE,EAAE,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,EAAG,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAM,eAAe,CAAC,WAAW,IAAI,EAAE,CAAC,CAAE,CAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAW,IAAI,EAAE,CAAC,CAAhB,EAAE,EAAE,IAAI,CAAW,CAA2B,OAA1B,KAAK,IAAI,GAAI,CAAA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA,EAAU,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,AAAA,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EACxR,GAAM,WAAW,EAAgB,GAAE,SAAS,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,MAAM,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAS,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,YAAY,CAAC,GAA8S,OAA3S,EAAE,YAAY,CAAC,EAAE,GAAG,EAAE,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,kBAAkB,CAAC,EAAE,EAAE,cAAc,GAAG,QAAQ,KAAK,CAAC,+CAA+C,KAAK,EAAE,gBAAgB,CAAC,IAAI,QAAQ,IAAI,CAAC,2CAA2C,IAAI,EAAE,aAAa,CAAC,SAAS,WAAW,EAAE,gBAAgB,CAAC,GAAG,GAAE,IAAW,CAAC,GACpe,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,KAAK,IAAI,EAAE,YAAY,EAAE,EAAE,EAAE,YAAY,CAAC,MAAM,EAAE,EAAE,YAAY,CAAC,EAAE,aAAa,GAAM,WAAW,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,mBAAmB,CAAC,EAAE,mBAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAwF,OAAtF,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,kBAAkB,CAAC,EAAE,kBAAkB,CAAQ,CAAC,CAC7K,IAAI,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,EAAE,GAAM,aAAa,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,EAAE,IAAI,GAAM,cAAc,CAAC,CAAC,SAAS,EAAE,aAAa,EAAE,YAAY,CAAC,eAAe,EAAE,cAAc,AAAA,GAAG,EAAE,IAAI,GAAM,cAAc,CAAC,CAAC,SAAS,EACpf,aAAa,EAAE,YAAY,CAAC,eAAe,EAAE,cAAc,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,IAAI,GAAM,cAAc,CAAC,CAAC,SAAS,EAAE,aAAa,EAAE,YAAY,CAAC,eAAe,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,IAAI,GAAM,cAAc,CAAC,CAAC,SAAS,EAAE,aAAa,EAAE,YAAY,CAAC,eAAe,EAAE,cAAc,CAAC,aAAa,CAAC,EAAE,SAAS,CAAC,CAAC,EAAG,CAAA,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,AAAC,CAAA,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAM,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAM,aAAa,CACpgB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,OAAO,EAAG,CAAA,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,IAAI,EAAE,WAAU,AAAV,EAAa,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,EAAE,SAAS,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,QAAQ,GAAG,GAAM,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAE,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,IAAI,EAAE,GAAM,YAAY,AAAC,CAAA,EAAE,IAAI,GAAG,GAAM,gBAAgB,EAAG,CAAA,EAAE,GAAM,aAAY,AAAZ,EAAe,EAAE,SAAS,CAAC,IAAI,GAAM,iBAAiB,CAAC,EAAE,cAAc,CAAC,EAAE,eAAe,CAAC,CAAC,UAAU,EACxf,UAAU,EAAE,OAAO,GAAM,UAAU,AAAA,GAAG,EAAE,aAAa,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,cAAc,CAAC,EAAE,eAAe,EAAE,EAAE,YAAY,CAAC,IAAI,GAAM,OAAO,AAAA,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,aAAa,GAAM,SAAS,CAAC,EAAE,YAAY,CAAC,IAAI,GAAM,iBAAiB,CAAC,EAAE,eAAe,CAAC,EAAE,cAAc,CAAC,EAAE,eAAe,CAAC,EAAE,gBAAgB,CAAC,EAAE,eAAe,OAAO,GAAG,aAAa,GAAM,gBAAgB,CAAC,EAAE,YAAY,CAAC,IAAI,GAAM,kBAAkB,CAAC,EAAE,gBAAgB,CAAC,EAAE,iBAAiB,CAAC,EAAE,eAAe,CAAC,EAAE,kBAAkB,CAAC,EAAE,gBAAgB,CAC/f,EAAE,eAAe,MAAM,CAAC,QAAQ,KAAK,CAAC,2DAA2D,GAAG,QAAQ,CAAC,EAAE,GAAG,CAAC,EAAE,YAAY,EAAE,CAAC,IAAI,EAAE,UAAU,EAAE,EAAE,iBAAiB,EAAE,CAAC,EAAE,mBAAmB,EAAE,CAAC,EAAE,YAAY,EAAG,CAAA,EAAE,YAAY,CAAC,IAAI,GAAM,YAAY,CAAC,EAAE,YAAY,EAAE,EAAE,GAAG,CAAC,EAAE,YAAY,CAAA,EAAG,IAAI,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,YAAY,CACU,IADT,EAAE,QAAQ,CAAC,qBAAqB,CAAC,EAAE,WAAW,EAAE,EAAE,qBAAqB,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,iBAAiB,GAAG,EAAE,kBAAkB,CAAC,UAAU,CAAC,EAAE,WAAW,EACngB,EAAE,YAAY,EAAG,CAAA,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE,mBAAkB,AAAlB,EAAqB,EAAE,mBAAmB,EAAE,EAAE,YAAY,CAAC,MAAM,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,gBAAgB,EAAE,EAAE,QAAQ,CAAC,EAAE,kBAAkB,EAAE,EAAE,gBAAgB,CAAC,EAAE,gBAAgB,CAAC,EAAE,kBAAkB,EAAE,EAAE,aAAa,CAAC,GAAG,EAAE,eAAe,CAAC,GAAG,EAAE,KAAK,GAAG,EAAE,MAAM,CAAC,EAAE,AANH,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAE,AAAA,CAAA,aAAa,GAAM,IAAI,EAAE,aAAa,GAAM,IAAI,EAAE,aAAa,GAAM,MAAK,AAAL,GAAS,EAAE,UAAU,EAAG,CAAA,CAAC,IAAI,EAAE,aAAa,EAAE,CAAC,IAAI,EAAE,gBAAgB,CAAC,EAAA,GAChgB,CAAC,IAAI,EAAE,QAAQ,CAAC,OAAO,EAAG,CAAA,EAAE,eAAe,CAAC,gBAAgB,CAAC,EAAE,kBAAkB,CAAC,EAAE,WAAW,EAAE,EAAE,IAAI,CAAC,EAAA,EAAI,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAKoL,EAAE,GAAG,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,GAAG,aAAa,GAAM,gBAAgB,CAAC,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EACpf,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,aAAa,CAAC,AAAC,EAAC,IAAI,EAAE,OAAO,EAAE,EAAE,kBAAkB,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,kBAAkB,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,aAAa,GAAG,EAAE,EAAE,aAAa,GAAG,EAAE,aAAa,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,QAAQ,GAAG,GAAM,aAAa,EAAE,EAAE,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,YAAY,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3T,GAAM,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,WAAW,IAAI,EAAE,IAAI,WAAW,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,YAAY,CAAC,EAAE,uBAAuB,EAAE,EAAE,KAAK,EAAE,EAAE,CAAC,CAAE,CAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,YAAY,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,EAAE,SAAS,CAAC,EAAE,MAAM,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,QAAQ,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,EAAE,SAAS,CAAC,EAAE,SAAS,CAClgB,EAAE,mBAAmB,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,EAAE,uBAAuB,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA,CAAE,EAAE,IAAI,CAAC,uBAAuB,CAAC,WAAW,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAG,CAAA,EAAE,wBAAwB,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA,CAAE,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,CAAE,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,CAAE,EAAE,IAAI,CAAC,2BAA2B,CAAC,WAAW,GAAG,OAAO,GAAI,CAAA,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,mCAC9e,EAAE,GAAG,CAAC,gCAAA,EAAkC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE,0BAA0B,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,GAAI,CAAA,IAAI,GAAM,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,GAAM,gBAAgB,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,GAAG,CAAA,EAAG,IAAI,GAAM,mBAAmB,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,EAAE,mBAAmB,CAAA,EAAG,IAAI,GAAM,gBAAgB,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAC5f,EAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,EAAE,SAAS,CAAA,EAAG,IAAI,GAAM,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAG,CAAA,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,qBAAqB,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,EAAE,iBAAiB,CAAC,EAAE,SAAS,CAAC,EAAE,mBAAmB,CAAC,EAAE,GAAG,CAAC,EAAE,mBAAmB,CAAA,EAAG,EAAE,CAAA,EAAM,IAAI,GAAM,cAAc,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAK,CAAA,IAAI,GAAG,IAAI,CAAA,GAAE,CAAA,EAAE,qBAAqB,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAA,EAAK,CAAA,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAA,GAAE,CAAA,EAAE,iBAAiB,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,GAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,CACrf,SAAS,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,OAAO,GAAG,KAAK,GAAM,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,KAAK,EAAE,KAAM,MAAK,GAAM,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,MAAM,EAAE,KAAM,MAAK,GAAM,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE,KAAM,MAAK,GAAM,cAAc,CAAC,EAAE,SAAS,CAAC,EAAE,MAAM,EAAE,KAAM,MAAK,GAAM,UAAU,CAAC,EAAE,SAAS,CAAC,EAAE,KAAK,EAAE,KAAM,MAAK,GAAM,iBAAiB,CAAC,EAAE,SAAS,CAAC,EAAE,MAAM,EAAE,KAAM,MAAK,GAAM,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,OAAO,EAAE,KAAM,MAAK,GAAM,aAAa,CAAC,EAAE,SAAS,CAAC,EAAE,QAAQ,EAAE,KAAM,SAAQ,EAAE,SAAS,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,MAAM,EAC3f,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI,GAAI,CAAA,EAAE,SAAS,CAAC,GAAG,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI,GAAI,CAAA,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,IAAI,GAAI,CAAA,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,IAAI,GAAI,CAAA,EAAE,SAAS,CAAC,GAAG,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,mBAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,mBAAmB,EAAE,AAAC,GAAG,CAAA,IAAI,GAAG,IAAI,CAAA,GAAI,CAAA,EAAE,aAAa,CAAC,EAC1f,GAAG,EAAE,EAAE,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,YAAY,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAA,EAAG,IAAI,GAAI,CAAA,EAAE,aAAa,CAAC,GAAG,EAAE,CAAA,CAAE,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAG,EAAE,aAAa,GAAG,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,MAAK,IAAI,GAAI,CAAA,EAAE,CAAC,KAAK,KAAK,EAAE,QAAQ,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA,EAAM,CAAA,EAAE,IAAI,GAAG,GAAG,EAAE,OAAO,GAAG,CAAA,GAAE,CAAA,EAAE,WAAW,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,WAAW,GAAG,CAAC,EAAE,oBAAoB,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC,EACvf,IAAI,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,EAAE,wBAAwB,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA,EAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EACjN,GAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAwB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAhC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,KAAK,AAAa,CAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,MAAM,CAAC,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,GAAG,KAAK,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,YAAY,GAAG,EAAE,EAAE,YAAY,GAAG,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,UAAU,CAAC,EAAE,oBAAoB,CAClhB,GAAG,EAAE,UAAU,CAAC,EAAE,oBAAoB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,aAAa,GAAG,EAAE,EAAE,aAAa,GAAG,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,aAAa,CAAC,MAAM,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,cAAc,CAAC,EAAE,aAAa,EAAE,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,cAAc,CAAC,EAAE,aAAa,EAAE,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,kBAAkB,CAAC,EAAE,OAAO,EAAE,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,kBAAkB,CAAC,EAAE,OAAO,EAAE,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,UAAU,CAAC,EACpf,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE,aAAa,CAAC,MAAM,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,cAAc,CAAC,EAAE,aAAa,EAAE,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,cAAc,CAAC,EAAE,aAAa,EAAE,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,kBAAkB,CAAC,EAAE,OAAO,EAAE,EAAE,aAAa,CAAC,EAAE,UAAU,CAAC,EAAE,kBAAkB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAG,AAAA,CAAA,EAAE,EAAE,EAAE,YAAY,CAAC,EAAE,8BAA8B,CAAA,EAAG,CAAC,aAAa,kuCAC/W,eAAe,8bAA8b,EAAE,CAAC,aAAa,6dAC7d,eAAe,+wBAA+wB,EAC9xB,EAAE,EAAE,aAAa,GAAG,EAAE,EAAE,YAAY,CAAC,EAAE,eAAe,EAAE,EAAE,EAAE,YAAY,CAAC,EAAE,aAAa,EAAE,EAAE,aAAa,EAAE,YAAY,GAAG,YAAY,EAAE,YAAY,CAAC,EAAE,EAAE,EAAE,cAAc,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,aAAa,CAAC,GAAG,EAAE,aAAa,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,iBAAiB,CAAC,EAAE,YAAY,EAAE,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,EAAE,kBAAkB,CAAC,EAAE,cAAc,EAAE,EAAE,kBAAkB,CAAC,EAAE,OAAO,EAAE,EAAE,kBAAkB,CAAC,EAAE,gBAAgB,EAAE,EAAE,kBAAkB,CAAC,EAC1f,WAAW,EAAE,EAAE,kBAAkB,CAAC,EAAE,SAAS,EAAE,EAAE,kBAAkB,CAAC,EAAE,SAAS,EAAE,EAAE,kBAAkB,CAAC,EAAE,YAAY,EAAE,EAAE,kBAAkB,CAAC,EAAE,iBAAiB,CAAmV,IAAlV,EAAE,UAAU,CAAC,GAAG,EAAE,cAAc,GAAG,EAAE,eAAe,CAAC,GAAG,EAAE,eAAe,CAAC,GAAG,EAAE,uBAAuB,GAAG,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE,mBAAmB,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,mBAAmB,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,UAAU,CAAC,EAAE,oBAAoB,CAAC,GAAG,EAAE,OAAO,CAAC,EAAE,SAAS,EAAE,EAAE,SAAS,CAAC,CAAC,GAAG,EAAE,EAAM,EACrf,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,YAAY,CAAC,EAAE,kBAAkB,EAAE,EAAE,eAAe,CAAC,EAAE,gBAAgB,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,MAAM,EAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,GAAG,EAAE,cAAc,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,CAAC,EACzf,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,EAAE,UAAU,EAAE,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,cAAc,CAAC,GAAG,EAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,GAAG,EAAE,cAAc,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,UAAU,EAAE,EAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,cAAc,CAAC,GAAG,EAAE,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,oBAAoB,CAAC,EAAE,oBAAoB,CAAC,GAAG,EAAE,gBAAgB,GAAG,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,EAC5f,EAAE,EAAE,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,EAAE,AAAC,CAAA,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAG,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,EAAE,UAAU,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,cAAc,CAAC,EAAA,CAAG,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,EAAE,UAAU,EAAE,EAAE,SAAS,CAAC,CAAC,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,EAC7f,GAAM,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,EAAwC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,AAAA,CAAC,IAArF,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA+E,EAAE,EAAE,EAAE,EAA5B,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,KAAK,CAAS,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,UAAU,CAAC,EAAE,IAAI,GAAM,OAAO,AAAC,CAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,IAAI,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,YAAY,GAAG,EAAE,EAAE,YAAY,GAAG,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,UAAU,CAAC,EAAE,oBAAoB,CACjhB,GAAG,EAAE,UAAU,CAAC,EAAE,oBAAoB,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,aAAa,GAAG,EAAE,EAAE,YAAY,CAAC,EAAE,aAAa,EAAE,EAAE,EAAE,YAAY,CAAC,EAAE,eAAe,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,aAAa,EAAE,YAAY,GAAG,UAAU,4tBAA4tB,CAAC,IAAI,CAAC,OACl7B,EAAE,YAAY,CAAC,EAAE,CAAC,aAAa,EAAE,YAAY,GAAG,UAAU,6yBAA6yB,CAAC,IAAI,CAAC,OAC72B,EAAE,aAAa,CAAC,GAAG,EAAE,aAAa,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,GAAG,EAAE,WAAW,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,iBAAiB,CAAC,EAAE,YAAY,EAAE,EAAE,iBAAiB,CAAC,EAAE,MAAM,EAAE,EAAE,kBAAkB,CAAC,EAAE,YAAY,EAAE,EAAE,kBAAkB,CAAC,EAAE,WAAW,EAAE,EAAE,kBAAkB,CAAC,EAAE,YAAY,EAAE,EAAE,kBAAkB,CAAC,EAAE,SAAS,EAAE,EAAE,kBAAkB,CAAC,EAAE,SAAS,EAAE,EAAE,kBAAkB,CAAC,EAAE,OAAO,EAAE,EAAE,kBAAkB,CAAC,EAAE,WAAW,EAAE,EAAE,kBAAkB,CAAC,EAAE,mBAAmB,EAAE,EAAE,kBAAkB,CAAC,EAAE,oBAAoB,EACpf,EAAE,kBAAkB,CAAC,EAAE,WAAW,EAAE,EAAE,kBAAkB,CAAC,EAAE,cAAc,EAAE,EAAE,kBAAkB,CAAC,EAAE,WAAW,EAAE,EAAE,kBAAkB,CAAC,EAAE,UAAU,EAAE,EAAE,kBAAkB,CAAC,EAAE,YAAY,EAAE,EAAE,kBAAkB,CAAC,EAAE,aAAgD,AAAnC,CAAA,EAAE,SAAS,aAAa,CAAC,SAAzB,EAAqC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,EAAuB,AAArB,CAAA,EAAE,EAAE,UAAU,CAAC,KAAf,EAAuB,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,GAA0B,AAAvB,CAAA,EAAE,IAAI,GAAM,OAAO,CAAC,EAApB,EAAyB,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,GAAG,EAAE,cAAc,GAAG,EAAE,eAAe,CAAC,GAAG,EAAE,eAAe,CAAC,GAAG,EAAE,uBAAuB,GAAG,EAAE,OAAO,CAAC,EAAE,SAAS,EACtf,EAAE,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,UAAU,CAAC,EAAE,YAAY,CAAC,GAAG,EAAE,mBAAmB,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,mBAAmB,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,UAAU,CAAC,EAAE,oBAAoB,CAAC,GAAG,EAAE,gBAAgB,CAAC,EAAE,CAAC,EAAE,EAAE,gBAAgB,CAAC,QAAQ,EAAE,EAAE,aAAa,CAAC,EAAE,QAAQ,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,EAAE,GAAE,AAAF,EAAM,CAAA,EAAE,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,aAAa,GAAM,GAAG,CAAE,CAAA,EAAE,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,CAAA,EAAG,aAAa,GAAM,OAAO,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,CAAA,CAAA,EACnf,CAAA,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,CAAA,EAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC,gBAAgB,CAAC,EAAE,kBAAkB,CAAC,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,QAAQ,CAAC,GAAG,AAAA,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,gBAAgB,CAAC,EAAE,CAAC,EAAE,EAAE,eAAe,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAG,CAAA,EAAE,CAAA,EAAG,IAAI,GAAI,CAAA,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,CAAA,EAAG,OAAO,EAAE,GAAG,CAAE,CAAA,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,SAAS,CAAC,EACnf,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA,EAAI,CAAA,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,EAAE,SAAS,CAAC,EAAE,EAAE,EAAA,EAAI,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,WAAW,CAAC,EAAE,QAAQ,CAAC,EAAE,aAAa,CAAC,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,EAAE,YAAY,CAAC,EAAE,SAAS,EAAE,EAAE,aAAa,CAAC,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,SAAS,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,EAC3d,GAAM,aAAa,CAAC,CAAC,MAAM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAsJ,EAApJ,QAAQ,IAAI,CAAC,mIAAyI,aAAa,GAAM,IAAI,EAAG,CAAA,EAAE,gBAAgB,EAAE,EAAE,YAAY,GAAG,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,QAAQ,AAAR,EAAU,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,OAAO,SAAS,CAAC,EAA4G,OAA1G,QAAQ,IAAI,CAAC,6FAAoG,EAAE,MAAM,EAAE,CAAC,EACxb,GAAM,UAAU,CAAC,CAAC,YAAY,KAAK,EAAE,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,WAAW,AAAC,CAAA,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,KAAK,EAAE,GAAwG,OAArG,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC,EAAS,CAAC,EAAE,gBAAgB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,WAAW,AAAC,CAAA,EAAE,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,GAAM,WAAW,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,EAAO,IAAL,CAAA,GAAG,CAAA,GAAU,CAAA,EAAE,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,EAAA,CAAG,EAAE,KAAK,EACnf,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC,EAAE,sBAAsB,WAAW,QAAQ,KAAK,CAAC,wFAAwF,EAAE,0BAA0B,WAAW,QAAQ,KAAK,CAAC,4FAA4F,EAAE,aAAa,SAAS,CAAC,CAAC,CAAC,EAAiG,GAAG,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,SAAS,aAAa,CAAC,SAC7f,CAAA,EAAE,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,IAAI,EAAE,EAAE,UAAU,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,eAAe,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,IAAI,EAAE,CACxN,IADyN,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,IACnf,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,CAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,AAFmM,SAAS,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,AAAA,EAExR,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAW,IAAI,EAAE,EAAhB,EAAE,CAAC,EAAE,EAAE,EAAE,CAAS,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,CAAa,CAAC,CAAb,EAAE,EAAG,CAAA,EAAE,EAAE,CAAA,EAAO,CAAE,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,CAAA,EAAG,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAE,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,CAAA,EAAG,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAuB,OAAtB,EAAE,YAAY,CAAC,EAAE,EAAE,GAAU,CAAC,EAAE,oBAAoB,SAAS,CAAC,CACzf,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,WAAW,EAAE,GAAG,EAAE,KAAK,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,KAAK,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAkE,MAAjB,AAA/C,CAAA,EAAE,IAAI,GAAM,WAAW,CAAC,EAAE,EAAE,EAAE,GAAM,SAAS,CAAA,EAAI,WAAW,CAAC,CAAC,EAAS,CAAC,CAAC,EACnO,GAAM,UAAU,CAAC,CAAC,0BAA0B,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,GAAM,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,EAAE,WAAW,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,UAAU,CAAC,EAAE,WAAW,EAAE,EAAE,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAC9U,GAAM,SAAS,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,aAAa,OAAO,SAAS,MAAM,SAAS,KAAK,IAAI,UAAU,GAAG,QAAQ,WAAW,GAAG,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,AAAA,CAAC,MAAM,EAAE,CAAC,KAAK,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,CAAC,KAAK,CAAC,oBAAqB,CAAC,EAAE,SAAS,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,UAAU,CAAC,WAAW,GAAsJ,OAAnJ,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,EAAS,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE,YAAY,CAAC,CACriB,CAAC,EAAE,SAAS,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,OAAO,GAAG,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,GAAM,IAAI,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,mBAAmB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAzB,EAAE,EAAE,CAAuB,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,AAAsD,EAAE,AAAxD,CAAA,EAAE,EAAE,cAAc,EAAG,CAAA,EAAE,cAAc,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAA,CAAG,EAAO,MAAM,CAAC,EAAE,EAAE,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC,IAAI,EAAI,IAAK,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,GACnf,KAAM,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,KAAM,KAAK,IAAgF,GAA5E,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,gBAAgB,CAAC,EAAE,EAAE,EAAE,GAAM,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,KAAM,KAAK,IAAI,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EACxgB,EAAE,EAAE,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EACvC,GAAM,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAU,IAAI,EAAE,KAAK,IAAI,AAAvB,CAAA,EAAE,GAAG,CAAC,CAAA,EAAmB,aAAa,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,KAAK,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,IAAI,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,KAAK,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,SAA0M,IAAjM,GAAM,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,GAAM,SAAS,CAAC,SAAS,CAAC,EAAE,GAAM,SAAS,CAAC,IAAI,CAAC,EAAE,GAAM,SAAS,CAAC,MAAM,CAAC,EAAE,GAAM,SAAS,CAAC,KAAK,CAAC,EAAE,EAAE,GAAM,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,MAAM,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,IAAI,OAAO,CAAC,EAC1d,GAEwJ,GAAM,SAAS,CAFhK,GAAE,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAM,GAAG,CAAC,EAAE,GAAE,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,OAAO,KAAK,IAAmB,EAAE,EAAE,EAAnB,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAO,GAAG,EAAE,GAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,qFAAqF,KAAK,CAAK,GAAJ,CAAA,EAAE,CAAA,GAAS,CAAA,EAAE,CAAA,EAAS,GAAN,CAAA,EAAE,EAAE,CAAA,GAAS,CAAA,EAAE,CAAA,EAAS,GAAN,CAAA,EAAE,EAAE,CAAA,GAAS,CAAA,EAAE,CAAA,EAAS,EAAE,CAAC,IAAL,EAAoB,EAAE,KAAK,EAAE,EAAE,KAAK,EACtf,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GADgb,EAAE,KAAK,EACrb,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,AAAC,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,AAAC,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAW,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAE,CAAA,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAA,GAAK,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,cAAQ,GAAG,cAAQ,GAAG,cAAQ,CAAA,EAAG,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,EAC3f,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAgE,IAA/D,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAM,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAK,EAAE,IAAE,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,GAAE,WAAW,CAAC,IAAI,CAAC,GAA8B,GAAM,WAAW,CAAC,CAAC,MAAM,GAAM,SAAS,CAAC,KAAK,CAAC,SAAS,GAAM,SAAS,CAAC,QAAQ,AAAA,EAAE,aAAc,OAAO,MAAO,CAAA,KAAK,YAAY,CAAC,GAAM,WAAU,AAAV,EACzT,GAAM,KAAK,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EACjd,GAAM,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,KAAK,CAAC,GAAM,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,eAA2L,OAA5K,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,GAAU,IAAI,AAAA,EAC5S,GAAM,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,IAAI,CAAC,8CAA8C,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAG,CAAA,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,AAAA,EACtc,GAAM,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,KAAK,IAAI,IAAI,CAAC,MAAM,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAA,EAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,KAAK,IAAI,IAAI,CAAC,MAAM,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAA,EAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAC7Z,GAAM,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAE,CAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAA,EAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,OAAO,IAAI,CAAC,MAAM,AAAA,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,EAAG,CAAA,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,AAAZ,CAAa,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,WAAW,OAAO,IAAI,CAAC,YAAY,AAAA,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EACnd,GAAM,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,AAAA,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,AAAA,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,AAAA,EAC9b,GAAM,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,AAAA,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,iBAAiB,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAE,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAK,GAAM,aAAa,CAAC,WAAW,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,OAAO,CAAC,GAAK,CAAA,OAAO,YAAY,EAAE,OAAO,kBAAiB,AAAjB,CAAmB,EACzgB,GAAM,aAAa,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,aAAa,CACnI,GAAM,aAAa,CAAC,SAAS,CAAC,iBAAiB,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,UAAU,CAAC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAE,GAAE,IAAG,GAAE,GAAG,CAAC,EAAE,EAAE,IAAI,eAAe,CAAC,IAAG,EAAE,WAAW,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,EAAE,cAAc,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAK,GAAM,KAAK,CAAC,WAAW,EACta,GAAM,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAoE,OAAlE,QAAQ,IAAI,CAAC,qDAA4D,IAAI,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,EAA2B,OAAzB,EAAE,IAAI,CAAC,cAAc,CAAC,GAAU,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,OAAO,CAAC,EAC3c,GAAM,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,IAAI,EAAE,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,AAAA,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,EAAiE,GAA/D,GAAI,CAAA,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAA,EAAQ,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC,eAAe,AAAC,CAAA,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAS,EAAqB,EAA1B,EAAE,EAAE,CAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAK,EAAE,EAAY,IAAV,EAAE,IAAI,CAAC,GAAO,EAAE,EAAE,GAAG,EAAE,IAAI,AAAwC,EAAE,IAAI,CAAzB,GAAG,AAAxB,CAAA,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAA,EAAQ,UAAU,CAAC,IAAa,EAAE,EAAE,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,EACrd,GAAM,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAuC,EAAnC,EAAE,IAAI,CAAC,UAAU,GAAG,EAAE,EAAE,EAAE,EAAE,MAAM,CAAG,EAAE,GAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,IAAc,EAAV,EAAE,EAAE,EAAE,EAAE,EAAI,GAAG,GAAG,GAAoC,EAAT,CAAA,EAAE,CAAC,CAA3B,EAAE,KAAK,KAAK,CAAC,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,GAAS,CAAC,CAAA,EAAM,EAAE,EAAE,OAAO,GAAG,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,KAAK,QAAK,AAAG,CAAC,CAAR,EAAE,EAAS,GAAG,EAAS,EAAG,CAAA,EAAE,CAAA,GAAG,EAAE,CAAC,CAAC,EAAE,CAAU,AAAC,CAAA,EAAE,AAAC,CAAA,EAAE,CAAA,EAAI,CAAA,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA,CAAA,EAAK,CAAA,EAAE,CAAA,EAAE,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,KAAsD,OAAzC,EAAE,GAAI,CAAA,EAAE,CAAA,EAAG,EAAnB,CAAA,GAAG,IAAH,GAAyB,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,SAAS,EAAE,EACrhB,GAAM,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,EAA2B,OAAzB,EAAE,IAAI,CAAC,cAAc,CAAC,GAAU,IAAI,CAAC,UAAU,CAAC,EAAE,EACjG,GAAM,KAAK,CAAC,KAAK,CAAC,CAAC,uBAAuB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAG,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,EAAE,EAAG,CAAA,EAAE,CAAA,CAAE,EAAE,mBAAmB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAM,GAAG,EAAG,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,EAAE,EAAG,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,cAAc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAI,CAAA,GAAG,EAAE,EAAE,EAAE,CAAA,EAAI,CAAA,EAAE,EAAE,EAAE,EAAE,CAAA,CAAE,EAAE,YAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,EAAE,EAAE,EAAE,MAAM,AAAC,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,EAAE,EAAG,AAAA,CAAA,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EAC/Z,GAAM,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAoG,OAAlG,EAAE,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,EAAE,SAAS,CAAC,WAAW,CAAC,EAAE,EAAE,SAAS,CAAC,QAAQ,CAAC,EAAS,CAAC,EAAE,GAAM,SAAS,CAAC,WAAW,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,SAAS,CAAC,GAAM,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,WAAW,EACjc,GAAM,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAG,CAAA,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAM,SAAS,CAAC,EAAE,GAAG,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,CAAC,eAAe,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,AAA0B,EAAE,EAAE,AAA9B,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA,EAAyB,AAAvB,CAAA,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,AAAF,EAAW,SAAS,GAAG,EAAE,UAAU,CAAC,EAAG,CAAA,GAAG,CAAC,OAAO,IAAI,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,WAAW,IAAI,EAAE,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,AAAA,EAChf,GAAM,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAa,EAAT,EAAE,EAAE,CAAC,EAAE,EAAI,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAkC,EAAE,IAAI,CAApC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,IAAa,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,EACxQ,GAAM,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,IAAuB,EAAE,EAAE,EAAE,EAAE,EAAE,EAA7B,EAAE,IAAI,CAAC,SAAS,GAAe,EAAE,EAAE,OAAO,iBAAiB,CAAC,EAAE,EAAE,OAAO,iBAAiB,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,WAAW,GAAM,OAAO,CAA6C,IAA5C,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,AAAO,CAAP,EAAE,CAAC,CAAC,EAAE,AAAF,EAAK,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAI,CAAA,EAAE,EAAE,CAAA,AAAA,EAAG,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAI,CAAA,EAAE,EAAE,CAAC,AAAD,EAAG,GAAI,CAAA,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAI,CAAA,EAAE,EAAE,CAAA,AAAA,CAAA,EAAI,EAAE,GAAG,CAAC,GAA0D,OAAvD,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,GAAI,CAAA,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA,EAAU,CAAC,EACpa,GAAM,SAAS,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAAyB,OAAvB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAU,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,0BAA0B,CAAC,SAAS,CAAC,EAA+B,OAA7B,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,GAAU,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,IAAI,GAAM,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAC7d,GAAM,SAAS,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAwB,EAAE,EAAtB,EAAE,IAAI,CAAC,SAAS,CAAC,GAA6B,IAAtB,GAAI,CAAA,EAAE,IAAI,CAAC,KAAK,AAAL,EAAO,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAA8B,EAAE,EAA5B,EAAE,IAAI,CAAC,eAAe,CAAC,GAA6B,IAAtB,GAAI,CAAA,EAAE,IAAI,CAAC,KAAK,AAAL,EAAO,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,EACpW,GAAM,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAA4B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAlC,EAAE,IAAI,CAAC,cAAc,GAAmB,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,AAAO,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAO,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,GAAG,EAAE,EAAE,QAAQ,CAAC,GAAqB,AAAlB,CAAA,EAAE,EAAE,UAAU,CAAC,EAAA,EAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,cAAc,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,EAAE,GAAM,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,SAAS,CAAC,SAAS,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,IAAI,CACvd,GAAM,WAAW,CAAC,CAAC,QAAQ,SAAS,QAAQ,SAAS,mBAAmB,mBAAmB,gBAAgB,gBAAgB,aAAa,aAAa,IAAI,MAAM,QAAQ,SAAS,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,GAAM,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EACtc,GAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,GAAM,SAAS,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,GAAM,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EAC9S,GAAM,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,GAAM,oBAAoB,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,GAAM,WAAW,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE,EACzW,GAAM,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,GAAM,gBAAgB,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,GAAM,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,EAC1X,GAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,MAAM,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,IAAI,GAAM,WAAW,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,GAAM,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAC1d,GAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,GAAM,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,GAAM,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EAC7e,GAAM,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAI,CAAA,EAAE,EAAA,EAAI,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,OAAO,CAAC,EACzH,GAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,IAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA7B,EAAE,EAAE,CAA+B,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,OAAO,AAAkB,EAAE,AAApB,CAAA,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,AAAF,EAAO,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,KAAK,GAAM,WAAW,CAAC,OAAO,CAA4C,KAAK,GAAM,WAAW,CAAC,OAAO,CAAzE,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,KAAgF,MAAK,GAAM,WAAW,CAAC,kBAAkB,CAC3X,IAD4X,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAE,CAAA,AAAgB,EAAE,AAAlB,CAAA,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,AAAF,EAAO,CAAC,CAAC,EAAE,EAAE,CAAA,AAAA,EAAI,CAAA,AACne,EAAE,AADie,CAAA,EAAE,IAAI,CAAC,OAAO,CAAC,EAC1f,EAAE,CAAC,IAAI,AAAJ,CAAQ,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAC,AAAD,EAAQ,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,KAAM,MAAK,GAAM,WAAW,CAAC,eAAe,CAA+I,IAA9I,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAE,CAAA,AAAgB,EAAE,AAAlB,CAAA,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,AAAF,EAAO,CAAC,CAAC,EAAE,EAAE,CAAA,AAAA,EAAI,CAAA,AAAyB,EAAE,AAA3B,CAAA,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,IAAI,AAAJ,CAAQ,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAC,AAAD,EAAQ,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,KAAM,MAAK,GAAM,WAAW,CAAC,YAAY,CACvX,IADwX,EAC9f,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,GAAM,WAAW,CAAC,GAAO,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,KAAM,MAAK,GAAM,WAAW,CAAC,GAAG,CAAyD,IAAxD,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAM,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,GAAI,CAAA,EAAE,EAAE,CAAA,EAAW,EAAE,EAAE,EAAE,KAAK,GAAG,CAAtB,EAAE,EAAE,EAAE,GAAoB,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,KAAM,MAAK,GAAM,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAA2B,EAAE,EAAzB,EAAE,CAAC,CAAC,EAAE,CAC3b,IAD4b,EAAE,EAAE,EAAE,EAAE,EAAE,EAAU,IAAI,GACjf,CAAA,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,EAAA,EAAQ,EAAE,EAAE,GAAG,EAAE,IAAI,CAA8D,GAA7D,EAAE,EAAE,EAAE,GAAI,CAAA,EAAE,EAAE,CAAA,EAAW,EAAE,EAAE,EAAE,KAAK,GAAG,CAAtB,EAAE,EAAE,EAAE,GAAoB,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,GAAM,IAAI,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,CAAC,CAAgH,OAA/F,MAAM,KAAK,GAAG,CAAC,AAA/B,CAAA,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,AAAF,EAAoB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAS,CAAC,EAC9T,GAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,GAAM,KAAK,AAAC,CAAA,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CACxJ,IAC8B,EAAE,EAD5B,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,IAAI,CAAK,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,AAAO,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAO,IAAI,CAAY,AAAX,CAAA,EAAE,EAAE,MAAM,AAAN,IAAW,GAAM,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,EAAG,CAAA,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,GAAM,IAAG,AAAH,EAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,GAAmC,OAAhC,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,GAAU,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAmB,AAAlB,CAAA,EAAE,IAAI,GAAM,KAAK,AAAL,EAAQ,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,SAAS,IACnf,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,IAAkB,EAAd,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAoC,IAAhC,CAAC,CAAL,EAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAS,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,AAAO,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAO,SAAS,GAAG,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,AAAC,CAAA,EAAE,EAAE,CAAC,EAAE,CAAA,EAAI,CAAA,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,GAAM,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAC,AAAD,EAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,AAAA,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,GAAG,EAAE,EAAE,MAAM,CAAC,CAAe,IAAd,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAK,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,AAF/R,CAAA,SAAW,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,KAAK,GAAG,CAAC,GAAI,CAAA,GAAG,EAAE,GAAI,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA,EAAG,CAAE,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,AAAD,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAE,CAAA,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAApB,KAA0B,CAA2B,GAAG,GAA7B,CAAA,EAAE,EAAG,CAAA,EAAE,CAAC,CAAC,EAAE,CAAA,AAAA,EAAG,EAAG,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,AAAD,CAAC,EAAW,MAAM,CAAC,CAAE,CAAA,EAAE,GAAI,CAAA,EAAE,CAAC,CAAA,CAAE,E,MAAO,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAG,CAAA,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EACtf,EAAE,CAAC,EAAE,EAAE,CAAA,AAAA,EAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA,EAC2b,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAI,CAAA,IAAI,GAAG,EAAE,IAAI,CAAC,CAAC,MAAM,EACzf,IAAI,EAAE,KAAK,CAAC,GAAG,EAAG,CAAA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAA,EAAI,EAAE,CAAC,CAAA,CAAG,CAAA,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,EAAG,CAAA,GAAI,CAAA,EAAE,CAAA,CAAA,CAAG,CAAK,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,AAAS,EAAE,IAAI,CAAf,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,GAAM,KAAK,CAAC,WAAW,GAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,KAAK,CAAC,EAAE,AAAA,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,IAAI,CAAC,SAAS,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,KAAK,CAAC,GAAM,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,OAAO,IAAI,GAAM,eAAe,CAAC,IAAI,CAAC,EAAE,EAClc,GAAM,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,OAAO,IAAI,GAAM,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,0BAA0B,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,EACja,GAAM,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,MAAM,IAAI,CAAC,oBAAoB,CAAC,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,GAAM,KAAK,CAAC,SAAS,CAAC,sBAAsB,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC,MAAM,IAAI,CAAC,0BAA0B,CAAC,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,EAAE,CAAC,EAC7Y,GAAM,KAAK,CAAC,KAAK,CAAC,CAAC,iBAAiB,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,AAAA,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,EAAG,CAAA,GAAG,EAAE,GAAG,EAAE,GAAwB,EAAb,CAAA,EAAE,EAAE,EAAE,EAAE,CAAA,GAAU,EAAE,EAA7B,MAAM,EAAE,MAAqC,GAAG,EAAE,GAAG,EAAE,GAAwB,EAAb,CAAA,EAAE,EAAE,EAAE,EAAE,CAAA,GAAU,EAAE,EAA7B,MAAM,EAAE,QAAgC,AAAG,IAAI,EAAQ,AAAC,GAAG,CAAA,IAAI,GAAG,IAAI,CAAA,EAAM,EAAE,CAAN,CAAC,EAAE,CAAO,IAAI,EAAQ,AAAC,GAAG,CAAA,IAAI,GAAG,IAAI,CAAA,EAAM,EAAE,CAAN,CAAC,EAAE,CAAO,IACvf,EAAQ,CAAC,EAAE,CAAI,IAAI,EAAQ,CAAC,EAAE,EAAC,EAAE,EAAE,EAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAA,QAAC,AAAG,IAAI,GAAG,EAAE,GAAI,EAAE,EAAQ,EAAE,EAAC,EAAE,IAAI,GAAG,IAAI,EAAE,EAAE,IAAI,GAAG,IAAI,EAAK,GAAG,GAAS,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAI,EAAS,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAI,EAAS,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC,IAAI,EAAG,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAA,AAAA,EAAI,CAAA,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,AAAD,EAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAA,AAAA,EAAI,CAAA,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,AAAD,CAAC,EAAI,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAA,AAAA,EAAI,CAAA,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,AAAD,EAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAA,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,AAAD,EAAI,CAAA,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAA,AAAA,CAAA,EAAW,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CACpf,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAA,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAA+B,OAA9B,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAS,MAAM,KAAK,GAAG,CAAC,GAAI,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,CAAA,EAAG,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAmB,IAAjB,EAAE,EAAE,MAAM,GAAG,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,MAAM,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,EAAM,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,AAAoB,KAAK,IAAI,CAAC,CAA9B,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAc,EAAE,QAAQ,IAAI,CAAC,+BAA+B,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,EAC3B,IAAiB,EAAO,EAAE,EAAE,EAAE,EAAE,EAAO,EAAE,EAAE,EAAvC,EAAE,EAAE,MAAM,GAAK,EAAE,EAAE,CAAW,EAAE,EAAE,CAAO,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,IAAI,EAAE,EACpf,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,CAAK,GAAG,IAAE,EAAE,CAAC,QAAQ,GAAG,CAAC,6BAA6B,EAAE,MAAM,CAAC,kCAAkC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAa,IAAI,EAAE,EAAlB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAW,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,EAAE,CAAqB,KAAK,IAAI,CAAC,CAA9B,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAe,CAAC,CAAQ,IAAI,EAAE,EAAb,EAAE,CAAC,CAAC,EAAE,CAAS,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,AAFqK,SAAW,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAE,CAAA,EAAE,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,EAAE,EAAE,SAC/c,AADid,EAAE,GAAI,CAAA,EACnf,CAAA,IAAG,CAAA,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA,IAAiB,EAAE,EAAE,MAAM,CAAC,EAAQ,EAAN,CAAA,EAAE,EAAE,CAAA,GAAQ,CAAA,EAAE,CAAA,EAAS,AAAN,CAAA,EAAE,EAAE,CAAA,EAAI,GAAI,CAAA,EAAE,CAAA,IAAU,CAAA,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA,EAAQ,EAC8I,EAAE,IAAI,CAAC,AADpJ,SAAW,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,AAAM,EAAJ,CAAA,EAAE,CAAA,EAAK,EAAE,MAAM,CAAuB,EAAE,AAAxB,CAAA,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAA,EAAO,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EACgC,EAAE,IAAI,CAAC,AADtC,SAAW,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,AAAM,EAAJ,CAAA,EAAE,CAAA,EAAK,EAAE,MAAM,CAAuB,EAAE,AAAxB,CAAA,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAA,EAAO,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC,EACnH,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,GAAG,GAAG,EAAE,KAAM,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,GAAM,SAAS,CAAC,WAAW,CAAC,EACtf,CAAC,GAAO,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAA+B,KAAK,IAAZ,CAAA,EAAE,CAAC,CAAvB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAO,AAAF,GAAgB,CAAA,CAAC,CAAC,EAAE,CAAC,CAAA,EAAG,OAAO,EAAE,MAAM,EAAE,EAAE,YAAY,SAAS,CAAC,EAAE,OAAO,EAAE,GAAM,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,EAAG,CAAA,EACrf,CAAA,EAAG,EAAE,EAAE,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,SAAS,CAAC,GAAM,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAmC,OAAjC,EAAE,cAAc,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAS,CAAC,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,EACtf,GAAM,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,GAAM,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAM,oBAAoB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,GAAM,oBAAoB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,oBAAoB,CACjU,GAAM,oBAAoB,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,OAAO,CAAqH,OAApH,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAS,CAAC,EAAE,GAAM,oBAAoB,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,OAAO,CAA6J,OAA5J,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,sBAAsB,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,sBAAsB,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAS,EAAE,SAAS,EAAE,EACpd,GAAM,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,gBAAgB,CAAC,GAAM,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAsI,OAApI,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAS,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EACzb,GAAM,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,IAAI,EAA6M,OAA3M,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAA2B,AAAzB,CAAA,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAtB,EAA2B,SAAS,GAAU,CAAC,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,WAAW,CACvc,GAAM,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAmB,EAAE,KAAK,KAAK,CAA9B,GAAG,EAAE,MAAM,CAAC,GAAsB,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAA2G,OAA1G,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAU,CAAC,EAC9U,GAAM,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,KAAK,CAAC,SAAS,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,YAAY,CACvS,GAAM,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,AAAC,CAAA,EAAE,GAAI,CAAA,GAAG,EAAE,KAAK,EAAE,AAAF,EAAI,EAAE,EAAE,KAAK,EAAE,EAAG,CAAA,GAAG,EAAE,KAAK,EAAC,AAAD,EAAI,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,AAAC,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,KAAK,EAAE,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,IAAI,CAAC,EAAC,AAAD,EAAI,EAAG,AAAA,CAAA,EAAE,IAAI,CAAC,EAAC,AAAD,EAAI,EAAE,IAAI,CAAC,EAAE,CAAC,EAAG,AAAA,CAAA,EAAE,IAAI,CAAC,EAAC,AAAD,EAAI,EAAG,AAAA,CAAA,EAAE,IAAI,CAAC,EAAC,AAAD,EAAI,EAAE,IAAI,CAAC,EAAE,AAAA,CAAC,OAAO,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAC/d,GAAM,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,YAAY,CAAC,SAAS,EAAE,GAAM,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,QAAQ,CAAC,GAAM,UAAU,CAAC,GAAM,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,OAAO,CAAkE,OAAjE,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,cAAc,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,EAAE,EAAS,CAAC,GAC/X,GAAM,qBAAqB,CAAC,GAAM,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,OAAO,CAA+K,OAA9K,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAS,CAAC,GACxT,GAAM,iBAAiB,CAAC,GAAM,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,OAAO,CAA6M,OAA5M,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAS,CAAC,GAC9V,GAAM,YAAY,CAAC,GAAM,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,QAAQ,IAAI,CAAC,4EAA4E,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAmB,EAAE,KAAK,KAAK,CAA9B,GAAG,EAAE,MAAM,CAAC,GAAsB,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CACrV,OADsV,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CACpf,EAAE,CAAC,CAAC,GAAU,CAAC,GACf,GAAM,gBAAgB,CAAC,WAAW,SAAS,IAAI,CAAC,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EACzF,OAD2F,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,SAAS,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,AAAC,CAAA,AAAC,CAAA,EAAE,CAAA,EAAG,EAAG,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAI,AAAA,CAAA,EAAE,CAAA,EAAG,CAAA,EAAG,EAAE,EAAE,AAAC,CAAA,AAAC,CAAA,EAAE,CAAA,EAAG,EAAG,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAI,AAAA,CAAA,EAAE,CAAA,EAAG,CAAA,EAAG,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CACxf,EAAE,CAAC,EAAS,GAAM,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,AAAA,EAAE,SAAS,CAAC,EAAE,IAAiJ,EAAE,EAAE,EAAnI,EAAE,EAAhB,EAAE,IAAI,CAAC,MAAM,CAA0Q,GAA1P,EAAX,CAAA,EAAE,EAAE,MAAM,AAAN,GAAY,QAAQ,GAAG,CAAC,mCAAmC,GAAG,EAAE,EAAE,EAAE,KAAK,KAAK,CAAC,GAAQ,GAAL,CAAA,GAAG,CAAA,GAAS,IAAI,EAAE,GAAI,CAAA,EAAE,EAAE,EAAE,EAAE,CAAA,EAAa,IAAI,EAAG,CAAA,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAA,EAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAE,CAAA,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAA,EAAM,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,gBAAgB,IAAI,CAAC,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,YAAY,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,iBAAiB,CAAC,GAAG,GACnf,EAAE,KAAK,GAAG,CAAC,EAAE,iBAAiB,CAAC,GAAG,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,iBAAiB,CAAC,GAAG,GAAG,KAAK,GAAI,CAAA,EAAE,CAAA,EAAG,KAAK,GAAI,CAAA,EAAE,CAAA,EAAG,KAAK,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,wBAAwB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,wBAAwB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,wBAAwB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,eAAe,IAAI,CAAC,IAAI,EAAG,CAAA,EAAE,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,cAAc,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAA,EAAI,OAAO,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IACvf,GAAM,kBAAkB,CAAC,GAAM,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAmB,EAAE,KAAK,KAAK,CAA9B,GAAG,EAAE,MAAM,CAAC,GAAsB,GAAG,EAAE,IAAI,EAAE,EAAG,CAAA,EAAE,EAAE,EAAE,AAAC,CAAA,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,CAAA,EAAG,EAAE,MAAM,AAAN,EAAQ,EAAE,CAAC,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,MAAM,CAAC,CAAC,EAAE,IAAI,GAAM,OAAO,CAAgK,OAA/J,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAU,CAAC,GAC9d,GAAM,gBAAgB,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,mBAAmB,EAAE,IAAI,WAAW,QAAQ,IAAI,CAAC,oDAAoD,EAAE,IAAI,WAAW,QAAQ,IAAI,CAAC,oDAAoD,EAAE,OAAO,WAAW,QAAQ,IAAI,CAAC,uDAAuD,EAAE,WAAW,EAAE,CAAC,KAAK,SAAS,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAC9gB,CAAA,EAAG,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAE,CAAA,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,YAAY,GAAM,UAAS,AAAT,EAAY,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,AAAC,CAAA,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAE,AAAA,CAAA,IAAI,GAAM,UAAU,AAAV,EAAY,SAAS,CAAC,EAAE,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,CAAM,IAAI,EAAE,EAAX,EAAE,CAAC,EAAU,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAmC,IAAI,EAAE,EAAxC,EAAE,SAAS,CAAC,EAAE,CAAC,gBAAgB,CAAC,EAAU,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EACjgB,CAAC,EAAE,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,sBAAsB,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAG,CAAA,CAAC,CAAC,EAAE,CAAC,CAAA,CAAE,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,EAAG,CAAA,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,GAAA,EAAK,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAC7e,OAD8e,EAAE,WAAW,CAC9f,CAAC,EAAS,CAAC,EAAE,MAAM,SAAS,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,aAAa,GAAM,WAAW,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,EAAE,GAAG,OAAO,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,SAAS,CAAC,EAA+B,KAA7B,CAAA,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAA1B,GAAqC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,OAAO,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,iBAAiB,GACtf,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAM,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAM,gBAAgB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAM,gBAAgB,CAAC,MAAM,AAAA,EAC3U,GAAM,SAAS,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,SAAS,CAAC,SAAS,CAAC,MAAM,MAAM,MAAM,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,GAAM,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,WAAW,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAM,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,WAAW,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,AAAC,MAAK,IAAI,EAAE,cAAc,EAAG,CAAA,EAAE,cAAc,CAAC,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,eAAe,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAC,CAAA,EACvf,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,CAA0G,IAAzG,KAAK,IAAI,GAAI,CAAA,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,eAAe,EAAE,MAAM,AAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA,EAAO,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,kBAAkB,WAAW,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,cAAc,AAAC,MAAK,IACvf,GAAI,CAAA,AAAa,CAAb,EAAE,EAAE,QAAQ,AAAR,EAAW,cAAc,CAAC,EAAE,EAAE,gBAAgB,CAAC,EAAE,EAAE,WAAW,CAAC,CAAA,CAAE,CAAC,EAAE,MAAA,EAAsB,GAAE,EAAE,CAAC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,UAAU,CAAC,GAAE,SAAS,CAAC,CAAC,CAAC,EAAE,IAAc,EAAE,EAAE,EAAE,EAAE,EAAE,EAApB,EAAE,EAAE,CAAC,EAAE,EAAE,CAAqR,OAAvP,EAAE,KAAK,KAAK,CAA7B,EAAG,AAAA,CAAA,EAAE,MAAM,CAAC,CAAA,EAAG,GAAkB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,GAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAU,CAAC,EAAE,GAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACpf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAwB,OAAtB,EAAE,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,GAAI,CAAA,EAAE,CAAA,EAAS,AAAC,CAAA,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,CAAA,EAAG,EAAG,AAAA,CAAA,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,CAAC,EAAS,SAAS,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,EAAG,CAAA,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,MAAM,AAAN,EAAQ,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,CAAA,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,AAAX,GAAY,CAAA,IAAI,CAAC,IAAI,CAAE,CAAA,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,EAAG,CAAA,IAAI,CAAC,WAAW,EAAE,CAAA,EAAG,IAAI,CAAC,KAAK,EAAA,EAAI,IAAI,CAAC,IAAI,EAA1I,EAA6I,EAAE,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,cAAc,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CACngB,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAkC,IAAjC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAK,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,EAAG,CAAA,EAAE,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAG,AAAA,CAAA,IAAI,CAAC,WAAW,CAAC,EAAE,IAAG,AAAH,EAAO,CAAA,EAAE,IAAI,CAAC,EAAE,IAAG,AAAH,EAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,AAAC,CAAA,EAAE,GAAI,CAAA,EAAE,CAAA,EAAG,EAAE,GAAI,CAAA,EAAE,CAAA,EAAM,QAAQ,EAAK,IAAI,CAAC,iBAAiB,GAAG,GAAM,gBAAgB,CAAC,MAAM,CAAC,CAAA,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,AAAF,EAAI,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAE,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,AAAD,EAAI,EACnf,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAE,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,AAAD,EAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,EAAE,cAAa,AAAb,EAAgB,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAE,GAAG,EAAE,cAAc,EAAE,IAAI,CAAC,MAAM,AAAN,EAAe,CAAA,IAAI,CAAC,iBAAiB,GAAG,GAAM,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,GAAG,GAAM,gBAAgB,CAAC,kBAAkB,AAAlB,GAAmB,CAAA,EAAC,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,EAAC,CAAC,EAAE,CAAC,EAAE,EAAC,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,GAAG,GAAG,CAAa,EAAE,GAAE,GAAhB,EAAE,IAAI,EAAE,KAAa,EAAE,IAAI,CAAC,MAAM,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,EAAE,cAAa,AAAb,EAAgB,EAAE,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAG,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,AAAD,EAAG,EAAE,EAAE,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,EAAE,CACrf,EAAE,CAAA,AAAA,EAAG,EAAE,EAAE,CAAC,EAAG,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAA,AAAA,EAAG,EAAE,IAAI,CAAC,iBAAiB,GAAG,GAAM,gBAAgB,CAAC,kBAAkB,EAAG,CAAA,EAAE,GAAE,GAAE,KAAK,GAAG,GAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAE,GAAG,CAAC,GAAG,GAAE,CAAC,CAAC,EAAE,GAAE,SAAS,GAAG,EAAE,KAAK,KAAK,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,EAAA,CAAC,EAAO,QAAQ,EAAG,CAAA,GAAM,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,GAAE,GAAG,IAAI,EAAE,gBAAgB,CAAE,CAAA,EAAE,UAAU,CAAC,IAAI,CAAC,IAAG,EAAE,gBAAgB,CAAC,IAAI,CAAC,MAAM,AAAN,EAAS,CAAA,EAAE,IAAI,CAAC,MAAM,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,EAAE,gBAAgB,AAAhB,EAAkB,GAAM,UAAU,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,GAAE,EAAE,UAAU,CAAC,GAAG,EAAE,gBAAgB,EAAE,IAAI,CAAC,MAAK,AAAL,CAAK,EAAI,QAAQ,GAAI,CAAA,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,AAAD,EAAI,EAAE,GAAE,CAAC,CACtf,CAAC,CAAC,EAAE,CAAE,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,AAAF,EAAI,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,AAAD,EAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAE,CAAA,IAAI,CAAC,MAAM,CAAC,EAAE,WAAU,AAAV,EAAa,EAAE,KAAK,CAAC,IAAI,CAAC,GAAE,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,MAAM,AAAN,CAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAK,eAAe,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,iBAAiB,GAAG,GAAM,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,GAAG,GAAM,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,AAAA,EAAE,eAAe,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EACpf,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,iBAAiB,GAAG,GAAM,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,GAAG,GAAM,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,AAAA,CAAC,EACnR,GAAM,iBAAiB,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAM,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAM,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAG,CAAA,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,GACtgB,EAAE,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,EAC7B,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,iBAAiB,CAAC,KAAK,SAAS,CAAC,EAAkC,GAAhC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,EAAE,EAAK,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAA4B,EAAE,EAA1B,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAK,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAA0B,KAAK,IAAI,AAAlC,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,AAAF,EAAc,cAAc,EAAG,CAAA,EAAE,cAAc,CAAC,CAAC,EAAE,EAAE,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,cAAc,CAAC,OAAO,CAAC,KAAK,EAAE,cAAc,CAAC,cAAc,CAAC,EAAE,MAAK,AAAL,EAAsC,AAA9B,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,AAAJ,EAAO,MAAM,EAAG,CAAA,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,cAAc,CAAC,OAAO,CACpf,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAA,EAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAM,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,WAAW,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAM,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,IAAI,EAAE,cAAc,CAAC,CAAC,IAAI,EAAE,EAAE,cAAc,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,EAAE,OAAO,EAAE,cAAc,AAAA,CAAC,CAAC,EAAE,OAAO,SAAS,CAAC,EAAE,GAAG,CAAC,IACrf,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,GAAI,CAAA,IAAI,CAAC,WAAW,EAAE,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,EAAE,KAAK,EAAM,EAAE,CAAC,CAAC,AAAR,CAAA,EAAE,CAAA,EAAQ,KAAK,CAAC,EAAE,AAAC,CAAA,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE,IAAI,CAAC,WAAW,EACjgB,EAAE,WAAW,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,eAAe,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAgC,IAAI,GAAG,AAArC,CAAA,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,AAAJ,EAAc,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,AAAA,EAAE,eAAe,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAgC,IAA9B,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAK,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,AAAA,CAAC,EACjY,GAAM,cAAc,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAC9L,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,YAAY,GAAM,cAAc,CAAC,KAAK,WAAW,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,MAAM,WAAW,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,SAAS,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAG,CAAA,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAO,AAAP,EAAU,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,qBAAqB,AAAC,CAAA,IAAI,IAAI,CAAC,YAAY,EAAG,CAAA,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAC1f,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA,EAAG,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACpH,GAAM,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,AAAI,CAAA,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,EAAE,EAAE,IAAY,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,EAAE,CAAA,EAAE,IAAI,EAAE,EAAE,aAAa,AAAb,EAAsB,CAAA,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,CAAA,GAAE,CAAA,EAAE,IAAI,EAAE,EAAE,aAAa,AAAb,EAAc,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAM,OAAO,CAAe,IAAI,EAAE,EAApB,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAW,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,GAAM,OAAO,AAAC,CAAA,CAAC,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,EAAE,CAAA,EAAG,EAAE,CAAC,CAAC,EAAE,CAAE,AAAA,CAAA,EAAE,EAAE,CAAA,EAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EACpf,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,GAAG,EAAE,IAAI,GAAM,OAAO,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,GAAG,EAAE,IAAI,GAAM,OAAO,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,GAAkC,AAA/B,CAAA,EAAE,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAA,EAAK,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,IAAI,EAAE,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAiC,AAA/B,CAAA,EAAE,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAA,EAAK,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,IAAI,EAAE,aAAa,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,GAC5f,EAAE,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,CAAC,CAAC,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,cAAc,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EACjhB,GAAM,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,WAAW,CAAC,GAAM,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,GAAM,YAAY,CAAC,GAAM,WAAW,CACxU,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,KAAK,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,GAAG,IAAoC,IAAhC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAO,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE,CAAA,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAE,AAAA,CAAA,EAAE,CAAC,CAAC,EAAE,CAAA,EAAG,EAAE,AAAC,CAAA,EAAE,CAAC,CAAC,EAAE,CAAA,EAAG,GAAG,CACre,IAAI,EAAE,EADge,EAAE,IAAI,GAAM,OAAO,CAAC,EAC/f,EAAE,GAAW,GAAG,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,GAAM,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,cAAc,CAC/X,GAAM,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EACvL,GAAM,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,uBAAuB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,YAAY,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,KAAK,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,aAAa,EAAE,GAAG,EAAE,IAAI,aAAa,EAAE,GAAG,EAAE,IAAI,aAAa,EAAE,EAAG,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAE,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAE,AAAA,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAA,EAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAE,AAAA,CAAA,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAA,EAAG,CAAC,CAClf,IAAI,EAAE,EAD6e,EACtf,EAAE,CAAS,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAM,eAAe,CAAC,IAAI,YAAY,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,GAAM,eAAe,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,GAAM,eAAe,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,GAAM,eAAe,CAAC,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,GAAM,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAM,oBAAoB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,cAAc,CAAC,SAAS,EAAE,GAAM,oBAAoB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,oBAAoB,CAC3f,GAAM,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,IAAI,GAAM,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAe,OAAb,EAAE,IAAI,CAAC,IAAI,EAAS,CAAC,EACxN,GAAM,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,mBAAmB,IAAI,CAAC,UAAU,CAAC,CAAC,UAAU,EAAE,aAAa,EAAE,OAAO,EAAE,eAAe,EAAE,eAAe,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY,CAAC,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,GAAG,EAAE,KAAK,IAAI,EAAE,EAAE,GAAG,EAAE,KAAK,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,IAAI,GAAE,EAAK,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,IAAU,EAAE,EAAR,EAAE,EAAE,EAAM,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,GAAM,OAAO,AAAC,CAAA,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,EACnf,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAW,IAAI,EAAE,EAAhB,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAU,EAAE,EAAE,IAAI,IAAI,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,EAAA,EAAK,CAAA,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,EAAA,EAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,SAAS,GAAG,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,SAAS,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GACtf,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EACrf,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EACzgB,EAAE,EAAE,EAAE,IAAI,CAAC,kBAAkB,EAAE,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,gBAAgB,CAAC,GAAM,gBAAgB,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAC/d,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAA6G,EAAzG,EAAE,KAAK,GAAG,CAAC,GAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI,IAAI,AAAG,CAAA,aAAa,GAAM,cAAc,CAAuB,AAArB,CAAA,EAAE,IAAI,GAAM,QAAQ,AAAR,EAAW,kBAAkB,CAAC,GAAI,EAAE,EAAE,KAAK,GAAG,EAAE,aAAa,GAAG,EAAE,kBAAkB,GAAG,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,QAAQ,EAAG,MAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,EAC1f,MAAM,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAM,IAAI,KAAT,EAAE,EAAE,CAAU,EAAY,CAAA,KAAK,IAAI,AAAhB,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAc,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,GAAG,CAAA,GAAE,CAAA,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,GAAM,eAAe,CAAC,IAAI,aAAa,GAAG,GAAG,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,cAAc,CAAC,SAAS,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,aAAa,CAC9a,GAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAA,IAAqB,GAAI,CAAA,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,MAAM,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAA,CAAG,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,eAAe,CAAC,GAAM,eAAe,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EACxb,GAAM,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAgE,OAA9D,GAAG,QAAQ,KAAK,CAAC,6CAAoD,EAAE,KAAK,GAAG,cAAc,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAQ,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,MAAM,KAAK,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAwF,GAAtF,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,AAAC,CAAA,AAAC,CAAA,EAAE,CAAC,CAAC,EAAE,EAAE,CAAA,EAAG,EAAE,AAAC,CAAA,EAAE,CAAC,CAAC,EAAE,EAAE,CAAA,EAAG,CAAA,EAAI,CAAA,EAAE,EAAE,EAAE,CAAA,EAAwC,GAAb,CAAA,EAAE,AAA1B,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,AAAD,EAAkB,EAAE,AAAlB,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,AAAD,EAAU,CAAR,EAAkB,OAAO,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,GAAI,CAAA,EACpf,CAAC,CAAA,EAAG,aAAO,EAAE,aAAO,GAAI,CAAA,EAAE,CAAC,CAAA,EAAG,KAAK,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,IAAK,CAAA,EAAE,CAAC,CAAA,EAAG,EAAG,CAAA,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,CAAC,EAAA,EAAK,CAAA,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,CAAC,EAAE,EAAA,EAAI,OAAO,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAQ,EAAN,CAAA,EAAE,EAAE,CAAA,GAAQ,CAAA,EAAE,EAAE,MAAM,CAAC,CAAA,EAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CACzgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IACtM,EAAqF,EAAE,EAAE,EAAE,EAD+G,EAAE,KAAK,IAAI,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE,cAAc,CAAC,EAAE,cAAc,CAAC,EAAE,EAAE,KAAK,IAAI,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,KAAK,IAAI,EAAE,aAAa,CAAC,EAAE,aAAa,CAAC,EAAE,EAAE,KAAK,IAAI,EAAE,YAAY,EAAC,EAAE,YAAY,CAAI,EAAE,KAAK,IAAI,EAAE,aAAa,CAAC,EAAE,aAAa,CAAC,GAAG,EAAE,KAAK,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,WAAW,CAClf,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,EAAE,WAAW,CAAC,EAAE,WAAW,CAAC,GAAM,eAAe,CAAC,gBAAgB,AAAS,CAAA,GAAI,CAAA,EAAE,EAAE,eAAe,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,GAAM,YAAY,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAM,AAAN,EAAS,GAAI,CAAA,EAAE,EAAE,EAAE,CAAA,EAAG,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,GAAG,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAmB,IAAlB,EAAE,EAAE,OAAO,GAAG,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,IAAK,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,EAAA,EAAI,EACnf,CAAC,CAAC,CAAC,IAAI,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,EAAM,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAa,EAAX,EAAE,EAAE,MAAM,CAAG,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,EAAmB,IAAN,EAAE,AAAb,CAAA,EAAE,EAAE,MAAM,AAAN,EAAW,EAAM,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,IAAI,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,IAAU,EAAN,EAAG,EAAE,CAAG,EAAG,EAAE,MAAM,GAAO,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAkC,IAAjC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAa,EAAE,AAAb,CAAA,EAAE,EAAE,MAAM,AAAN,EAAW,EAAM,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,IAAI,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAG,IAAI,CAAC,GAAG,EAAG,EAAG,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAA+C,IAAxC,EAAE,EAAG,CAAA,EAAX,CAAA,EAAE,EAAE,CAAA,CAAS,EAAG,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,GAAG,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAC3f,EAAE,IAAqB,EAAE,AAAnB,CAAA,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAA,EAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAO,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAqB,EAAE,AAAnB,CAAA,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAA,EAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAK,IAAI,EAAE,EAAV,EAAE,EAAU,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CACtf,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAA+C,IAAxC,EAAE,EAAG,CAAA,EAAX,CAAA,EAAE,EAAE,CAAA,CAAS,EAAG,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,GAAG,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAqB,EAAE,AAAnB,CAAA,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAA,EAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAO,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAE,AAAA,CAAA,WAAW,GAAG,EAAE,CAAC,IAAI,EAAQ,IAAI,EAAE,EAAZ,EAAE,EAAE,EAAU,EAAE,EAAE,IAAW,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,CAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAgB,IAAI,EAAE,EAAX,EAAN,CAAA,EAAE,EAAE,CAAA,EAAK,EAAU,EAAE,EAAE,IAAW,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,CAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAW,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,CAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAW,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,CAAM,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CACvf,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA,IAAM,AAAA,WAAW,IAAI,EAAE,EAAyB,IAAvB,EAAE,EAAJ,GAAS,GAAG,EAAE,MAAM,CAAC,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,AAAO,EAAP,EAAE,CAAC,CAAC,EAAE,CAAK,GAAG,GAAG,EAAE,MAAM,AAAA,GAAI,EAClH,GAAM,eAAe,CAAC,gBAAgB,CAAC,CAAC,cAAc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAoC,OAArB,EAAE,AAAf,CAAA,EAAE,EAAE,QAAQ,AAAR,CAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAO,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,AAAA,EAAE,mBAAmB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAA2C,OAA5B,EAAE,AAAf,CAAA,EAAE,EAAE,QAAQ,AAAR,CAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAO,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CACtf,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,AAAA,CAAC,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,MAAM,OAAO,CAAC,IAAK,CAAA,EAAE,CAAC,EAAC,AAAC,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,aAAa,CAAC,GAAM,aAAa,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,IAAI,AAAA,EAC3c,GAAM,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,CAAC,CAAA,EAAG,IAA+F,EAAE,EAAE,EAA/F,EAAE,EAAE,QAAQ,CAAC,EAAE,KAAK,IAAI,EAAE,WAAW,CAAC,GAAM,eAAe,CAAC,gBAAgB,CAAC,EAAE,WAAW,CAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAoE,EAAE,AAArE,CAAA,EAAE,EAAE,aAAa,CAAC,KAAK,IAAI,EAAE,aAAa,CAAC,EAAE,aAAa,CAAC,GAA3D,EAAuE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,EAAE,EAAE,OAAO,GAAG,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAM,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,IAAK,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,EAAA,EAAI,IAAI,EAAE,GAAM,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,GAAO,IAAJ,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CACpf,EAAE,EAAE,MAAM,CAAC,GAAyB,IAAI,EAAE,EAA5B,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAS,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,AAAO,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,CAAM,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,KAAK,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EACzQ,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,EAAG,CAAA,EAAE,MAAM,CAAC,CAAA,EAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,AAAC,CAAA,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAgB,IAAf,EAAE,EAAE,MAAM,CAAC,EAAE,EAAM,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACnf,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,EAAE,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,aAAa,CAC/e,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,eAAe,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAM,mBAAmB,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,aAAa,CAClW,GAAM,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EACxL,GAAM,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,sBAAsB,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,eAAe,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAA4C,EAAE,AAA5C,CAAA,EAAE,KAAK,KAAK,CAAC,IAAI,CAAA,EAA6B,EAAE,EAAE,AAA/B,CAAA,EAAE,KAAK,KAAK,CAAC,IAAI,CAAA,EAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,aAAa,EAAE,EAAE,GAAG,EAAE,IAAI,aAAa,EAAE,EAAE,GAAG,IAAI,IAAI,EAAE,IAAI,aAAa,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAC/b,IAAI,EAAE,EAD2b,EAAE,EAAE,EAAE,GAAK,CAAA,MAAM,EAAE,MAAM,CAAC,EAAE,YAAY,WAAA,EAAa,EAC3f,EAAE,GAAW,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAM,eAAe,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,GAAM,eAAe,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,GAAM,eAAe,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,GAAM,eAAe,CAAC,EAAE,GAAG,EAAE,GAAM,mBAAmB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,cAAc,CAAC,SAAS,EAAE,GAAM,mBAAmB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,mBAAmB,CAC/f,GAAM,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,IAAI,GAAM,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAe,OAAb,EAAE,IAAI,CAAC,IAAI,EAAS,CAAC,EACzN,GAAM,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,EAA+B,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAjD,CAAA,EAAE,KAAK,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,CAAA,EAA2B,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE,CAAA,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAE,AAAA,CAAA,EAAE,CAAC,CAAC,EAAE,CAAA,EAAG,EACpf,AAAC,CAAA,EAAE,CAAC,CAAC,EAAE,CAAA,EAAG,GAAG,CAAC,GAAG,CAAC,CAA4B,IAAI,EAAE,EAAjC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAW,EAAE,EAAE,IAAI,IAAI,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,GAAM,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAC/e,GAAM,YAAY,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,YAAY,CAAC,GAAM,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EACtX,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAM,oBAAoB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,cAAc,CAC9Z,GAAM,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAC9Q,GAAM,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,uBAAuB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,GAAG,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,GAAG,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,GAAM,eAAe,CAAC,IAAI,aAAa,EAAE,GAAG,GAAG,EAAE,IAAI,GAAM,eAAe,CAAC,IAAI,aAAa,EACxf,GAAG,GAAG,EAAE,IAAI,GAAM,eAAe,CAAC,IAAI,aAAa,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,CAAM,IAAI,EAAE,EAAX,EAAE,EAAE,CAAS,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,AAAC,CAAA,IAAI,GAAG,EAAE,CAAA,GAAI,EAAE,IAAI,CAAC,EAAE,EAAE,GAAI,AAAA,CAAA,IAAI,EAAE,GAAG,EAAE,KAAK,EAAC,AAAD,GAAK,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAM,eAAe,CAAC,IAAI,YAAY,GACviB,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,GAAM,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAM,oBAAoB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,cAAc,CAAC,SAAS,EAAE,GAAM,oBAAoB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,oBAAoB,CACrT,GAAM,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,IAAI,GAAM,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAe,OAAb,EAAE,IAAI,CAAC,IAAI,EAAS,CAAC,EAC/S,GAAM,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,GAAM,SAAS,CAAC,cAAc,CAAC,EAAE,EAAG,CAAA,EAAE,MAAM,CAAC,KAAK,IAAI,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,KAAK,IAAI,EAAE,cAAc,EAAG,CAAA,EAAE,cAAc,CAAC,EAAA,EAAI,KAAK,IAAI,EAAE,SAAS,EAAG,CAAA,EAAE,SAAS,CAAC,CAAA,EAAG,KAAK,IAAI,EAAE,YAAY,EAAG,CAAA,EAAE,YAAY,CAAC,CAAC,CAAA,EAAG,GAAM,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,eAAe,CAAC,SAAS,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,YAAY,CACpc,GAAM,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,eAAe,EAAE,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,IAAI,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAE,CAAA,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,GAAM,OAAO,AAAC,CAAA,EAAE,CAAC,CAAE,AAAA,CAAA,EAAE,EAAE,KAAK,GAAG,CAAC,EAAA,EAAI,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,CAAE,AAAA,CAAA,EAAE,EAAE,KAAK,GAAG,CAAC,EAAA,EAAI,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAC3f,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,KAAK,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAI,CAAA,EAAE,CAAA,EAAG,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,EAAE,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,kBAAkB,EAAE,EACxd,GAAM,aAAa,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,aAAa,CAAC,GAAM,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EACjV,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC,GAA0E,OAAvE,GAAG,EAAE,EAAgB,GAAG,EAAG,CAAA,EAApB,CAAA,EAAE,KAAK,GAAG,CAAC,EAAX,CAAsB,EAAG,GAAG,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,GAAG,CAAC,GAAG,GAAU,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,oBAAoB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,eAAe,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,EAAE,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,MAAM,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CACrf,MAAM,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAA2G,IAAxG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,GAAG,EAAE,SAAS,GAAG,EAAE,SAAS,GAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,GAAM,OAAO,AAAC,CAAA,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EACnf,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,EAAE,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CACzb,GAAM,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EACjQ,GAAM,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAM,YAAY,CAAC,OAAO,CAAC,IAAS,EAAE,EAAQ,EAAE,EAAE,EAAE,EAAE,EAAsB,EAAE,EAAE,EAAjD,EAAE,EAAE,CAAK,EAAE,EAAE,EAAY,EAAE,IAAI,GAAM,OAAO,CAAuI,IAAnF,EAAE,AAA/C,CAAA,EAAE,IAAI,GAAM,YAAY,CAAC,YAAY,CAAC,EAAE,EAAE,EAA1C,EAAiD,OAAO,CAAC,EAAE,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAM,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,AACre,EAAE,CAAC,EAAE,KAAK,GAAG,CADwd,EACnf,EAAE,EAAE,EAAE,KAAK,EAAE,EAAkB,EAAE,EAAE,KAAK,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,AAAC,CAAA,EAAE,CAAA,EAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAC3f,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,EAAE,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,YAAY,CAAC,GAAM,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC,EAAE,GAAM,YAAY,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,OAAO,KAAK,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAC5W,GAAM,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAwF,EAAE,EAAE,EAAxF,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,IAAI,GAAM,OAAO,CAAgE,IAA/D,GAAG,EAAY,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,SAAS,GAC7N,IADgO,CAAC,CAAC,EAAE,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,OAAO,SAAS,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,GAAI,CAAA,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAA,EAAI,GAAG,GAAI,CAAA,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAA,EAAI,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CACxf,GAAG,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAM,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,IAAK,CAAA,EAAE,SAAS,GAAG,EAAE,KAAK,IAAI,CAAC,GAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,gBAAgB,CAAC,EAAE,GAAA,EAAK,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,AAAqD,EAAnD,KAAK,IAAI,CAAC,GAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,IAAO,CAAA,EAAE,CAAA,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,IAAK,CAAA,EAAE,CAAC,CAAA,EAAG,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAC/d,GAAM,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,SAAS,GAAG,KAAK,EAAG,CAAA,EAAE,KAAK,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,GAA0F,OAAvF,EAAE,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAU,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,GAAM,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,YAAY,CAAC,GAAG,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAC/F,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC7Y,OAD+Y,EAAE,GAAG,IAAI,EAAE,CAAC,EAAG,CAAA,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA,EAAG,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAG,CAAA,EAAE,IAAI,GAAM,OAAO,CAAC,EACxf,EAAE,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,CAAA,EAAU,EAAE,KAAK,EAAE,CAAC,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,KAAI,AAFgB,SAAW,CAAC,CAC5f,CAAC,EAAE,IAAI,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAG,CAAA,EAAE,CAAA,EAAG,EAAE,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE,GAAG,GAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EACmF,CAAC,CAAC,EAAE,CAAC,GAAO,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,MAAM,CAAC,EACjhB,EAAE,IAAI,AAAsD,EAAE,KAAK,GAAG,CAArC,EAAE,AAA7B,CAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,AAAF,CAAM,CAAC,EAAE,CAAC,CAAC,CAAgC,KAAK,GAAG,CAAvC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAA6B,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,GAAI,CAAA,GAAG,GAAI,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAA,EAAG,GAAG,GAAI,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAA,EAAG,GAAG,GAAI,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAA,CAAA,EAAQ,IAAJ,EAAE,EAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,GAAM,MAAM,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,kBAAkB,CAC9f,GAAM,kBAAkB,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,OAAO,IAAI,GAAM,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAA6C,OAA3C,GAAM,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAU,IAAI,AAAA,EAC/S,GAAM,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAG,AAAA,CAAA,EAAE,KAAK,IAAI,CAAC,EAAA,EAAI,EAAE,EAAE,EAAE,EAAE,GAAM,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EACnf,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,uBAAuB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,EAAE,GAAM,oBAAoB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,kBAAkB,CAAC,SAAS,EAAE,GAAM,oBAAoB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,oBAAoB,CAAC,GAAM,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,IAAI,GAAM,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAe,OAAb,EAAE,IAAI,CAAC,IAAI,EAAS,CAAC,EACja,GAAM,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,AAAC,CAAA,EAAE,KAAK,IAAI,CAAC,EAAA,EAAI,EAAE,GAAM,kBAAksBAAsB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,EAAE,GAAM,mBAAmB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,kBAAkB,CAAC,SAAS,EAC5d,GAAM,mBAAmB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,mBAAmB,CAAC,GAAM,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,IAAI,GAAM,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAe,OAAb,EAAE,IAAI,CAAC,IAAI,EAAS,CAAC,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,EACrd,GAAM,kBAAkB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,kBAAkB,CAAC,SAAS,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,kBAAkB,CAAC,GAAM,kBAAkB,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,IAAI,GAAM,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAe,OAAb,EAAE,IAAI,CAAC,IAAI,EAAS,CAAC,EACxT,GAAM,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,sBAAsB,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,EAAE,GAAM,mBAAmB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,kBAAkB,CAAC,SAAS,EAAE,GAAM,mBAAmB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,mBAAmB,CAC9W,GAAM,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,IAAI,GAAM,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAe,OAAb,EAAE,IAAI,CAAC,IAAI,EAAS,CAAC,EAC7J,GAAM,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,qBAAqB,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,IAA4I,EAAE,EAAE,EAAE,EAAzF,EAAE,EAAE,EAAE,EAA3D,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAS,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,AAAM,EAAE,EAAR,EAAE,EAAE,EAAQ,GAAG,EAAE,IAAI,CAAC,GAAe,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,GAAG,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,GAAG,EAAE,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EACxgB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,EAAE,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,kBAAkB,CAC9R,GAAM,iBAAiB,CAAC,SAAS,CAAC,EAAE,GAAM,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,aAAa,GAAM,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,IAAI,YAAY,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,QAAQ,EAAG,MAAK,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAA,CAAI,CAA6B,IAA5B,EAAE,IAAI,aAAa,EAAE,GAAG,EAAE,EAAM,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAW,CAAC,CAAC,AAAZ,CAAA,EAAE,EAAE,EAAE,EAAE,CAAA,EAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CACtf,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,GAAM,eAAe,CAAC,EAAE,GAAG,MAAM,GAAG,aAAa,GAAM,cAAc,CAAC,CAAC,GAAG,OAAO,EAAE,KAAK,CAAC,CAAqI,IAApI,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,WAAW,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,YAAY,EAAE,EAAE,MAAM,EAAE,EAAE,EAAM,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,CAAQ,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAO,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,CAAC,EAAE,IAAI,CAAC,GAAkB,KAAK,IAAI,CAAC,CAAzB,EAAE,EAAE,QAAQ,GAAgB,EAAG,CAAA,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAA,CAAI,CAA6B,IAA5B,EAAE,IAAI,aAAa,EAAE,GAAG,EAAE,EAAM,EACtf,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,MAAM,IAAI,AAA2C,EAAE,AAAf,CAAA,EAAE,AAAhC,CAAA,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,KAAK,AAAL,EAAU,MAAM,CAAC,CAAA,EAAM,EAAE,EAAE,IAAI,aAAa,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAG,AAAA,CAAA,EAAE,CAAA,EAAG,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,IAAI,GAAM,eAAe,CAAC,EAAE,GAAG,CAAC,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,cAAc,CAAC,SAAS,EACtd,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CAAC,GAAM,UAAU,CAAC,SAAS,CAAC,EAAS,IAAI,EAAE,IAAI,aAAa,CAAC,EAAE,EAAE,EAAnC,EAAE,GAAG,EAAkC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAA6B,AAA3B,CAAA,EAAE,IAAI,GAAM,cAAc,AAAd,EAAiB,YAAY,CAAC,WAAW,IAAI,GAAM,eAAe,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,QAAQ,IAAI,GAAM,eAAe,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,aAAa,GAAM,YAAY,AAAA,GAAG,GAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,GAAM,UAAU,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,YAAY,CAAC,SAAS,EAC1hB,GAAM,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,UAAU,CACvD,GAAM,WAAW,EAAqC,CAArB,GAAE,IAAI,GAAM,QAAQ,EAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,IAAiD,CAAzC,GAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,GAAG,EAAE,EAAE,IAAK,SAAS,CAAC,EAAE,IAAI,GAAU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,QAAA,EAAU,KAAK,IAAI,GAAI,CAAA,EAAE,CAAA,EAAG,KAAK,IAAI,GAAI,CAAA,EAAE,GAAG,CAAA,EAAG,KAAK,IAAI,GAAI,CAAA,EAAE,GAAG,CAAA,EAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,GAAI,CAAA,IAAI,CAAC,IAAI,CAAC,IAAI,GAAM,IAAI,CAAC,GAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAA,EAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAM,IAAI,CAAC,GAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAAM,CAAC,IACxhB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,GAAK,GAAM,WAAW,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,WAAW,CAAC,GAAM,WAAW,CAAC,SAAS,CAAC,YAAY,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAU,SAAS,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,GAAI,CAAA,GAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG,GAAE,KAAK,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,GAAE,GAAA,CAAG,GACve,GAAM,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,GAAI,CAAA,EAAE,GAAG,CAAA,EAAG,KAAK,IAAI,GAAI,CAAA,EAAE,GAAG,CAAA,EAAG,EAAE,GAAI,CAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAA,EAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAC7W,GAAM,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,aAAa,IAAI,EAAE,IAAI,GAAM,cAAc,CAAC,EAAE,QAAQ,CAAC,IAAI,GAAM,eAAe,CAAC,EAAE,IAAI,EAAE,YAAY,CAAC,WAAW,IAAI,GAAM,eAAe,CAAC,EAAE,IAAI,GAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAAM,QAAQ,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,YAAY,CAAC,SAAS,EAAE,GAAM,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,SAAS,CACje,GAAM,SAAS,CAAC,SAAS,CAAC,MAAM,EAAgB,GAAE,IAAI,GAAM,IAAI,CAAQ,SAAS,CAAC,EAAqB,GAAnB,GAAE,aAAa,CAAC,GAAM,CAAC,GAAE,KAAK,GAAG,CAAC,EAAE,GAAE,GAAG,CAAC,IAAI,EAAE,GAAE,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,EAAE,KAAK,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC,GACrd,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,EAA6B,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,GAAM,IAAI,CAAC,GAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAM,WAAW,CAAC,EAAE,EAAE,GAAG,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAA1I,KAAK,IAAI,EAAE,EAAE,QAAqI,UAAU,CAAC,CAAC,GAAG,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,IAAI,CAAC,SAAS,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CAAC,GAAM,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC3e,GAAM,YAAY,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE,EAAG,CAAA,CAAC,CAAC,EAAE,CAAC,EAAC,AAAD,EAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,GAAM,QAAQ,CAAC,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAAM,SAAS,aAAa,GAAM,UAAU,AAAA,GAAG,EAAE,CAAC,EAAE,EAAE,KAAK,KAAK,UAAU,EAAE,KAAK,KAAK,UAAU,EAAE,KAAK,KAAK,UAAU,EAAE,KAAK,KAAK,UAAU,EAAE,KAAK,KAAK,UAAU,EAAE,KAAK,KAAK,UAAU,EAAE,KAAK,KAAK,UAAU,EAAE,KAAK,KAAK,UAAU,EAAE,KAAK,KAAK,UACpf,EAAE,KAAK,KAAK,UAAU,EAAE,KAAK,KAAK,UAAU,EAAE,KAAK,KAAK,UAAU,EAAE,IAAI,KAAK,UAAU,EAAE,IAAI,KAAK,UAAU,EAAE,IAAI,KAAK,UAAU,EAAE,IAAI,KAAK,UAAU,EAAE,KAAK,KAAK,OAAO,EAAE,KAAK,KAAK,OAAO,EAAE,KAAK,KAAK,OAAO,EAAE,IAAI,IAAI,UAAU,EAAE,IAAI,IAAI,SAAS,EAAE,MAAM,MAAM,SAAS,EAAE,MAAM,MAAM,SAAS,EAAE,MAAM,MAAM,SAAS,EAAE,MAAM,MAAM,SAAS,GAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,GAAM,YAAY,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,YAAY,CAAC,SAAS,EAC3hB,GAAM,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,YAAY,CAC3D,GAAM,YAAY,CAAC,SAAS,CAAC,MAAM,EAAoB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,MAAM,CAAC,GAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAmC,GAAjC,GAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,IAAa,KAAK,IAAf,CAAA,EAAE,EAAC,CAAC,EAAE,AAAF,EAAiB,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,GAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAE,EAAS,WAAW,GAAE,IAAI,CAAC,QAAQ,CAAC,GAAE,IAAI,CAAC,QAAQ,CAAC,GAAE,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,GAAE,IAAI,EAAE,EAAE,IAAI,GAAE,IAAI,EAAE,EAAE,GAAG,GAAE,KAAK,GAAG,GAAG,IAAI,GAAE,KAAK,EAAE,GAAG,IAAI,GAAE,KAAK,GAAG,EAAE,IAAI,GAAE,KAAK,EAAE,EAAE,IAAI,GAAE,KAAK,GAAG,GAAG,GAAG,GAAE,KAAK,EAAE,GAAG,GAAG,GAAE,KAAK,GAAG,EAAE,GAAG,GAAE,KAAK,EAAE,EAAE,GAAG,GAAE,KAAK,GAAG,IAAI,IAAI,GAAE,KAAK,IAAI,IAClf,IAAI,GAAE,KAAK,EAAE,EAAE,IAAI,GAAE,MAAM,GAAG,EAAE,GAAG,GAAE,MAAM,EAAE,EAAE,GAAG,GAAE,MAAM,EAAE,GAAG,GAAG,GAAE,MAAM,EAAE,EAAE,GAAG,GAAE,MAAM,GAAG,EAAE,IAAI,GAAE,MAAM,EAAE,EAAE,IAAI,GAAE,MAAM,EAAE,GAAG,IAAI,GAAE,MAAM,EAAE,EAAE,IAAI,GAAE,kBAAkB,CAAC,CAAC,CAAC,GAC1K,GAAM,sBAAsB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,GAAM,QAAQ,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAM,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAC9e,AAArB,CAAA,EAAE,IAAI,GAAM,QAAQ,AAAR,EAAW,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,IAAI,GAAM,OAAO,EAA0C,AAAxC,CAAA,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,IAAI,CAAC,CAAC,EAAA,EAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAM,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,GAAM,sBAAsB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,sBAAsB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,sBAAsB,CACja,GAAM,sBAAsB,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,EACrM,GAAM,sBAAsB,CAAC,SAAS,CAAC,MAAM,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,WAAW,GAAE,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,GAAE,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,GAAE,UAAU,CAAC,GAAE,IAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,IAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,GACxhB,GAAM,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,SAAS,GAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAM,aAAa,CAAC,EAAE,QAAQ,CAAC,GAAG,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,YAAY,CAAC,SAAS,EAAE,GAAM,WAAW,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,WAAW,CAC1V,GAAM,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,EAAyB,AAAvB,CAAA,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,AAAR,YAAsB,GAAM,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,sGAAsG,EAAE,IAAI,GAAM,cAAc,CAAC,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,EAAE,GAAG,EAAE,YAAY,CAAC,WAAW,GAAG,GAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAAM,EAAE,UAAU,CAAC,IAAI,IAAI,CAAC,gBAAgB,CACzf,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,YAAY,CAAC,SAAS,EAAE,GAAM,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,iBAAiB,CACrK,GAAM,iBAAiB,CAAC,SAAS,CAAC,MAAM,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,WAAW,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,GAAE,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,GAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,YAAY,CAAC,GAAG,GAAE,IAAI,CAAC,GAAG,YAAY,CAAC,IAAG,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,IACpgB,EAAE,MAAM,CAAC,EAAE,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,CAAC,EAAE,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,GAAG,CAAC,CAAkB,OAAjB,EAAE,WAAW,CAAC,CAAC,EAAS,IAAI,AAAA,GACtF,GAAM,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,GAAM,QAAQ,CAAC,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,aAAa,GAAM,YAAY,AAAA,EAAG,CAAA,IAAI,CAAC,MAAM,CAAC,IAAI,GAAM,KAAK,CAAC,SAAS,IAAI,CAAC,MAAM,CAAC,IAAI,GAAM,KAAK,CAAC,SAAS,IAAI,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,GAAM,UAAU,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,YAAY,CAAC,SAAS,EACrf,GAAM,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,UAAU,CAAC,GAAM,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAClL,GAAM,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,GAAM,KAAK,CAAC,IAAI,GAAM,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,GAAM,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,aAAa,GAAM,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAM,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,EAChe,GAAM,qBAAqB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,qBAAqB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,qBAAqB,CAAC,GAAM,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,EAC5R,GAAM,qBAAqB,CAAC,SAAS,CAAC,MAAM,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAQ,WAAW,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAE,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAC7X,GAAM,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,EAAE,IAAI,GAAM,cAAc,CAAC,EAAE,EAAE,GAAG,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,GAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,IAAI,CAAC,SAAS,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,gBAAgB,CAC/c,GAAM,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,GAAM,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EACvO,GAAM,cAAc,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,IAAI,EAAE,IAAI,GAAM,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,YAAY,GAAM,IAAI,EAAG,CAAA,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAM,OAAO,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,GAAM,KAAK,CAAC,EAAE,EAAE,GAAA,CAAK,CAAA,EAAE,OAAO,CAAC,CAAC,EAAE,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,aAAa,GAAM,YAAY,CAAC,UAAU,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,CAAC,GAAG,GAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,WAAW,CACxf,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,YAAY,CAAC,SAAS,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,cAAc,CAAC,GAAM,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAE,AAAC,CAAA,aAAa,GAAM,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,QAAQ,CAAC,EAAE,GAAG,OAAO,CAAC,EAClX,GAAM,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,AAAC,CAAA,IAAI,GAAM,OAAO,AAAP,EAAS,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,GAAM,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,AAAC,CAAA,EAAE,MAAM,YAAY,GAAM,IAAI,EAAG,CAAA,EAAE,gBAAgB,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,qBAAqB,CAAC,GAAG,EAAE,gBAAgB,CAAC,EAAE,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAA,CAAE,CAAC,EAAE,kBAAkB,CAAC,CAAC,EAAE,EAAE,qBAAqB,EAAE,EACjc,GAAM,eAAe,CAAC,SAAS,CAAC,EAAE,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAA6C,AAA3C,CAAA,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAxC,EAA6C,SAAS,CAAC,EAAE,IAAI,GAAG,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC,EAAG,CAAA,IAAI,CAAC,IAAI,CAAC,IAAI,GAAM,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,eAAe,CACpf,GAAM,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,MAAM,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,WAAW,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAE,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,GAAE,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAE,GAAG,CAAC,KAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAChiB,GAAM,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,KAAK,IAAI,EAAE,EAAE,SAAS,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,EAAE,EAAyB,AAAvB,CAAA,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,AAAR,YAAsB,GAAM,QAAQ,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,GAAM,cAAc,EAAG,CAAA,EAAE,EAAE,UAAU,CAAC,MAAM,CAAC,KAAI,AAAJ,EAAO,EAAE,IAAI,GAAM,cAAc,CAAC,EAAE,IAAI,GAAM,gBAAgB,CAAC,EAAE,EAAE,GAAG,EAAE,YAAY,CAAC,WAAW,GAAG,GAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAAM,EAAE,UAAU,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,EAC5d,GAAM,mBAAmB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,YAAY,CAAC,SAAS,EAAE,GAAM,mBAAmB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,mBAAmB,CACzJ,GAAM,mBAAmB,CAAC,SAAS,CAAC,MAAM,EAAgB,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAC,GAAE,IAAI,GAAM,OAAO,CAAQ,WAAW,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,GAAE,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,aAAa,GAAM,QAAQ,CAAC,IAAI,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,aAAa,CAAC,EAAE,CAAC,GAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,YAAY,CAAC,GACvgB,GAAE,IAAI,CAAC,GAAG,YAAY,CAAC,IAAG,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,IAAG,EAAE,MAAM,CAAC,EAAE,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,CAAC,EAAE,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,aAAa,GAAM,cAAc,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,EAAE,EAAE,IAAI,GAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,YAAY,CAAC,GAAG,GAAE,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,GAAE,YAAY,CAAC,IAAG,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,IAAG,EAAE,MAAM,CAAC,EAAE,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,GAAG,EAAE,EAAE,MAAM,CAAC,EAAE,GAAE,CAAC,CAAC,GAAE,CAAC,CAAC,GAAE,CAAC,EAAE,GAAG,EAAmB,OAAjB,EAAE,WAAW,CAAC,CAAC,EAAS,IAAI,AAAA,GACpe,GAAM,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAA8B,GAAM,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAM,iBAAiB,CAAC,EAAE,QAAQ,EAAE,IAAI,GAAM,iBAAiB,CAAC,CAAC,MAAxH,KAAK,IAAI,EAAE,EAAE,QAAkH,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,YAAY,CAAC,SAAS,EAAE,GAAM,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,eAAe,CAAC,GAAM,qBAAqB,CAAC,WAAW,GAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,GAAM,qBAAqB,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,QAAQ,CAAC,SAAS,EACvhB,GAAM,qBAAqB,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,qBAAqB,CAAC,GAAM,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,GAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,OAAO,MAAM,CAAC,GAAM,IAAI,CAAC,SAAS,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,GAAM,cAAc,CACtb,GAAM,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,AAAC,CAAA,EAAE,CAAA,EAAG,EAAE,UAAU,EAAE,aAAa,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,EACjR,GAAM,cAAc,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAAE,IAAI,IAAwB,EAApB,EAAE,kBAAoB,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,EAAE,EAAG,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,IAAS,IAAI,CAAC,GAAQ,CAAA,EAAU,EAAE,AAAT,CAAA,EAAE,CAAC,CAAC,EAAE,AAAF,EAAO,KAAK,EAAG,CAAA,EAAE,KAAK,CAAC,CAAA,EAAG,EAAE,EAAE,GAAG,EAAG,CAAA,EAAE,GAAG,CAAC,CAAA,EAAG,GAAI,CAAA,EAAE,CAAA,CAAE,CAAC,CAAC,IAAI,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE,GAAG,CAAC,EAAG,CAAA,IAAI,CAAC,cAAc,CAAC,CAAC,EACjZ,GAAM,cAAc,CAAC,SAAS,CAAC,4BAA4B,CAAC,SAAS,CAAC,EAAK,CAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,AAAF,GAAG,CAAA,EAAE,SAAS,CAAC,EAAE,EAAE,kBAAkB,CAAC,CAAC,CAAA,CAAC,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,6BAA6B,CAAC,SAAS,CAAC,EAAK,CAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,AAAF,GAAG,CAAA,EAAE,SAAS,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC,CAAA,CAAC,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,AAAC,CAAA,GAAI,CAAA,EAAE,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAE,AAAA,CAAA,EAAE,GAAG,CAAC,EAAE,KAAI,AAAJ,EAAO,EAAE,GAAG,AAAH,CAAI,EAC5Z,GAAM,cAAc,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,AAAC,CAAA,GAAI,CAAA,EAAE,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAE,AAAA,CAAA,EAAE,GAAG,CAAC,EAAE,KAAI,AAAJ,EAAO,EAAE,QAAQ,AAAR,CAAS,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,AAAC,CAAA,GAAI,CAAA,EAAE,MAAM,CAAC,CAAA,CAAE,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,AAAC,CAAA,GAAI,CAAA,EAAE,IAAI,CAAC,CAAA,CAAE,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,EAAsC,MAAjC,CAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,AAAF,GAAG,CAAA,EAAE,EAAE,IAAI,AAAJ,EAAY,CAAC,EACxd,GAAM,cAAc,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,GAA2C,MAArC,CAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,AAAF,GAAG,CAAA,EAAE,EAAE,QAAQ,AAAR,EAAgB,CAAC,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,AAAC,CAAA,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAA,EAAG,QAAQ,IAAI,CAAC,mCAAmC,EAAE,kCAAkC,EAAE,GAAM,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,EAAK,CAAA,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,AAAF,GAAG,CAAA,EAAE,MAAM,CAAC,CAAC,CAAA,CAAC,EAC9Z,GAAM,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,MAAM,AAAC,CAAA,EAAE,IAAI,EAAE,EAAE,SAAS,CAAC,EAAK,EAAE,YAAY,CAAK,CAAA,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,AAAJ,GAAK,CAAA,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,QAAQ,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,QAAQ,CAAC,EAAE,kBAAkB,CAAC,CAAC,CAAA,EAAG,EAAE,EAAE,IAAI,EAAG,CAAA,EAAE,IAAI,CAAC,EAAE,EAAE,kBAAkB,CAAC,CAAC,CAAA,CAAA,EAAQ,CAAA,EAAE,IAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAG,CAAA,EAAE,IAAI,EAAE,EAAE,QAAQ,AAAR,CAAQ,EAAE,IAAI,EAAE,EAAE,KAAK,CAAC,GAAM,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,GAAG,EAAE,EAAE,MAAM,AAAC,CAAA,IAAI,EAAE,YAAY,EACjgB,CAAA,IAAI,CAAC,qBAAqB,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,qBAAqB,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,CAAA,EAAG,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,kBAAkB,EAAG,CAAA,EAAE,EAAE,CAAA,EAAG,EAAE,YAAY,GAAG,EAAE,SAAS,CAAE,CAAA,IAAI,CAAC,qBAAqB,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,qBAAqB,CAAC,EAAE,SAAS,CAAC,CAAE,AAAA,CAAA,EAAE,CAAA,EAAG,CAAA,EAAG,IAAI,CAAC,qBAAqB,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC","sources":["<anon>","js/libs/three.min.js"],"sourcesContent":["// threejs.org/license\n\"use strict\";\nvar THREE = {\n    REVISION: \"72\"\n};\n\"function\" === typeof define && define.amd ? define(\"three\", THREE) : \"undefined\" !== typeof exports && \"undefined\" !== typeof module && (module.exports = THREE);\nvoid 0 !== self.requestAnimationFrame && void 0 !== self.cancelAnimationFrame || function() {\n    for(var a1 = 0, b = [\n        \"ms\",\n        \"moz\",\n        \"webkit\",\n        \"o\"\n    ], c = 0; c < b.length && !self.requestAnimationFrame; ++c)self.requestAnimationFrame = self[b[c] + \"RequestAnimationFrame\"], self.cancelAnimationFrame = self[b[c] + \"CancelAnimationFrame\"] || self[b[c] + \"CancelRequestAnimationFrame\"];\n    void 0 === self.requestAnimationFrame && void 0 !== self.setTimeout && (self.requestAnimationFrame = function(b) {\n        var c = Date.now(), g = Math.max(0, 16 - (c - a1)), f = self.setTimeout(function() {\n            b(c + g);\n        }, g);\n        a1 = c + g;\n        return f;\n    });\n    void 0 === self.cancelAnimationFrame && void 0 !== self.clearTimeout && (self.cancelAnimationFrame = function(a1) {\n        self.clearTimeout(a1);\n    });\n}();\nvoid 0 === Math.sign && (Math.sign = function(a1) {\n    return 0 > a1 ? -1 : 0 < a1 ? 1 : +a1;\n});\nvoid 0 === Function.prototype.name && void 0 !== Object.defineProperty && Object.defineProperty(Function.prototype, \"name\", {\n    get: function() {\n        return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n    }\n});\nTHREE.MOUSE = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2\n};\nTHREE.CullFaceNone = 0;\nTHREE.CullFaceBack = 1;\nTHREE.CullFaceFront = 2;\nTHREE.CullFaceFrontBack = 3;\nTHREE.FrontFaceDirectionCW = 0;\nTHREE.FrontFaceDirectionCCW = 1;\nTHREE.BasicShadowMap = 0;\nTHREE.PCFShadowMap = 1;\nTHREE.PCFSoftShadowMap = 2;\nTHREE.FrontSide = 0;\nTHREE.BackSide = 1;\nTHREE.DoubleSide = 2;\nTHREE.FlatShading = 1;\nTHREE.SmoothShading = 2;\nTHREE.NoColors = 0;\nTHREE.FaceColors = 1;\nTHREE.VertexColors = 2;\nTHREE.NoBlending = 0;\nTHREE.NormalBlending = 1;\nTHREE.AdditiveBlending = 2;\nTHREE.SubtractiveBlending = 3;\nTHREE.MultiplyBlending = 4;\nTHREE.CustomBlending = 5;\nTHREE.AddEquation = 100;\nTHREE.SubtractEquation = 101;\nTHREE.ReverseSubtractEquation = 102;\nTHREE.MinEquation = 103;\nTHREE.MaxEquation = 104;\nTHREE.ZeroFactor = 200;\nTHREE.OneFactor = 201;\nTHREE.SrcColorFactor = 202;\nTHREE.OneMinusSrcColorFactor = 203;\nTHREE.SrcAlphaFactor = 204;\nTHREE.OneMinusSrcAlphaFactor = 205;\nTHREE.DstAlphaFactor = 206;\nTHREE.OneMinusDstAlphaFactor = 207;\nTHREE.DstColorFactor = 208;\nTHREE.OneMinusDstColorFactor = 209;\nTHREE.SrcAlphaSaturateFactor = 210;\nTHREE.NeverDepth = 0;\nTHREE.AlwaysDepth = 1;\nTHREE.LessDepth = 2;\nTHREE.LessEqualDepth = 3;\nTHREE.EqualDepth = 4;\nTHREE.GreaterEqualDepth = 5;\nTHREE.GreaterDepth = 6;\nTHREE.NotEqualDepth = 7;\nTHREE.MultiplyOperation = 0;\nTHREE.MixOperation = 1;\nTHREE.AddOperation = 2;\nTHREE.UVMapping = 300;\nTHREE.CubeReflectionMapping = 301;\nTHREE.CubeRefractionMapping = 302;\nTHREE.EquirectangularReflectionMapping = 303;\nTHREE.EquirectangularRefractionMapping = 304;\nTHREE.SphericalReflectionMapping = 305;\nTHREE.RepeatWrapping = 1E3;\nTHREE.ClampToEdgeWrapping = 1001;\nTHREE.MirroredRepeatWrapping = 1002;\nTHREE.NearestFilter = 1003;\nTHREE.NearestMipMapNearestFilter = 1004;\nTHREE.NearestMipMapLinearFilter = 1005;\nTHREE.LinearFilter = 1006;\nTHREE.LinearMipMapNearestFilter = 1007;\nTHREE.LinearMipMapLinearFilter = 1008;\nTHREE.UnsignedByteType = 1009;\nTHREE.ByteType = 1010;\nTHREE.ShortType = 1011;\nTHREE.UnsignedShortType = 1012;\nTHREE.IntType = 1013;\nTHREE.UnsignedIntType = 1014;\nTHREE.FloatType = 1015;\nTHREE.HalfFloatType = 1025;\nTHREE.UnsignedShort4444Type = 1016;\nTHREE.UnsignedShort5551Type = 1017;\nTHREE.UnsignedShort565Type = 1018;\nTHREE.AlphaFormat = 1019;\nTHREE.RGBFormat = 1020;\nTHREE.RGBAFormat = 1021;\nTHREE.LuminanceFormat = 1022;\nTHREE.LuminanceAlphaFormat = 1023;\nTHREE.RGBEFormat = THREE.RGBAFormat;\nTHREE.RGB_S3TC_DXT1_Format = 2001;\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\nTHREE.Projector = function() {\n    console.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\");\n    this.projectVector = function(a1, b) {\n        console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n        a1.project(b);\n    };\n    this.unprojectVector = function(a1, b) {\n        console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n        a1.unproject(b);\n    };\n    this.pickingRay = function(a1, b) {\n        console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n    };\n};\nTHREE.CanvasRenderer = function() {\n    console.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\");\n    this.domElement = document.createElement(\"canvas\");\n    this.clear = function() {};\n    this.render = function() {};\n    this.setClearColor = function() {};\n    this.setSize = function() {};\n};\nTHREE.Color = function(a1) {\n    return 3 === arguments.length ? this.setRGB(arguments[0], arguments[1], arguments[2]) : this.set(a1);\n};\nTHREE.Color.prototype = {\n    constructor: THREE.Color,\n    r: 1,\n    g: 1,\n    b: 1,\n    set: function(a1) {\n        a1 instanceof THREE.Color ? this.copy(a1) : \"number\" === typeof a1 ? this.setHex(a1) : \"string\" === typeof a1 && this.setStyle(a1);\n        return this;\n    },\n    setHex: function(a1) {\n        a1 = Math.floor(a1);\n        this.r = (a1 >> 16 & 255) / 255;\n        this.g = (a1 >> 8 & 255) / 255;\n        this.b = (a1 & 255) / 255;\n        return this;\n    },\n    setRGB: function(a1, b, c) {\n        this.r = a1;\n        this.g = b;\n        this.b = c;\n        return this;\n    },\n    setHSL: function() {\n        function a1(a1, c, d) {\n            0 > d && (d += 1);\n            1 < d && (d -= 1);\n            return d < 1 / 6 ? a1 + 6 * (c - a1) * d : .5 > d ? c : d < 2 / 3 ? a1 + 6 * (c - a1) * (2 / 3 - d) : a1;\n        }\n        return function(b, c, d) {\n            b = THREE.Math.euclideanModulo(b, 1);\n            c = THREE.Math.clamp(c, 0, 1);\n            d = THREE.Math.clamp(d, 0, 1);\n            0 === c ? this.r = this.g = this.b = d : (c = .5 >= d ? d * (1 + c) : d + c - d * c, d = 2 * d - c, this.r = a1(d, c, b + 1 / 3), this.g = a1(d, c, b), this.b = a1(d, c, b - 1 / 3));\n            return this;\n        };\n    }(),\n    setStyle: function(a1) {\n        var b = function(b) {\n            b = parseFloat(b);\n            1 > b && console.warn(\"THREE.Color: Alpha component of color \" + a1 + \" will be ignored.\");\n            return b;\n        }, c;\n        if (c = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(a1)) {\n            var d = c[2];\n            switch(c[1]){\n                case \"rgb\":\n                    if (c = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec(d)) return this.r = Math.min(255, parseInt(c[1], 10)) / 255, this.g = Math.min(255, parseInt(c[2], 10)) / 255, this.b = Math.min(255, parseInt(c[3], 10)) / 255, this;\n                    if (c = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec(d)) return this.r = Math.min(100, parseInt(c[1], 10)) / 100, this.g = Math.min(100, parseInt(c[2], 10)) / 100, this.b = Math.min(100, parseInt(c[3], 10)) / 100, this;\n                    break;\n                case \"rgba\":\n                    if (c = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec(d)) return this.r = Math.min(255, parseInt(c[1], 10)) / 255, this.g = Math.min(255, parseInt(c[2], 10)) / 255, this.b = Math.min(255, parseInt(c[3], 10)) / 255, b(c[4]), this;\n                    if (c = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec(d)) return this.r = Math.min(100, parseInt(c[1], 10)) / 100, this.g = Math.min(100, parseInt(c[2], 10)) / 100, this.b = Math.min(100, parseInt(c[3], 10)) / 100, b(c[4]), this;\n                    break;\n                case \"hsl\":\n                    if (c = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec(d)) {\n                        var d = parseFloat(c[1]), e = parseInt(c[2], 10) / 100, g = parseInt(c[3], 10) / 100;\n                        return this.setHSL(d, e, g);\n                    }\n                    break;\n                case \"hsla\":\n                    if (c = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec(d)) return d = parseFloat(c[1]), e = parseInt(c[2], 10) / 100, g = parseInt(c[3], 10) / 100, b(c[4]), this.setHSL(d, e, g);\n            }\n        } else if (c = /^\\#([A-Fa-f0-9]+)$/.exec(a1)) {\n            b = c[1];\n            c = b.length;\n            if (3 === c) return this.r = parseInt(b.charAt(0) + b.charAt(0), 16) / 255, this.g = parseInt(b.charAt(1) + b.charAt(1), 16) / 255, this.b = parseInt(b.charAt(2) + b.charAt(2), 16) / 255, this;\n            if (6 === c) return this.r = parseInt(b.charAt(0) + b.charAt(1), 16) / 255, this.g = parseInt(b.charAt(2) + b.charAt(3), 16) / 255, this.b = parseInt(b.charAt(4) + b.charAt(5), 16) / 255, this;\n        }\n        a1 && 0 < a1.length && (b = THREE.ColorKeywords[a1], void 0 !== b ? this.setHex(b) : console.warn(\"THREE.Color: Unknown color \" + a1));\n        return this;\n    },\n    clone: function() {\n        return new this.constructor(this.r, this.g, this.b);\n    },\n    copy: function(a1) {\n        this.r = a1.r;\n        this.g = a1.g;\n        this.b = a1.b;\n        return this;\n    },\n    copyGammaToLinear: function(a1, b) {\n        void 0 === b && (b = 2);\n        this.r = Math.pow(a1.r, b);\n        this.g = Math.pow(a1.g, b);\n        this.b = Math.pow(a1.b, b);\n        return this;\n    },\n    copyLinearToGamma: function(a1, b) {\n        void 0 === b && (b = 2);\n        var c = 0 < b ? 1 / b : 1;\n        this.r = Math.pow(a1.r, c);\n        this.g = Math.pow(a1.g, c);\n        this.b = Math.pow(a1.b, c);\n        return this;\n    },\n    convertGammaToLinear: function() {\n        var a1 = this.r, b = this.g, c = this.b;\n        this.r = a1 * a1;\n        this.g = b * b;\n        this.b = c * c;\n        return this;\n    },\n    convertLinearToGamma: function() {\n        this.r = Math.sqrt(this.r);\n        this.g = Math.sqrt(this.g);\n        this.b = Math.sqrt(this.b);\n        return this;\n    },\n    getHex: function() {\n        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0;\n    },\n    getHexString: function() {\n        return (\"000000\" + this.getHex().toString(16)).slice(-6);\n    },\n    getHSL: function(a1) {\n        a1 = a1 || {\n            h: 0,\n            s: 0,\n            l: 0\n        };\n        var b = this.r, c = this.g, d = this.b, e = Math.max(b, c, d), g = Math.min(b, c, d), f, h = (g + e) / 2;\n        if (g === e) g = f = 0;\n        else {\n            var k = e - g, g = .5 >= h ? k / (e + g) : k / (2 - e - g);\n            switch(e){\n                case b:\n                    f = (c - d) / k + (c < d ? 6 : 0);\n                    break;\n                case c:\n                    f = (d - b) / k + 2;\n                    break;\n                case d:\n                    f = (b - c) / k + 4;\n            }\n            f /= 6;\n        }\n        a1.h = f;\n        a1.s = g;\n        a1.l = h;\n        return a1;\n    },\n    getStyle: function() {\n        return \"rgb(\" + (255 * this.r | 0) + \",\" + (255 * this.g | 0) + \",\" + (255 * this.b | 0) + \")\";\n    },\n    offsetHSL: function(a1, b, c) {\n        var d = this.getHSL();\n        d.h += a1;\n        d.s += b;\n        d.l += c;\n        this.setHSL(d.h, d.s, d.l);\n        return this;\n    },\n    add: function(a1) {\n        this.r += a1.r;\n        this.g += a1.g;\n        this.b += a1.b;\n        return this;\n    },\n    addColors: function(a1, b) {\n        this.r = a1.r + b.r;\n        this.g = a1.g + b.g;\n        this.b = a1.b + b.b;\n        return this;\n    },\n    addScalar: function(a1) {\n        this.r += a1;\n        this.g += a1;\n        this.b += a1;\n        return this;\n    },\n    multiply: function(a1) {\n        this.r *= a1.r;\n        this.g *= a1.g;\n        this.b *= a1.b;\n        return this;\n    },\n    multiplyScalar: function(a1) {\n        this.r *= a1;\n        this.g *= a1;\n        this.b *= a1;\n        return this;\n    },\n    lerp: function(a1, b) {\n        this.r += (a1.r - this.r) * b;\n        this.g += (a1.g - this.g) * b;\n        this.b += (a1.b - this.b) * b;\n        return this;\n    },\n    equals: function(a1) {\n        return a1.r === this.r && a1.g === this.g && a1.b === this.b;\n    },\n    fromArray: function(a1) {\n        this.r = a1[0];\n        this.g = a1[1];\n        this.b = a1[2];\n        return this;\n    },\n    toArray: function(a1, b) {\n        void 0 === a1 && (a1 = []);\n        void 0 === b && (b = 0);\n        a1[b] = this.r;\n        a1[b + 1] = this.g;\n        a1[b + 2] = this.b;\n        return a1;\n    }\n};\nTHREE.ColorKeywords = {\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n};\nTHREE.Quaternion = function(a1, b, c, d) {\n    this._x = a1 || 0;\n    this._y = b || 0;\n    this._z = c || 0;\n    this._w = void 0 !== d ? d : 1;\n};\nTHREE.Quaternion.prototype = {\n    constructor: THREE.Quaternion,\n    get x () {\n        return this._x;\n    },\n    set x (a){\n        this._x = a;\n        this.onChangeCallback();\n    },\n    get y () {\n        return this._y;\n    },\n    set y (a){\n        this._y = a;\n        this.onChangeCallback();\n    },\n    get z () {\n        return this._z;\n    },\n    set z (a){\n        this._z = a;\n        this.onChangeCallback();\n    },\n    get w () {\n        return this._w;\n    },\n    set w (a){\n        this._w = a;\n        this.onChangeCallback();\n    },\n    set: function(a1, b, c, d) {\n        this._x = a1;\n        this._y = b;\n        this._z = c;\n        this._w = d;\n        this.onChangeCallback();\n        return this;\n    },\n    clone: function() {\n        return new this.constructor(this._x, this._y, this._z, this._w);\n    },\n    copy: function(a1) {\n        this._x = a1.x;\n        this._y = a1.y;\n        this._z = a1.z;\n        this._w = a1.w;\n        this.onChangeCallback();\n        return this;\n    },\n    setFromEuler: function(a1, b) {\n        if (!1 === a1 instanceof THREE.Euler) throw Error(\"THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");\n        var c = Math.cos(a1._x / 2), d = Math.cos(a1._y / 2), e = Math.cos(a1._z / 2), g = Math.sin(a1._x / 2), f = Math.sin(a1._y / 2), h = Math.sin(a1._z / 2), k = a1.order;\n        \"XYZ\" === k ? (this._x = g * d * e + c * f * h, this._y = c * f * e - g * d * h, this._z = c * d * h + g * f * e, this._w = c * d * e - g * f * h) : \"YXZ\" === k ? (this._x = g * d * e + c * f * h, this._y = c * f * e - g * d * h, this._z = c * d * h - g * f * e, this._w = c * d * e + g * f * h) : \"ZXY\" === k ? (this._x = g * d * e - c * f * h, this._y = c * f * e + g * d * h, this._z = c * d * h + g * f * e, this._w = c * d * e - g * f * h) : \"ZYX\" === k ? (this._x = g * d * e - c * f * h, this._y = c * f * e + g * d * h, this._z = c * d * h - g * f * e, this._w = c * d * e + g * f * h) : \"YZX\" === k ? (this._x = g * d * e + c * f * h, this._y = c * f * e + g * d * h, this._z = c * d * h - g * f * e, this._w = c * d * e - g * f * h) : \"XZY\" === k && (this._x = g * d * e - c * f * h, this._y = c * f * e - g * d * h, this._z = c * d * h + g * f * e, this._w = c * d * e + g * f * h);\n        if (!1 !== b) this.onChangeCallback();\n        return this;\n    },\n    setFromAxisAngle: function(a1, b) {\n        var c = b / 2, d = Math.sin(c);\n        this._x = a1.x * d;\n        this._y = a1.y * d;\n        this._z = a1.z * d;\n        this._w = Math.cos(c);\n        this.onChangeCallback();\n        return this;\n    },\n    setFromRotationMatrix: function(a1) {\n        var b = a1.elements, c = b[0];\n        a1 = b[4];\n        var d = b[8], e = b[1], g = b[5], f = b[9], h = b[2], k = b[6], b = b[10], l = c + g + b;\n        0 < l ? (c = .5 / Math.sqrt(l + 1), this._w = .25 / c, this._x = (k - f) * c, this._y = (d - h) * c, this._z = (e - a1) * c) : c > g && c > b ? (c = 2 * Math.sqrt(1 + c - g - b), this._w = (k - f) / c, this._x = .25 * c, this._y = (a1 + e) / c, this._z = (d + h) / c) : g > b ? (c = 2 * Math.sqrt(1 + g - c - b), this._w = (d - h) / c, this._x = (a1 + e) / c, this._y = .25 * c, this._z = (f + k) / c) : (c = 2 * Math.sqrt(1 + b - c - g), this._w = (e - a1) / c, this._x = (d + h) / c, this._y = (f + k) / c, this._z = .25 * c);\n        this.onChangeCallback();\n        return this;\n    },\n    setFromUnitVectors: function() {\n        var a1, b;\n        return function(c, d) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            b = c.dot(d) + 1;\n            1E-6 > b ? (b = 0, Math.abs(c.x) > Math.abs(c.z) ? a1.set(-c.y, c.x, 0) : a1.set(0, -c.z, c.y)) : a1.crossVectors(c, d);\n            this._x = a1.x;\n            this._y = a1.y;\n            this._z = a1.z;\n            this._w = b;\n            this.normalize();\n            return this;\n        };\n    }(),\n    inverse: function() {\n        this.conjugate().normalize();\n        return this;\n    },\n    conjugate: function() {\n        this._x *= -1;\n        this._y *= -1;\n        this._z *= -1;\n        this.onChangeCallback();\n        return this;\n    },\n    dot: function(a1) {\n        return this._x * a1._x + this._y * a1._y + this._z * a1._z + this._w * a1._w;\n    },\n    lengthSq: function() {\n        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n    },\n    length: function() {\n        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n    },\n    normalize: function() {\n        var a1 = this.length();\n        0 === a1 ? (this._z = this._y = this._x = 0, this._w = 1) : (a1 = 1 / a1, this._x *= a1, this._y *= a1, this._z *= a1, this._w *= a1);\n        this.onChangeCallback();\n        return this;\n    },\n    multiply: function(a1, b) {\n        return void 0 !== b ? (console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"), this.multiplyQuaternions(a1, b)) : this.multiplyQuaternions(this, a1);\n    },\n    multiplyQuaternions: function(a1, b) {\n        var c = a1._x, d = a1._y, e = a1._z, g = a1._w, f = b._x, h = b._y, k = b._z, l = b._w;\n        this._x = c * l + g * f + d * k - e * h;\n        this._y = d * l + g * h + e * f - c * k;\n        this._z = e * l + g * k + c * h - d * f;\n        this._w = g * l - c * f - d * h - e * k;\n        this.onChangeCallback();\n        return this;\n    },\n    multiplyVector3: function(a1) {\n        console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\");\n        return a1.applyQuaternion(this);\n    },\n    slerp: function(a1, b) {\n        if (0 === b) return this;\n        if (1 === b) return this.copy(a1);\n        var c = this._x, d = this._y, e = this._z, g = this._w, f = g * a1._w + c * a1._x + d * a1._y + e * a1._z;\n        0 > f ? (this._w = -a1._w, this._x = -a1._x, this._y = -a1._y, this._z = -a1._z, f = -f) : this.copy(a1);\n        if (1 <= f) return this._w = g, this._x = c, this._y = d, this._z = e, this;\n        var h = Math.acos(f), k = Math.sqrt(1 - f * f);\n        if (.001 > Math.abs(k)) return this._w = .5 * (g + this._w), this._x = .5 * (c + this._x), this._y = .5 * (d + this._y), this._z = .5 * (e + this._z), this;\n        f = Math.sin((1 - b) * h) / k;\n        h = Math.sin(b * h) / k;\n        this._w = g * f + this._w * h;\n        this._x = c * f + this._x * h;\n        this._y = d * f + this._y * h;\n        this._z = e * f + this._z * h;\n        this.onChangeCallback();\n        return this;\n    },\n    equals: function(a1) {\n        return a1._x === this._x && a1._y === this._y && a1._z === this._z && a1._w === this._w;\n    },\n    fromArray: function(a1, b) {\n        void 0 === b && (b = 0);\n        this._x = a1[b];\n        this._y = a1[b + 1];\n        this._z = a1[b + 2];\n        this._w = a1[b + 3];\n        this.onChangeCallback();\n        return this;\n    },\n    toArray: function(a1, b) {\n        void 0 === a1 && (a1 = []);\n        void 0 === b && (b = 0);\n        a1[b] = this._x;\n        a1[b + 1] = this._y;\n        a1[b + 2] = this._z;\n        a1[b + 3] = this._w;\n        return a1;\n    },\n    onChange: function(a1) {\n        this.onChangeCallback = a1;\n        return this;\n    },\n    onChangeCallback: function() {}\n};\nTHREE.Quaternion.slerp = function(a1, b, c, d) {\n    return c.copy(a1).slerp(b, d);\n};\nTHREE.Vector2 = function(a1, b) {\n    this.x = a1 || 0;\n    this.y = b || 0;\n};\nTHREE.Vector2.prototype = {\n    constructor: THREE.Vector2,\n    set: function(a1, b) {\n        this.x = a1;\n        this.y = b;\n        return this;\n    },\n    setX: function(a1) {\n        this.x = a1;\n        return this;\n    },\n    setY: function(a1) {\n        this.y = a1;\n        return this;\n    },\n    setComponent: function(a1, b) {\n        switch(a1){\n            case 0:\n                this.x = b;\n                break;\n            case 1:\n                this.y = b;\n                break;\n            default:\n                throw Error(\"index is out of range: \" + a1);\n        }\n    },\n    getComponent: function(a1) {\n        switch(a1){\n            case 0:\n                return this.x;\n            case 1:\n                return this.y;\n            default:\n                throw Error(\"index is out of range: \" + a1);\n        }\n    },\n    clone: function() {\n        return new this.constructor(this.x, this.y);\n    },\n    copy: function(a1) {\n        this.x = a1.x;\n        this.y = a1.y;\n        return this;\n    },\n    add: function(a1, b) {\n        if (void 0 !== b) return console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(a1, b);\n        this.x += a1.x;\n        this.y += a1.y;\n        return this;\n    },\n    addScalar: function(a1) {\n        this.x += a1;\n        this.y += a1;\n        return this;\n    },\n    addVectors: function(a1, b) {\n        this.x = a1.x + b.x;\n        this.y = a1.y + b.y;\n        return this;\n    },\n    addScaledVector: function(a1, b) {\n        this.x += a1.x * b;\n        this.y += a1.y * b;\n        return this;\n    },\n    sub: function(a1, b) {\n        if (void 0 !== b) return console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(a1, b);\n        this.x -= a1.x;\n        this.y -= a1.y;\n        return this;\n    },\n    subScalar: function(a1) {\n        this.x -= a1;\n        this.y -= a1;\n        return this;\n    },\n    subVectors: function(a1, b) {\n        this.x = a1.x - b.x;\n        this.y = a1.y - b.y;\n        return this;\n    },\n    multiply: function(a1) {\n        this.x *= a1.x;\n        this.y *= a1.y;\n        return this;\n    },\n    multiplyScalar: function(a1) {\n        this.x *= a1;\n        this.y *= a1;\n        return this;\n    },\n    divide: function(a1) {\n        this.x /= a1.x;\n        this.y /= a1.y;\n        return this;\n    },\n    divideScalar: function(a1) {\n        0 !== a1 ? (a1 = 1 / a1, this.x *= a1, this.y *= a1) : this.y = this.x = 0;\n        return this;\n    },\n    min: function(a1) {\n        this.x > a1.x && (this.x = a1.x);\n        this.y > a1.y && (this.y = a1.y);\n        return this;\n    },\n    max: function(a1) {\n        this.x < a1.x && (this.x = a1.x);\n        this.y < a1.y && (this.y = a1.y);\n        return this;\n    },\n    clamp: function(a1, b) {\n        this.x < a1.x ? this.x = a1.x : this.x > b.x && (this.x = b.x);\n        this.y < a1.y ? this.y = a1.y : this.y > b.y && (this.y = b.y);\n        return this;\n    },\n    clampScalar: function() {\n        var a1, b;\n        return function(c, d) {\n            void 0 === a1 && (a1 = new THREE.Vector2, b = new THREE.Vector2);\n            a1.set(c, c);\n            b.set(d, d);\n            return this.clamp(a1, b);\n        };\n    }(),\n    floor: function() {\n        this.x = Math.floor(this.x);\n        this.y = Math.floor(this.y);\n        return this;\n    },\n    ceil: function() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n    },\n    round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    },\n    roundToZero: function() {\n        this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x);\n        this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y);\n        return this;\n    },\n    negate: function() {\n        this.x = -this.x;\n        this.y = -this.y;\n        return this;\n    },\n    dot: function(a1) {\n        return this.x * a1.x + this.y * a1.y;\n    },\n    lengthSq: function() {\n        return this.x * this.x + this.y * this.y;\n    },\n    length: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n    lengthManhattan: function() {\n        return Math.abs(this.x) + Math.abs(this.y);\n    },\n    normalize: function() {\n        return this.divideScalar(this.length());\n    },\n    distanceTo: function(a1) {\n        return Math.sqrt(this.distanceToSquared(a1));\n    },\n    distanceToSquared: function(a1) {\n        var b = this.x - a1.x;\n        a1 = this.y - a1.y;\n        return b * b + a1 * a1;\n    },\n    setLength: function(a1) {\n        var b = this.length();\n        0 !== b && a1 !== b && this.multiplyScalar(a1 / b);\n        return this;\n    },\n    lerp: function(a1, b) {\n        this.x += (a1.x - this.x) * b;\n        this.y += (a1.y - this.y) * b;\n        return this;\n    },\n    lerpVectors: function(a1, b, c) {\n        this.subVectors(b, a1).multiplyScalar(c).add(a1);\n        return this;\n    },\n    equals: function(a1) {\n        return a1.x === this.x && a1.y === this.y;\n    },\n    fromArray: function(a1, b) {\n        void 0 === b && (b = 0);\n        this.x = a1[b];\n        this.y = a1[b + 1];\n        return this;\n    },\n    toArray: function(a1, b) {\n        void 0 === a1 && (a1 = []);\n        void 0 === b && (b = 0);\n        a1[b] = this.x;\n        a1[b + 1] = this.y;\n        return a1;\n    },\n    fromAttribute: function(a1, b, c) {\n        void 0 === c && (c = 0);\n        b = b * a1.itemSize + c;\n        this.x = a1.array[b];\n        this.y = a1.array[b + 1];\n        return this;\n    }\n};\nTHREE.Vector3 = function(a1, b, c) {\n    this.x = a1 || 0;\n    this.y = b || 0;\n    this.z = c || 0;\n};\nTHREE.Vector3.prototype = {\n    constructor: THREE.Vector3,\n    set: function(a1, b, c) {\n        this.x = a1;\n        this.y = b;\n        this.z = c;\n        return this;\n    },\n    setX: function(a1) {\n        this.x = a1;\n        return this;\n    },\n    setY: function(a1) {\n        this.y = a1;\n        return this;\n    },\n    setZ: function(a1) {\n        this.z = a1;\n        return this;\n    },\n    setComponent: function(a1, b) {\n        switch(a1){\n            case 0:\n                this.x = b;\n                break;\n            case 1:\n                this.y = b;\n                break;\n            case 2:\n                this.z = b;\n                break;\n            default:\n                throw Error(\"index is out of range: \" + a1);\n        }\n    },\n    getComponent: function(a1) {\n        switch(a1){\n            case 0:\n                return this.x;\n            case 1:\n                return this.y;\n            case 2:\n                return this.z;\n            default:\n                throw Error(\"index is out of range: \" + a1);\n        }\n    },\n    clone: function() {\n        return new this.constructor(this.x, this.y, this.z);\n    },\n    copy: function(a1) {\n        this.x = a1.x;\n        this.y = a1.y;\n        this.z = a1.z;\n        return this;\n    },\n    add: function(a1, b) {\n        if (void 0 !== b) return console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(a1, b);\n        this.x += a1.x;\n        this.y += a1.y;\n        this.z += a1.z;\n        return this;\n    },\n    addScalar: function(a1) {\n        this.x += a1;\n        this.y += a1;\n        this.z += a1;\n        return this;\n    },\n    addVectors: function(a1, b) {\n        this.x = a1.x + b.x;\n        this.y = a1.y + b.y;\n        this.z = a1.z + b.z;\n        return this;\n    },\n    addScaledVector: function(a1, b) {\n        this.x += a1.x * b;\n        this.y += a1.y * b;\n        this.z += a1.z * b;\n        return this;\n    },\n    sub: function(a1, b) {\n        if (void 0 !== b) return console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(a1, b);\n        this.x -= a1.x;\n        this.y -= a1.y;\n        this.z -= a1.z;\n        return this;\n    },\n    subScalar: function(a1) {\n        this.x -= a1;\n        this.y -= a1;\n        this.z -= a1;\n        return this;\n    },\n    subVectors: function(a1, b) {\n        this.x = a1.x - b.x;\n        this.y = a1.y - b.y;\n        this.z = a1.z - b.z;\n        return this;\n    },\n    multiply: function(a1, b) {\n        if (void 0 !== b) return console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"), this.multiplyVectors(a1, b);\n        this.x *= a1.x;\n        this.y *= a1.y;\n        this.z *= a1.z;\n        return this;\n    },\n    multiplyScalar: function(a1) {\n        this.x *= a1;\n        this.y *= a1;\n        this.z *= a1;\n        return this;\n    },\n    multiplyVectors: function(a1, b) {\n        this.x = a1.x * b.x;\n        this.y = a1.y * b.y;\n        this.z = a1.z * b.z;\n        return this;\n    },\n    applyEuler: function() {\n        var a1;\n        return function(b) {\n            !1 === b instanceof THREE.Euler && console.error(\"THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.\");\n            void 0 === a1 && (a1 = new THREE.Quaternion);\n            this.applyQuaternion(a1.setFromEuler(b));\n            return this;\n        };\n    }(),\n    applyAxisAngle: function() {\n        var a1;\n        return function(b, c) {\n            void 0 === a1 && (a1 = new THREE.Quaternion);\n            this.applyQuaternion(a1.setFromAxisAngle(b, c));\n            return this;\n        };\n    }(),\n    applyMatrix3: function(a1) {\n        var b = this.x, c = this.y, d = this.z;\n        a1 = a1.elements;\n        this.x = a1[0] * b + a1[3] * c + a1[6] * d;\n        this.y = a1[1] * b + a1[4] * c + a1[7] * d;\n        this.z = a1[2] * b + a1[5] * c + a1[8] * d;\n        return this;\n    },\n    applyMatrix4: function(a1) {\n        var b = this.x, c = this.y, d = this.z;\n        a1 = a1.elements;\n        this.x = a1[0] * b + a1[4] * c + a1[8] * d + a1[12];\n        this.y = a1[1] * b + a1[5] * c + a1[9] * d + a1[13];\n        this.z = a1[2] * b + a1[6] * c + a1[10] * d + a1[14];\n        return this;\n    },\n    applyProjection: function(a1) {\n        var b = this.x, c = this.y, d = this.z;\n        a1 = a1.elements;\n        var e = 1 / (a1[3] * b + a1[7] * c + a1[11] * d + a1[15]);\n        this.x = (a1[0] * b + a1[4] * c + a1[8] * d + a1[12]) * e;\n        this.y = (a1[1] * b + a1[5] * c + a1[9] * d + a1[13]) * e;\n        this.z = (a1[2] * b + a1[6] * c + a1[10] * d + a1[14]) * e;\n        return this;\n    },\n    applyQuaternion: function(a1) {\n        var b = this.x, c = this.y, d = this.z, e = a1.x, g = a1.y, f = a1.z;\n        a1 = a1.w;\n        var h = a1 * b + g * d - f * c, k = a1 * c + f * b - e * d, l = a1 * d + e * c - g * b, b = -e * b - g * c - f * d;\n        this.x = h * a1 + b * -e + k * -f - l * -g;\n        this.y = k * a1 + b * -g + l * -e - h * -f;\n        this.z = l * a1 + b * -f + h * -g - k * -e;\n        return this;\n    },\n    project: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.multiplyMatrices(b.projectionMatrix, a1.getInverse(b.matrixWorld));\n            return this.applyProjection(a1);\n        };\n    }(),\n    unproject: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.multiplyMatrices(b.matrixWorld, a1.getInverse(b.projectionMatrix));\n            return this.applyProjection(a1);\n        };\n    }(),\n    transformDirection: function(a1) {\n        var b = this.x, c = this.y, d = this.z;\n        a1 = a1.elements;\n        this.x = a1[0] * b + a1[4] * c + a1[8] * d;\n        this.y = a1[1] * b + a1[5] * c + a1[9] * d;\n        this.z = a1[2] * b + a1[6] * c + a1[10] * d;\n        this.normalize();\n        return this;\n    },\n    divide: function(a1) {\n        this.x /= a1.x;\n        this.y /= a1.y;\n        this.z /= a1.z;\n        return this;\n    },\n    divideScalar: function(a1) {\n        0 !== a1 ? (a1 = 1 / a1, this.x *= a1, this.y *= a1, this.z *= a1) : this.z = this.y = this.x = 0;\n        return this;\n    },\n    min: function(a1) {\n        this.x > a1.x && (this.x = a1.x);\n        this.y > a1.y && (this.y = a1.y);\n        this.z > a1.z && (this.z = a1.z);\n        return this;\n    },\n    max: function(a1) {\n        this.x < a1.x && (this.x = a1.x);\n        this.y < a1.y && (this.y = a1.y);\n        this.z < a1.z && (this.z = a1.z);\n        return this;\n    },\n    clamp: function(a1, b) {\n        this.x < a1.x ? this.x = a1.x : this.x > b.x && (this.x = b.x);\n        this.y < a1.y ? this.y = a1.y : this.y > b.y && (this.y = b.y);\n        this.z < a1.z ? this.z = a1.z : this.z > b.z && (this.z = b.z);\n        return this;\n    },\n    clampScalar: function() {\n        var a1, b;\n        return function(c, d) {\n            void 0 === a1 && (a1 = new THREE.Vector3, b = new THREE.Vector3);\n            a1.set(c, c, c);\n            b.set(d, d, d);\n            return this.clamp(a1, b);\n        };\n    }(),\n    floor: function() {\n        this.x = Math.floor(this.x);\n        this.y = Math.floor(this.y);\n        this.z = Math.floor(this.z);\n        return this;\n    },\n    ceil: function() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        this.z = Math.ceil(this.z);\n        return this;\n    },\n    round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        this.z = Math.round(this.z);\n        return this;\n    },\n    roundToZero: function() {\n        this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x);\n        this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y);\n        this.z = 0 > this.z ? Math.ceil(this.z) : Math.floor(this.z);\n        return this;\n    },\n    negate: function() {\n        this.x = -this.x;\n        this.y = -this.y;\n        this.z = -this.z;\n        return this;\n    },\n    dot: function(a1) {\n        return this.x * a1.x + this.y * a1.y + this.z * a1.z;\n    },\n    lengthSq: function() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    },\n    length: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    },\n    lengthManhattan: function() {\n        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n    },\n    normalize: function() {\n        return this.divideScalar(this.length());\n    },\n    setLength: function(a1) {\n        var b = this.length();\n        0 !== b && a1 !== b && this.multiplyScalar(a1 / b);\n        return this;\n    },\n    lerp: function(a1, b) {\n        this.x += (a1.x - this.x) * b;\n        this.y += (a1.y - this.y) * b;\n        this.z += (a1.z - this.z) * b;\n        return this;\n    },\n    lerpVectors: function(a1, b, c) {\n        this.subVectors(b, a1).multiplyScalar(c).add(a1);\n        return this;\n    },\n    cross: function(a1, b) {\n        if (void 0 !== b) return console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"), this.crossVectors(a1, b);\n        var c = this.x, d = this.y, e = this.z;\n        this.x = d * a1.z - e * a1.y;\n        this.y = e * a1.x - c * a1.z;\n        this.z = c * a1.y - d * a1.x;\n        return this;\n    },\n    crossVectors: function(a1, b) {\n        var c = a1.x, d = a1.y, e = a1.z, g = b.x, f = b.y, h = b.z;\n        this.x = d * h - e * f;\n        this.y = e * g - c * h;\n        this.z = c * f - d * g;\n        return this;\n    },\n    projectOnVector: function() {\n        var a1, b;\n        return function(c) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            a1.copy(c).normalize();\n            b = this.dot(a1);\n            return this.copy(a1).multiplyScalar(b);\n        };\n    }(),\n    projectOnPlane: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            a1.copy(this).projectOnVector(b);\n            return this.sub(a1);\n        };\n    }(),\n    reflect: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            return this.sub(a1.copy(b).multiplyScalar(2 * this.dot(b)));\n        };\n    }(),\n    angleTo: function(a1) {\n        a1 = this.dot(a1) / (this.length() * a1.length());\n        return Math.acos(THREE.Math.clamp(a1, -1, 1));\n    },\n    distanceTo: function(a1) {\n        return Math.sqrt(this.distanceToSquared(a1));\n    },\n    distanceToSquared: function(a1) {\n        var b = this.x - a1.x, c = this.y - a1.y;\n        a1 = this.z - a1.z;\n        return b * b + c * c + a1 * a1;\n    },\n    setEulerFromRotationMatrix: function(a1, b) {\n        console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\");\n    },\n    setEulerFromQuaternion: function(a1, b) {\n        console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\");\n    },\n    getPositionFromMatrix: function(a1) {\n        console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\");\n        return this.setFromMatrixPosition(a1);\n    },\n    getScaleFromMatrix: function(a1) {\n        console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\");\n        return this.setFromMatrixScale(a1);\n    },\n    getColumnFromMatrix: function(a1, b) {\n        console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\");\n        return this.setFromMatrixColumn(a1, b);\n    },\n    setFromMatrixPosition: function(a1) {\n        this.x = a1.elements[12];\n        this.y = a1.elements[13];\n        this.z = a1.elements[14];\n        return this;\n    },\n    setFromMatrixScale: function(a1) {\n        var b = this.set(a1.elements[0], a1.elements[1], a1.elements[2]).length(), c = this.set(a1.elements[4], a1.elements[5], a1.elements[6]).length();\n        a1 = this.set(a1.elements[8], a1.elements[9], a1.elements[10]).length();\n        this.x = b;\n        this.y = c;\n        this.z = a1;\n        return this;\n    },\n    setFromMatrixColumn: function(a1, b) {\n        var c = 4 * a1, d = b.elements;\n        this.x = d[c];\n        this.y = d[c + 1];\n        this.z = d[c + 2];\n        return this;\n    },\n    equals: function(a1) {\n        return a1.x === this.x && a1.y === this.y && a1.z === this.z;\n    },\n    fromArray: function(a1, b) {\n        void 0 === b && (b = 0);\n        this.x = a1[b];\n        this.y = a1[b + 1];\n        this.z = a1[b + 2];\n        return this;\n    },\n    toArray: function(a1, b) {\n        void 0 === a1 && (a1 = []);\n        void 0 === b && (b = 0);\n        a1[b] = this.x;\n        a1[b + 1] = this.y;\n        a1[b + 2] = this.z;\n        return a1;\n    },\n    fromAttribute: function(a1, b, c) {\n        void 0 === c && (c = 0);\n        b = b * a1.itemSize + c;\n        this.x = a1.array[b];\n        this.y = a1.array[b + 1];\n        this.z = a1.array[b + 2];\n        return this;\n    }\n};\nTHREE.Vector4 = function(a1, b, c, d) {\n    this.x = a1 || 0;\n    this.y = b || 0;\n    this.z = c || 0;\n    this.w = void 0 !== d ? d : 1;\n};\nTHREE.Vector4.prototype = {\n    constructor: THREE.Vector4,\n    set: function(a1, b, c, d) {\n        this.x = a1;\n        this.y = b;\n        this.z = c;\n        this.w = d;\n        return this;\n    },\n    setX: function(a1) {\n        this.x = a1;\n        return this;\n    },\n    setY: function(a1) {\n        this.y = a1;\n        return this;\n    },\n    setZ: function(a1) {\n        this.z = a1;\n        return this;\n    },\n    setW: function(a1) {\n        this.w = a1;\n        return this;\n    },\n    setComponent: function(a1, b) {\n        switch(a1){\n            case 0:\n                this.x = b;\n                break;\n            case 1:\n                this.y = b;\n                break;\n            case 2:\n                this.z = b;\n                break;\n            case 3:\n                this.w = b;\n                break;\n            default:\n                throw Error(\"index is out of range: \" + a1);\n        }\n    },\n    getComponent: function(a1) {\n        switch(a1){\n            case 0:\n                return this.x;\n            case 1:\n                return this.y;\n            case 2:\n                return this.z;\n            case 3:\n                return this.w;\n            default:\n                throw Error(\"index is out of range: \" + a1);\n        }\n    },\n    clone: function() {\n        return new this.constructor(this.x, this.y, this.z, this.w);\n    },\n    copy: function(a1) {\n        this.x = a1.x;\n        this.y = a1.y;\n        this.z = a1.z;\n        this.w = void 0 !== a1.w ? a1.w : 1;\n        return this;\n    },\n    add: function(a1, b) {\n        if (void 0 !== b) return console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(a1, b);\n        this.x += a1.x;\n        this.y += a1.y;\n        this.z += a1.z;\n        this.w += a1.w;\n        return this;\n    },\n    addScalar: function(a1) {\n        this.x += a1;\n        this.y += a1;\n        this.z += a1;\n        this.w += a1;\n        return this;\n    },\n    addVectors: function(a1, b) {\n        this.x = a1.x + b.x;\n        this.y = a1.y + b.y;\n        this.z = a1.z + b.z;\n        this.w = a1.w + b.w;\n        return this;\n    },\n    addScaledVector: function(a1, b) {\n        this.x += a1.x * b;\n        this.y += a1.y * b;\n        this.z += a1.z * b;\n        this.w += a1.w * b;\n        return this;\n    },\n    sub: function(a1, b) {\n        if (void 0 !== b) return console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(a1, b);\n        this.x -= a1.x;\n        this.y -= a1.y;\n        this.z -= a1.z;\n        this.w -= a1.w;\n        return this;\n    },\n    subScalar: function(a1) {\n        this.x -= a1;\n        this.y -= a1;\n        this.z -= a1;\n        this.w -= a1;\n        return this;\n    },\n    subVectors: function(a1, b) {\n        this.x = a1.x - b.x;\n        this.y = a1.y - b.y;\n        this.z = a1.z - b.z;\n        this.w = a1.w - b.w;\n        return this;\n    },\n    multiplyScalar: function(a1) {\n        this.x *= a1;\n        this.y *= a1;\n        this.z *= a1;\n        this.w *= a1;\n        return this;\n    },\n    applyMatrix4: function(a1) {\n        var b = this.x, c = this.y, d = this.z, e = this.w;\n        a1 = a1.elements;\n        this.x = a1[0] * b + a1[4] * c + a1[8] * d + a1[12] * e;\n        this.y = a1[1] * b + a1[5] * c + a1[9] * d + a1[13] * e;\n        this.z = a1[2] * b + a1[6] * c + a1[10] * d + a1[14] * e;\n        this.w = a1[3] * b + a1[7] * c + a1[11] * d + a1[15] * e;\n        return this;\n    },\n    divideScalar: function(a1) {\n        0 !== a1 ? (a1 = 1 / a1, this.x *= a1, this.y *= a1, this.z *= a1, this.w *= a1) : (this.z = this.y = this.x = 0, this.w = 1);\n        return this;\n    },\n    setAxisAngleFromQuaternion: function(a1) {\n        this.w = 2 * Math.acos(a1.w);\n        var b = Math.sqrt(1 - a1.w * a1.w);\n        1E-4 > b ? (this.x = 1, this.z = this.y = 0) : (this.x = a1.x / b, this.y = a1.y / b, this.z = a1.z / b);\n        return this;\n    },\n    setAxisAngleFromRotationMatrix: function(a1) {\n        var b, c, d;\n        a1 = a1.elements;\n        var e = a1[0];\n        d = a1[4];\n        var g = a1[8], f = a1[1], h = a1[5], k = a1[9];\n        c = a1[2];\n        b = a1[6];\n        var l = a1[10];\n        if (.01 > Math.abs(d - f) && .01 > Math.abs(g - c) && .01 > Math.abs(k - b)) {\n            if (.1 > Math.abs(d + f) && .1 > Math.abs(g + c) && .1 > Math.abs(k + b) && .1 > Math.abs(e + h + l - 3)) return this.set(1, 0, 0, 0), this;\n            a1 = Math.PI;\n            e = (e + 1) / 2;\n            h = (h + 1) / 2;\n            l = (l + 1) / 2;\n            d = (d + f) / 4;\n            g = (g + c) / 4;\n            k = (k + b) / 4;\n            e > h && e > l ? .01 > e ? (b = 0, d = c = .707106781) : (b = Math.sqrt(e), c = d / b, d = g / b) : h > l ? .01 > h ? (b = .707106781, c = 0, d = .707106781) : (c = Math.sqrt(h), b = d / c, d = k / c) : .01 > l ? (c = b = .707106781, d = 0) : (d = Math.sqrt(l), b = g / d, c = k / d);\n            this.set(b, c, d, a1);\n            return this;\n        }\n        a1 = Math.sqrt((b - k) * (b - k) + (g - c) * (g - c) + (f - d) * (f - d));\n        .001 > Math.abs(a1) && (a1 = 1);\n        this.x = (b - k) / a1;\n        this.y = (g - c) / a1;\n        this.z = (f - d) / a1;\n        this.w = Math.acos((e + h + l - 1) / 2);\n        return this;\n    },\n    min: function(a1) {\n        this.x > a1.x && (this.x = a1.x);\n        this.y > a1.y && (this.y = a1.y);\n        this.z > a1.z && (this.z = a1.z);\n        this.w > a1.w && (this.w = a1.w);\n        return this;\n    },\n    max: function(a1) {\n        this.x < a1.x && (this.x = a1.x);\n        this.y < a1.y && (this.y = a1.y);\n        this.z < a1.z && (this.z = a1.z);\n        this.w < a1.w && (this.w = a1.w);\n        return this;\n    },\n    clamp: function(a1, b) {\n        this.x < a1.x ? this.x = a1.x : this.x > b.x && (this.x = b.x);\n        this.y < a1.y ? this.y = a1.y : this.y > b.y && (this.y = b.y);\n        this.z < a1.z ? this.z = a1.z : this.z > b.z && (this.z = b.z);\n        this.w < a1.w ? this.w = a1.w : this.w > b.w && (this.w = b.w);\n        return this;\n    },\n    clampScalar: function() {\n        var a1, b;\n        return function(c, d) {\n            void 0 === a1 && (a1 = new THREE.Vector4, b = new THREE.Vector4);\n            a1.set(c, c, c, c);\n            b.set(d, d, d, d);\n            return this.clamp(a1, b);\n        };\n    }(),\n    floor: function() {\n        this.x = Math.floor(this.x);\n        this.y = Math.floor(this.y);\n        this.z = Math.floor(this.z);\n        this.w = Math.floor(this.w);\n        return this;\n    },\n    ceil: function() {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        this.z = Math.ceil(this.z);\n        this.w = Math.ceil(this.w);\n        return this;\n    },\n    round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        this.z = Math.round(this.z);\n        this.w = Math.round(this.w);\n        return this;\n    },\n    roundToZero: function() {\n        this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x);\n        this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y);\n        this.z = 0 > this.z ? Math.ceil(this.z) : Math.floor(this.z);\n        this.w = 0 > this.w ? Math.ceil(this.w) : Math.floor(this.w);\n        return this;\n    },\n    negate: function() {\n        this.x = -this.x;\n        this.y = -this.y;\n        this.z = -this.z;\n        this.w = -this.w;\n        return this;\n    },\n    dot: function(a1) {\n        return this.x * a1.x + this.y * a1.y + this.z * a1.z + this.w * a1.w;\n    },\n    lengthSq: function() {\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n    },\n    length: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    },\n    lengthManhattan: function() {\n        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n    },\n    normalize: function() {\n        return this.divideScalar(this.length());\n    },\n    setLength: function(a1) {\n        var b = this.length();\n        0 !== b && a1 !== b && this.multiplyScalar(a1 / b);\n        return this;\n    },\n    lerp: function(a1, b) {\n        this.x += (a1.x - this.x) * b;\n        this.y += (a1.y - this.y) * b;\n        this.z += (a1.z - this.z) * b;\n        this.w += (a1.w - this.w) * b;\n        return this;\n    },\n    lerpVectors: function(a1, b, c) {\n        this.subVectors(b, a1).multiplyScalar(c).add(a1);\n        return this;\n    },\n    equals: function(a1) {\n        return a1.x === this.x && a1.y === this.y && a1.z === this.z && a1.w === this.w;\n    },\n    fromArray: function(a1, b) {\n        void 0 === b && (b = 0);\n        this.x = a1[b];\n        this.y = a1[b + 1];\n        this.z = a1[b + 2];\n        this.w = a1[b + 3];\n        return this;\n    },\n    toArray: function(a1, b) {\n        void 0 === a1 && (a1 = []);\n        void 0 === b && (b = 0);\n        a1[b] = this.x;\n        a1[b + 1] = this.y;\n        a1[b + 2] = this.z;\n        a1[b + 3] = this.w;\n        return a1;\n    },\n    fromAttribute: function(a1, b, c) {\n        void 0 === c && (c = 0);\n        b = b * a1.itemSize + c;\n        this.x = a1.array[b];\n        this.y = a1.array[b + 1];\n        this.z = a1.array[b + 2];\n        this.w = a1.array[b + 3];\n        return this;\n    }\n};\nTHREE.Euler = function(a1, b, c, d) {\n    this._x = a1 || 0;\n    this._y = b || 0;\n    this._z = c || 0;\n    this._order = d || THREE.Euler.DefaultOrder;\n};\nTHREE.Euler.RotationOrders = \"XYZ YZX ZXY XZY YXZ ZYX\".split(\" \");\nTHREE.Euler.DefaultOrder = \"XYZ\";\nTHREE.Euler.prototype = {\n    constructor: THREE.Euler,\n    get x () {\n        return this._x;\n    },\n    set x (a){\n        this._x = a;\n        this.onChangeCallback();\n    },\n    get y () {\n        return this._y;\n    },\n    set y (a){\n        this._y = a;\n        this.onChangeCallback();\n    },\n    get z () {\n        return this._z;\n    },\n    set z (a){\n        this._z = a;\n        this.onChangeCallback();\n    },\n    get order () {\n        return this._order;\n    },\n    set order (a){\n        this._order = a;\n        this.onChangeCallback();\n    },\n    set: function(a1, b, c, d) {\n        this._x = a1;\n        this._y = b;\n        this._z = c;\n        this._order = d || this._order;\n        this.onChangeCallback();\n        return this;\n    },\n    clone: function() {\n        return new this.constructor(this._x, this._y, this._z, this._order);\n    },\n    copy: function(a1) {\n        this._x = a1._x;\n        this._y = a1._y;\n        this._z = a1._z;\n        this._order = a1._order;\n        this.onChangeCallback();\n        return this;\n    },\n    setFromRotationMatrix: function(a1, b, c) {\n        var d = THREE.Math.clamp, e = a1.elements;\n        a1 = e[0];\n        var g = e[4], f = e[8], h = e[1], k = e[5], l = e[9], n = e[2], p = e[6], e = e[10];\n        b = b || this._order;\n        \"XYZ\" === b ? (this._y = Math.asin(d(f, -1, 1)), .99999 > Math.abs(f) ? (this._x = Math.atan2(-l, e), this._z = Math.atan2(-g, a1)) : (this._x = Math.atan2(p, k), this._z = 0)) : \"YXZ\" === b ? (this._x = Math.asin(-d(l, -1, 1)), .99999 > Math.abs(l) ? (this._y = Math.atan2(f, e), this._z = Math.atan2(h, k)) : (this._y = Math.atan2(-n, a1), this._z = 0)) : \"ZXY\" === b ? (this._x = Math.asin(d(p, -1, 1)), .99999 > Math.abs(p) ? (this._y = Math.atan2(-n, e), this._z = Math.atan2(-g, k)) : (this._y = 0, this._z = Math.atan2(h, a1))) : \"ZYX\" === b ? (this._y = Math.asin(-d(n, -1, 1)), .99999 > Math.abs(n) ? (this._x = Math.atan2(p, e), this._z = Math.atan2(h, a1)) : (this._x = 0, this._z = Math.atan2(-g, k))) : \"YZX\" === b ? (this._z = Math.asin(d(h, -1, 1)), .99999 > Math.abs(h) ? (this._x = Math.atan2(-l, k), this._y = Math.atan2(-n, a1)) : (this._x = 0, this._y = Math.atan2(f, e))) : \"XZY\" === b ? (this._z = Math.asin(-d(g, -1, 1)), .99999 > Math.abs(g) ? (this._x = Math.atan2(p, k), this._y = Math.atan2(f, a1)) : (this._x = Math.atan2(-l, e), this._y = 0)) : console.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \" + b);\n        this._order = b;\n        if (!1 !== c) this.onChangeCallback();\n        return this;\n    },\n    setFromQuaternion: function() {\n        var a1;\n        return function(b, c, d) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeRotationFromQuaternion(b);\n            this.setFromRotationMatrix(a1, c, d);\n            return this;\n        };\n    }(),\n    setFromVector3: function(a1, b) {\n        return this.set(a1.x, a1.y, a1.z, b || this._order);\n    },\n    reorder: function() {\n        var a1 = new THREE.Quaternion;\n        return function(b) {\n            a1.setFromEuler(this);\n            this.setFromQuaternion(a1, b);\n        };\n    }(),\n    equals: function(a1) {\n        return a1._x === this._x && a1._y === this._y && a1._z === this._z && a1._order === this._order;\n    },\n    fromArray: function(a1) {\n        this._x = a1[0];\n        this._y = a1[1];\n        this._z = a1[2];\n        void 0 !== a1[3] && (this._order = a1[3]);\n        this.onChangeCallback();\n        return this;\n    },\n    toArray: function(a1, b) {\n        void 0 === a1 && (a1 = []);\n        void 0 === b && (b = 0);\n        a1[b] = this._x;\n        a1[b + 1] = this._y;\n        a1[b + 2] = this._z;\n        a1[b + 3] = this._order;\n        return a1;\n    },\n    toVector3: function(a1) {\n        return a1 ? a1.set(this._x, this._y, this._z) : new THREE.Vector3(this._x, this._y, this._z);\n    },\n    onChange: function(a1) {\n        this.onChangeCallback = a1;\n        return this;\n    },\n    onChangeCallback: function() {}\n};\nTHREE.Line3 = function(a1, b) {\n    this.start = void 0 !== a1 ? a1 : new THREE.Vector3;\n    this.end = void 0 !== b ? b : new THREE.Vector3;\n};\nTHREE.Line3.prototype = {\n    constructor: THREE.Line3,\n    set: function(a1, b) {\n        this.start.copy(a1);\n        this.end.copy(b);\n        return this;\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.start.copy(a1.start);\n        this.end.copy(a1.end);\n        return this;\n    },\n    center: function(a1) {\n        return (a1 || new THREE.Vector3).addVectors(this.start, this.end).multiplyScalar(.5);\n    },\n    delta: function(a1) {\n        return (a1 || new THREE.Vector3).subVectors(this.end, this.start);\n    },\n    distanceSq: function() {\n        return this.start.distanceToSquared(this.end);\n    },\n    distance: function() {\n        return this.start.distanceTo(this.end);\n    },\n    at: function(a1, b) {\n        var c = b || new THREE.Vector3;\n        return this.delta(c).multiplyScalar(a1).add(this.start);\n    },\n    closestPointToPointParameter: function() {\n        var a1 = new THREE.Vector3, b = new THREE.Vector3;\n        return function(c, d) {\n            a1.subVectors(c, this.start);\n            b.subVectors(this.end, this.start);\n            var e = b.dot(b), e = b.dot(a1) / e;\n            d && (e = THREE.Math.clamp(e, 0, 1));\n            return e;\n        };\n    }(),\n    closestPointToPoint: function(a1, b, c) {\n        a1 = this.closestPointToPointParameter(a1, b);\n        c = c || new THREE.Vector3;\n        return this.delta(c).multiplyScalar(a1).add(this.start);\n    },\n    applyMatrix4: function(a1) {\n        this.start.applyMatrix4(a1);\n        this.end.applyMatrix4(a1);\n        return this;\n    },\n    equals: function(a1) {\n        return a1.start.equals(this.start) && a1.end.equals(this.end);\n    }\n};\nTHREE.Box2 = function(a1, b) {\n    this.min = void 0 !== a1 ? a1 : new THREE.Vector2(Infinity, Infinity);\n    this.max = void 0 !== b ? b : new THREE.Vector2(-Infinity, -Infinity);\n};\nTHREE.Box2.prototype = {\n    constructor: THREE.Box2,\n    set: function(a1, b) {\n        this.min.copy(a1);\n        this.max.copy(b);\n        return this;\n    },\n    setFromPoints: function(a1) {\n        this.makeEmpty();\n        for(var b = 0, c = a1.length; b < c; b++)this.expandByPoint(a1[b]);\n        return this;\n    },\n    setFromCenterAndSize: function() {\n        var a1 = new THREE.Vector2;\n        return function(b, c) {\n            var d = a1.copy(c).multiplyScalar(.5);\n            this.min.copy(b).sub(d);\n            this.max.copy(b).add(d);\n            return this;\n        };\n    }(),\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.min.copy(a1.min);\n        this.max.copy(a1.max);\n        return this;\n    },\n    makeEmpty: function() {\n        this.min.x = this.min.y = Infinity;\n        this.max.x = this.max.y = -Infinity;\n        return this;\n    },\n    empty: function() {\n        return this.max.x < this.min.x || this.max.y < this.min.y;\n    },\n    center: function(a1) {\n        return (a1 || new THREE.Vector2).addVectors(this.min, this.max).multiplyScalar(.5);\n    },\n    size: function(a1) {\n        return (a1 || new THREE.Vector2).subVectors(this.max, this.min);\n    },\n    expandByPoint: function(a1) {\n        this.min.min(a1);\n        this.max.max(a1);\n        return this;\n    },\n    expandByVector: function(a1) {\n        this.min.sub(a1);\n        this.max.add(a1);\n        return this;\n    },\n    expandByScalar: function(a1) {\n        this.min.addScalar(-a1);\n        this.max.addScalar(a1);\n        return this;\n    },\n    containsPoint: function(a1) {\n        return a1.x < this.min.x || a1.x > this.max.x || a1.y < this.min.y || a1.y > this.max.y ? !1 : !0;\n    },\n    containsBox: function(a1) {\n        return this.min.x <= a1.min.x && a1.max.x <= this.max.x && this.min.y <= a1.min.y && a1.max.y <= this.max.y ? !0 : !1;\n    },\n    getParameter: function(a1, b) {\n        return (b || new THREE.Vector2).set((a1.x - this.min.x) / (this.max.x - this.min.x), (a1.y - this.min.y) / (this.max.y - this.min.y));\n    },\n    isIntersectionBox: function(a1) {\n        return a1.max.x < this.min.x || a1.min.x > this.max.x || a1.max.y < this.min.y || a1.min.y > this.max.y ? !1 : !0;\n    },\n    clampPoint: function(a1, b) {\n        return (b || new THREE.Vector2).copy(a1).clamp(this.min, this.max);\n    },\n    distanceToPoint: function() {\n        var a1 = new THREE.Vector2;\n        return function(b) {\n            return a1.copy(b).clamp(this.min, this.max).sub(b).length();\n        };\n    }(),\n    intersect: function(a1) {\n        this.min.max(a1.min);\n        this.max.min(a1.max);\n        return this;\n    },\n    union: function(a1) {\n        this.min.min(a1.min);\n        this.max.max(a1.max);\n        return this;\n    },\n    translate: function(a1) {\n        this.min.add(a1);\n        this.max.add(a1);\n        return this;\n    },\n    equals: function(a1) {\n        return a1.min.equals(this.min) && a1.max.equals(this.max);\n    }\n};\nTHREE.Box3 = function(a1, b) {\n    this.min = void 0 !== a1 ? a1 : new THREE.Vector3(Infinity, Infinity, Infinity);\n    this.max = void 0 !== b ? b : new THREE.Vector3(-Infinity, -Infinity, -Infinity);\n};\nTHREE.Box3.prototype = {\n    constructor: THREE.Box3,\n    set: function(a1, b) {\n        this.min.copy(a1);\n        this.max.copy(b);\n        return this;\n    },\n    setFromPoints: function(a1) {\n        this.makeEmpty();\n        for(var b = 0, c = a1.length; b < c; b++)this.expandByPoint(a1[b]);\n        return this;\n    },\n    setFromCenterAndSize: function() {\n        var a1 = new THREE.Vector3;\n        return function(b, c) {\n            var d = a1.copy(c).multiplyScalar(.5);\n            this.min.copy(b).sub(d);\n            this.max.copy(b).add(d);\n            return this;\n        };\n    }(),\n    setFromObject: function() {\n        var a1 = new THREE.Vector3;\n        return function(b) {\n            var c = this;\n            b.updateMatrixWorld(!0);\n            this.makeEmpty();\n            b.traverse(function(b) {\n                var e = b.geometry;\n                if (void 0 !== e) {\n                    if (e instanceof THREE.Geometry) for(var g = e.vertices, e = 0, f = g.length; e < f; e++)a1.copy(g[e]), a1.applyMatrix4(b.matrixWorld), c.expandByPoint(a1);\n                    else if (e instanceof THREE.BufferGeometry && void 0 !== e.attributes.position) for(g = e.attributes.position.array, e = 0, f = g.length; e < f; e += 3)a1.set(g[e], g[e + 1], g[e + 2]), a1.applyMatrix4(b.matrixWorld), c.expandByPoint(a1);\n                }\n            });\n            return this;\n        };\n    }(),\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.min.copy(a1.min);\n        this.max.copy(a1.max);\n        return this;\n    },\n    makeEmpty: function() {\n        this.min.x = this.min.y = this.min.z = Infinity;\n        this.max.x = this.max.y = this.max.z = -Infinity;\n        return this;\n    },\n    empty: function() {\n        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n    },\n    center: function(a1) {\n        return (a1 || new THREE.Vector3).addVectors(this.min, this.max).multiplyScalar(.5);\n    },\n    size: function(a1) {\n        return (a1 || new THREE.Vector3).subVectors(this.max, this.min);\n    },\n    expandByPoint: function(a1) {\n        this.min.min(a1);\n        this.max.max(a1);\n        return this;\n    },\n    expandByVector: function(a1) {\n        this.min.sub(a1);\n        this.max.add(a1);\n        return this;\n    },\n    expandByScalar: function(a1) {\n        this.min.addScalar(-a1);\n        this.max.addScalar(a1);\n        return this;\n    },\n    containsPoint: function(a1) {\n        return a1.x < this.min.x || a1.x > this.max.x || a1.y < this.min.y || a1.y > this.max.y || a1.z < this.min.z || a1.z > this.max.z ? !1 : !0;\n    },\n    containsBox: function(a1) {\n        return this.min.x <= a1.min.x && a1.max.x <= this.max.x && this.min.y <= a1.min.y && a1.max.y <= this.max.y && this.min.z <= a1.min.z && a1.max.z <= this.max.z ? !0 : !1;\n    },\n    getParameter: function(a1, b) {\n        return (b || new THREE.Vector3).set((a1.x - this.min.x) / (this.max.x - this.min.x), (a1.y - this.min.y) / (this.max.y - this.min.y), (a1.z - this.min.z) / (this.max.z - this.min.z));\n    },\n    isIntersectionBox: function(a1) {\n        return a1.max.x < this.min.x || a1.min.x > this.max.x || a1.max.y < this.min.y || a1.min.y > this.max.y || a1.max.z < this.min.z || a1.min.z > this.max.z ? !1 : !0;\n    },\n    clampPoint: function(a1, b) {\n        return (b || new THREE.Vector3).copy(a1).clamp(this.min, this.max);\n    },\n    distanceToPoint: function() {\n        var a1 = new THREE.Vector3;\n        return function(b) {\n            return a1.copy(b).clamp(this.min, this.max).sub(b).length();\n        };\n    }(),\n    getBoundingSphere: function() {\n        var a1 = new THREE.Vector3;\n        return function(b) {\n            b = b || new THREE.Sphere;\n            b.center = this.center();\n            b.radius = .5 * this.size(a1).length();\n            return b;\n        };\n    }(),\n    intersect: function(a1) {\n        this.min.max(a1.min);\n        this.max.min(a1.max);\n        return this;\n    },\n    union: function(a1) {\n        this.min.min(a1.min);\n        this.max.max(a1.max);\n        return this;\n    },\n    applyMatrix4: function() {\n        var a1 = [\n            new THREE.Vector3,\n            new THREE.Vector3,\n            new THREE.Vector3,\n            new THREE.Vector3,\n            new THREE.Vector3,\n            new THREE.Vector3,\n            new THREE.Vector3,\n            new THREE.Vector3\n        ];\n        return function(b) {\n            a1[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(b);\n            a1[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(b);\n            a1[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(b);\n            a1[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(b);\n            a1[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(b);\n            a1[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(b);\n            a1[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(b);\n            a1[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(b);\n            this.makeEmpty();\n            this.setFromPoints(a1);\n            return this;\n        };\n    }(),\n    translate: function(a1) {\n        this.min.add(a1);\n        this.max.add(a1);\n        return this;\n    },\n    equals: function(a1) {\n        return a1.min.equals(this.min) && a1.max.equals(this.max);\n    }\n};\nTHREE.Matrix3 = function() {\n    this.elements = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        1\n    ]);\n    0 < arguments.length && console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\");\n};\nTHREE.Matrix3.prototype = {\n    constructor: THREE.Matrix3,\n    set: function(a1, b, c, d, e, g, f, h, k) {\n        var l = this.elements;\n        l[0] = a1;\n        l[3] = b;\n        l[6] = c;\n        l[1] = d;\n        l[4] = e;\n        l[7] = g;\n        l[2] = f;\n        l[5] = h;\n        l[8] = k;\n        return this;\n    },\n    identity: function() {\n        this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n        return this;\n    },\n    clone: function() {\n        return (new this.constructor).fromArray(this.elements);\n    },\n    copy: function(a1) {\n        a1 = a1.elements;\n        this.set(a1[0], a1[3], a1[6], a1[1], a1[4], a1[7], a1[2], a1[5], a1[8]);\n        return this;\n    },\n    multiplyVector3: function(a1) {\n        console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\");\n        return a1.applyMatrix3(this);\n    },\n    multiplyVector3Array: function(a1) {\n        console.warn(\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");\n        return this.applyToVector3Array(a1);\n    },\n    applyToVector3Array: function() {\n        var a1;\n        return function(b, c, d) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            void 0 === c && (c = 0);\n            void 0 === d && (d = b.length);\n            for(var e = 0; e < d; e += 3, c += 3)a1.fromArray(b, c), a1.applyMatrix3(this), a1.toArray(b, c);\n            return b;\n        };\n    }(),\n    applyToBuffer: function() {\n        var a1;\n        return function(b, c, d) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            void 0 === c && (c = 0);\n            void 0 === d && (d = b.length / b.itemSize);\n            for(var e = 0; e < d; e++, c++)a1.x = b.getX(c), a1.y = b.getY(c), a1.z = b.getZ(c), a1.applyMatrix3(this), b.setXYZ(a1.x, a1.y, a1.z);\n            return b;\n        };\n    }(),\n    multiplyScalar: function(a1) {\n        var b = this.elements;\n        b[0] *= a1;\n        b[3] *= a1;\n        b[6] *= a1;\n        b[1] *= a1;\n        b[4] *= a1;\n        b[7] *= a1;\n        b[2] *= a1;\n        b[5] *= a1;\n        b[8] *= a1;\n        return this;\n    },\n    determinant: function() {\n        var a1 = this.elements, b = a1[0], c = a1[1], d = a1[2], e = a1[3], g = a1[4], f = a1[5], h = a1[6], k = a1[7], a1 = a1[8];\n        return b * g * a1 - b * f * k - c * e * a1 + c * f * h + d * e * k - d * g * h;\n    },\n    getInverse: function(a1, b) {\n        var c = a1.elements, d = this.elements;\n        d[0] = c[10] * c[5] - c[6] * c[9];\n        d[1] = -c[10] * c[1] + c[2] * c[9];\n        d[2] = c[6] * c[1] - c[2] * c[5];\n        d[3] = -c[10] * c[4] + c[6] * c[8];\n        d[4] = c[10] * c[0] - c[2] * c[8];\n        d[5] = -c[6] * c[0] + c[2] * c[4];\n        d[6] = c[9] * c[4] - c[5] * c[8];\n        d[7] = -c[9] * c[0] + c[1] * c[8];\n        d[8] = c[5] * c[0] - c[1] * c[4];\n        c = c[0] * d[0] + c[1] * d[3] + c[2] * d[6];\n        if (0 === c) {\n            if (b) throw Error(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\");\n            console.warn(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\");\n            this.identity();\n            return this;\n        }\n        this.multiplyScalar(1 / c);\n        return this;\n    },\n    transpose: function() {\n        var a1, b = this.elements;\n        a1 = b[1];\n        b[1] = b[3];\n        b[3] = a1;\n        a1 = b[2];\n        b[2] = b[6];\n        b[6] = a1;\n        a1 = b[5];\n        b[5] = b[7];\n        b[7] = a1;\n        return this;\n    },\n    flattenToArrayOffset: function(a1, b) {\n        var c = this.elements;\n        a1[b] = c[0];\n        a1[b + 1] = c[1];\n        a1[b + 2] = c[2];\n        a1[b + 3] = c[3];\n        a1[b + 4] = c[4];\n        a1[b + 5] = c[5];\n        a1[b + 6] = c[6];\n        a1[b + 7] = c[7];\n        a1[b + 8] = c[8];\n        return a1;\n    },\n    getNormalMatrix: function(a1) {\n        this.getInverse(a1).transpose();\n        return this;\n    },\n    transposeIntoArray: function(a1) {\n        var b = this.elements;\n        a1[0] = b[0];\n        a1[1] = b[3];\n        a1[2] = b[6];\n        a1[3] = b[1];\n        a1[4] = b[4];\n        a1[5] = b[7];\n        a1[6] = b[2];\n        a1[7] = b[5];\n        a1[8] = b[8];\n        return this;\n    },\n    fromArray: function(a1) {\n        this.elements.set(a1);\n        return this;\n    },\n    toArray: function() {\n        var a1 = this.elements;\n        return [\n            a1[0],\n            a1[1],\n            a1[2],\n            a1[3],\n            a1[4],\n            a1[5],\n            a1[6],\n            a1[7],\n            a1[8]\n        ];\n    }\n};\nTHREE.Matrix4 = function() {\n    this.elements = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n    ]);\n    0 < arguments.length && console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\");\n};\nTHREE.Matrix4.prototype = {\n    constructor: THREE.Matrix4,\n    set: function(a1, b, c, d, e, g, f, h, k, l, n, p, m, q, t, r) {\n        var u = this.elements;\n        u[0] = a1;\n        u[4] = b;\n        u[8] = c;\n        u[12] = d;\n        u[1] = e;\n        u[5] = g;\n        u[9] = f;\n        u[13] = h;\n        u[2] = k;\n        u[6] = l;\n        u[10] = n;\n        u[14] = p;\n        u[3] = m;\n        u[7] = q;\n        u[11] = t;\n        u[15] = r;\n        return this;\n    },\n    identity: function() {\n        this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n        return this;\n    },\n    clone: function() {\n        return (new THREE.Matrix4).fromArray(this.elements);\n    },\n    copy: function(a1) {\n        this.elements.set(a1.elements);\n        return this;\n    },\n    extractPosition: function(a1) {\n        console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\");\n        return this.copyPosition(a1);\n    },\n    copyPosition: function(a1) {\n        var b = this.elements;\n        a1 = a1.elements;\n        b[12] = a1[12];\n        b[13] = a1[13];\n        b[14] = a1[14];\n        return this;\n    },\n    extractBasis: function(a1, b, c) {\n        var d = this.elements;\n        a1.set(d[0], d[1], d[2]);\n        b.set(d[4], d[5], d[6]);\n        c.set(d[8], d[9], d[10]);\n        return this;\n    },\n    makeBasis: function(a1, b, c) {\n        this.set(a1.x, b.x, c.x, 0, a1.y, b.y, c.y, 0, a1.z, b.z, c.z, 0, 0, 0, 0, 1);\n        return this;\n    },\n    extractRotation: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            var c = this.elements;\n            b = b.elements;\n            var d = 1 / a1.set(b[0], b[1], b[2]).length(), e = 1 / a1.set(b[4], b[5], b[6]).length(), g = 1 / a1.set(b[8], b[9], b[10]).length();\n            c[0] = b[0] * d;\n            c[1] = b[1] * d;\n            c[2] = b[2] * d;\n            c[4] = b[4] * e;\n            c[5] = b[5] * e;\n            c[6] = b[6] * e;\n            c[8] = b[8] * g;\n            c[9] = b[9] * g;\n            c[10] = b[10] * g;\n            return this;\n        };\n    }(),\n    makeRotationFromEuler: function(a1) {\n        !1 === a1 instanceof THREE.Euler && console.error(\"THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");\n        var b = this.elements, c = a1.x, d = a1.y, e = a1.z, g = Math.cos(c), c = Math.sin(c), f = Math.cos(d), d = Math.sin(d), h = Math.cos(e), e = Math.sin(e);\n        if (\"XYZ\" === a1.order) {\n            a1 = g * h;\n            var k = g * e, l = c * h, n = c * e;\n            b[0] = f * h;\n            b[4] = -f * e;\n            b[8] = d;\n            b[1] = k + l * d;\n            b[5] = a1 - n * d;\n            b[9] = -c * f;\n            b[2] = n - a1 * d;\n            b[6] = l + k * d;\n            b[10] = g * f;\n        } else \"YXZ\" === a1.order ? (a1 = f * h, k = f * e, l = d * h, n = d * e, b[0] = a1 + n * c, b[4] = l * c - k, b[8] = g * d, b[1] = g * e, b[5] = g * h, b[9] = -c, b[2] = k * c - l, b[6] = n + a1 * c, b[10] = g * f) : \"ZXY\" === a1.order ? (a1 = f * h, k = f * e, l = d * h, n = d * e, b[0] = a1 - n * c, b[4] = -g * e, b[8] = l + k * c, b[1] = k + l * c, b[5] = g * h, b[9] = n - a1 * c, b[2] = -g * d, b[6] = c, b[10] = g * f) : \"ZYX\" === a1.order ? (a1 = g * h, k = g * e, l = c * h, n = c * e, b[0] = f * h, b[4] = l * d - k, b[8] = a1 * d + n, b[1] = f * e, b[5] = n * d + a1, b[9] = k * d - l, b[2] = -d, b[6] = c * f, b[10] = g * f) : \"YZX\" === a1.order ? (a1 = g * f, k = g * d, l = c * f, n = c * d, b[0] = f * h, b[4] = n - a1 * e, b[8] = l * e + k, b[1] = e, b[5] = g * h, b[9] = -c * h, b[2] = -d * h, b[6] = k * e + l, b[10] = a1 - n * e) : \"XZY\" === a1.order && (a1 = g * f, k = g * d, l = c * f, n = c * d, b[0] = f * h, b[4] = -e, b[8] = d * h, b[1] = a1 * e + n, b[5] = g * h, b[9] = k * e - l, b[2] = l * e - k, b[6] = c * h, b[10] = n * e + a1);\n        b[3] = 0;\n        b[7] = 0;\n        b[11] = 0;\n        b[12] = 0;\n        b[13] = 0;\n        b[14] = 0;\n        b[15] = 1;\n        return this;\n    },\n    setRotationFromQuaternion: function(a1) {\n        console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\");\n        return this.makeRotationFromQuaternion(a1);\n    },\n    makeRotationFromQuaternion: function(a1) {\n        var b = this.elements, c = a1.x, d = a1.y, e = a1.z, g = a1.w, f = c + c, h = d + d, k = e + e;\n        a1 = c * f;\n        var l = c * h, c = c * k, n = d * h, d = d * k, e = e * k, f = g * f, h = g * h, g = g * k;\n        b[0] = 1 - (n + e);\n        b[4] = l - g;\n        b[8] = c + h;\n        b[1] = l + g;\n        b[5] = 1 - (a1 + e);\n        b[9] = d - f;\n        b[2] = c - h;\n        b[6] = d + f;\n        b[10] = 1 - (a1 + n);\n        b[3] = 0;\n        b[7] = 0;\n        b[11] = 0;\n        b[12] = 0;\n        b[13] = 0;\n        b[14] = 0;\n        b[15] = 1;\n        return this;\n    },\n    lookAt: function() {\n        var a1, b, c;\n        return function(d, e, g) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            void 0 === b && (b = new THREE.Vector3);\n            void 0 === c && (c = new THREE.Vector3);\n            var f = this.elements;\n            c.subVectors(d, e).normalize();\n            0 === c.length() && (c.z = 1);\n            a1.crossVectors(g, c).normalize();\n            0 === a1.length() && (c.x += 1E-4, a1.crossVectors(g, c).normalize());\n            b.crossVectors(c, a1);\n            f[0] = a1.x;\n            f[4] = b.x;\n            f[8] = c.x;\n            f[1] = a1.y;\n            f[5] = b.y;\n            f[9] = c.y;\n            f[2] = a1.z;\n            f[6] = b.z;\n            f[10] = c.z;\n            return this;\n        };\n    }(),\n    multiply: function(a1, b) {\n        return void 0 !== b ? (console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"), this.multiplyMatrices(a1, b)) : this.multiplyMatrices(this, a1);\n    },\n    multiplyMatrices: function(a1, b) {\n        var c = a1.elements, d = b.elements, e = this.elements, g = c[0], f = c[4], h = c[8], k = c[12], l = c[1], n = c[5], p = c[9], m = c[13], q = c[2], t = c[6], r = c[10], u = c[14], w = c[3], v = c[7], B = c[11], c = c[15], x = d[0], H = d[4], I = d[8], z = d[12], D = d[1], G = d[5], O = d[9], C = d[13], F = d[2], K = d[6], L = d[10], E = d[14], J = d[3], y = d[7], P = d[11], d = d[15];\n        e[0] = g * x + f * D + h * F + k * J;\n        e[4] = g * H + f * G + h * K + k * y;\n        e[8] = g * I + f * O + h * L + k * P;\n        e[12] = g * z + f * C + h * E + k * d;\n        e[1] = l * x + n * D + p * F + m * J;\n        e[5] = l * H + n * G + p * K + m * y;\n        e[9] = l * I + n * O + p * L + m * P;\n        e[13] = l * z + n * C + p * E + m * d;\n        e[2] = q * x + t * D + r * F + u * J;\n        e[6] = q * H + t * G + r * K + u * y;\n        e[10] = q * I + t * O + r * L + u * P;\n        e[14] = q * z + t * C + r * E + u * d;\n        e[3] = w * x + v * D + B * F + c * J;\n        e[7] = w * H + v * G + B * K + c * y;\n        e[11] = w * I + v * O + B * L + c * P;\n        e[15] = w * z + v * C + B * E + c * d;\n        return this;\n    },\n    multiplyToArray: function(a1, b, c) {\n        var d = this.elements;\n        this.multiplyMatrices(a1, b);\n        c[0] = d[0];\n        c[1] = d[1];\n        c[2] = d[2];\n        c[3] = d[3];\n        c[4] = d[4];\n        c[5] = d[5];\n        c[6] = d[6];\n        c[7] = d[7];\n        c[8] = d[8];\n        c[9] = d[9];\n        c[10] = d[10];\n        c[11] = d[11];\n        c[12] = d[12];\n        c[13] = d[13];\n        c[14] = d[14];\n        c[15] = d[15];\n        return this;\n    },\n    multiplyScalar: function(a1) {\n        var b = this.elements;\n        b[0] *= a1;\n        b[4] *= a1;\n        b[8] *= a1;\n        b[12] *= a1;\n        b[1] *= a1;\n        b[5] *= a1;\n        b[9] *= a1;\n        b[13] *= a1;\n        b[2] *= a1;\n        b[6] *= a1;\n        b[10] *= a1;\n        b[14] *= a1;\n        b[3] *= a1;\n        b[7] *= a1;\n        b[11] *= a1;\n        b[15] *= a1;\n        return this;\n    },\n    multiplyVector3: function(a1) {\n        console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.\");\n        return a1.applyProjection(this);\n    },\n    multiplyVector4: function(a1) {\n        console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\");\n        return a1.applyMatrix4(this);\n    },\n    multiplyVector3Array: function(a1) {\n        console.warn(\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");\n        return this.applyToVector3Array(a1);\n    },\n    applyToVector3Array: function() {\n        var a1;\n        return function(b, c, d) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            void 0 === c && (c = 0);\n            void 0 === d && (d = b.length);\n            for(var e = 0; e < d; e += 3, c += 3)a1.fromArray(b, c), a1.applyMatrix4(this), a1.toArray(b, c);\n            return b;\n        };\n    }(),\n    applyToBuffer: function() {\n        var a1;\n        return function(b, c, d) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            void 0 === c && (c = 0);\n            void 0 === d && (d = b.length / b.itemSize);\n            for(var e = 0; e < d; e++, c++)a1.x = b.getX(c), a1.y = b.getY(c), a1.z = b.getZ(c), a1.applyMatrix4(this), b.setXYZ(a1.x, a1.y, a1.z);\n            return b;\n        };\n    }(),\n    rotateAxis: function(a1) {\n        console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\");\n        a1.transformDirection(this);\n    },\n    crossVector: function(a1) {\n        console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\");\n        return a1.applyMatrix4(this);\n    },\n    determinant: function() {\n        var a1 = this.elements, b = a1[0], c = a1[4], d = a1[8], e = a1[12], g = a1[1], f = a1[5], h = a1[9], k = a1[13], l = a1[2], n = a1[6], p = a1[10], m = a1[14];\n        return a1[3] * (+e * h * n - d * k * n - e * f * p + c * k * p + d * f * m - c * h * m) + a1[7] * (+b * h * m - b * k * p + e * g * p - d * g * m + d * k * l - e * h * l) + a1[11] * (+b * k * n - b * f * m - e * g * n + c * g * m + e * f * l - c * k * l) + a1[15] * (-d * f * l - b * h * n + b * f * p + d * g * n - c * g * p + c * h * l);\n    },\n    transpose: function() {\n        var a1 = this.elements, b;\n        b = a1[1];\n        a1[1] = a1[4];\n        a1[4] = b;\n        b = a1[2];\n        a1[2] = a1[8];\n        a1[8] = b;\n        b = a1[6];\n        a1[6] = a1[9];\n        a1[9] = b;\n        b = a1[3];\n        a1[3] = a1[12];\n        a1[12] = b;\n        b = a1[7];\n        a1[7] = a1[13];\n        a1[13] = b;\n        b = a1[11];\n        a1[11] = a1[14];\n        a1[14] = b;\n        return this;\n    },\n    flattenToArrayOffset: function(a1, b) {\n        var c = this.elements;\n        a1[b] = c[0];\n        a1[b + 1] = c[1];\n        a1[b + 2] = c[2];\n        a1[b + 3] = c[3];\n        a1[b + 4] = c[4];\n        a1[b + 5] = c[5];\n        a1[b + 6] = c[6];\n        a1[b + 7] = c[7];\n        a1[b + 8] = c[8];\n        a1[b + 9] = c[9];\n        a1[b + 10] = c[10];\n        a1[b + 11] = c[11];\n        a1[b + 12] = c[12];\n        a1[b + 13] = c[13];\n        a1[b + 14] = c[14];\n        a1[b + 15] = c[15];\n        return a1;\n    },\n    getPosition: function() {\n        var a1;\n        return function() {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\");\n            var b = this.elements;\n            return a1.set(b[12], b[13], b[14]);\n        };\n    }(),\n    setPosition: function(a1) {\n        var b = this.elements;\n        b[12] = a1.x;\n        b[13] = a1.y;\n        b[14] = a1.z;\n        return this;\n    },\n    getInverse: function(a1, b) {\n        var c = this.elements, d = a1.elements, e = d[0], g = d[4], f = d[8], h = d[12], k = d[1], l = d[5], n = d[9], p = d[13], m = d[2], q = d[6], t = d[10], r = d[14], u = d[3], w = d[7], v = d[11], d = d[15];\n        c[0] = n * r * w - p * t * w + p * q * v - l * r * v - n * q * d + l * t * d;\n        c[4] = h * t * w - f * r * w - h * q * v + g * r * v + f * q * d - g * t * d;\n        c[8] = f * p * w - h * n * w + h * l * v - g * p * v - f * l * d + g * n * d;\n        c[12] = h * n * q - f * p * q - h * l * t + g * p * t + f * l * r - g * n * r;\n        c[1] = p * t * u - n * r * u - p * m * v + k * r * v + n * m * d - k * t * d;\n        c[5] = f * r * u - h * t * u + h * m * v - e * r * v - f * m * d + e * t * d;\n        c[9] = h * n * u - f * p * u - h * k * v + e * p * v + f * k * d - e * n * d;\n        c[13] = f * p * m - h * n * m + h * k * t - e * p * t - f * k * r + e * n * r;\n        c[2] = l * r * u - p * q * u + p * m * w - k * r * w - l * m * d + k * q * d;\n        c[6] = h * q * u - g * r * u - h * m * w + e * r * w + g * m * d - e * q * d;\n        c[10] = g * p * u - h * l * u + h * k * w - e * p * w - g * k * d + e * l * d;\n        c[14] = h * l * m - g * p * m - h * k * q + e * p * q + g * k * r - e * l * r;\n        c[3] = n * q * u - l * t * u - n * m * w + k * t * w + l * m * v - k * q * v;\n        c[7] = g * t * u - f * q * u + f * m * w - e * t * w - g * m * v + e * q * v;\n        c[11] = f * l * u - g * n * u - f * k * w + e * n * w + g * k * v - e * l * v;\n        c[15] = g * n * m - f * l * m + f * k * q - e * n * q - g * k * t + e * l * t;\n        c = e * c[0] + k * c[4] + m * c[8] + u * c[12];\n        if (0 === c) {\n            if (b) throw Error(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");\n            console.warn(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");\n            this.identity();\n            return this;\n        }\n        this.multiplyScalar(1 / c);\n        return this;\n    },\n    translate: function(a1) {\n        console.error(\"THREE.Matrix4: .translate() has been removed.\");\n    },\n    rotateX: function(a1) {\n        console.error(\"THREE.Matrix4: .rotateX() has been removed.\");\n    },\n    rotateY: function(a1) {\n        console.error(\"THREE.Matrix4: .rotateY() has been removed.\");\n    },\n    rotateZ: function(a1) {\n        console.error(\"THREE.Matrix4: .rotateZ() has been removed.\");\n    },\n    rotateByAxis: function(a1, b) {\n        console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\");\n    },\n    scale: function(a1) {\n        var b = this.elements, c = a1.x, d = a1.y;\n        a1 = a1.z;\n        b[0] *= c;\n        b[4] *= d;\n        b[8] *= a1;\n        b[1] *= c;\n        b[5] *= d;\n        b[9] *= a1;\n        b[2] *= c;\n        b[6] *= d;\n        b[10] *= a1;\n        b[3] *= c;\n        b[7] *= d;\n        b[11] *= a1;\n        return this;\n    },\n    getMaxScaleOnAxis: function() {\n        var a1 = this.elements;\n        return Math.sqrt(Math.max(a1[0] * a1[0] + a1[1] * a1[1] + a1[2] * a1[2], Math.max(a1[4] * a1[4] + a1[5] * a1[5] + a1[6] * a1[6], a1[8] * a1[8] + a1[9] * a1[9] + a1[10] * a1[10])));\n    },\n    makeTranslation: function(a1, b, c) {\n        this.set(1, 0, 0, a1, 0, 1, 0, b, 0, 0, 1, c, 0, 0, 0, 1);\n        return this;\n    },\n    makeRotationX: function(a1) {\n        var b = Math.cos(a1);\n        a1 = Math.sin(a1);\n        this.set(1, 0, 0, 0, 0, b, -a1, 0, 0, a1, b, 0, 0, 0, 0, 1);\n        return this;\n    },\n    makeRotationY: function(a1) {\n        var b = Math.cos(a1);\n        a1 = Math.sin(a1);\n        this.set(b, 0, a1, 0, 0, 1, 0, 0, -a1, 0, b, 0, 0, 0, 0, 1);\n        return this;\n    },\n    makeRotationZ: function(a1) {\n        var b = Math.cos(a1);\n        a1 = Math.sin(a1);\n        this.set(b, -a1, 0, 0, a1, b, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n        return this;\n    },\n    makeRotationAxis: function(a1, b) {\n        var c = Math.cos(b), d = Math.sin(b), e = 1 - c, g = a1.x, f = a1.y, h = a1.z, k = e * g, l = e * f;\n        this.set(k * g + c, k * f - d * h, k * h + d * f, 0, k * f + d * h, l * f + c, l * h - d * g, 0, k * h - d * f, l * h + d * g, e * h * h + c, 0, 0, 0, 0, 1);\n        return this;\n    },\n    makeScale: function(a1, b, c) {\n        this.set(a1, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, 0, 0, 0, 1);\n        return this;\n    },\n    compose: function(a1, b, c) {\n        this.makeRotationFromQuaternion(b);\n        this.scale(c);\n        this.setPosition(a1);\n        return this;\n    },\n    decompose: function() {\n        var a1, b;\n        return function(c, d, e) {\n            void 0 === a1 && (a1 = new THREE.Vector3);\n            void 0 === b && (b = new THREE.Matrix4);\n            var g = this.elements, f = a1.set(g[0], g[1], g[2]).length(), h = a1.set(g[4], g[5], g[6]).length(), k = a1.set(g[8], g[9], g[10]).length();\n            0 > this.determinant() && (f = -f);\n            c.x = g[12];\n            c.y = g[13];\n            c.z = g[14];\n            b.elements.set(this.elements);\n            c = 1 / f;\n            var g = 1 / h, l = 1 / k;\n            b.elements[0] *= c;\n            b.elements[1] *= c;\n            b.elements[2] *= c;\n            b.elements[4] *= g;\n            b.elements[5] *= g;\n            b.elements[6] *= g;\n            b.elements[8] *= l;\n            b.elements[9] *= l;\n            b.elements[10] *= l;\n            d.setFromRotationMatrix(b);\n            e.x = f;\n            e.y = h;\n            e.z = k;\n            return this;\n        };\n    }(),\n    makeFrustum: function(a1, b, c, d, e, g) {\n        var f = this.elements;\n        f[0] = 2 * e / (b - a1);\n        f[4] = 0;\n        f[8] = (b + a1) / (b - a1);\n        f[12] = 0;\n        f[1] = 0;\n        f[5] = 2 * e / (d - c);\n        f[9] = (d + c) / (d - c);\n        f[13] = 0;\n        f[2] = 0;\n        f[6] = 0;\n        f[10] = -(g + e) / (g - e);\n        f[14] = -2 * g * e / (g - e);\n        f[3] = 0;\n        f[7] = 0;\n        f[11] = -1;\n        f[15] = 0;\n        return this;\n    },\n    makePerspective: function(a1, b, c, d) {\n        a1 = c * Math.tan(THREE.Math.degToRad(.5 * a1));\n        var e = -a1;\n        return this.makeFrustum(e * b, a1 * b, e, a1, c, d);\n    },\n    makeOrthographic: function(a1, b, c, d, e, g) {\n        var f = this.elements, h = b - a1, k = c - d, l = g - e;\n        f[0] = 2 / h;\n        f[4] = 0;\n        f[8] = 0;\n        f[12] = -((b + a1) / h);\n        f[1] = 0;\n        f[5] = 2 / k;\n        f[9] = 0;\n        f[13] = -((c + d) / k);\n        f[2] = 0;\n        f[6] = 0;\n        f[10] = -2 / l;\n        f[14] = -((g + e) / l);\n        f[3] = 0;\n        f[7] = 0;\n        f[11] = 0;\n        f[15] = 1;\n        return this;\n    },\n    equals: function(a1) {\n        var b = this.elements;\n        a1 = a1.elements;\n        for(var c = 0; 16 > c; c++)if (b[c] !== a1[c]) return !1;\n        return !0;\n    },\n    fromArray: function(a1) {\n        this.elements.set(a1);\n        return this;\n    },\n    toArray: function() {\n        var a1 = this.elements;\n        return [\n            a1[0],\n            a1[1],\n            a1[2],\n            a1[3],\n            a1[4],\n            a1[5],\n            a1[6],\n            a1[7],\n            a1[8],\n            a1[9],\n            a1[10],\n            a1[11],\n            a1[12],\n            a1[13],\n            a1[14],\n            a1[15]\n        ];\n    }\n};\nTHREE.Ray = function(a1, b) {\n    this.origin = void 0 !== a1 ? a1 : new THREE.Vector3;\n    this.direction = void 0 !== b ? b : new THREE.Vector3;\n};\nTHREE.Ray.prototype = {\n    constructor: THREE.Ray,\n    set: function(a1, b) {\n        this.origin.copy(a1);\n        this.direction.copy(b);\n        return this;\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.origin.copy(a1.origin);\n        this.direction.copy(a1.direction);\n        return this;\n    },\n    at: function(a1, b) {\n        return (b || new THREE.Vector3).copy(this.direction).multiplyScalar(a1).add(this.origin);\n    },\n    recast: function() {\n        var a1 = new THREE.Vector3;\n        return function(b) {\n            this.origin.copy(this.at(b, a1));\n            return this;\n        };\n    }(),\n    closestPointToPoint: function(a1, b) {\n        var c = b || new THREE.Vector3;\n        c.subVectors(a1, this.origin);\n        var d = c.dot(this.direction);\n        return 0 > d ? c.copy(this.origin) : c.copy(this.direction).multiplyScalar(d).add(this.origin);\n    },\n    distanceToPoint: function(a1) {\n        return Math.sqrt(this.distanceSqToPoint(a1));\n    },\n    distanceSqToPoint: function() {\n        var a1 = new THREE.Vector3;\n        return function(b) {\n            var c = a1.subVectors(b, this.origin).dot(this.direction);\n            if (0 > c) return this.origin.distanceToSquared(b);\n            a1.copy(this.direction).multiplyScalar(c).add(this.origin);\n            return a1.distanceToSquared(b);\n        };\n    }(),\n    distanceSqToSegment: function() {\n        var a1 = new THREE.Vector3, b = new THREE.Vector3, c = new THREE.Vector3;\n        return function(d, e, g, f) {\n            a1.copy(d).add(e).multiplyScalar(.5);\n            b.copy(e).sub(d).normalize();\n            c.copy(this.origin).sub(a1);\n            var h = .5 * d.distanceTo(e), k = -this.direction.dot(b), l = c.dot(this.direction), n = -c.dot(b), p = c.lengthSq(), m = Math.abs(1 - k * k), q;\n            0 < m ? (d = k * n - l, e = k * l - n, q = h * m, 0 <= d ? e >= -q ? e <= q ? (h = 1 / m, d *= h, e *= h, k = d * (d + k * e + 2 * l) + e * (k * d + e + 2 * n) + p) : (e = h, d = Math.max(0, -(k * e + l)), k = -d * d + e * (e + 2 * n) + p) : (e = -h, d = Math.max(0, -(k * e + l)), k = -d * d + e * (e + 2 * n) + p) : e <= -q ? (d = Math.max(0, -(-k * h + l)), e = 0 < d ? -h : Math.min(Math.max(-h, -n), h), k = -d * d + e * (e + 2 * n) + p) : e <= q ? (d = 0, e = Math.min(Math.max(-h, -n), h), k = e * (e + 2 * n) + p) : (d = Math.max(0, -(k * h + l)), e = 0 < d ? h : Math.min(Math.max(-h, -n), h), k = -d * d + e * (e + 2 * n) + p)) : (e = 0 < k ? -h : h, d = Math.max(0, -(k * e + l)), k = -d * d + e * (e + 2 * n) + p);\n            g && g.copy(this.direction).multiplyScalar(d).add(this.origin);\n            f && f.copy(b).multiplyScalar(e).add(a1);\n            return k;\n        };\n    }(),\n    isIntersectionSphere: function(a1) {\n        return this.distanceToPoint(a1.center) <= a1.radius;\n    },\n    intersectSphere: function() {\n        var a1 = new THREE.Vector3;\n        return function(b, c) {\n            a1.subVectors(b.center, this.origin);\n            var d = a1.dot(this.direction), e = a1.dot(a1) - d * d, g = b.radius * b.radius;\n            if (e > g) return null;\n            g = Math.sqrt(g - e);\n            e = d - g;\n            d += g;\n            return 0 > e && 0 > d ? null : 0 > e ? this.at(d, c) : this.at(e, c);\n        };\n    }(),\n    isIntersectionPlane: function(a1) {\n        var b = a1.distanceToPoint(this.origin);\n        return 0 === b || 0 > a1.normal.dot(this.direction) * b ? !0 : !1;\n    },\n    distanceToPlane: function(a1) {\n        var b = a1.normal.dot(this.direction);\n        if (0 === b) return 0 === a1.distanceToPoint(this.origin) ? 0 : null;\n        a1 = -(this.origin.dot(a1.normal) + a1.constant) / b;\n        return 0 <= a1 ? a1 : null;\n    },\n    intersectPlane: function(a1, b) {\n        var c = this.distanceToPlane(a1);\n        return null === c ? null : this.at(c, b);\n    },\n    isIntersectionBox: function() {\n        var a1 = new THREE.Vector3;\n        return function(b) {\n            return null !== this.intersectBox(b, a1);\n        };\n    }(),\n    intersectBox: function(a1, b) {\n        var c, d, e, g, f;\n        d = 1 / this.direction.x;\n        g = 1 / this.direction.y;\n        f = 1 / this.direction.z;\n        var h = this.origin;\n        0 <= d ? (c = (a1.min.x - h.x) * d, d *= a1.max.x - h.x) : (c = (a1.max.x - h.x) * d, d *= a1.min.x - h.x);\n        0 <= g ? (e = (a1.min.y - h.y) * g, g *= a1.max.y - h.y) : (e = (a1.max.y - h.y) * g, g *= a1.min.y - h.y);\n        if (c > g || e > d) return null;\n        if (e > c || c !== c) c = e;\n        if (g < d || d !== d) d = g;\n        0 <= f ? (e = (a1.min.z - h.z) * f, f *= a1.max.z - h.z) : (e = (a1.max.z - h.z) * f, f *= a1.min.z - h.z);\n        if (c > f || e > d) return null;\n        if (e > c || c !== c) c = e;\n        if (f < d || d !== d) d = f;\n        return 0 > d ? null : this.at(0 <= c ? c : d, b);\n    },\n    intersectTriangle: function() {\n        var a1 = new THREE.Vector3, b = new THREE.Vector3, c = new THREE.Vector3, d = new THREE.Vector3;\n        return function(e, g, f, h, k) {\n            b.subVectors(g, e);\n            c.subVectors(f, e);\n            d.crossVectors(b, c);\n            g = this.direction.dot(d);\n            if (0 < g) {\n                if (h) return null;\n                h = 1;\n            } else if (0 > g) h = -1, g = -g;\n            else return null;\n            a1.subVectors(this.origin, e);\n            e = h * this.direction.dot(c.crossVectors(a1, c));\n            if (0 > e) return null;\n            f = h * this.direction.dot(b.cross(a1));\n            if (0 > f || e + f > g) return null;\n            e = -h * a1.dot(d);\n            return 0 > e ? null : this.at(e / g, k);\n        };\n    }(),\n    applyMatrix4: function(a1) {\n        this.direction.add(this.origin).applyMatrix4(a1);\n        this.origin.applyMatrix4(a1);\n        this.direction.sub(this.origin);\n        this.direction.normalize();\n        return this;\n    },\n    equals: function(a1) {\n        return a1.origin.equals(this.origin) && a1.direction.equals(this.direction);\n    }\n};\nTHREE.Sphere = function(a1, b) {\n    this.center = void 0 !== a1 ? a1 : new THREE.Vector3;\n    this.radius = void 0 !== b ? b : 0;\n};\nTHREE.Sphere.prototype = {\n    constructor: THREE.Sphere,\n    set: function(a1, b) {\n        this.center.copy(a1);\n        this.radius = b;\n        return this;\n    },\n    setFromPoints: function() {\n        var a1 = new THREE.Box3;\n        return function(b, c) {\n            var d = this.center;\n            void 0 !== c ? d.copy(c) : a1.setFromPoints(b).center(d);\n            for(var e = 0, g = 0, f = b.length; g < f; g++)e = Math.max(e, d.distanceToSquared(b[g]));\n            this.radius = Math.sqrt(e);\n            return this;\n        };\n    }(),\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.center.copy(a1.center);\n        this.radius = a1.radius;\n        return this;\n    },\n    empty: function() {\n        return 0 >= this.radius;\n    },\n    containsPoint: function(a1) {\n        return a1.distanceToSquared(this.center) <= this.radius * this.radius;\n    },\n    distanceToPoint: function(a1) {\n        return a1.distanceTo(this.center) - this.radius;\n    },\n    intersectsSphere: function(a1) {\n        var b = this.radius + a1.radius;\n        return a1.center.distanceToSquared(this.center) <= b * b;\n    },\n    clampPoint: function(a1, b) {\n        var c = this.center.distanceToSquared(a1), d = b || new THREE.Vector3;\n        d.copy(a1);\n        c > this.radius * this.radius && (d.sub(this.center).normalize(), d.multiplyScalar(this.radius).add(this.center));\n        return d;\n    },\n    getBoundingBox: function(a1) {\n        a1 = a1 || new THREE.Box3;\n        a1.set(this.center, this.center);\n        a1.expandByScalar(this.radius);\n        return a1;\n    },\n    applyMatrix4: function(a1) {\n        this.center.applyMatrix4(a1);\n        this.radius *= a1.getMaxScaleOnAxis();\n        return this;\n    },\n    translate: function(a1) {\n        this.center.add(a1);\n        return this;\n    },\n    equals: function(a1) {\n        return a1.center.equals(this.center) && a1.radius === this.radius;\n    }\n};\nTHREE.Frustum = function(a1, b, c, d, e, g) {\n    this.planes = [\n        void 0 !== a1 ? a1 : new THREE.Plane,\n        void 0 !== b ? b : new THREE.Plane,\n        void 0 !== c ? c : new THREE.Plane,\n        void 0 !== d ? d : new THREE.Plane,\n        void 0 !== e ? e : new THREE.Plane,\n        void 0 !== g ? g : new THREE.Plane\n    ];\n};\nTHREE.Frustum.prototype = {\n    constructor: THREE.Frustum,\n    set: function(a1, b, c, d, e, g) {\n        var f = this.planes;\n        f[0].copy(a1);\n        f[1].copy(b);\n        f[2].copy(c);\n        f[3].copy(d);\n        f[4].copy(e);\n        f[5].copy(g);\n        return this;\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        for(var b = this.planes, c = 0; 6 > c; c++)b[c].copy(a1.planes[c]);\n        return this;\n    },\n    setFromMatrix: function(a1) {\n        var b = this.planes, c = a1.elements;\n        a1 = c[0];\n        var d = c[1], e = c[2], g = c[3], f = c[4], h = c[5], k = c[6], l = c[7], n = c[8], p = c[9], m = c[10], q = c[11], t = c[12], r = c[13], u = c[14], c = c[15];\n        b[0].setComponents(g - a1, l - f, q - n, c - t).normalize();\n        b[1].setComponents(g + a1, l + f, q + n, c + t).normalize();\n        b[2].setComponents(g + d, l + h, q + p, c + r).normalize();\n        b[3].setComponents(g - d, l - h, q - p, c - r).normalize();\n        b[4].setComponents(g - e, l - k, q - m, c - u).normalize();\n        b[5].setComponents(g + e, l + k, q + m, c + u).normalize();\n        return this;\n    },\n    intersectsObject: function() {\n        var a1 = new THREE.Sphere;\n        return function(b) {\n            var c = b.geometry;\n            null === c.boundingSphere && c.computeBoundingSphere();\n            a1.copy(c.boundingSphere);\n            a1.applyMatrix4(b.matrixWorld);\n            return this.intersectsSphere(a1);\n        };\n    }(),\n    intersectsSphere: function(a1) {\n        var b = this.planes, c = a1.center;\n        a1 = -a1.radius;\n        for(var d = 0; 6 > d; d++)if (b[d].distanceToPoint(c) < a1) return !1;\n        return !0;\n    },\n    intersectsBox: function() {\n        var a1 = new THREE.Vector3, b = new THREE.Vector3;\n        return function(c) {\n            for(var d = this.planes, e = 0; 6 > e; e++){\n                var g = d[e];\n                a1.x = 0 < g.normal.x ? c.min.x : c.max.x;\n                b.x = 0 < g.normal.x ? c.max.x : c.min.x;\n                a1.y = 0 < g.normal.y ? c.min.y : c.max.y;\n                b.y = 0 < g.normal.y ? c.max.y : c.min.y;\n                a1.z = 0 < g.normal.z ? c.min.z : c.max.z;\n                b.z = 0 < g.normal.z ? c.max.z : c.min.z;\n                var f = g.distanceToPoint(a1), g = g.distanceToPoint(b);\n                if (0 > f && 0 > g) return !1;\n            }\n            return !0;\n        };\n    }(),\n    containsPoint: function(a1) {\n        for(var b = this.planes, c = 0; 6 > c; c++)if (0 > b[c].distanceToPoint(a1)) return !1;\n        return !0;\n    }\n};\nTHREE.Plane = function(a1, b) {\n    this.normal = void 0 !== a1 ? a1 : new THREE.Vector3(1, 0, 0);\n    this.constant = void 0 !== b ? b : 0;\n};\nTHREE.Plane.prototype = {\n    constructor: THREE.Plane,\n    set: function(a1, b) {\n        this.normal.copy(a1);\n        this.constant = b;\n        return this;\n    },\n    setComponents: function(a1, b, c, d) {\n        this.normal.set(a1, b, c);\n        this.constant = d;\n        return this;\n    },\n    setFromNormalAndCoplanarPoint: function(a1, b) {\n        this.normal.copy(a1);\n        this.constant = -b.dot(this.normal);\n        return this;\n    },\n    setFromCoplanarPoints: function() {\n        var a1 = new THREE.Vector3, b = new THREE.Vector3;\n        return function(c, d, e) {\n            d = a1.subVectors(e, d).cross(b.subVectors(c, d)).normalize();\n            this.setFromNormalAndCoplanarPoint(d, c);\n            return this;\n        };\n    }(),\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.normal.copy(a1.normal);\n        this.constant = a1.constant;\n        return this;\n    },\n    normalize: function() {\n        var a1 = 1 / this.normal.length();\n        this.normal.multiplyScalar(a1);\n        this.constant *= a1;\n        return this;\n    },\n    negate: function() {\n        this.constant *= -1;\n        this.normal.negate();\n        return this;\n    },\n    distanceToPoint: function(a1) {\n        return this.normal.dot(a1) + this.constant;\n    },\n    distanceToSphere: function(a1) {\n        return this.distanceToPoint(a1.center) - a1.radius;\n    },\n    projectPoint: function(a1, b) {\n        return this.orthoPoint(a1, b).sub(a1).negate();\n    },\n    orthoPoint: function(a1, b) {\n        var c = this.distanceToPoint(a1);\n        return (b || new THREE.Vector3).copy(this.normal).multiplyScalar(c);\n    },\n    isIntersectionLine: function(a1) {\n        var b = this.distanceToPoint(a1.start);\n        a1 = this.distanceToPoint(a1.end);\n        return 0 > b && 0 < a1 || 0 > a1 && 0 < b;\n    },\n    intersectLine: function() {\n        var a1 = new THREE.Vector3;\n        return function(b, c) {\n            var d = c || new THREE.Vector3, e = b.delta(a1), g = this.normal.dot(e);\n            if (0 === g) {\n                if (0 === this.distanceToPoint(b.start)) return d.copy(b.start);\n            } else return g = -(b.start.dot(this.normal) + this.constant) / g, 0 > g || 1 < g ? void 0 : d.copy(e).multiplyScalar(g).add(b.start);\n        };\n    }(),\n    coplanarPoint: function(a1) {\n        return (a1 || new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant);\n    },\n    applyMatrix4: function() {\n        var a1 = new THREE.Vector3, b = new THREE.Vector3, c = new THREE.Matrix3;\n        return function(d, e) {\n            var g = e || c.getNormalMatrix(d), g = a1.copy(this.normal).applyMatrix3(g), f = this.coplanarPoint(b);\n            f.applyMatrix4(d);\n            this.setFromNormalAndCoplanarPoint(g, f);\n            return this;\n        };\n    }(),\n    translate: function(a1) {\n        this.constant -= a1.dot(this.normal);\n        return this;\n    },\n    equals: function(a1) {\n        return a1.normal.equals(this.normal) && a1.constant === this.constant;\n    }\n};\nTHREE.Math = {\n    generateUUID: function() {\n        var a1 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\"), b = Array(36), c = 0, d;\n        return function() {\n            for(var e = 0; 36 > e; e++)8 === e || 13 === e || 18 === e || 23 === e ? b[e] = \"-\" : 14 === e ? b[e] = \"4\" : (2 >= c && (c = 33554432 + 16777216 * Math.random() | 0), d = c & 15, c >>= 4, b[e] = a1[19 === e ? d & 3 | 8 : d]);\n            return b.join(\"\");\n        };\n    }(),\n    clamp: function(a1, b, c) {\n        return a1 < b ? b : a1 > c ? c : a1;\n    },\n    clampBottom: function(a1, b) {\n        return a1 < b ? b : a1;\n    },\n    euclideanModulo: function(a1, b) {\n        return (a1 % b + b) % b;\n    },\n    mapLinear: function(a1, b, c, d, e) {\n        return d + (a1 - b) * (e - d) / (c - b);\n    },\n    smoothstep: function(a1, b, c) {\n        if (a1 <= b) return 0;\n        if (a1 >= c) return 1;\n        a1 = (a1 - b) / (c - b);\n        return a1 * a1 * (3 - 2 * a1);\n    },\n    smootherstep: function(a1, b, c) {\n        if (a1 <= b) return 0;\n        if (a1 >= c) return 1;\n        a1 = (a1 - b) / (c - b);\n        return a1 * a1 * a1 * (a1 * (6 * a1 - 15) + 10);\n    },\n    random16: function() {\n        return (65280 * Math.random() + 255 * Math.random()) / 65535;\n    },\n    randInt: function(a1, b) {\n        return a1 + Math.floor(Math.random() * (b - a1 + 1));\n    },\n    randFloat: function(a1, b) {\n        return a1 + Math.random() * (b - a1);\n    },\n    randFloatSpread: function(a1) {\n        return a1 * (.5 - Math.random());\n    },\n    degToRad: function() {\n        var a1 = Math.PI / 180;\n        return function(b) {\n            return b * a1;\n        };\n    }(),\n    radToDeg: function() {\n        var a1 = 180 / Math.PI;\n        return function(b) {\n            return b * a1;\n        };\n    }(),\n    isPowerOfTwo: function(a1) {\n        return 0 === (a1 & a1 - 1) && 0 !== a1;\n    },\n    nextPowerOfTwo: function(a1) {\n        a1--;\n        a1 |= a1 >> 1;\n        a1 |= a1 >> 2;\n        a1 |= a1 >> 4;\n        a1 |= a1 >> 8;\n        a1 |= a1 >> 16;\n        a1++;\n        return a1;\n    }\n};\nTHREE.Spline = function(a1) {\n    function b(a1, b, c, d, e, g, f) {\n        a1 = .5 * (c - a1);\n        d = .5 * (d - b);\n        return (2 * (b - c) + a1 + d) * f + (-3 * (b - c) - 2 * a1 - d) * g + a1 * e + b;\n    }\n    this.points = a1;\n    var c = [], d = {\n        x: 0,\n        y: 0,\n        z: 0\n    }, e, g, f, h, k, l, n, p, m;\n    this.initFromArray = function(a1) {\n        this.points = [];\n        for(var b = 0; b < a1.length; b++)this.points[b] = {\n            x: a1[b][0],\n            y: a1[b][1],\n            z: a1[b][2]\n        };\n    };\n    this.getPoint = function(a1) {\n        e = (this.points.length - 1) * a1;\n        g = Math.floor(e);\n        f = e - g;\n        c[0] = 0 === g ? g : g - 1;\n        c[1] = g;\n        c[2] = g > this.points.length - 2 ? this.points.length - 1 : g + 1;\n        c[3] = g > this.points.length - 3 ? this.points.length - 1 : g + 2;\n        l = this.points[c[0]];\n        n = this.points[c[1]];\n        p = this.points[c[2]];\n        m = this.points[c[3]];\n        h = f * f;\n        k = f * h;\n        d.x = b(l.x, n.x, p.x, m.x, f, h, k);\n        d.y = b(l.y, n.y, p.y, m.y, f, h, k);\n        d.z = b(l.z, n.z, p.z, m.z, f, h, k);\n        return d;\n    };\n    this.getControlPointsArray = function() {\n        var a1, b, c = this.points.length, d = [];\n        for(a1 = 0; a1 < c; a1++)b = this.points[a1], d[a1] = [\n            b.x,\n            b.y,\n            b.z\n        ];\n        return d;\n    };\n    this.getLength = function(a1) {\n        var b, c, d, e = b = b = 0, g = new THREE.Vector3, f = new THREE.Vector3, h = [], k = 0;\n        h[0] = 0;\n        a1 || (a1 = 100);\n        c = this.points.length * a1;\n        g.copy(this.points[0]);\n        for(a1 = 1; a1 < c; a1++)b = a1 / c, d = this.getPoint(b), f.copy(d), k += f.distanceTo(g), g.copy(d), b *= this.points.length - 1, b = Math.floor(b), b !== e && (h[b] = k, e = b);\n        h[h.length] = k;\n        return {\n            chunks: h,\n            total: k\n        };\n    };\n    this.reparametrizeByArcLength = function(a1) {\n        var b, c, d, e, g, f, h = [], k = new THREE.Vector3, m = this.getLength();\n        h.push(k.copy(this.points[0]).clone());\n        for(b = 1; b < this.points.length; b++){\n            c = m.chunks[b] - m.chunks[b - 1];\n            f = Math.ceil(a1 * c / m.total);\n            e = (b - 1) / (this.points.length - 1);\n            g = b / (this.points.length - 1);\n            for(c = 1; c < f - 1; c++)d = e + 1 / f * c * (g - e), d = this.getPoint(d), h.push(k.copy(d).clone());\n            h.push(k.copy(this.points[b]).clone());\n        }\n        this.points = h;\n    };\n};\nTHREE.Triangle = function(a1, b, c) {\n    this.a = void 0 !== a1 ? a1 : new THREE.Vector3;\n    this.b = void 0 !== b ? b : new THREE.Vector3;\n    this.c = void 0 !== c ? c : new THREE.Vector3;\n};\nTHREE.Triangle.normal = function() {\n    var a1 = new THREE.Vector3;\n    return function(b, c, d, e) {\n        e = e || new THREE.Vector3;\n        e.subVectors(d, c);\n        a1.subVectors(b, c);\n        e.cross(a1);\n        b = e.lengthSq();\n        return 0 < b ? e.multiplyScalar(1 / Math.sqrt(b)) : e.set(0, 0, 0);\n    };\n}();\nTHREE.Triangle.barycoordFromPoint = function() {\n    var a1 = new THREE.Vector3, b = new THREE.Vector3, c = new THREE.Vector3;\n    return function(d, e, g, f, h) {\n        a1.subVectors(f, e);\n        b.subVectors(g, e);\n        c.subVectors(d, e);\n        d = a1.dot(a1);\n        e = a1.dot(b);\n        g = a1.dot(c);\n        var k = b.dot(b);\n        f = b.dot(c);\n        var l = d * k - e * e;\n        h = h || new THREE.Vector3;\n        if (0 === l) return h.set(-2, -1, -1);\n        l = 1 / l;\n        k = (k * g - e * f) * l;\n        d = (d * f - e * g) * l;\n        return h.set(1 - k - d, d, k);\n    };\n}();\nTHREE.Triangle.containsPoint = function() {\n    var a1 = new THREE.Vector3;\n    return function(b, c, d, e) {\n        b = THREE.Triangle.barycoordFromPoint(b, c, d, e, a1);\n        return 0 <= b.x && 0 <= b.y && 1 >= b.x + b.y;\n    };\n}();\nTHREE.Triangle.prototype = {\n    constructor: THREE.Triangle,\n    set: function(a1, b, c) {\n        this.a.copy(a1);\n        this.b.copy(b);\n        this.c.copy(c);\n        return this;\n    },\n    setFromPointsAndIndices: function(a1, b, c, d) {\n        this.a.copy(a1[b]);\n        this.b.copy(a1[c]);\n        this.c.copy(a1[d]);\n        return this;\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.a.copy(a1.a);\n        this.b.copy(a1.b);\n        this.c.copy(a1.c);\n        return this;\n    },\n    area: function() {\n        var a1 = new THREE.Vector3, b = new THREE.Vector3;\n        return function() {\n            a1.subVectors(this.c, this.b);\n            b.subVectors(this.a, this.b);\n            return .5 * a1.cross(b).length();\n        };\n    }(),\n    midpoint: function(a1) {\n        return (a1 || new THREE.Vector3).addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n    },\n    normal: function(a1) {\n        return THREE.Triangle.normal(this.a, this.b, this.c, a1);\n    },\n    plane: function(a1) {\n        return (a1 || new THREE.Plane).setFromCoplanarPoints(this.a, this.b, this.c);\n    },\n    barycoordFromPoint: function(a1, b) {\n        return THREE.Triangle.barycoordFromPoint(a1, this.a, this.b, this.c, b);\n    },\n    containsPoint: function(a1) {\n        return THREE.Triangle.containsPoint(a1, this.a, this.b, this.c);\n    },\n    equals: function(a1) {\n        return a1.a.equals(this.a) && a1.b.equals(this.b) && a1.c.equals(this.c);\n    }\n};\nTHREE.Clock = function(a1) {\n    this.autoStart = void 0 !== a1 ? a1 : !0;\n    this.elapsedTime = this.oldTime = this.startTime = 0;\n    this.running = !1;\n};\nTHREE.Clock.prototype = {\n    constructor: THREE.Clock,\n    start: function() {\n        this.oldTime = this.startTime = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now();\n        this.running = !0;\n    },\n    stop: function() {\n        this.getElapsedTime();\n        this.running = !1;\n    },\n    getElapsedTime: function() {\n        this.getDelta();\n        return this.elapsedTime;\n    },\n    getDelta: function() {\n        var a1 = 0;\n        this.autoStart && !this.running && this.start();\n        if (this.running) {\n            var b = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now(), a1 = .001 * (b - this.oldTime);\n            this.oldTime = b;\n            this.elapsedTime += a1;\n        }\n        return a1;\n    }\n};\nTHREE.EventDispatcher = function() {};\nTHREE.EventDispatcher.prototype = {\n    constructor: THREE.EventDispatcher,\n    apply: function(a1) {\n        a1.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\n        a1.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\n        a1.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\n        a1.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\n    },\n    addEventListener: function(a1, b) {\n        void 0 === this._listeners && (this._listeners = {});\n        var c = this._listeners;\n        void 0 === c[a1] && (c[a1] = []);\n        -1 === c[a1].indexOf(b) && c[a1].push(b);\n    },\n    hasEventListener: function(a1, b) {\n        if (void 0 === this._listeners) return !1;\n        var c = this._listeners;\n        return void 0 !== c[a1] && -1 !== c[a1].indexOf(b) ? !0 : !1;\n    },\n    removeEventListener: function(a1, b) {\n        if (void 0 !== this._listeners) {\n            var c = this._listeners[a1];\n            if (void 0 !== c) {\n                var d = c.indexOf(b);\n                -1 !== d && c.splice(d, 1);\n            }\n        }\n    },\n    dispatchEvent: function(a1) {\n        if (void 0 !== this._listeners) {\n            var b = this._listeners[a1.type];\n            if (void 0 !== b) {\n                a1.target = this;\n                for(var c = [], d = b.length, e = 0; e < d; e++)c[e] = b[e];\n                for(e = 0; e < d; e++)c[e].call(this, a1);\n            }\n        }\n    }\n};\n(function(a1) {\n    function b(a1, b) {\n        return a1.distance - b.distance;\n    }\n    a1.Raycaster = function(b, c, g, f) {\n        this.ray = new a1.Ray(b, c);\n        this.near = g || 0;\n        this.far = f || Infinity;\n        this.params = {\n            Mesh: {},\n            Line: {},\n            LOD: {},\n            Points: {\n                threshold: 1\n            },\n            Sprite: {}\n        };\n        Object.defineProperties(this.params, {\n            PointCloud: {\n                get: function() {\n                    console.warn(\"THREE.Raycaster: params.PointCloud has been renamed to params.Points.\");\n                    return this.Points;\n                }\n            }\n        });\n    };\n    var c = function(a1, b, g, f) {\n        if (!1 !== a1.visible && (a1.raycast(b, g), !0 === f)) {\n            a1 = a1.children;\n            f = 0;\n            for(var h = a1.length; f < h; f++)c(a1[f], b, g, !0);\n        }\n    };\n    a1.Raycaster.prototype = {\n        constructor: a1.Raycaster,\n        linePrecision: 1,\n        set: function(a1, b) {\n            this.ray.set(a1, b);\n        },\n        setFromCamera: function(b, c) {\n            c instanceof a1.PerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(c.matrixWorld), this.ray.direction.set(b.x, b.y, .5).unproject(c).sub(this.ray.origin).normalize()) : c instanceof a1.OrthographicCamera ? (this.ray.origin.set(b.x, b.y, -1).unproject(c), this.ray.direction.set(0, 0, -1).transformDirection(c.matrixWorld)) : console.error(\"THREE.Raycaster: Unsupported camera type.\");\n        },\n        intersectObject: function(a1, e) {\n            var g = [];\n            c(a1, this, g, e);\n            g.sort(b);\n            return g;\n        },\n        intersectObjects: function(a1, e) {\n            var g = [];\n            if (!1 === Array.isArray(a1)) return console.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"), g;\n            for(var f = 0, h = a1.length; f < h; f++)c(a1[f], this, g, e);\n            g.sort(b);\n            return g;\n        }\n    };\n})(THREE);\nTHREE.Object3D = function() {\n    Object.defineProperty(this, \"id\", {\n        value: THREE.Object3DIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = \"\";\n    this.type = \"Object3D\";\n    this.parent = null;\n    this.children = [];\n    this.up = THREE.Object3D.DefaultUp.clone();\n    var a1 = new THREE.Vector3, b = new THREE.Euler, c = new THREE.Quaternion, d = new THREE.Vector3(1, 1, 1);\n    b.onChange(function() {\n        c.setFromEuler(b, !1);\n    });\n    c.onChange(function() {\n        b.setFromQuaternion(c, void 0, !1);\n    });\n    Object.defineProperties(this, {\n        position: {\n            enumerable: !0,\n            value: a1\n        },\n        rotation: {\n            enumerable: !0,\n            value: b\n        },\n        quaternion: {\n            enumerable: !0,\n            value: c\n        },\n        scale: {\n            enumerable: !0,\n            value: d\n        },\n        modelViewMatrix: {\n            value: new THREE.Matrix4\n        },\n        normalMatrix: {\n            value: new THREE.Matrix3\n        }\n    });\n    this.rotationAutoUpdate = !0;\n    this.matrix = new THREE.Matrix4;\n    this.matrixWorld = new THREE.Matrix4;\n    this.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = !1;\n    this.visible = !0;\n    this.receiveShadow = this.castShadow = !1;\n    this.frustumCulled = !0;\n    this.renderOrder = 0;\n    this.userData = {};\n};\nTHREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0);\nTHREE.Object3D.DefaultMatrixAutoUpdate = !0;\nTHREE.Object3D.prototype = {\n    constructor: THREE.Object3D,\n    get eulerOrder () {\n        console.warn(\"THREE.Object3D: .eulerOrder has been moved to .rotation.order.\");\n        return this.rotation.order;\n    },\n    set eulerOrder (a){\n        console.warn(\"THREE.Object3D: .eulerOrder has been moved to .rotation.order.\");\n        this.rotation.order = a;\n    },\n    get useQuaternion () {\n        console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\");\n    },\n    set useQuaternion (a){\n        console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\");\n    },\n    set renderDepth (a){\n        console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\");\n    },\n    applyMatrix: function(a1) {\n        this.matrix.multiplyMatrices(a1, this.matrix);\n        this.matrix.decompose(this.position, this.quaternion, this.scale);\n    },\n    setRotationFromAxisAngle: function(a1, b) {\n        this.quaternion.setFromAxisAngle(a1, b);\n    },\n    setRotationFromEuler: function(a1) {\n        this.quaternion.setFromEuler(a1, !0);\n    },\n    setRotationFromMatrix: function(a1) {\n        this.quaternion.setFromRotationMatrix(a1);\n    },\n    setRotationFromQuaternion: function(a1) {\n        this.quaternion.copy(a1);\n    },\n    rotateOnAxis: function() {\n        var a1 = new THREE.Quaternion;\n        return function(b, c) {\n            a1.setFromAxisAngle(b, c);\n            this.quaternion.multiply(a1);\n            return this;\n        };\n    }(),\n    rotateX: function() {\n        var a1 = new THREE.Vector3(1, 0, 0);\n        return function(b) {\n            return this.rotateOnAxis(a1, b);\n        };\n    }(),\n    rotateY: function() {\n        var a1 = new THREE.Vector3(0, 1, 0);\n        return function(b) {\n            return this.rotateOnAxis(a1, b);\n        };\n    }(),\n    rotateZ: function() {\n        var a1 = new THREE.Vector3(0, 0, 1);\n        return function(b) {\n            return this.rotateOnAxis(a1, b);\n        };\n    }(),\n    translateOnAxis: function() {\n        var a1 = new THREE.Vector3;\n        return function(b, c) {\n            a1.copy(b).applyQuaternion(this.quaternion);\n            this.position.add(a1.multiplyScalar(c));\n            return this;\n        };\n    }(),\n    translate: function(a1, b) {\n        console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\");\n        return this.translateOnAxis(b, a1);\n    },\n    translateX: function() {\n        var a1 = new THREE.Vector3(1, 0, 0);\n        return function(b) {\n            return this.translateOnAxis(a1, b);\n        };\n    }(),\n    translateY: function() {\n        var a1 = new THREE.Vector3(0, 1, 0);\n        return function(b) {\n            return this.translateOnAxis(a1, b);\n        };\n    }(),\n    translateZ: function() {\n        var a1 = new THREE.Vector3(0, 0, 1);\n        return function(b) {\n            return this.translateOnAxis(a1, b);\n        };\n    }(),\n    localToWorld: function(a1) {\n        return a1.applyMatrix4(this.matrixWorld);\n    },\n    worldToLocal: function() {\n        var a1 = new THREE.Matrix4;\n        return function(b) {\n            return b.applyMatrix4(a1.getInverse(this.matrixWorld));\n        };\n    }(),\n    lookAt: function() {\n        var a1 = new THREE.Matrix4;\n        return function(b) {\n            a1.lookAt(b, this.position, this.up);\n            this.quaternion.setFromRotationMatrix(a1);\n        };\n    }(),\n    add: function(a1) {\n        if (1 < arguments.length) {\n            for(var b = 0; b < arguments.length; b++)this.add(arguments[b]);\n            return this;\n        }\n        if (a1 === this) return console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", a1), this;\n        a1 instanceof THREE.Object3D ? (null !== a1.parent && a1.parent.remove(a1), a1.parent = this, a1.dispatchEvent({\n            type: \"added\"\n        }), this.children.push(a1)) : console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", a1);\n        return this;\n    },\n    remove: function(a1) {\n        if (1 < arguments.length) for(var b = 0; b < arguments.length; b++)this.remove(arguments[b]);\n        b = this.children.indexOf(a1);\n        -1 !== b && (a1.parent = null, a1.dispatchEvent({\n            type: \"removed\"\n        }), this.children.splice(b, 1));\n    },\n    getChildByName: function(a1) {\n        console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\");\n        return this.getObjectByName(a1);\n    },\n    getObjectById: function(a1) {\n        return this.getObjectByProperty(\"id\", a1);\n    },\n    getObjectByName: function(a1) {\n        return this.getObjectByProperty(\"name\", a1);\n    },\n    getObjectByProperty: function(a1, b) {\n        if (this[a1] === b) return this;\n        for(var c = 0, d = this.children.length; c < d; c++){\n            var e = this.children[c].getObjectByProperty(a1, b);\n            if (void 0 !== e) return e;\n        }\n    },\n    getWorldPosition: function(a1) {\n        a1 = a1 || new THREE.Vector3;\n        this.updateMatrixWorld(!0);\n        return a1.setFromMatrixPosition(this.matrixWorld);\n    },\n    getWorldQuaternion: function() {\n        var a1 = new THREE.Vector3, b = new THREE.Vector3;\n        return function(c) {\n            c = c || new THREE.Quaternion;\n            this.updateMatrixWorld(!0);\n            this.matrixWorld.decompose(a1, c, b);\n            return c;\n        };\n    }(),\n    getWorldRotation: function() {\n        var a1 = new THREE.Quaternion;\n        return function(b) {\n            b = b || new THREE.Euler;\n            this.getWorldQuaternion(a1);\n            return b.setFromQuaternion(a1, this.rotation.order, !1);\n        };\n    }(),\n    getWorldScale: function() {\n        var a1 = new THREE.Vector3, b = new THREE.Quaternion;\n        return function(c) {\n            c = c || new THREE.Vector3;\n            this.updateMatrixWorld(!0);\n            this.matrixWorld.decompose(a1, b, c);\n            return c;\n        };\n    }(),\n    getWorldDirection: function() {\n        var a1 = new THREE.Quaternion;\n        return function(b) {\n            b = b || new THREE.Vector3;\n            this.getWorldQuaternion(a1);\n            return b.set(0, 0, 1).applyQuaternion(a1);\n        };\n    }(),\n    raycast: function() {},\n    traverse: function(a1) {\n        a1(this);\n        for(var b = this.children, c = 0, d = b.length; c < d; c++)b[c].traverse(a1);\n    },\n    traverseVisible: function(a1) {\n        if (!1 !== this.visible) {\n            a1(this);\n            for(var b = this.children, c = 0, d = b.length; c < d; c++)b[c].traverseVisible(a1);\n        }\n    },\n    traverseAncestors: function(a1) {\n        var b = this.parent;\n        null !== b && (a1(b), b.traverseAncestors(a1));\n    },\n    updateMatrix: function() {\n        this.matrix.compose(this.position, this.quaternion, this.scale);\n        this.matrixWorldNeedsUpdate = !0;\n    },\n    updateMatrixWorld: function(a1) {\n        !0 === this.matrixAutoUpdate && this.updateMatrix();\n        if (!0 === this.matrixWorldNeedsUpdate || !0 === a1) null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, a1 = !0;\n        for(var b = 0, c = this.children.length; b < c; b++)this.children[b].updateMatrixWorld(a1);\n    },\n    toJSON: function(a1) {\n        function b(a1) {\n            var b = [], c;\n            for(c in a1){\n                var d = a1[c];\n                delete d.metadata;\n                b.push(d);\n            }\n            return b;\n        }\n        var c = void 0 === a1, d = {}, e = {\n            object: d\n        };\n        c && (a1 = {\n            geometries: {},\n            materials: {},\n            textures: {},\n            images: {}\n        }, e.metadata = {\n            version: 4.4,\n            type: \"Object\",\n            generator: \"Object3D.toJSON\"\n        });\n        d.uuid = this.uuid;\n        d.type = this.type;\n        \"\" !== this.name && (d.name = this.name);\n        \"{}\" !== JSON.stringify(this.userData) && (d.userData = this.userData);\n        !0 !== this.visible && (d.visible = this.visible);\n        d.matrix = this.matrix.toArray();\n        if (0 < this.children.length) {\n            d.children = [];\n            for(var g = 0; g < this.children.length; g++)d.children.push(this.children[g].toJSON(a1).object);\n        }\n        c && (c = b(a1.geometries), d = b(a1.materials), g = b(a1.textures), a1 = b(a1.images), 0 < c.length && (e.geometries = c), 0 < d.length && (e.materials = d), 0 < g.length && (e.textures = g), 0 < a1.length && (e.images = a1));\n        return e;\n    },\n    clone: function(a1) {\n        return (new this.constructor).copy(this, a1);\n    },\n    copy: function(a1, b) {\n        void 0 === b && (b = !0);\n        this.name = a1.name;\n        this.up.copy(a1.up);\n        this.position.copy(a1.position);\n        this.quaternion.copy(a1.quaternion);\n        this.scale.copy(a1.scale);\n        this.rotationAutoUpdate = a1.rotationAutoUpdate;\n        this.matrix.copy(a1.matrix);\n        this.matrixWorld.copy(a1.matrixWorld);\n        this.matrixAutoUpdate = a1.matrixAutoUpdate;\n        this.matrixWorldNeedsUpdate = a1.matrixWorldNeedsUpdate;\n        this.visible = a1.visible;\n        this.castShadow = a1.castShadow;\n        this.receiveShadow = a1.receiveShadow;\n        this.frustumCulled = a1.frustumCulled;\n        this.renderOrder = a1.renderOrder;\n        this.userData = JSON.parse(JSON.stringify(a1.userData));\n        if (!0 === b) for(var c = 0; c < a1.children.length; c++)this.add(a1.children[c].clone());\n        return this;\n    }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);\nTHREE.Object3DIdCount = 0;\nTHREE.Face3 = function(a1, b, c, d, e, g) {\n    this.a = a1;\n    this.b = b;\n    this.c = c;\n    this.normal = d instanceof THREE.Vector3 ? d : new THREE.Vector3;\n    this.vertexNormals = Array.isArray(d) ? d : [];\n    this.color = e instanceof THREE.Color ? e : new THREE.Color;\n    this.vertexColors = Array.isArray(e) ? e : [];\n    this.materialIndex = void 0 !== g ? g : 0;\n};\nTHREE.Face3.prototype = {\n    constructor: THREE.Face3,\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.a = a1.a;\n        this.b = a1.b;\n        this.c = a1.c;\n        this.normal.copy(a1.normal);\n        this.color.copy(a1.color);\n        this.materialIndex = a1.materialIndex;\n        for(var b = 0, c = a1.vertexNormals.length; b < c; b++)this.vertexNormals[b] = a1.vertexNormals[b].clone();\n        b = 0;\n        for(c = a1.vertexColors.length; b < c; b++)this.vertexColors[b] = a1.vertexColors[b].clone();\n        return this;\n    }\n};\nTHREE.Face4 = function(a1, b, c, d, e, g, f) {\n    console.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\");\n    return new THREE.Face3(a1, b, c, e, g, f);\n};\nTHREE.BufferAttribute = function(a1, b) {\n    this.uuid = THREE.Math.generateUUID();\n    this.array = a1;\n    this.itemSize = b;\n    this.dynamic = !1;\n    this.updateRange = {\n        offset: 0,\n        count: -1\n    };\n    this.version = 0;\n};\nTHREE.BufferAttribute.prototype = {\n    constructor: THREE.BufferAttribute,\n    get length () {\n        console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");\n        return this.array.length;\n    },\n    get count () {\n        return this.array.length / this.itemSize;\n    },\n    set needsUpdate (a){\n        !0 === a && this.version++;\n    },\n    setDynamic: function(a1) {\n        this.dynamic = a1;\n        return this;\n    },\n    copy: function(a1) {\n        this.array = new a1.array.constructor(a1.array);\n        this.itemSize = a1.itemSize;\n        this.dynamic = a1.dynamic;\n        return this;\n    },\n    copyAt: function(a1, b, c) {\n        a1 *= this.itemSize;\n        c *= b.itemSize;\n        for(var d = 0, e = this.itemSize; d < e; d++)this.array[a1 + d] = b.array[c + d];\n        return this;\n    },\n    copyArray: function(a1) {\n        this.array.set(a1);\n        return this;\n    },\n    copyColorsArray: function(a1) {\n        for(var b = this.array, c = 0, d = 0, e = a1.length; d < e; d++){\n            var g = a1[d];\n            void 0 === g && (console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\", d), g = new THREE.Color);\n            b[c++] = g.r;\n            b[c++] = g.g;\n            b[c++] = g.b;\n        }\n        return this;\n    },\n    copyIndicesArray: function(a1) {\n        for(var b = this.array, c = 0, d = 0, e = a1.length; d < e; d++){\n            var g = a1[d];\n            b[c++] = g.a;\n            b[c++] = g.b;\n            b[c++] = g.c;\n        }\n        return this;\n    },\n    copyVector2sArray: function(a1) {\n        for(var b = this.array, c = 0, d = 0, e = a1.length; d < e; d++){\n            var g = a1[d];\n            void 0 === g && (console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\", d), g = new THREE.Vector2);\n            b[c++] = g.x;\n            b[c++] = g.y;\n        }\n        return this;\n    },\n    copyVector3sArray: function(a1) {\n        for(var b = this.array, c = 0, d = 0, e = a1.length; d < e; d++){\n            var g = a1[d];\n            void 0 === g && (console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\", d), g = new THREE.Vector3);\n            b[c++] = g.x;\n            b[c++] = g.y;\n            b[c++] = g.z;\n        }\n        return this;\n    },\n    copyVector4sArray: function(a1) {\n        for(var b = this.array, c = 0, d = 0, e = a1.length; d < e; d++){\n            var g = a1[d];\n            void 0 === g && (console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\", d), g = new THREE.Vector4);\n            b[c++] = g.x;\n            b[c++] = g.y;\n            b[c++] = g.z;\n            b[c++] = g.w;\n        }\n        return this;\n    },\n    set: function(a1, b) {\n        void 0 === b && (b = 0);\n        this.array.set(a1, b);\n        return this;\n    },\n    getX: function(a1) {\n        return this.array[a1 * this.itemSize];\n    },\n    setX: function(a1, b) {\n        this.array[a1 * this.itemSize] = b;\n        return this;\n    },\n    getY: function(a1) {\n        return this.array[a1 * this.itemSize + 1];\n    },\n    setY: function(a1, b) {\n        this.array[a1 * this.itemSize + 1] = b;\n        return this;\n    },\n    getZ: function(a1) {\n        return this.array[a1 * this.itemSize + 2];\n    },\n    setZ: function(a1, b) {\n        this.array[a1 * this.itemSize + 2] = b;\n        return this;\n    },\n    getW: function(a1) {\n        return this.array[a1 * this.itemSize + 3];\n    },\n    setW: function(a1, b) {\n        this.array[a1 * this.itemSize + 3] = b;\n        return this;\n    },\n    setXY: function(a1, b, c) {\n        a1 *= this.itemSize;\n        this.array[a1 + 0] = b;\n        this.array[a1 + 1] = c;\n        return this;\n    },\n    setXYZ: function(a1, b, c, d) {\n        a1 *= this.itemSize;\n        this.array[a1 + 0] = b;\n        this.array[a1 + 1] = c;\n        this.array[a1 + 2] = d;\n        return this;\n    },\n    setXYZW: function(a1, b, c, d, e) {\n        a1 *= this.itemSize;\n        this.array[a1 + 0] = b;\n        this.array[a1 + 1] = c;\n        this.array[a1 + 2] = d;\n        this.array[a1 + 3] = e;\n        return this;\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    }\n};\nTHREE.Int8Attribute = function(a1, b) {\n    return new THREE.BufferAttribute(new Int8Array(a1), b);\n};\nTHREE.Uint8Attribute = function(a1, b) {\n    return new THREE.BufferAttribute(new Uint8Array(a1), b);\n};\nTHREE.Uint8ClampedAttribute = function(a1, b) {\n    return new THREE.BufferAttribute(new Uint8ClampedArray(a1), b);\n};\nTHREE.Int16Attribute = function(a1, b) {\n    return new THREE.BufferAttribute(new Int16Array(a1), b);\n};\nTHREE.Uint16Attribute = function(a1, b) {\n    return new THREE.BufferAttribute(new Uint16Array(a1), b);\n};\nTHREE.Int32Attribute = function(a1, b) {\n    return new THREE.BufferAttribute(new Int32Array(a1), b);\n};\nTHREE.Uint32Attribute = function(a1, b) {\n    return new THREE.BufferAttribute(new Uint32Array(a1), b);\n};\nTHREE.Float32Attribute = function(a1, b) {\n    return new THREE.BufferAttribute(new Float32Array(a1), b);\n};\nTHREE.Float64Attribute = function(a1, b) {\n    return new THREE.BufferAttribute(new Float64Array(a1), b);\n};\nTHREE.DynamicBufferAttribute = function(a1, b) {\n    console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.\");\n    return new THREE.BufferAttribute(a1, b).setDynamic(!0);\n};\nTHREE.InstancedBufferAttribute = function(a1, b, c) {\n    THREE.BufferAttribute.call(this, a1, b);\n    this.meshPerAttribute = c || 1;\n};\nTHREE.InstancedBufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype);\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\nTHREE.InstancedBufferAttribute.prototype.copy = function(a1) {\n    THREE.BufferAttribute.prototype.copy.call(this, a1);\n    this.meshPerAttribute = a1.meshPerAttribute;\n    return this;\n};\nTHREE.InterleavedBuffer = function(a1, b) {\n    this.uuid = THREE.Math.generateUUID();\n    this.array = a1;\n    this.stride = b;\n    this.dynamic = !1;\n    this.updateRange = {\n        offset: 0,\n        count: -1\n    };\n    this.version = 0;\n};\nTHREE.InterleavedBuffer.prototype = {\n    constructor: THREE.InterleavedBuffer,\n    get length () {\n        return this.array.length;\n    },\n    get count () {\n        return this.array.length / this.stride;\n    },\n    set needsUpdate (a){\n        !0 === a && this.version++;\n    },\n    setDynamic: function(a1) {\n        this.dynamic = a1;\n        return this;\n    },\n    copy: function(a1) {\n        this.array = new a1.array.constructor(a1.array);\n        this.stride = a1.stride;\n        this.dynamic = a1.dynamic;\n    },\n    copyAt: function(a1, b, c) {\n        a1 *= this.stride;\n        c *= b.stride;\n        for(var d = 0, e = this.stride; d < e; d++)this.array[a1 + d] = b.array[c + d];\n        return this;\n    },\n    set: function(a1, b) {\n        void 0 === b && (b = 0);\n        this.array.set(a1, b);\n        return this;\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    }\n};\nTHREE.InstancedInterleavedBuffer = function(a1, b, c) {\n    THREE.InterleavedBuffer.call(this, a1, b);\n    this.meshPerAttribute = c || 1;\n};\nTHREE.InstancedInterleavedBuffer.prototype = Object.create(THREE.InterleavedBuffer.prototype);\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\nTHREE.InstancedInterleavedBuffer.prototype.copy = function(a1) {\n    THREE.InterleavedBuffer.prototype.copy.call(this, a1);\n    this.meshPerAttribute = a1.meshPerAttribute;\n    return this;\n};\nTHREE.InterleavedBufferAttribute = function(a1, b, c) {\n    this.uuid = THREE.Math.generateUUID();\n    this.data = a1;\n    this.itemSize = b;\n    this.offset = c;\n};\nTHREE.InterleavedBufferAttribute.prototype = {\n    constructor: THREE.InterleavedBufferAttribute,\n    get length () {\n        console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");\n        return this.array.length;\n    },\n    get count () {\n        return this.data.array.length / this.data.stride;\n    },\n    setX: function(a1, b) {\n        this.data.array[a1 * this.data.stride + this.offset] = b;\n        return this;\n    },\n    setY: function(a1, b) {\n        this.data.array[a1 * this.data.stride + this.offset + 1] = b;\n        return this;\n    },\n    setZ: function(a1, b) {\n        this.data.array[a1 * this.data.stride + this.offset + 2] = b;\n        return this;\n    },\n    setW: function(a1, b) {\n        this.data.array[a1 * this.data.stride + this.offset + 3] = b;\n        return this;\n    },\n    getX: function(a1) {\n        return this.data.array[a1 * this.data.stride + this.offset];\n    },\n    getY: function(a1) {\n        return this.data.array[a1 * this.data.stride + this.offset + 1];\n    },\n    getZ: function(a1) {\n        return this.data.array[a1 * this.data.stride + this.offset + 2];\n    },\n    getW: function(a1) {\n        return this.data.array[a1 * this.data.stride + this.offset + 3];\n    },\n    setXY: function(a1, b, c) {\n        a1 = a1 * this.data.stride + this.offset;\n        this.data.array[a1 + 0] = b;\n        this.data.array[a1 + 1] = c;\n        return this;\n    },\n    setXYZ: function(a1, b, c, d) {\n        a1 = a1 * this.data.stride + this.offset;\n        this.data.array[a1 + 0] = b;\n        this.data.array[a1 + 1] = c;\n        this.data.array[a1 + 2] = d;\n        return this;\n    },\n    setXYZW: function(a1, b, c, d, e) {\n        a1 = a1 * this.data.stride + this.offset;\n        this.data.array[a1 + 0] = b;\n        this.data.array[a1 + 1] = c;\n        this.data.array[a1 + 2] = d;\n        this.data.array[a1 + 3] = e;\n        return this;\n    }\n};\nTHREE.Geometry = function() {\n    Object.defineProperty(this, \"id\", {\n        value: THREE.GeometryIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = \"\";\n    this.type = \"Geometry\";\n    this.vertices = [];\n    this.colors = [];\n    this.faces = [];\n    this.faceVertexUvs = [\n        []\n    ];\n    this.morphTargets = [];\n    this.morphColors = [];\n    this.morphNormals = [];\n    this.skinWeights = [];\n    this.skinIndices = [];\n    this.lineDistances = [];\n    this.boundingSphere = this.boundingBox = null;\n    this.groupsNeedUpdate = this.lineDistancesNeedUpdate = this.colorsNeedUpdate = this.normalsNeedUpdate = this.uvsNeedUpdate = this.elementsNeedUpdate = this.verticesNeedUpdate = !1;\n};\nTHREE.Geometry.prototype = {\n    constructor: THREE.Geometry,\n    applyMatrix: function(a1) {\n        for(var b = (new THREE.Matrix3).getNormalMatrix(a1), c = 0, d = this.vertices.length; c < d; c++)this.vertices[c].applyMatrix4(a1);\n        c = 0;\n        for(d = this.faces.length; c < d; c++){\n            a1 = this.faces[c];\n            a1.normal.applyMatrix3(b).normalize();\n            for(var e = 0, g = a1.vertexNormals.length; e < g; e++)a1.vertexNormals[e].applyMatrix3(b).normalize();\n        }\n        null !== this.boundingBox && this.computeBoundingBox();\n        null !== this.boundingSphere && this.computeBoundingSphere();\n        this.normalsNeedUpdate = this.verticesNeedUpdate = !0;\n    },\n    rotateX: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeRotationX(b);\n            this.applyMatrix(a1);\n            return this;\n        };\n    }(),\n    rotateY: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeRotationY(b);\n            this.applyMatrix(a1);\n            return this;\n        };\n    }(),\n    rotateZ: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeRotationZ(b);\n            this.applyMatrix(a1);\n            return this;\n        };\n    }(),\n    translate: function() {\n        var a1;\n        return function(b, c, d) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeTranslation(b, c, d);\n            this.applyMatrix(a1);\n            return this;\n        };\n    }(),\n    scale: function() {\n        var a1;\n        return function(b, c, d) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeScale(b, c, d);\n            this.applyMatrix(a1);\n            return this;\n        };\n    }(),\n    lookAt: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Object3D);\n            a1.lookAt(b);\n            a1.updateMatrix();\n            this.applyMatrix(a1.matrix);\n        };\n    }(),\n    fromBufferGeometry: function(a1) {\n        var b = this, c = null !== a1.index ? a1.index.array : void 0, d = a1.attributes, e = d.position.array, g = void 0 !== d.normal ? d.normal.array : void 0, f = void 0 !== d.color ? d.color.array : void 0, h = void 0 !== d.uv ? d.uv.array : void 0, k = void 0 !== d.uv2 ? d.uv2.array : void 0;\n        void 0 !== k && (this.faceVertexUvs[1] = []);\n        for(var l = [], n = [], p = [], m = d = 0; d < e.length; d += 3, m += 2)b.vertices.push(new THREE.Vector3(e[d], e[d + 1], e[d + 2])), void 0 !== g && l.push(new THREE.Vector3(g[d], g[d + 1], g[d + 2])), void 0 !== f && b.colors.push(new THREE.Color(f[d], f[d + 1], f[d + 2])), void 0 !== h && n.push(new THREE.Vector2(h[m], h[m + 1])), void 0 !== k && p.push(new THREE.Vector2(k[m], k[m + 1]));\n        var q = function(a1, c, d) {\n            var e = void 0 !== g ? [\n                l[a1].clone(),\n                l[c].clone(),\n                l[d].clone()\n            ] : [], m = void 0 !== f ? [\n                b.colors[a1].clone(),\n                b.colors[c].clone(),\n                b.colors[d].clone()\n            ] : [], e = new THREE.Face3(a1, c, d, e, m);\n            b.faces.push(e);\n            void 0 !== h && b.faceVertexUvs[0].push([\n                n[a1].clone(),\n                n[c].clone(),\n                n[d].clone()\n            ]);\n            void 0 !== k && b.faceVertexUvs[1].push([\n                p[a1].clone(),\n                p[c].clone(),\n                p[d].clone()\n            ]);\n        };\n        if (void 0 !== c) {\n            if (e = a1.groups, 0 < e.length) for(d = 0; d < e.length; d++)for(var m = e[d], t = m.start, r = m.count, m = t, t = t + r; m < t; m += 3)q(c[m], c[m + 1], c[m + 2]);\n            else for(d = 0; d < c.length; d += 3)q(c[d], c[d + 1], c[d + 2]);\n        } else for(d = 0; d < e.length / 3; d += 3)q(d, d + 1, d + 2);\n        this.computeFaceNormals();\n        null !== a1.boundingBox && (this.boundingBox = a1.boundingBox.clone());\n        null !== a1.boundingSphere && (this.boundingSphere = a1.boundingSphere.clone());\n        return this;\n    },\n    center: function() {\n        this.computeBoundingBox();\n        var a1 = this.boundingBox.center().negate();\n        this.translate(a1.x, a1.y, a1.z);\n        return a1;\n    },\n    normalize: function() {\n        this.computeBoundingSphere();\n        var a1 = this.boundingSphere.center, b = this.boundingSphere.radius, b = 0 === b ? 1 : 1 / b, c = new THREE.Matrix4;\n        c.set(b, 0, 0, -b * a1.x, 0, b, 0, -b * a1.y, 0, 0, b, -b * a1.z, 0, 0, 0, 1);\n        this.applyMatrix(c);\n        return this;\n    },\n    computeFaceNormals: function() {\n        for(var a1 = new THREE.Vector3, b = new THREE.Vector3, c = 0, d = this.faces.length; c < d; c++){\n            var e = this.faces[c], g = this.vertices[e.a], f = this.vertices[e.b];\n            a1.subVectors(this.vertices[e.c], f);\n            b.subVectors(g, f);\n            a1.cross(b);\n            a1.normalize();\n            e.normal.copy(a1);\n        }\n    },\n    computeVertexNormals: function(a1) {\n        var b, c, d;\n        d = Array(this.vertices.length);\n        b = 0;\n        for(c = this.vertices.length; b < c; b++)d[b] = new THREE.Vector3;\n        if (a1) {\n            var e, g, f, h = new THREE.Vector3, k = new THREE.Vector3;\n            a1 = 0;\n            for(b = this.faces.length; a1 < b; a1++)c = this.faces[a1], e = this.vertices[c.a], g = this.vertices[c.b], f = this.vertices[c.c], h.subVectors(f, g), k.subVectors(e, g), h.cross(k), d[c.a].add(h), d[c.b].add(h), d[c.c].add(h);\n        } else for(a1 = 0, b = this.faces.length; a1 < b; a1++)c = this.faces[a1], d[c.a].add(c.normal), d[c.b].add(c.normal), d[c.c].add(c.normal);\n        b = 0;\n        for(c = this.vertices.length; b < c; b++)d[b].normalize();\n        a1 = 0;\n        for(b = this.faces.length; a1 < b; a1++)c = this.faces[a1], e = c.vertexNormals, 3 === e.length ? (e[0].copy(d[c.a]), e[1].copy(d[c.b]), e[2].copy(d[c.c])) : (e[0] = d[c.a].clone(), e[1] = d[c.b].clone(), e[2] = d[c.c].clone());\n    },\n    computeMorphNormals: function() {\n        var a1, b, c, d, e;\n        c = 0;\n        for(d = this.faces.length; c < d; c++)for(e = this.faces[c], e.__originalFaceNormal ? e.__originalFaceNormal.copy(e.normal) : e.__originalFaceNormal = e.normal.clone(), e.__originalVertexNormals || (e.__originalVertexNormals = []), a1 = 0, b = e.vertexNormals.length; a1 < b; a1++)e.__originalVertexNormals[a1] ? e.__originalVertexNormals[a1].copy(e.vertexNormals[a1]) : e.__originalVertexNormals[a1] = e.vertexNormals[a1].clone();\n        var g = new THREE.Geometry;\n        g.faces = this.faces;\n        a1 = 0;\n        for(b = this.morphTargets.length; a1 < b; a1++){\n            if (!this.morphNormals[a1]) {\n                this.morphNormals[a1] = {};\n                this.morphNormals[a1].faceNormals = [];\n                this.morphNormals[a1].vertexNormals = [];\n                e = this.morphNormals[a1].faceNormals;\n                var f = this.morphNormals[a1].vertexNormals, h, k;\n                c = 0;\n                for(d = this.faces.length; c < d; c++)h = new THREE.Vector3, k = {\n                    a: new THREE.Vector3,\n                    b: new THREE.Vector3,\n                    c: new THREE.Vector3\n                }, e.push(h), f.push(k);\n            }\n            f = this.morphNormals[a1];\n            g.vertices = this.morphTargets[a1].vertices;\n            g.computeFaceNormals();\n            g.computeVertexNormals();\n            c = 0;\n            for(d = this.faces.length; c < d; c++)e = this.faces[c], h = f.faceNormals[c], k = f.vertexNormals[c], h.copy(e.normal), k.a.copy(e.vertexNormals[0]), k.b.copy(e.vertexNormals[1]), k.c.copy(e.vertexNormals[2]);\n        }\n        c = 0;\n        for(d = this.faces.length; c < d; c++)e = this.faces[c], e.normal = e.__originalFaceNormal, e.vertexNormals = e.__originalVertexNormals;\n    },\n    computeTangents: function() {\n        console.warn(\"THREE.Geometry: .computeTangents() has been removed.\");\n    },\n    computeLineDistances: function() {\n        for(var a1 = 0, b = this.vertices, c = 0, d = b.length; c < d; c++)0 < c && (a1 += b[c].distanceTo(b[c - 1])), this.lineDistances[c] = a1;\n    },\n    computeBoundingBox: function() {\n        null === this.boundingBox && (this.boundingBox = new THREE.Box3);\n        this.boundingBox.setFromPoints(this.vertices);\n    },\n    computeBoundingSphere: function() {\n        null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere);\n        this.boundingSphere.setFromPoints(this.vertices);\n    },\n    merge: function(a1, b, c) {\n        if (!1 === a1 instanceof THREE.Geometry) console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\", a1);\n        else {\n            var d, e = this.vertices.length, g = this.vertices, f = a1.vertices, h = this.faces, k = a1.faces, l = this.faceVertexUvs[0];\n            a1 = a1.faceVertexUvs[0];\n            void 0 === c && (c = 0);\n            void 0 !== b && (d = (new THREE.Matrix3).getNormalMatrix(b));\n            for(var n = 0, p = f.length; n < p; n++){\n                var m = f[n].clone();\n                void 0 !== b && m.applyMatrix4(b);\n                g.push(m);\n            }\n            n = 0;\n            for(p = k.length; n < p; n++){\n                var f = k[n], q, t = f.vertexNormals, r = f.vertexColors, m = new THREE.Face3(f.a + e, f.b + e, f.c + e);\n                m.normal.copy(f.normal);\n                void 0 !== d && m.normal.applyMatrix3(d).normalize();\n                b = 0;\n                for(g = t.length; b < g; b++)q = t[b].clone(), void 0 !== d && q.applyMatrix3(d).normalize(), m.vertexNormals.push(q);\n                m.color.copy(f.color);\n                b = 0;\n                for(g = r.length; b < g; b++)q = r[b], m.vertexColors.push(q.clone());\n                m.materialIndex = f.materialIndex + c;\n                h.push(m);\n            }\n            n = 0;\n            for(p = a1.length; n < p; n++)if (c = a1[n], d = [], void 0 !== c) {\n                b = 0;\n                for(g = c.length; b < g; b++)d.push(c[b].clone());\n                l.push(d);\n            }\n        }\n    },\n    mergeMesh: function(a1) {\n        !1 === a1 instanceof THREE.Mesh ? console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\", a1) : (a1.matrixAutoUpdate && a1.updateMatrix(), this.merge(a1.geometry, a1.matrix));\n    },\n    mergeVertices: function() {\n        var a1 = {}, b = [], c = [], d, e = Math.pow(10, 4), g, f;\n        g = 0;\n        for(f = this.vertices.length; g < f; g++)d = this.vertices[g], d = Math.round(d.x * e) + \"_\" + Math.round(d.y * e) + \"_\" + Math.round(d.z * e), void 0 === a1[d] ? (a1[d] = g, b.push(this.vertices[g]), c[g] = b.length - 1) : c[g] = c[a1[d]];\n        a1 = [];\n        g = 0;\n        for(f = this.faces.length; g < f; g++)for(e = this.faces[g], e.a = c[e.a], e.b = c[e.b], e.c = c[e.c], e = [\n            e.a,\n            e.b,\n            e.c\n        ], d = 0; 3 > d; d++)if (e[d] === e[(d + 1) % 3]) {\n            a1.push(g);\n            break;\n        }\n        for(g = a1.length - 1; 0 <= g; g--)for(e = a1[g], this.faces.splice(e, 1), c = 0, f = this.faceVertexUvs.length; c < f; c++)this.faceVertexUvs[c].splice(e, 1);\n        g = this.vertices.length - b.length;\n        this.vertices = b;\n        return g;\n    },\n    toJSON: function() {\n        function a1(a1, b, c) {\n            return c ? a1 | 1 << b : a1 & ~(1 << b);\n        }\n        function b(a1) {\n            var b = a1.x.toString() + a1.y.toString() + a1.z.toString();\n            if (void 0 !== l[b]) return l[b];\n            l[b] = k.length / 3;\n            k.push(a1.x, a1.y, a1.z);\n            return l[b];\n        }\n        function c(a1) {\n            var b = a1.r.toString() + a1.g.toString() + a1.b.toString();\n            if (void 0 !== p[b]) return p[b];\n            p[b] = n.length;\n            n.push(a1.getHex());\n            return p[b];\n        }\n        function d(a1) {\n            var b = a1.x.toString() + a1.y.toString();\n            if (void 0 !== q[b]) return q[b];\n            q[b] = m.length / 2;\n            m.push(a1.x, a1.y);\n            return q[b];\n        }\n        var e = {\n            metadata: {\n                version: 4.4,\n                type: \"Geometry\",\n                generator: \"Geometry.toJSON\"\n            }\n        };\n        e.uuid = this.uuid;\n        e.type = this.type;\n        \"\" !== this.name && (e.name = this.name);\n        if (void 0 !== this.parameters) {\n            var g = this.parameters, f;\n            for(f in g)void 0 !== g[f] && (e[f] = g[f]);\n            return e;\n        }\n        g = [];\n        for(f = 0; f < this.vertices.length; f++){\n            var h = this.vertices[f];\n            g.push(h.x, h.y, h.z);\n        }\n        var h = [], k = [], l = {}, n = [], p = {}, m = [], q = {};\n        for(f = 0; f < this.faces.length; f++){\n            var t = this.faces[f], r = void 0 !== this.faceVertexUvs[0][f], u = 0 < t.normal.length(), w = 0 < t.vertexNormals.length, v = 1 !== t.color.r || 1 !== t.color.g || 1 !== t.color.b, B = 0 < t.vertexColors.length, x = 0, x = a1(x, 0, 0), x = a1(x, 1, !1), x = a1(x, 2, !1), x = a1(x, 3, r), x = a1(x, 4, u), x = a1(x, 5, w), x = a1(x, 6, v), x = a1(x, 7, B);\n            h.push(x);\n            h.push(t.a, t.b, t.c);\n            r && (r = this.faceVertexUvs[0][f], h.push(d(r[0]), d(r[1]), d(r[2])));\n            u && h.push(b(t.normal));\n            w && (u = t.vertexNormals, h.push(b(u[0]), b(u[1]), b(u[2])));\n            v && h.push(c(t.color));\n            B && (t = t.vertexColors, h.push(c(t[0]), c(t[1]), c(t[2])));\n        }\n        e.data = {};\n        e.data.vertices = g;\n        e.data.normals = k;\n        0 < n.length && (e.data.colors = n);\n        0 < m.length && (e.data.uvs = [\n            m\n        ]);\n        e.data.faces = h;\n        return e;\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.vertices = [];\n        this.faces = [];\n        this.faceVertexUvs = [\n            []\n        ];\n        for(var b = a1.vertices, c = 0, d = b.length; c < d; c++)this.vertices.push(b[c].clone());\n        b = a1.faces;\n        c = 0;\n        for(d = b.length; c < d; c++)this.faces.push(b[c].clone());\n        c = 0;\n        for(d = a1.faceVertexUvs.length; c < d; c++){\n            b = a1.faceVertexUvs[c];\n            void 0 === this.faceVertexUvs[c] && (this.faceVertexUvs[c] = []);\n            for(var e = 0, g = b.length; e < g; e++){\n                for(var f = b[e], h = [], k = 0, l = f.length; k < l; k++)h.push(f[k].clone());\n                this.faceVertexUvs[c].push(h);\n            }\n        }\n        return this;\n    },\n    dispose: function() {\n        this.dispatchEvent({\n            type: \"dispose\"\n        });\n    }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);\nTHREE.GeometryIdCount = 0;\nTHREE.DirectGeometry = function() {\n    Object.defineProperty(this, \"id\", {\n        value: THREE.GeometryIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = \"\";\n    this.type = \"DirectGeometry\";\n    this.indices = [];\n    this.vertices = [];\n    this.normals = [];\n    this.colors = [];\n    this.uvs = [];\n    this.uvs2 = [];\n    this.groups = [];\n    this.morphTargets = {};\n    this.skinWeights = [];\n    this.skinIndices = [];\n    this.boundingSphere = this.boundingBox = null;\n    this.groupsNeedUpdate = this.uvsNeedUpdate = this.colorsNeedUpdate = this.normalsNeedUpdate = this.verticesNeedUpdate = !1;\n};\nTHREE.DirectGeometry.prototype = {\n    constructor: THREE.DirectGeometry,\n    computeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\n    computeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\n    computeFaceNormals: function() {\n        console.warn(\"THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.\");\n    },\n    computeVertexNormals: function() {\n        console.warn(\"THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.\");\n    },\n    computeGroups: function(a1) {\n        var b, c = [], d;\n        a1 = a1.faces;\n        for(var e = 0; e < a1.length; e++){\n            var g = a1[e];\n            g.materialIndex !== d && (d = g.materialIndex, void 0 !== b && (b.count = 3 * e - b.start, c.push(b)), b = {\n                start: 3 * e,\n                materialIndex: d\n            });\n        }\n        void 0 !== b && (b.count = 3 * e - b.start, c.push(b));\n        this.groups = c;\n    },\n    fromGeometry: function(a1) {\n        var b = a1.faces, c = a1.vertices, d = a1.faceVertexUvs, e = d[0] && 0 < d[0].length, g = d[1] && 0 < d[1].length, f = a1.morphTargets, h = f.length;\n        if (0 < h) {\n            for(var k = [], l = 0; l < h; l++)k[l] = [];\n            this.morphTargets.position = k;\n        }\n        var n = a1.morphNormals, p = n.length;\n        if (0 < p) {\n            for(var m = [], l = 0; l < p; l++)m[l] = [];\n            this.morphTargets.normal = m;\n        }\n        for(var q = a1.skinIndices, t = a1.skinWeights, r = q.length === c.length, u = t.length === c.length, l = 0; l < b.length; l++){\n            var w = b[l];\n            this.vertices.push(c[w.a], c[w.b], c[w.c]);\n            var v = w.vertexNormals;\n            3 === v.length ? this.normals.push(v[0], v[1], v[2]) : (v = w.normal, this.normals.push(v, v, v));\n            v = w.vertexColors;\n            3 === v.length ? this.colors.push(v[0], v[1], v[2]) : (v = w.color, this.colors.push(v, v, v));\n            !0 === e && (v = d[0][l], void 0 !== v ? this.uvs.push(v[0], v[1], v[2]) : (console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \", l), this.uvs.push(new THREE.Vector2, new THREE.Vector2, new THREE.Vector2)));\n            !0 === g && (v = d[1][l], void 0 !== v ? this.uvs2.push(v[0], v[1], v[2]) : (console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \", l), this.uvs2.push(new THREE.Vector2, new THREE.Vector2, new THREE.Vector2)));\n            for(v = 0; v < h; v++){\n                var B = f[v].vertices;\n                k[v].push(B[w.a], B[w.b], B[w.c]);\n            }\n            for(v = 0; v < p; v++)B = n[v].vertexNormals[l], m[v].push(B.a, B.b, B.c);\n            r && this.skinIndices.push(q[w.a], q[w.b], q[w.c]);\n            u && this.skinWeights.push(t[w.a], t[w.b], t[w.c]);\n        }\n        this.computeGroups(a1);\n        this.verticesNeedUpdate = a1.verticesNeedUpdate;\n        this.normalsNeedUpdate = a1.normalsNeedUpdate;\n        this.colorsNeedUpdate = a1.colorsNeedUpdate;\n        this.uvsNeedUpdate = a1.uvsNeedUpdate;\n        this.groupsNeedUpdate = a1.groupsNeedUpdate;\n        return this;\n    },\n    dispose: function() {\n        this.dispatchEvent({\n            type: \"dispose\"\n        });\n    }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype);\nTHREE.BufferGeometry = function() {\n    Object.defineProperty(this, \"id\", {\n        value: THREE.GeometryIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = \"\";\n    this.type = \"BufferGeometry\";\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.groups = [];\n    this.boundingSphere = this.boundingBox = null;\n    this.drawRange = {\n        start: 0,\n        count: Infinity\n    };\n};\nTHREE.BufferGeometry.prototype = {\n    constructor: THREE.BufferGeometry,\n    addIndex: function(a1) {\n        console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\");\n        this.setIndex(a1);\n    },\n    getIndex: function() {\n        return this.index;\n    },\n    setIndex: function(a1) {\n        this.index = a1;\n    },\n    addAttribute: function(a1, b, c) {\n        !1 === b instanceof THREE.BufferAttribute && !1 === b instanceof THREE.InterleavedBufferAttribute ? (console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"), this.addAttribute(a1, new THREE.BufferAttribute(b, c))) : \"index\" === a1 ? (console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"), this.setIndex(b)) : this.attributes[a1] = b;\n    },\n    getAttribute: function(a1) {\n        return this.attributes[a1];\n    },\n    removeAttribute: function(a1) {\n        delete this.attributes[a1];\n    },\n    get drawcalls () {\n        console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\");\n        return this.groups;\n    },\n    get offsets () {\n        console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\");\n        return this.groups;\n    },\n    addDrawCall: function(a1, b, c) {\n        void 0 !== c && console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\");\n        console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\");\n        this.addGroup(a1, b);\n    },\n    clearDrawCalls: function() {\n        console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\");\n        this.clearGroups();\n    },\n    addGroup: function(a1, b, c) {\n        this.groups.push({\n            start: a1,\n            count: b,\n            materialIndex: void 0 !== c ? c : 0\n        });\n    },\n    clearGroups: function() {\n        this.groups = [];\n    },\n    setDrawRange: function(a1, b) {\n        this.drawRange.start = a1;\n        this.drawRange.count = b;\n    },\n    applyMatrix: function(a1) {\n        var b = this.attributes.position;\n        void 0 !== b && (a1.applyToVector3Array(b.array), b.needsUpdate = !0);\n        b = this.attributes.normal;\n        void 0 !== b && ((new THREE.Matrix3).getNormalMatrix(a1).applyToVector3Array(b.array), b.needsUpdate = !0);\n        null !== this.boundingBox && this.computeBoundingBox();\n        null !== this.boundingSphere && this.computeBoundingSphere();\n    },\n    rotateX: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeRotationX(b);\n            this.applyMatrix(a1);\n            return this;\n        };\n    }(),\n    rotateY: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeRotationY(b);\n            this.applyMatrix(a1);\n            return this;\n        };\n    }(),\n    rotateZ: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeRotationZ(b);\n            this.applyMatrix(a1);\n            return this;\n        };\n    }(),\n    translate: function() {\n        var a1;\n        return function(b, c, d) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeTranslation(b, c, d);\n            this.applyMatrix(a1);\n            return this;\n        };\n    }(),\n    scale: function() {\n        var a1;\n        return function(b, c, d) {\n            void 0 === a1 && (a1 = new THREE.Matrix4);\n            a1.makeScale(b, c, d);\n            this.applyMatrix(a1);\n            return this;\n        };\n    }(),\n    lookAt: function() {\n        var a1;\n        return function(b) {\n            void 0 === a1 && (a1 = new THREE.Object3D);\n            a1.lookAt(b);\n            a1.updateMatrix();\n            this.applyMatrix(a1.matrix);\n        };\n    }(),\n    center: function() {\n        this.computeBoundingBox();\n        var a1 = this.boundingBox.center().negate();\n        this.translate(a1.x, a1.y, a1.z);\n        return a1;\n    },\n    setFromObject: function(a1) {\n        var b = a1.geometry;\n        if (a1 instanceof THREE.Points || a1 instanceof THREE.Line) {\n            a1 = new THREE.Float32Attribute(3 * b.vertices.length, 3);\n            var c = new THREE.Float32Attribute(3 * b.colors.length, 3);\n            this.addAttribute(\"position\", a1.copyVector3sArray(b.vertices));\n            this.addAttribute(\"color\", c.copyColorsArray(b.colors));\n            b.lineDistances && b.lineDistances.length === b.vertices.length && (a1 = new THREE.Float32Attribute(b.lineDistances.length, 1), this.addAttribute(\"lineDistance\", a1.copyArray(b.lineDistances)));\n            null !== b.boundingSphere && (this.boundingSphere = b.boundingSphere.clone());\n            null !== b.boundingBox && (this.boundingBox = b.boundingBox.clone());\n        } else a1 instanceof THREE.Mesh && b instanceof THREE.Geometry && this.fromGeometry(b);\n        return this;\n    },\n    updateFromObject: function(a1) {\n        var b = a1.geometry;\n        if (a1 instanceof THREE.Mesh) {\n            var c = b.__directGeometry;\n            if (void 0 === c) return this.fromGeometry(b);\n            c.verticesNeedUpdate = b.verticesNeedUpdate;\n            c.normalsNeedUpdate = b.normalsNeedUpdate;\n            c.colorsNeedUpdate = b.colorsNeedUpdate;\n            c.uvsNeedUpdate = b.uvsNeedUpdate;\n            c.groupsNeedUpdate = b.groupsNeedUpdate;\n            b.verticesNeedUpdate = !1;\n            b.normalsNeedUpdate = !1;\n            b.colorsNeedUpdate = !1;\n            b.uvsNeedUpdate = !1;\n            b.groupsNeedUpdate = !1;\n            b = c;\n        }\n        !0 === b.verticesNeedUpdate && (c = this.attributes.position, void 0 !== c && (c.copyVector3sArray(b.vertices), c.needsUpdate = !0), b.verticesNeedUpdate = !1);\n        !0 === b.normalsNeedUpdate && (c = this.attributes.normal, void 0 !== c && (c.copyVector3sArray(b.normals), c.needsUpdate = !0), b.normalsNeedUpdate = !1);\n        !0 === b.colorsNeedUpdate && (c = this.attributes.color, void 0 !== c && (c.copyColorsArray(b.colors), c.needsUpdate = !0), b.colorsNeedUpdate = !1);\n        b.lineDistancesNeedUpdate && (c = this.attributes.lineDistance, void 0 !== c && (c.copyArray(b.lineDistances), c.needsUpdate = !0), b.lineDistancesNeedUpdate = !1);\n        b.groupsNeedUpdate && (b.computeGroups(a1.geometry), this.groups = b.groups, b.groupsNeedUpdate = !1);\n        return this;\n    },\n    fromGeometry: function(a1) {\n        a1.__directGeometry = (new THREE.DirectGeometry).fromGeometry(a1);\n        return this.fromDirectGeometry(a1.__directGeometry);\n    },\n    fromDirectGeometry: function(a1) {\n        var b = new Float32Array(3 * a1.vertices.length);\n        this.addAttribute(\"position\", new THREE.BufferAttribute(b, 3).copyVector3sArray(a1.vertices));\n        0 < a1.normals.length && (b = new Float32Array(3 * a1.normals.length), this.addAttribute(\"normal\", new THREE.BufferAttribute(b, 3).copyVector3sArray(a1.normals)));\n        0 < a1.colors.length && (b = new Float32Array(3 * a1.colors.length), this.addAttribute(\"color\", new THREE.BufferAttribute(b, 3).copyColorsArray(a1.colors)));\n        0 < a1.uvs.length && (b = new Float32Array(2 * a1.uvs.length), this.addAttribute(\"uv\", new THREE.BufferAttribute(b, 2).copyVector2sArray(a1.uvs)));\n        0 < a1.uvs2.length && (b = new Float32Array(2 * a1.uvs2.length), this.addAttribute(\"uv2\", new THREE.BufferAttribute(b, 2).copyVector2sArray(a1.uvs2)));\n        0 < a1.indices.length && (b = new (65535 < a1.vertices.length ? Uint32Array : Uint16Array)(3 * a1.indices.length), this.setIndex(new THREE.BufferAttribute(b, 1).copyIndicesArray(a1.indices)));\n        this.groups = a1.groups;\n        for(var c in a1.morphTargets){\n            for(var b = [], d = a1.morphTargets[c], e = 0, g = d.length; e < g; e++){\n                var f = d[e], h = new THREE.Float32Attribute(3 * f.length, 3);\n                b.push(h.copyVector3sArray(f));\n            }\n            this.morphAttributes[c] = b;\n        }\n        0 < a1.skinIndices.length && (c = new THREE.Float32Attribute(4 * a1.skinIndices.length, 4), this.addAttribute(\"skinIndex\", c.copyVector4sArray(a1.skinIndices)));\n        0 < a1.skinWeights.length && (c = new THREE.Float32Attribute(4 * a1.skinWeights.length, 4), this.addAttribute(\"skinWeight\", c.copyVector4sArray(a1.skinWeights)));\n        null !== a1.boundingSphere && (this.boundingSphere = a1.boundingSphere.clone());\n        null !== a1.boundingBox && (this.boundingBox = a1.boundingBox.clone());\n        return this;\n    },\n    computeBoundingBox: function() {\n        var a1 = new THREE.Vector3;\n        return function() {\n            null === this.boundingBox && (this.boundingBox = new THREE.Box3);\n            var b = this.attributes.position.array;\n            if (b) {\n                var c = this.boundingBox;\n                c.makeEmpty();\n                for(var d = 0, e = b.length; d < e; d += 3)a1.fromArray(b, d), c.expandByPoint(a1);\n            }\n            if (void 0 === b || 0 === b.length) this.boundingBox.min.set(0, 0, 0), this.boundingBox.max.set(0, 0, 0);\n            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n        };\n    }(),\n    computeBoundingSphere: function() {\n        var a1 = new THREE.Box3, b = new THREE.Vector3;\n        return function() {\n            null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere);\n            var c = this.attributes.position.array;\n            if (c) {\n                a1.makeEmpty();\n                for(var d = this.boundingSphere.center, e = 0, g = c.length; e < g; e += 3)b.fromArray(c, e), a1.expandByPoint(b);\n                a1.center(d);\n                for(var f = 0, e = 0, g = c.length; e < g; e += 3)b.fromArray(c, e), f = Math.max(f, d.distanceToSquared(b));\n                this.boundingSphere.radius = Math.sqrt(f);\n                isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n            }\n        };\n    }(),\n    computeFaceNormals: function() {},\n    computeVertexNormals: function() {\n        var a1 = this.index, b = this.attributes, c = this.groups;\n        if (b.position) {\n            var d = b.position.array;\n            if (void 0 === b.normal) this.addAttribute(\"normal\", new THREE.BufferAttribute(new Float32Array(d.length), 3));\n            else for(var e = b.normal.array, g = 0, f = e.length; g < f; g++)e[g] = 0;\n            var e = b.normal.array, h, k, l, n = new THREE.Vector3, p = new THREE.Vector3, m = new THREE.Vector3, q = new THREE.Vector3, t = new THREE.Vector3;\n            if (a1) {\n                a1 = a1.array;\n                0 === c.length && this.addGroup(0, a1.length);\n                for(var r = 0, u = c.length; r < u; ++r)for(g = c[r], f = g.start, h = g.count, g = f, f += h; g < f; g += 3)h = 3 * a1[g + 0], k = 3 * a1[g + 1], l = 3 * a1[g + 2], n.fromArray(d, h), p.fromArray(d, k), m.fromArray(d, l), q.subVectors(m, p), t.subVectors(n, p), q.cross(t), e[h] += q.x, e[h + 1] += q.y, e[h + 2] += q.z, e[k] += q.x, e[k + 1] += q.y, e[k + 2] += q.z, e[l] += q.x, e[l + 1] += q.y, e[l + 2] += q.z;\n            } else for(g = 0, f = d.length; g < f; g += 9)n.fromArray(d, g), p.fromArray(d, g + 3), m.fromArray(d, g + 6), q.subVectors(m, p), t.subVectors(n, p), q.cross(t), e[g] = q.x, e[g + 1] = q.y, e[g + 2] = q.z, e[g + 3] = q.x, e[g + 4] = q.y, e[g + 5] = q.z, e[g + 6] = q.x, e[g + 7] = q.y, e[g + 8] = q.z;\n            this.normalizeNormals();\n            b.normal.needsUpdate = !0;\n        }\n    },\n    computeTangents: function() {\n        console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\");\n    },\n    computeOffsets: function(a1) {\n        console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\");\n    },\n    merge: function(a1, b) {\n        if (!1 === a1 instanceof THREE.BufferGeometry) console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\", a1);\n        else {\n            void 0 === b && (b = 0);\n            var c = this.attributes, d;\n            for(d in c)if (void 0 !== a1.attributes[d]) for(var e = c[d].array, g = a1.attributes[d], f = g.array, h = 0, g = g.itemSize * b; h < f.length; h++, g++)e[g] = f[h];\n            return this;\n        }\n    },\n    normalizeNormals: function() {\n        for(var a1 = this.attributes.normal.array, b, c, d, e = 0, g = a1.length; e < g; e += 3)b = a1[e], c = a1[e + 1], d = a1[e + 2], b = 1 / Math.sqrt(b * b + c * c + d * d), a1[e] *= b, a1[e + 1] *= b, a1[e + 2] *= b;\n    },\n    toJSON: function() {\n        var a1 = {\n            metadata: {\n                version: 4.4,\n                type: \"BufferGeometry\",\n                generator: \"BufferGeometry.toJSON\"\n            }\n        };\n        a1.uuid = this.uuid;\n        a1.type = this.type;\n        \"\" !== this.name && (a1.name = this.name);\n        if (void 0 !== this.parameters) {\n            var b = this.parameters, c;\n            for(c in b)void 0 !== b[c] && (a1[c] = b[c]);\n            return a1;\n        }\n        a1.data = {\n            attributes: {}\n        };\n        var d = this.index;\n        null !== d && (b = Array.prototype.slice.call(d.array), a1.data.index = {\n            type: d.array.constructor.name,\n            array: b\n        });\n        d = this.attributes;\n        for(c in d){\n            var e = d[c], b = Array.prototype.slice.call(e.array);\n            a1.data.attributes[c] = {\n                itemSize: e.itemSize,\n                type: e.array.constructor.name,\n                array: b\n            };\n        }\n        c = this.groups;\n        0 < c.length && (a1.data.groups = JSON.parse(JSON.stringify(c)));\n        c = this.boundingSphere;\n        null !== c && (a1.data.boundingSphere = {\n            center: c.center.toArray(),\n            radius: c.radius\n        });\n        return a1;\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        var b = a1.index;\n        null !== b && this.setIndex(b.clone());\n        var b = a1.attributes, c;\n        for(c in b)this.addAttribute(c, b[c].clone());\n        a1 = a1.groups;\n        c = 0;\n        for(b = a1.length; c < b; c++){\n            var d = a1[c];\n            this.addGroup(d.start, d.count);\n        }\n        return this;\n    },\n    dispose: function() {\n        this.dispatchEvent({\n            type: \"dispose\"\n        });\n    }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);\nTHREE.BufferGeometry.MaxIndex = 65535;\nTHREE.InstancedBufferGeometry = function() {\n    THREE.BufferGeometry.call(this);\n    this.type = \"InstancedBufferGeometry\";\n    this.maxInstancedCount = void 0;\n};\nTHREE.InstancedBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\nTHREE.InstancedBufferGeometry.prototype.addGroup = function(a1, b, c) {\n    this.groups.push({\n        start: a1,\n        count: b,\n        instances: c\n    });\n};\nTHREE.InstancedBufferGeometry.prototype.copy = function(a1) {\n    var b = a1.index;\n    null !== b && this.setIndex(b.clone());\n    var b = a1.attributes, c;\n    for(c in b)this.addAttribute(c, b[c].clone());\n    a1 = a1.groups;\n    c = 0;\n    for(b = a1.length; c < b; c++){\n        var d = a1[c];\n        this.addGroup(d.start, d.count, d.instances);\n    }\n    return this;\n};\nTHREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype);\nTHREE.Camera = function() {\n    THREE.Object3D.call(this);\n    this.type = \"Camera\";\n    this.matrixWorldInverse = new THREE.Matrix4;\n    this.projectionMatrix = new THREE.Matrix4;\n};\nTHREE.Camera.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Camera.prototype.constructor = THREE.Camera;\nTHREE.Camera.prototype.getWorldDirection = function() {\n    var a1 = new THREE.Quaternion;\n    return function(b) {\n        b = b || new THREE.Vector3;\n        this.getWorldQuaternion(a1);\n        return b.set(0, 0, -1).applyQuaternion(a1);\n    };\n}();\nTHREE.Camera.prototype.lookAt = function() {\n    var a1 = new THREE.Matrix4;\n    return function(b) {\n        a1.lookAt(this.position, b, this.up);\n        this.quaternion.setFromRotationMatrix(a1);\n    };\n}();\nTHREE.Camera.prototype.clone = function() {\n    return (new this.constructor).copy(this);\n};\nTHREE.Camera.prototype.copy = function(a1) {\n    THREE.Object3D.prototype.copy.call(this, a1);\n    this.matrixWorldInverse.copy(a1.matrixWorldInverse);\n    this.projectionMatrix.copy(a1.projectionMatrix);\n    return this;\n};\nTHREE.CubeCamera = function(a1, b, c) {\n    THREE.Object3D.call(this);\n    this.type = \"CubeCamera\";\n    var d = new THREE.PerspectiveCamera(90, 1, a1, b);\n    d.up.set(0, -1, 0);\n    d.lookAt(new THREE.Vector3(1, 0, 0));\n    this.add(d);\n    var e = new THREE.PerspectiveCamera(90, 1, a1, b);\n    e.up.set(0, -1, 0);\n    e.lookAt(new THREE.Vector3(-1, 0, 0));\n    this.add(e);\n    var g = new THREE.PerspectiveCamera(90, 1, a1, b);\n    g.up.set(0, 0, 1);\n    g.lookAt(new THREE.Vector3(0, 1, 0));\n    this.add(g);\n    var f = new THREE.PerspectiveCamera(90, 1, a1, b);\n    f.up.set(0, 0, -1);\n    f.lookAt(new THREE.Vector3(0, -1, 0));\n    this.add(f);\n    var h = new THREE.PerspectiveCamera(90, 1, a1, b);\n    h.up.set(0, -1, 0);\n    h.lookAt(new THREE.Vector3(0, 0, 1));\n    this.add(h);\n    var k = new THREE.PerspectiveCamera(90, 1, a1, b);\n    k.up.set(0, -1, 0);\n    k.lookAt(new THREE.Vector3(0, 0, -1));\n    this.add(k);\n    this.renderTarget = new THREE.WebGLRenderTargetCube(c, c, {\n        format: THREE.RGBFormat,\n        magFilter: THREE.LinearFilter,\n        minFilter: THREE.LinearFilter\n    });\n    this.updateCubeMap = function(a1, b) {\n        null === this.parent && this.updateMatrixWorld();\n        var c = this.renderTarget, m = c.generateMipmaps;\n        c.generateMipmaps = !1;\n        c.activeCubeFace = 0;\n        a1.render(b, d, c);\n        c.activeCubeFace = 1;\n        a1.render(b, e, c);\n        c.activeCubeFace = 2;\n        a1.render(b, g, c);\n        c.activeCubeFace = 3;\n        a1.render(b, f, c);\n        c.activeCubeFace = 4;\n        a1.render(b, h, c);\n        c.generateMipmaps = m;\n        c.activeCubeFace = 5;\n        a1.render(b, k, c);\n        a1.setRenderTarget(null);\n    };\n};\nTHREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\nTHREE.OrthographicCamera = function(a1, b, c, d, e, g) {\n    THREE.Camera.call(this);\n    this.type = \"OrthographicCamera\";\n    this.zoom = 1;\n    this.left = a1;\n    this.right = b;\n    this.top = c;\n    this.bottom = d;\n    this.near = void 0 !== e ? e : .1;\n    this.far = void 0 !== g ? g : 2E3;\n    this.updateProjectionMatrix();\n};\nTHREE.OrthographicCamera.prototype = Object.create(THREE.Camera.prototype);\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function() {\n    var a1 = (this.right - this.left) / (2 * this.zoom), b = (this.top - this.bottom) / (2 * this.zoom), c = (this.right + this.left) / 2, d = (this.top + this.bottom) / 2;\n    this.projectionMatrix.makeOrthographic(c - a1, c + a1, d + b, d - b, this.near, this.far);\n};\nTHREE.OrthographicCamera.prototype.copy = function(a1) {\n    THREE.Camera.prototype.copy.call(this, a1);\n    this.left = a1.left;\n    this.right = a1.right;\n    this.top = a1.top;\n    this.bottom = a1.bottom;\n    this.near = a1.near;\n    this.far = a1.far;\n    this.zoom = a1.zoom;\n    return this;\n};\nTHREE.OrthographicCamera.prototype.toJSON = function(a1) {\n    a1 = THREE.Object3D.prototype.toJSON.call(this, a1);\n    a1.object.zoom = this.zoom;\n    a1.object.left = this.left;\n    a1.object.right = this.right;\n    a1.object.top = this.top;\n    a1.object.bottom = this.bottom;\n    a1.object.near = this.near;\n    a1.object.far = this.far;\n    return a1;\n};\nTHREE.PerspectiveCamera = function(a1, b, c, d) {\n    THREE.Camera.call(this);\n    this.type = \"PerspectiveCamera\";\n    this.zoom = 1;\n    this.fov = void 0 !== a1 ? a1 : 50;\n    this.aspect = void 0 !== b ? b : 1;\n    this.near = void 0 !== c ? c : .1;\n    this.far = void 0 !== d ? d : 2E3;\n    this.updateProjectionMatrix();\n};\nTHREE.PerspectiveCamera.prototype = Object.create(THREE.Camera.prototype);\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\nTHREE.PerspectiveCamera.prototype.setLens = function(a1, b) {\n    void 0 === b && (b = 24);\n    this.fov = 2 * THREE.Math.radToDeg(Math.atan(b / (2 * a1)));\n    this.updateProjectionMatrix();\n};\nTHREE.PerspectiveCamera.prototype.setViewOffset = function(a1, b, c, d, e, g) {\n    this.fullWidth = a1;\n    this.fullHeight = b;\n    this.x = c;\n    this.y = d;\n    this.width = e;\n    this.height = g;\n    this.updateProjectionMatrix();\n};\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function() {\n    var a1 = THREE.Math.radToDeg(2 * Math.atan(Math.tan(.5 * THREE.Math.degToRad(this.fov)) / this.zoom));\n    if (this.fullWidth) {\n        var b = this.fullWidth / this.fullHeight, a1 = Math.tan(THREE.Math.degToRad(.5 * a1)) * this.near, c = -a1, d = b * c, b = Math.abs(b * a1 - d), c = Math.abs(a1 - c);\n        this.projectionMatrix.makeFrustum(d + this.x * b / this.fullWidth, d + (this.x + this.width) * b / this.fullWidth, a1 - (this.y + this.height) * c / this.fullHeight, a1 - this.y * c / this.fullHeight, this.near, this.far);\n    } else this.projectionMatrix.makePerspective(a1, this.aspect, this.near, this.far);\n};\nTHREE.PerspectiveCamera.prototype.copy = function(a1) {\n    THREE.Camera.prototype.copy.call(this, a1);\n    this.fov = a1.fov;\n    this.aspect = a1.aspect;\n    this.near = a1.near;\n    this.far = a1.far;\n    this.zoom = a1.zoom;\n    return this;\n};\nTHREE.PerspectiveCamera.prototype.toJSON = function(a1) {\n    a1 = THREE.Object3D.prototype.toJSON.call(this, a1);\n    a1.object.zoom = this.zoom;\n    a1.object.fov = this.fov;\n    a1.object.aspect = this.aspect;\n    a1.object.near = this.near;\n    a1.object.far = this.far;\n    return a1;\n};\nTHREE.Light = function(a1) {\n    THREE.Object3D.call(this);\n    this.type = \"Light\";\n    this.color = new THREE.Color(a1);\n};\nTHREE.Light.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Light.prototype.constructor = THREE.Light;\nTHREE.Light.prototype.copy = function(a1) {\n    THREE.Object3D.prototype.copy.call(this, a1);\n    this.color.copy(a1.color);\n    return this;\n};\nTHREE.AmbientLight = function(a1) {\n    THREE.Light.call(this, a1);\n    this.type = \"AmbientLight\";\n};\nTHREE.AmbientLight.prototype = Object.create(THREE.Light.prototype);\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\nTHREE.AmbientLight.prototype.toJSON = function(a1) {\n    a1 = THREE.Object3D.prototype.toJSON.call(this, a1);\n    a1.object.color = this.color.getHex();\n    return a1;\n};\nTHREE.DirectionalLight = function(a1, b) {\n    THREE.Light.call(this, a1);\n    this.type = \"DirectionalLight\";\n    this.position.set(0, 1, 0);\n    this.updateMatrix();\n    this.target = new THREE.Object3D;\n    this.intensity = void 0 !== b ? b : 1;\n    this.onlyShadow = this.castShadow = !1;\n    this.shadowCameraNear = 50;\n    this.shadowCameraFar = 5E3;\n    this.shadowCameraLeft = -500;\n    this.shadowCameraTop = this.shadowCameraRight = 500;\n    this.shadowCameraBottom = -500;\n    this.shadowCameraVisible = !1;\n    this.shadowBias = 0;\n    this.shadowDarkness = .5;\n    this.shadowMapHeight = this.shadowMapWidth = 512;\n    this.shadowMatrix = this.shadowCamera = this.shadowMapSize = this.shadowMap = null;\n};\nTHREE.DirectionalLight.prototype = Object.create(THREE.Light.prototype);\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\nTHREE.DirectionalLight.prototype.copy = function(a1) {\n    THREE.Light.prototype.copy.call(this, a1);\n    this.intensity = a1.intensity;\n    this.target = a1.target.clone();\n    this.castShadow = a1.castShadow;\n    this.onlyShadow = a1.onlyShadow;\n    this.shadowCameraNear = a1.shadowCameraNear;\n    this.shadowCameraFar = a1.shadowCameraFar;\n    this.shadowCameraLeft = a1.shadowCameraLeft;\n    this.shadowCameraRight = a1.shadowCameraRight;\n    this.shadowCameraTop = a1.shadowCameraTop;\n    this.shadowCameraBottom = a1.shadowCameraBottom;\n    this.shadowCameraVisible = a1.shadowCameraVisible;\n    this.shadowBias = a1.shadowBias;\n    this.shadowDarkness = a1.shadowDarkness;\n    this.shadowMapWidth = a1.shadowMapWidth;\n    this.shadowMapHeight = a1.shadowMapHeight;\n    return this;\n};\nTHREE.DirectionalLight.prototype.toJSON = function(a1) {\n    a1 = THREE.Object3D.prototype.toJSON.call(this, a1);\n    a1.object.color = this.color.getHex();\n    a1.object.intensity = this.intensity;\n    return a1;\n};\nTHREE.HemisphereLight = function(a1, b, c) {\n    THREE.Light.call(this, a1);\n    this.type = \"HemisphereLight\";\n    this.position.set(0, 1, 0);\n    this.updateMatrix();\n    this.groundColor = new THREE.Color(b);\n    this.intensity = void 0 !== c ? c : 1;\n};\nTHREE.HemisphereLight.prototype = Object.create(THREE.Light.prototype);\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\nTHREE.HemisphereLight.prototype.copy = function(a1) {\n    THREE.Light.prototype.copy.call(this, a1);\n    this.groundColor.copy(a1.groundColor);\n    this.intensity = a1.intensity;\n    return this;\n};\nTHREE.HemisphereLight.prototype.toJSON = function(a1) {\n    a1 = THREE.Object3D.prototype.toJSON.call(this, a1);\n    a1.object.color = this.color.getHex();\n    a1.object.groundColor = this.groundColor.getHex();\n    a1.object.intensity = this.intensity;\n    return a1;\n};\nTHREE.PointLight = function(a1, b, c, d) {\n    THREE.Light.call(this, a1);\n    this.type = \"PointLight\";\n    this.intensity = void 0 !== b ? b : 1;\n    this.distance = void 0 !== c ? c : 0;\n    this.decay = void 0 !== d ? d : 1;\n};\nTHREE.PointLight.prototype = Object.create(THREE.Light.prototype);\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\nTHREE.PointLight.prototype.copy = function(a1) {\n    THREE.Light.prototype.copy.call(this, a1);\n    this.intensity = a1.intensity;\n    this.distance = a1.distance;\n    this.decay = a1.decay;\n    return this;\n};\nTHREE.PointLight.prototype.toJSON = function(a1) {\n    a1 = THREE.Object3D.prototype.toJSON.call(this, a1);\n    a1.object.color = this.color.getHex();\n    a1.object.intensity = this.intensity;\n    a1.object.distance = this.distance;\n    a1.object.decay = this.decay;\n    return a1;\n};\nTHREE.SpotLight = function(a1, b, c, d, e, g) {\n    THREE.Light.call(this, a1);\n    this.type = \"SpotLight\";\n    this.position.set(0, 1, 0);\n    this.updateMatrix();\n    this.target = new THREE.Object3D;\n    this.intensity = void 0 !== b ? b : 1;\n    this.distance = void 0 !== c ? c : 0;\n    this.angle = void 0 !== d ? d : Math.PI / 3;\n    this.exponent = void 0 !== e ? e : 10;\n    this.decay = void 0 !== g ? g : 1;\n    this.onlyShadow = this.castShadow = !1;\n    this.shadowCameraNear = 50;\n    this.shadowCameraFar = 5E3;\n    this.shadowCameraFov = 50;\n    this.shadowCameraVisible = !1;\n    this.shadowBias = 0;\n    this.shadowDarkness = .5;\n    this.shadowMapHeight = this.shadowMapWidth = 512;\n    this.shadowMatrix = this.shadowCamera = this.shadowMapSize = this.shadowMap = null;\n};\nTHREE.SpotLight.prototype = Object.create(THREE.Light.prototype);\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\nTHREE.SpotLight.prototype.copy = function(a1) {\n    THREE.Light.prototype.copy.call(this, a1);\n    this.intensity = a1.intensity;\n    this.distance = a1.distance;\n    this.angle = a1.angle;\n    this.exponent = a1.exponent;\n    this.decay = a1.decay;\n    this.target = a1.target.clone();\n    this.castShadow = a1.castShadow;\n    this.onlyShadow = a1.onlyShadow;\n    this.shadowCameraNear = a1.shadowCameraNear;\n    this.shadowCameraFar = a1.shadowCameraFar;\n    this.shadowCameraFov = a1.shadowCameraFov;\n    this.shadowCameraVisible = a1.shadowCameraVisible;\n    this.shadowBias = a1.shadowBias;\n    this.shadowDarkness = a1.shadowDarkness;\n    this.shadowMapWidth = a1.shadowMapWidth;\n    this.shadowMapHeight = a1.shadowMapHeight;\n    return this;\n};\nTHREE.SpotLight.prototype.toJSON = function(a1) {\n    a1 = THREE.Object3D.prototype.toJSON.call(this, a1);\n    a1.object.color = this.color.getHex();\n    a1.object.intensity = this.intensity;\n    a1.object.distance = this.distance;\n    a1.object.angle = this.angle;\n    a1.object.exponent = this.exponent;\n    a1.object.decay = this.decay;\n    return a1;\n};\nTHREE.Cache = {\n    enabled: !1,\n    files: {},\n    add: function(a1, b) {\n        !1 !== this.enabled && (this.files[a1] = b);\n    },\n    get: function(a1) {\n        if (!1 !== this.enabled) return this.files[a1];\n    },\n    remove: function(a1) {\n        delete this.files[a1];\n    },\n    clear: function() {\n        this.files = {};\n    }\n};\nTHREE.Loader = function() {\n    this.onLoadStart = function() {};\n    this.onLoadProgress = function() {};\n    this.onLoadComplete = function() {};\n};\nTHREE.Loader.prototype = {\n    constructor: THREE.Loader,\n    crossOrigin: void 0,\n    extractUrlBase: function(a1) {\n        a1 = a1.split(\"/\");\n        if (1 === a1.length) return \"./\";\n        a1.pop();\n        return a1.join(\"/\") + \"/\";\n    },\n    initMaterials: function(a1, b, c) {\n        for(var d = [], e = 0; e < a1.length; ++e)d[e] = this.createMaterial(a1[e], b, c);\n        return d;\n    },\n    createMaterial: function() {\n        var a1;\n        return function(b, c, d) {\n            function e(a1) {\n                a1 = Math.log(a1) / Math.LN2;\n                return Math.pow(2, Math.round(a1));\n            }\n            function g(b, g, f, h, k, l, u) {\n                var w = c + f, v, B = THREE.Loader.Handlers.get(w);\n                null !== B ? v = B.load(w) : (v = new THREE.Texture, B = a1, B.setCrossOrigin(d), B.load(w, function(a1) {\n                    if (!1 === THREE.Math.isPowerOfTwo(a1.width) || !1 === THREE.Math.isPowerOfTwo(a1.height)) {\n                        var b = e(a1.width), c = e(a1.height), d = document.createElement(\"canvas\");\n                        d.width = b;\n                        d.height = c;\n                        d.getContext(\"2d\").drawImage(a1, 0, 0, b, c);\n                        v.image = d;\n                    } else v.image = a1;\n                    v.needsUpdate = !0;\n                }));\n                v.sourceFile = f;\n                h && (v.repeat.set(h[0], h[1]), 1 !== h[0] && (v.wrapS = THREE.RepeatWrapping), 1 !== h[1] && (v.wrapT = THREE.RepeatWrapping));\n                k && v.offset.set(k[0], k[1]);\n                l && (f = {\n                    repeat: THREE.RepeatWrapping,\n                    mirror: THREE.MirroredRepeatWrapping\n                }, void 0 !== f[l[0]] && (v.wrapS = f[l[0]]), void 0 !== f[l[1]] && (v.wrapT = f[l[1]]));\n                u && (v.anisotropy = u);\n                b[g] = v;\n            }\n            function f(a1) {\n                return (255 * a1[0] << 16) + (255 * a1[1] << 8) + 255 * a1[2];\n            }\n            void 0 === d && void 0 !== this.crossOrigin && (d = this.crossOrigin);\n            void 0 === a1 && (a1 = new THREE.ImageLoader);\n            var h = \"MeshLambertMaterial\", k = {};\n            if (b.shading) {\n                var l = b.shading.toLowerCase();\n                \"phong\" === l ? h = \"MeshPhongMaterial\" : \"basic\" === l && (h = \"MeshBasicMaterial\");\n            }\n            void 0 !== b.blending && void 0 !== THREE[b.blending] && (k.blending = THREE[b.blending]);\n            void 0 !== b.transparent && (k.transparent = b.transparent);\n            void 0 !== b.opacity && 1 > b.opacity && (k.transparent = !0);\n            void 0 !== b.depthTest && (k.depthTest = b.depthTest);\n            void 0 !== b.depthWrite && (k.depthWrite = b.depthWrite);\n            void 0 !== b.visible && (k.visible = b.visible);\n            void 0 !== b.flipSided && (k.side = THREE.BackSide);\n            void 0 !== b.doubleSided && (k.side = THREE.DoubleSide);\n            void 0 !== b.wireframe && (k.wireframe = b.wireframe);\n            void 0 !== b.vertexColors && (\"face\" === b.vertexColors ? k.vertexColors = THREE.FaceColors : b.vertexColors && (k.vertexColors = THREE.VertexColors));\n            b.colorDiffuse ? k.color = f(b.colorDiffuse) : b.DbgColor && (k.color = b.DbgColor);\n            b.colorEmissive && (k.emissive = f(b.colorEmissive));\n            \"MeshPhongMaterial\" === h && (b.colorSpecular && (k.specular = f(b.colorSpecular)), b.specularCoef && (k.shininess = b.specularCoef));\n            void 0 !== b.transparency && (console.warn(\"THREE.Loader: transparency has been renamed to opacity\"), b.opacity = b.transparency);\n            void 0 !== b.opacity && (k.opacity = b.opacity);\n            c && (b.mapDiffuse && g(k, \"map\", b.mapDiffuse, b.mapDiffuseRepeat, b.mapDiffuseOffset, b.mapDiffuseWrap, b.mapDiffuseAnisotropy), b.mapLight && g(k, \"lightMap\", b.mapLight, b.mapLightRepeat, b.mapLightOffset, b.mapLightWrap, b.mapLightAnisotropy), b.mapAO && g(k, \"aoMap\", b.mapAO, b.mapAORepeat, b.mapAOOffset, b.mapAOWrap, b.mapAOAnisotropy), b.mapBump && g(k, \"bumpMap\", b.mapBump, b.mapBumpRepeat, b.mapBumpOffset, b.mapBumpWrap, b.mapBumpAnisotropy), b.mapNormal && g(k, \"normalMap\", b.mapNormal, b.mapNormalRepeat, b.mapNormalOffset, b.mapNormalWrap, b.mapNormalAnisotropy), b.mapSpecular && g(k, \"specularMap\", b.mapSpecular, b.mapSpecularRepeat, b.mapSpecularOffset, b.mapSpecularWrap, b.mapSpecularAnisotropy), b.mapAlpha && g(k, \"alphaMap\", b.mapAlpha, b.mapAlphaRepeat, b.mapAlphaOffset, b.mapAlphaWrap, b.mapAlphaAnisotropy));\n            b.mapBumpScale && (k.bumpScale = b.mapBumpScale);\n            b.mapNormalFactor && (k.normalScale = new THREE.Vector2(b.mapNormalFactor, b.mapNormalFactor));\n            h = new THREE[h](k);\n            void 0 !== b.DbgName && (h.name = b.DbgName);\n            return h;\n        };\n    }()\n};\nTHREE.Loader.Handlers = {\n    handlers: [],\n    add: function(a1, b) {\n        this.handlers.push(a1, b);\n    },\n    get: function(a1) {\n        for(var b = 0, c = this.handlers.length; b < c; b += 2){\n            var d = this.handlers[b + 1];\n            if (this.handlers[b].test(a1)) return d;\n        }\n        return null;\n    }\n};\nTHREE.XHRLoader = function(a1) {\n    this.manager = void 0 !== a1 ? a1 : THREE.DefaultLoadingManager;\n};\nTHREE.XHRLoader.prototype = {\n    constructor: THREE.XHRLoader,\n    load: function(a1, b, c, d) {\n        var e = this, g = THREE.Cache.get(a1);\n        if (void 0 !== g) return b && setTimeout(function() {\n            b(g);\n        }, 0), g;\n        var f = new XMLHttpRequest;\n        f.open(\"GET\", a1, !0);\n        f.addEventListener(\"load\", function(c) {\n            THREE.Cache.add(a1, this.response);\n            b && b(this.response);\n            e.manager.itemEnd(a1);\n        }, !1);\n        void 0 !== c && f.addEventListener(\"progress\", function(a1) {\n            c(a1);\n        }, !1);\n        f.addEventListener(\"error\", function(b) {\n            d && d(b);\n            e.manager.itemError(a1);\n        }, !1);\n        void 0 !== this.crossOrigin && (f.crossOrigin = this.crossOrigin);\n        void 0 !== this.responseType && (f.responseType = this.responseType);\n        void 0 !== this.withCredentials && (f.withCredentials = this.withCredentials);\n        f.send(null);\n        e.manager.itemStart(a1);\n        return f;\n    },\n    setResponseType: function(a1) {\n        this.responseType = a1;\n    },\n    setCrossOrigin: function(a1) {\n        this.crossOrigin = a1;\n    },\n    setWithCredentials: function(a1) {\n        this.withCredentials = a1;\n    }\n};\nTHREE.ImageLoader = function(a1) {\n    this.manager = void 0 !== a1 ? a1 : THREE.DefaultLoadingManager;\n};\nTHREE.ImageLoader.prototype = {\n    constructor: THREE.ImageLoader,\n    load: function(a1, b, c, d) {\n        var e = this, g = THREE.Cache.get(a1);\n        if (void 0 !== g) return b && setTimeout(function() {\n            b(g);\n        }, 0), g;\n        var f = document.createElement(\"img\");\n        f.addEventListener(\"load\", function(c) {\n            THREE.Cache.add(a1, this);\n            b && b(this);\n            e.manager.itemEnd(a1);\n        }, !1);\n        void 0 !== c && f.addEventListener(\"progress\", function(a1) {\n            c(a1);\n        }, !1);\n        f.addEventListener(\"error\", function(b) {\n            d && d(b);\n            e.manager.itemError(a1);\n        }, !1);\n        void 0 !== this.crossOrigin && (f.crossOrigin = this.crossOrigin);\n        e.manager.itemStart(a1);\n        f.src = a1;\n        return f;\n    },\n    setCrossOrigin: function(a1) {\n        this.crossOrigin = a1;\n    }\n};\nTHREE.JSONLoader = function(a1) {\n    \"boolean\" === typeof a1 && (console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"), a1 = void 0);\n    this.manager = void 0 !== a1 ? a1 : THREE.DefaultLoadingManager;\n    this.withCredentials = !1;\n};\nTHREE.JSONLoader.prototype = {\n    constructor: THREE.JSONLoader,\n    get statusDomElement () {\n        void 0 === this._statusDomElement && (this._statusDomElement = document.createElement(\"div\"));\n        console.warn(\"THREE.JSONLoader: .statusDomElement has been removed.\");\n        return this._statusDomElement;\n    },\n    load: function(a1, b, c, d) {\n        var e = this, g = this.texturePath && \"string\" === typeof this.texturePath ? this.texturePath : THREE.Loader.prototype.extractUrlBase(a1);\n        c = new THREE.XHRLoader(this.manager);\n        c.setCrossOrigin(this.crossOrigin);\n        c.setWithCredentials(this.withCredentials);\n        c.load(a1, function(c) {\n            c = JSON.parse(c);\n            var d = c.metadata;\n            if (void 0 !== d) {\n                if (\"object\" === d.type) {\n                    console.error(\"THREE.JSONLoader: \" + a1 + \" should be loaded with THREE.ObjectLoader instead.\");\n                    return;\n                }\n                if (\"scene\" === d.type) {\n                    console.error(\"THREE.JSONLoader: \" + a1 + \" should be loaded with THREE.SceneLoader instead.\");\n                    return;\n                }\n            }\n            c = e.parse(c, g);\n            b(c.geometry, c.materials);\n        });\n    },\n    setCrossOrigin: function(a1) {\n        this.crossOrigin = a1;\n    },\n    setTexturePath: function(a1) {\n        this.texturePath = a1;\n    },\n    parse: function(a1, b) {\n        var c = new THREE.Geometry, d = void 0 !== a1.scale ? 1 / a1.scale : 1;\n        (function(b) {\n            var d, f, h, k, l, n, p, m, q, t, r, u, w, v = a1.faces;\n            n = a1.vertices;\n            var B = a1.normals, x = a1.colors, H = 0;\n            if (void 0 !== a1.uvs) {\n                for(d = 0; d < a1.uvs.length; d++)a1.uvs[d].length && H++;\n                for(d = 0; d < H; d++)c.faceVertexUvs[d] = [];\n            }\n            k = 0;\n            for(l = n.length; k < l;)d = new THREE.Vector3, d.x = n[k++] * b, d.y = n[k++] * b, d.z = n[k++] * b, c.vertices.push(d);\n            k = 0;\n            for(l = v.length; k < l;)if (b = v[k++], q = b & 1, h = b & 2, d = b & 8, p = b & 16, t = b & 32, n = b & 64, b &= 128, q) {\n                q = new THREE.Face3;\n                q.a = v[k];\n                q.b = v[k + 1];\n                q.c = v[k + 3];\n                r = new THREE.Face3;\n                r.a = v[k + 1];\n                r.b = v[k + 2];\n                r.c = v[k + 3];\n                k += 4;\n                h && (h = v[k++], q.materialIndex = h, r.materialIndex = h);\n                h = c.faces.length;\n                if (d) for(d = 0; d < H; d++)for(u = a1.uvs[d], c.faceVertexUvs[d][h] = [], c.faceVertexUvs[d][h + 1] = [], f = 0; 4 > f; f++)m = v[k++], w = u[2 * m], m = u[2 * m + 1], w = new THREE.Vector2(w, m), 2 !== f && c.faceVertexUvs[d][h].push(w), 0 !== f && c.faceVertexUvs[d][h + 1].push(w);\n                p && (p = 3 * v[k++], q.normal.set(B[p++], B[p++], B[p]), r.normal.copy(q.normal));\n                if (t) for(d = 0; 4 > d; d++)p = 3 * v[k++], t = new THREE.Vector3(B[p++], B[p++], B[p]), 2 !== d && q.vertexNormals.push(t), 0 !== d && r.vertexNormals.push(t);\n                n && (n = v[k++], n = x[n], q.color.setHex(n), r.color.setHex(n));\n                if (b) for(d = 0; 4 > d; d++)n = v[k++], n = x[n], 2 !== d && q.vertexColors.push(new THREE.Color(n)), 0 !== d && r.vertexColors.push(new THREE.Color(n));\n                c.faces.push(q);\n                c.faces.push(r);\n            } else {\n                q = new THREE.Face3;\n                q.a = v[k++];\n                q.b = v[k++];\n                q.c = v[k++];\n                h && (h = v[k++], q.materialIndex = h);\n                h = c.faces.length;\n                if (d) for(d = 0; d < H; d++)for(u = a1.uvs[d], c.faceVertexUvs[d][h] = [], f = 0; 3 > f; f++)m = v[k++], w = u[2 * m], m = u[2 * m + 1], w = new THREE.Vector2(w, m), c.faceVertexUvs[d][h].push(w);\n                p && (p = 3 * v[k++], q.normal.set(B[p++], B[p++], B[p]));\n                if (t) for(d = 0; 3 > d; d++)p = 3 * v[k++], t = new THREE.Vector3(B[p++], B[p++], B[p]), q.vertexNormals.push(t);\n                n && (n = v[k++], q.color.setHex(x[n]));\n                if (b) for(d = 0; 3 > d; d++)n = v[k++], q.vertexColors.push(new THREE.Color(x[n]));\n                c.faces.push(q);\n            }\n        })(d);\n        (function() {\n            var b = void 0 !== a1.influencesPerVertex ? a1.influencesPerVertex : 2;\n            if (a1.skinWeights) for(var d = 0, f = a1.skinWeights.length; d < f; d += b)c.skinWeights.push(new THREE.Vector4(a1.skinWeights[d], 1 < b ? a1.skinWeights[d + 1] : 0, 2 < b ? a1.skinWeights[d + 2] : 0, 3 < b ? a1.skinWeights[d + 3] : 0));\n            if (a1.skinIndices) for(d = 0, f = a1.skinIndices.length; d < f; d += b)c.skinIndices.push(new THREE.Vector4(a1.skinIndices[d], 1 < b ? a1.skinIndices[d + 1] : 0, 2 < b ? a1.skinIndices[d + 2] : 0, 3 < b ? a1.skinIndices[d + 3] : 0));\n            c.bones = a1.bones;\n            c.bones && 0 < c.bones.length && (c.skinWeights.length !== c.skinIndices.length || c.skinIndices.length !== c.vertices.length) && console.warn(\"When skinning, number of vertices (\" + c.vertices.length + \"), skinIndices (\" + c.skinIndices.length + \"), and skinWeights (\" + c.skinWeights.length + \") should match.\");\n            c.animation = a1.animation;\n            c.animations = a1.animations;\n        })();\n        (function(b) {\n            if (void 0 !== a1.morphTargets) {\n                var d, f, h, k, l, n;\n                d = 0;\n                for(f = a1.morphTargets.length; d < f; d++)for(c.morphTargets[d] = {}, c.morphTargets[d].name = a1.morphTargets[d].name, c.morphTargets[d].vertices = [], l = c.morphTargets[d].vertices, n = a1.morphTargets[d].vertices, h = 0, k = n.length; h < k; h += 3){\n                    var p = new THREE.Vector3;\n                    p.x = n[h] * b;\n                    p.y = n[h + 1] * b;\n                    p.z = n[h + 2] * b;\n                    l.push(p);\n                }\n            }\n            if (void 0 !== a1.morphColors) for(d = 0, f = a1.morphColors.length; d < f; d++)for(c.morphColors[d] = {}, c.morphColors[d].name = a1.morphColors[d].name, c.morphColors[d].colors = [], k = c.morphColors[d].colors, l = a1.morphColors[d].colors, b = 0, h = l.length; b < h; b += 3)n = new THREE.Color(16755200), n.setRGB(l[b], l[b + 1], l[b + 2]), k.push(n);\n        })(d);\n        c.computeFaceNormals();\n        c.computeBoundingSphere();\n        if (void 0 === a1.materials || 0 === a1.materials.length) return {\n            geometry: c\n        };\n        d = THREE.Loader.prototype.initMaterials(a1.materials, b, this.crossOrigin);\n        return {\n            geometry: c,\n            materials: d\n        };\n    }\n};\nTHREE.LoadingManager = function(a1, b, c) {\n    var d = this, e = !1, g = 0, f = 0;\n    this.onStart = void 0;\n    this.onLoad = a1;\n    this.onProgress = b;\n    this.onError = c;\n    this.itemStart = function(a1) {\n        f++;\n        if (!1 === e && void 0 !== d.onStart) d.onStart(a1, g, f);\n        e = !0;\n    };\n    this.itemEnd = function(a1) {\n        g++;\n        if (void 0 !== d.onProgress) d.onProgress(a1, g, f);\n        if (g === f && (e = !1, void 0 !== d.onLoad)) d.onLoad();\n    };\n    this.itemError = function(a1) {\n        if (void 0 !== d.onError) d.onError(a1);\n    };\n};\nTHREE.DefaultLoadingManager = new THREE.LoadingManager;\nTHREE.BufferGeometryLoader = function(a1) {\n    this.manager = void 0 !== a1 ? a1 : THREE.DefaultLoadingManager;\n};\nTHREE.BufferGeometryLoader.prototype = {\n    constructor: THREE.BufferGeometryLoader,\n    load: function(a1, b, c, d) {\n        var e = this, g = new THREE.XHRLoader(e.manager);\n        g.setCrossOrigin(this.crossOrigin);\n        g.load(a1, function(a1) {\n            b(e.parse(JSON.parse(a1)));\n        }, c, d);\n    },\n    setCrossOrigin: function(a1) {\n        this.crossOrigin = a1;\n    },\n    parse: function(a1) {\n        var b = new THREE.BufferGeometry, c = a1.data.index;\n        void 0 !== c && (c = new self[c.type](c.array), b.setIndex(new THREE.BufferAttribute(c, 1)));\n        var d = a1.data.attributes, e;\n        for(e in d){\n            var g = d[e], c = new self[g.type](g.array);\n            b.addAttribute(e, new THREE.BufferAttribute(c, g.itemSize));\n        }\n        e = a1.data.groups || a1.data.drawcalls || a1.data.offsets;\n        if (void 0 !== e) for(c = 0, d = e.length; c !== d; ++c)g = e[c], b.addGroup(g.start, g.count);\n        a1 = a1.data.boundingSphere;\n        void 0 !== a1 && (e = new THREE.Vector3, void 0 !== a1.center && e.fromArray(a1.center), b.boundingSphere = new THREE.Sphere(e, a1.radius));\n        return b;\n    }\n};\nTHREE.MaterialLoader = function(a1) {\n    this.manager = void 0 !== a1 ? a1 : THREE.DefaultLoadingManager;\n    this.textures = {};\n};\nTHREE.MaterialLoader.prototype = {\n    constructor: THREE.MaterialLoader,\n    load: function(a1, b, c, d) {\n        var e = this, g = new THREE.XHRLoader(e.manager);\n        g.setCrossOrigin(this.crossOrigin);\n        g.load(a1, function(a1) {\n            b(e.parse(JSON.parse(a1)));\n        }, c, d);\n    },\n    setCrossOrigin: function(a1) {\n        this.crossOrigin = a1;\n    },\n    setTextures: function(a1) {\n        this.textures = a1;\n    },\n    getTexture: function(a1) {\n        var b = this.textures;\n        void 0 === b[a1] && console.warn(\"THREE.MaterialLoader: Undefined texture\", a1);\n        return b[a1];\n    },\n    parse: function(a1) {\n        var b = new THREE[a1.type];\n        b.uuid = a1.uuid;\n        void 0 !== a1.name && (b.name = a1.name);\n        void 0 !== a1.color && b.color.setHex(a1.color);\n        void 0 !== a1.emissive && b.emissive.setHex(a1.emissive);\n        void 0 !== a1.specular && b.specular.setHex(a1.specular);\n        void 0 !== a1.shininess && (b.shininess = a1.shininess);\n        void 0 !== a1.uniforms && (b.uniforms = a1.uniforms);\n        void 0 !== a1.vertexShader && (b.vertexShader = a1.vertexShader);\n        void 0 !== a1.fragmentShader && (b.fragmentShader = a1.fragmentShader);\n        void 0 !== a1.vertexColors && (b.vertexColors = a1.vertexColors);\n        void 0 !== a1.shading && (b.shading = a1.shading);\n        void 0 !== a1.blending && (b.blending = a1.blending);\n        void 0 !== a1.side && (b.side = a1.side);\n        void 0 !== a1.opacity && (b.opacity = a1.opacity);\n        void 0 !== a1.transparent && (b.transparent = a1.transparent);\n        void 0 !== a1.alphaTest && (b.alphaTest = a1.alphaTest);\n        void 0 !== a1.depthTest && (b.depthTest = a1.depthTest);\n        void 0 !== a1.depthWrite && (b.depthWrite = a1.depthWrite);\n        void 0 !== a1.wireframe && (b.wireframe = a1.wireframe);\n        void 0 !== a1.wireframeLinewidth && (b.wireframeLinewidth = a1.wireframeLinewidth);\n        void 0 !== a1.size && (b.size = a1.size);\n        void 0 !== a1.sizeAttenuation && (b.sizeAttenuation = a1.sizeAttenuation);\n        void 0 !== a1.map && (b.map = this.getTexture(a1.map));\n        void 0 !== a1.alphaMap && (b.alphaMap = this.getTexture(a1.alphaMap), b.transparent = !0);\n        void 0 !== a1.bumpMap && (b.bumpMap = this.getTexture(a1.bumpMap));\n        void 0 !== a1.bumpScale && (b.bumpScale = a1.bumpScale);\n        void 0 !== a1.normalMap && (b.normalMap = this.getTexture(a1.normalMap));\n        a1.normalScale && (b.normalScale = new THREE.Vector2(a1.normalScale, a1.normalScale));\n        void 0 !== a1.displacementMap && (b.displacementMap = this.getTexture(a1.displacementMap));\n        void 0 !== a1.displacementScale && (b.displacementScale = a1.displacementScale);\n        void 0 !== a1.displacementBias && (b.displacementBias = a1.displacementBias);\n        void 0 !== a1.specularMap && (b.specularMap = this.getTexture(a1.specularMap));\n        void 0 !== a1.envMap && (b.envMap = this.getTexture(a1.envMap), b.combine = THREE.MultiplyOperation);\n        a1.reflectivity && (b.reflectivity = a1.reflectivity);\n        void 0 !== a1.lightMap && (b.lightMap = this.getTexture(a1.lightMap));\n        void 0 !== a1.lightMapIntensity && (b.lightMapIntensity = a1.lightMapIntensity);\n        void 0 !== a1.aoMap && (b.aoMap = this.getTexture(a1.aoMap));\n        void 0 !== a1.aoMapIntensity && (b.aoMapIntensity = a1.aoMapIntensity);\n        if (void 0 !== a1.materials) for(var c = 0, d = a1.materials.length; c < d; c++)b.materials.push(this.parse(a1.materials[c]));\n        return b;\n    }\n};\nTHREE.ObjectLoader = function(a1) {\n    this.manager = void 0 !== a1 ? a1 : THREE.DefaultLoadingManager;\n    this.texturePath = \"\";\n};\nTHREE.ObjectLoader.prototype = {\n    constructor: THREE.ObjectLoader,\n    load: function(a1, b, c, d) {\n        \"\" === this.texturePath && (this.texturePath = a1.substring(0, a1.lastIndexOf(\"/\") + 1));\n        var e = this, g = new THREE.XHRLoader(e.manager);\n        g.setCrossOrigin(this.crossOrigin);\n        g.load(a1, function(a1) {\n            e.parse(JSON.parse(a1), b);\n        }, c, d);\n    },\n    setTexturePath: function(a1) {\n        this.texturePath = a1;\n    },\n    setCrossOrigin: function(a1) {\n        this.crossOrigin = a1;\n    },\n    parse: function(a1, b) {\n        var c = this.parseGeometries(a1.geometries), d = this.parseImages(a1.images, function() {\n            void 0 !== b && b(e);\n        }), d = this.parseTextures(a1.textures, d), d = this.parseMaterials(a1.materials, d), e = this.parseObject(a1.object, c, d);\n        void 0 !== a1.images && 0 !== a1.images.length || void 0 === b || b(e);\n        return e;\n    },\n    parseGeometries: function(a1) {\n        var b = {};\n        if (void 0 !== a1) for(var c = new THREE.JSONLoader, d = new THREE.BufferGeometryLoader, e = 0, g = a1.length; e < g; e++){\n            var f, h = a1[e];\n            switch(h.type){\n                case \"PlaneGeometry\":\n                case \"PlaneBufferGeometry\":\n                    f = new THREE[h.type](h.width, h.height, h.widthSegments, h.heightSegments);\n                    break;\n                case \"BoxGeometry\":\n                case \"CubeGeometry\":\n                    f = new THREE.BoxGeometry(h.width, h.height, h.depth, h.widthSegments, h.heightSegments, h.depthSegments);\n                    break;\n                case \"CircleBufferGeometry\":\n                    f = new THREE.CircleBufferGeometry(h.radius, h.segments, h.thetaStart, h.thetaLength);\n                    break;\n                case \"CircleGeometry\":\n                    f = new THREE.CircleGeometry(h.radius, h.segments, h.thetaStart, h.thetaLength);\n                    break;\n                case \"CylinderGeometry\":\n                    f = new THREE.CylinderGeometry(h.radiusTop, h.radiusBottom, h.height, h.radialSegments, h.heightSegments, h.openEnded, h.thetaStart, h.thetaLength);\n                    break;\n                case \"SphereGeometry\":\n                    f = new THREE.SphereGeometry(h.radius, h.widthSegments, h.heightSegments, h.phiStart, h.phiLength, h.thetaStart, h.thetaLength);\n                    break;\n                case \"SphereBufferGeometry\":\n                    f = new THREE.SphereBufferGeometry(h.radius, h.widthSegments, h.heightSegments, h.phiStart, h.phiLength, h.thetaStart, h.thetaLength);\n                    break;\n                case \"DodecahedronGeometry\":\n                    f = new THREE.DodecahedronGeometry(h.radius, h.detail);\n                    break;\n                case \"IcosahedronGeometry\":\n                    f = new THREE.IcosahedronGeometry(h.radius, h.detail);\n                    break;\n                case \"OctahedronGeometry\":\n                    f = new THREE.OctahedronGeometry(h.radius, h.detail);\n                    break;\n                case \"TetrahedronGeometry\":\n                    f = new THREE.TetrahedronGeometry(h.radius, h.detail);\n                    break;\n                case \"RingGeometry\":\n                    f = new THREE.RingGeometry(h.innerRadius, h.outerRadius, h.thetaSegments, h.phiSegments, h.thetaStart, h.thetaLength);\n                    break;\n                case \"TorusGeometry\":\n                    f = new THREE.TorusGeometry(h.radius, h.tube, h.radialSegments, h.tubularSegments, h.arc);\n                    break;\n                case \"TorusKnotGeometry\":\n                    f = new THREE.TorusKnotGeometry(h.radius, h.tube, h.radialSegments, h.tubularSegments, h.p, h.q, h.heightScale);\n                    break;\n                case \"TextGeometry\":\n                    f = new THREE.TextGeometry(h.text, h.data);\n                    break;\n                case \"BufferGeometry\":\n                    f = d.parse(h);\n                    break;\n                case \"Geometry\":\n                    f = c.parse(h.data, this.texturePath).geometry;\n                    break;\n                default:\n                    console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + h.type + '\"');\n                    continue;\n            }\n            f.uuid = h.uuid;\n            void 0 !== h.name && (f.name = h.name);\n            b[h.uuid] = f;\n        }\n        return b;\n    },\n    parseMaterials: function(a1, b) {\n        var c = {};\n        if (void 0 !== a1) {\n            var d = new THREE.MaterialLoader;\n            d.setTextures(b);\n            for(var e = 0, g = a1.length; e < g; e++){\n                var f = d.parse(a1[e]);\n                c[f.uuid] = f;\n            }\n        }\n        return c;\n    },\n    parseImages: function(a1, b) {\n        function c(a1) {\n            d.manager.itemStart(a1);\n            return f.load(a1, function() {\n                d.manager.itemEnd(a1);\n            });\n        }\n        var d = this, e = {};\n        if (void 0 !== a1 && 0 < a1.length) {\n            var g = new THREE.LoadingManager(b), f = new THREE.ImageLoader(g);\n            f.setCrossOrigin(this.crossOrigin);\n            for(var g = 0, h = a1.length; g < h; g++){\n                var k = a1[g], l = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(k.url) ? k.url : d.texturePath + k.url;\n                e[k.uuid] = c(l);\n            }\n        }\n        return e;\n    },\n    parseTextures: function(a1, b) {\n        function c(a1) {\n            if (\"number\" === typeof a1) return a1;\n            console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\", a1);\n            return THREE[a1];\n        }\n        var d = {};\n        if (void 0 !== a1) for(var e = 0, g = a1.length; e < g; e++){\n            var f = a1[e];\n            void 0 === f.image && console.warn('THREE.ObjectLoader: No \"image\" specified for', f.uuid);\n            void 0 === b[f.image] && console.warn(\"THREE.ObjectLoader: Undefined image\", f.image);\n            var h = new THREE.Texture(b[f.image]);\n            h.needsUpdate = !0;\n            h.uuid = f.uuid;\n            void 0 !== f.name && (h.name = f.name);\n            void 0 !== f.mapping && (h.mapping = c(f.mapping));\n            void 0 !== f.offset && (h.offset = new THREE.Vector2(f.offset[0], f.offset[1]));\n            void 0 !== f.repeat && (h.repeat = new THREE.Vector2(f.repeat[0], f.repeat[1]));\n            void 0 !== f.minFilter && (h.minFilter = c(f.minFilter));\n            void 0 !== f.magFilter && (h.magFilter = c(f.magFilter));\n            void 0 !== f.anisotropy && (h.anisotropy = f.anisotropy);\n            Array.isArray(f.wrap) && (h.wrapS = c(f.wrap[0]), h.wrapT = c(f.wrap[1]));\n            d[f.uuid] = h;\n        }\n        return d;\n    },\n    parseObject: function() {\n        var a1 = new THREE.Matrix4;\n        return function(b, c, d) {\n            var e;\n            e = function(a1) {\n                void 0 === c[a1] && console.warn(\"THREE.ObjectLoader: Undefined geometry\", a1);\n                return c[a1];\n            };\n            var g = function(a1) {\n                void 0 === d[a1] && console.warn(\"THREE.ObjectLoader: Undefined material\", a1);\n                return d[a1];\n            };\n            switch(b.type){\n                case \"Scene\":\n                    e = new THREE.Scene;\n                    break;\n                case \"PerspectiveCamera\":\n                    e = new THREE.PerspectiveCamera(b.fov, b.aspect, b.near, b.far);\n                    break;\n                case \"OrthographicCamera\":\n                    e = new THREE.OrthographicCamera(b.left, b.right, b.top, b.bottom, b.near, b.far);\n                    break;\n                case \"AmbientLight\":\n                    e = new THREE.AmbientLight(b.color);\n                    break;\n                case \"DirectionalLight\":\n                    e = new THREE.DirectionalLight(b.color, b.intensity);\n                    break;\n                case \"PointLight\":\n                    e = new THREE.PointLight(b.color, b.intensity, b.distance, b.decay);\n                    break;\n                case \"SpotLight\":\n                    e = new THREE.SpotLight(b.color, b.intensity, b.distance, b.angle, b.exponent, b.decay);\n                    break;\n                case \"HemisphereLight\":\n                    e = new THREE.HemisphereLight(b.color, b.groundColor, b.intensity);\n                    break;\n                case \"Mesh\":\n                    e = new THREE.Mesh(e(b.geometry), g(b.material));\n                    break;\n                case \"LOD\":\n                    e = new THREE.LOD;\n                    break;\n                case \"Line\":\n                    e = new THREE.Line(e(b.geometry), g(b.material), b.mode);\n                    break;\n                case \"PointCloud\":\n                case \"Points\":\n                    e = new THREE.Points(e(b.geometry), g(b.material));\n                    break;\n                case \"Sprite\":\n                    e = new THREE.Sprite(g(b.material));\n                    break;\n                case \"Group\":\n                    e = new THREE.Group;\n                    break;\n                default:\n                    e = new THREE.Object3D;\n            }\n            e.uuid = b.uuid;\n            void 0 !== b.name && (e.name = b.name);\n            void 0 !== b.matrix ? (a1.fromArray(b.matrix), a1.decompose(e.position, e.quaternion, e.scale)) : (void 0 !== b.position && e.position.fromArray(b.position), void 0 !== b.rotation && e.rotation.fromArray(b.rotation), void 0 !== b.scale && e.scale.fromArray(b.scale));\n            void 0 !== b.castShadow && (e.castShadow = b.castShadow);\n            void 0 !== b.receiveShadow && (e.receiveShadow = b.receiveShadow);\n            void 0 !== b.visible && (e.visible = b.visible);\n            void 0 !== b.userData && (e.userData = b.userData);\n            if (void 0 !== b.children) for(var f in b.children)e.add(this.parseObject(b.children[f], c, d));\n            if (\"LOD\" === b.type) for(b = b.levels, g = 0; g < b.length; g++){\n                var h = b[g];\n                f = e.getObjectByProperty(\"uuid\", h.object);\n                void 0 !== f && e.addLevel(f, h.distance);\n            }\n            return e;\n        };\n    }()\n};\nTHREE.TextureLoader = function(a1) {\n    this.manager = void 0 !== a1 ? a1 : THREE.DefaultLoadingManager;\n};\nTHREE.TextureLoader.prototype = {\n    constructor: THREE.TextureLoader,\n    load: function(a1, b, c, d) {\n        var e = new THREE.ImageLoader(this.manager);\n        e.setCrossOrigin(this.crossOrigin);\n        e.load(a1, function(a1) {\n            a1 = new THREE.Texture(a1);\n            a1.needsUpdate = !0;\n            void 0 !== b && b(a1);\n        }, c, d);\n    },\n    setCrossOrigin: function(a1) {\n        this.crossOrigin = a1;\n    }\n};\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function(a1) {\n    this.manager = void 0 !== a1 ? a1 : THREE.DefaultLoadingManager;\n    this._parser = null;\n};\nTHREE.BinaryTextureLoader.prototype = {\n    constructor: THREE.BinaryTextureLoader,\n    load: function(a1, b, c, d) {\n        var e = this, g = new THREE.DataTexture, f = new THREE.XHRLoader(this.manager);\n        f.setCrossOrigin(this.crossOrigin);\n        f.setResponseType(\"arraybuffer\");\n        f.load(a1, function(a1) {\n            if (a1 = e._parser(a1)) void 0 !== a1.image ? g.image = a1.image : void 0 !== a1.data && (g.image.width = a1.width, g.image.height = a1.height, g.image.data = a1.data), g.wrapS = void 0 !== a1.wrapS ? a1.wrapS : THREE.ClampToEdgeWrapping, g.wrapT = void 0 !== a1.wrapT ? a1.wrapT : THREE.ClampToEdgeWrapping, g.magFilter = void 0 !== a1.magFilter ? a1.magFilter : THREE.LinearFilter, g.minFilter = void 0 !== a1.minFilter ? a1.minFilter : THREE.LinearMipMapLinearFilter, g.anisotropy = void 0 !== a1.anisotropy ? a1.anisotropy : 1, void 0 !== a1.format && (g.format = a1.format), void 0 !== a1.type && (g.type = a1.type), void 0 !== a1.mipmaps && (g.mipmaps = a1.mipmaps), 1 === a1.mipmapCount && (g.minFilter = THREE.LinearFilter), g.needsUpdate = !0, b && b(g, a1);\n        }, c, d);\n        return g;\n    },\n    setCrossOrigin: function(a1) {\n        this.crossOrigin = a1;\n    }\n};\nTHREE.CompressedTextureLoader = function(a1) {\n    this.manager = void 0 !== a1 ? a1 : THREE.DefaultLoadingManager;\n    this._parser = null;\n};\nTHREE.CompressedTextureLoader.prototype = {\n    constructor: THREE.CompressedTextureLoader,\n    load: function(a1, b, c, d) {\n        var e = this, g = [], f = new THREE.CompressedTexture;\n        f.image = g;\n        var h = new THREE.XHRLoader(this.manager);\n        h.setCrossOrigin(this.crossOrigin);\n        h.setResponseType(\"arraybuffer\");\n        if (Array.isArray(a1)) for(var k = 0, l = function(m) {\n            h.load(a1[m], function(a1) {\n                a1 = e._parser(a1, !0);\n                g[m] = {\n                    width: a1.width,\n                    height: a1.height,\n                    format: a1.format,\n                    mipmaps: a1.mipmaps\n                };\n                k += 1;\n                6 === k && (1 === a1.mipmapCount && (f.minFilter = THREE.LinearFilter), f.format = a1.format, f.needsUpdate = !0, b && b(f));\n            }, c, d);\n        }, n = 0, p = a1.length; n < p; ++n)l(n);\n        else h.load(a1, function(a1) {\n            a1 = e._parser(a1, !0);\n            if (a1.isCubemap) for(var c = a1.mipmaps.length / a1.mipmapCount, d = 0; d < c; d++){\n                g[d] = {\n                    mipmaps: []\n                };\n                for(var h = 0; h < a1.mipmapCount; h++)g[d].mipmaps.push(a1.mipmaps[d * a1.mipmapCount + h]), g[d].format = a1.format, g[d].width = a1.width, g[d].height = a1.height;\n            }\n            else f.image.width = a1.width, f.image.height = a1.height, f.mipmaps = a1.mipmaps;\n            1 === a1.mipmapCount && (f.minFilter = THREE.LinearFilter);\n            f.format = a1.format;\n            f.needsUpdate = !0;\n            b && b(f);\n        }, c, d);\n        return f;\n    },\n    setCrossOrigin: function(a1) {\n        this.crossOrigin = a1;\n    }\n};\nTHREE.Material = function() {\n    Object.defineProperty(this, \"id\", {\n        value: THREE.MaterialIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.name = \"\";\n    this.type = \"Material\";\n    this.side = THREE.FrontSide;\n    this.opacity = 1;\n    this.transparent = !1;\n    this.blending = THREE.NormalBlending;\n    this.blendSrc = THREE.SrcAlphaFactor;\n    this.blendDst = THREE.OneMinusSrcAlphaFactor;\n    this.blendEquation = THREE.AddEquation;\n    this.blendEquationAlpha = this.blendDstAlpha = this.blendSrcAlpha = null;\n    this.depthFunc = THREE.LessEqualDepth;\n    this.colorWrite = this.depthWrite = this.depthTest = !0;\n    this.precision = null;\n    this.polygonOffset = !1;\n    this.overdraw = this.alphaTest = this.polygonOffsetUnits = this.polygonOffsetFactor = 0;\n    this._needsUpdate = this.visible = !0;\n};\nTHREE.Material.prototype = {\n    constructor: THREE.Material,\n    get needsUpdate () {\n        return this._needsUpdate;\n    },\n    set needsUpdate (a){\n        !0 === a && this.update();\n        this._needsUpdate = a;\n    },\n    setValues: function(a1) {\n        if (void 0 !== a1) for(var b in a1){\n            var c = a1[b];\n            if (void 0 === c) console.warn(\"THREE.Material: '\" + b + \"' parameter is undefined.\");\n            else {\n                var d = this[b];\n                void 0 === d ? console.warn(\"THREE.\" + this.type + \": '\" + b + \"' is not a property of this material.\") : d instanceof THREE.Color ? d.set(c) : d instanceof THREE.Vector3 && c instanceof THREE.Vector3 ? d.copy(c) : this[b] = \"overdraw\" === b ? Number(c) : c;\n            }\n        }\n    },\n    toJSON: function(a1) {\n        var b = {\n            metadata: {\n                version: 4.4,\n                type: \"Material\",\n                generator: \"Material.toJSON\"\n            }\n        };\n        b.uuid = this.uuid;\n        b.type = this.type;\n        \"\" !== this.name && (b.name = this.name);\n        this.color instanceof THREE.Color && (b.color = this.color.getHex());\n        this.emissive instanceof THREE.Color && (b.emissive = this.emissive.getHex());\n        this.specular instanceof THREE.Color && (b.specular = this.specular.getHex());\n        void 0 !== this.shininess && (b.shininess = this.shininess);\n        this.map instanceof THREE.Texture && (b.map = this.map.toJSON(a1).uuid);\n        this.alphaMap instanceof THREE.Texture && (b.alphaMap = this.alphaMap.toJSON(a1).uuid);\n        this.lightMap instanceof THREE.Texture && (b.lightMap = this.lightMap.toJSON(a1).uuid);\n        this.bumpMap instanceof THREE.Texture && (b.bumpMap = this.bumpMap.toJSON(a1).uuid, b.bumpScale = this.bumpScale);\n        this.normalMap instanceof THREE.Texture && (b.normalMap = this.normalMap.toJSON(a1).uuid, b.normalScale = this.normalScale);\n        this.displacementMap instanceof THREE.Texture && (b.displacementMap = this.displacementMap.toJSON(a1).uuid, b.displacementScale = this.displacementScale, b.displacementBias = this.displacementBias);\n        this.specularMap instanceof THREE.Texture && (b.specularMap = this.specularMap.toJSON(a1).uuid);\n        this.envMap instanceof THREE.Texture && (b.envMap = this.envMap.toJSON(a1).uuid, b.reflectivity = this.reflectivity);\n        void 0 !== this.size && (b.size = this.size);\n        void 0 !== this.sizeAttenuation && (b.sizeAttenuation = this.sizeAttenuation);\n        void 0 !== this.vertexColors && this.vertexColors !== THREE.NoColors && (b.vertexColors = this.vertexColors);\n        void 0 !== this.shading && this.shading !== THREE.SmoothShading && (b.shading = this.shading);\n        void 0 !== this.blending && this.blending !== THREE.NormalBlending && (b.blending = this.blending);\n        void 0 !== this.side && this.side !== THREE.FrontSide && (b.side = this.side);\n        1 > this.opacity && (b.opacity = this.opacity);\n        !0 === this.transparent && (b.transparent = this.transparent);\n        0 < this.alphaTest && (b.alphaTest = this.alphaTest);\n        !0 === this.wireframe && (b.wireframe = this.wireframe);\n        1 < this.wireframeLinewidth && (b.wireframeLinewidth = this.wireframeLinewidth);\n        return b;\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.name = a1.name;\n        this.side = a1.side;\n        this.opacity = a1.opacity;\n        this.transparent = a1.transparent;\n        this.blending = a1.blending;\n        this.blendSrc = a1.blendSrc;\n        this.blendDst = a1.blendDst;\n        this.blendEquation = a1.blendEquation;\n        this.blendSrcAlpha = a1.blendSrcAlpha;\n        this.blendDstAlpha = a1.blendDstAlpha;\n        this.blendEquationAlpha = a1.blendEquationAlpha;\n        this.depthFunc = a1.depthFunc;\n        this.depthTest = a1.depthTest;\n        this.depthWrite = a1.depthWrite;\n        this.precision = a1.precision;\n        this.polygonOffset = a1.polygonOffset;\n        this.polygonOffsetFactor = a1.polygonOffsetFactor;\n        this.polygonOffsetUnits = a1.polygonOffsetUnits;\n        this.alphaTest = a1.alphaTest;\n        this.overdraw = a1.overdraw;\n        this.visible = a1.visible;\n        return this;\n    },\n    update: function() {\n        this.dispatchEvent({\n            type: \"update\"\n        });\n    },\n    dispose: function() {\n        this.dispatchEvent({\n            type: \"dispose\"\n        });\n    },\n    get wrapAround () {\n        console.warn(\"THREE.\" + this.type + \": .wrapAround has been removed.\");\n    },\n    set wrapAround (a){\n        console.warn(\"THREE.\" + this.type + \": .wrapAround has been removed.\");\n    },\n    get wrapRGB () {\n        console.warn(\"THREE.\" + this.type + \": .wrapRGB has been removed.\");\n        return new THREE.Color;\n    }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Material.prototype);\nTHREE.MaterialIdCount = 0;\nTHREE.LineBasicMaterial = function(a1) {\n    THREE.Material.call(this);\n    this.type = \"LineBasicMaterial\";\n    this.color = new THREE.Color(16777215);\n    this.linewidth = 1;\n    this.linejoin = this.linecap = \"round\";\n    this.vertexColors = THREE.NoColors;\n    this.fog = !0;\n    this.setValues(a1);\n};\nTHREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\nTHREE.LineBasicMaterial.prototype.copy = function(a1) {\n    THREE.Material.prototype.copy.call(this, a1);\n    this.color.copy(a1.color);\n    this.linewidth = a1.linewidth;\n    this.linecap = a1.linecap;\n    this.linejoin = a1.linejoin;\n    this.vertexColors = a1.vertexColors;\n    this.fog = a1.fog;\n    return this;\n};\nTHREE.LineDashedMaterial = function(a1) {\n    THREE.Material.call(this);\n    this.type = \"LineDashedMaterial\";\n    this.color = new THREE.Color(16777215);\n    this.scale = this.linewidth = 1;\n    this.dashSize = 3;\n    this.gapSize = 1;\n    this.vertexColors = !1;\n    this.fog = !0;\n    this.setValues(a1);\n};\nTHREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\nTHREE.LineDashedMaterial.prototype.copy = function(a1) {\n    THREE.Material.prototype.copy.call(this, a1);\n    this.color.copy(a1.color);\n    this.linewidth = a1.linewidth;\n    this.scale = a1.scale;\n    this.dashSize = a1.dashSize;\n    this.gapSize = a1.gapSize;\n    this.vertexColors = a1.vertexColors;\n    this.fog = a1.fog;\n    return this;\n};\nTHREE.MeshBasicMaterial = function(a1) {\n    THREE.Material.call(this);\n    this.type = \"MeshBasicMaterial\";\n    this.color = new THREE.Color(16777215);\n    this.aoMap = this.map = null;\n    this.aoMapIntensity = 1;\n    this.envMap = this.alphaMap = this.specularMap = null;\n    this.combine = THREE.MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = .98;\n    this.fog = !0;\n    this.shading = THREE.SmoothShading;\n    this.wireframe = !1;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinejoin = this.wireframeLinecap = \"round\";\n    this.vertexColors = THREE.NoColors;\n    this.morphTargets = this.skinning = !1;\n    this.setValues(a1);\n};\nTHREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\nTHREE.MeshBasicMaterial.prototype.copy = function(a1) {\n    THREE.Material.prototype.copy.call(this, a1);\n    this.color.copy(a1.color);\n    this.map = a1.map;\n    this.aoMap = a1.aoMap;\n    this.aoMapIntensity = a1.aoMapIntensity;\n    this.specularMap = a1.specularMap;\n    this.alphaMap = a1.alphaMap;\n    this.envMap = a1.envMap;\n    this.combine = a1.combine;\n    this.reflectivity = a1.reflectivity;\n    this.refractionRatio = a1.refractionRatio;\n    this.fog = a1.fog;\n    this.shading = a1.shading;\n    this.wireframe = a1.wireframe;\n    this.wireframeLinewidth = a1.wireframeLinewidth;\n    this.wireframeLinecap = a1.wireframeLinecap;\n    this.wireframeLinejoin = a1.wireframeLinejoin;\n    this.vertexColors = a1.vertexColors;\n    this.skinning = a1.skinning;\n    this.morphTargets = a1.morphTargets;\n    return this;\n};\nTHREE.MeshLambertMaterial = function(a1) {\n    THREE.Material.call(this);\n    this.type = \"MeshLambertMaterial\";\n    this.color = new THREE.Color(16777215);\n    this.emissive = new THREE.Color(0);\n    this.envMap = this.alphaMap = this.specularMap = this.map = null;\n    this.combine = THREE.MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = .98;\n    this.fog = !0;\n    this.wireframe = !1;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinejoin = this.wireframeLinecap = \"round\";\n    this.vertexColors = THREE.NoColors;\n    this.morphNormals = this.morphTargets = this.skinning = !1;\n    this.setValues(a1);\n};\nTHREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\nTHREE.MeshLambertMaterial.prototype.copy = function(a1) {\n    THREE.Material.prototype.copy.call(this, a1);\n    this.color.copy(a1.color);\n    this.emissive.copy(a1.emissive);\n    this.map = a1.map;\n    this.specularMap = a1.specularMap;\n    this.alphaMap = a1.alphaMap;\n    this.envMap = a1.envMap;\n    this.combine = a1.combine;\n    this.reflectivity = a1.reflectivity;\n    this.refractionRatio = a1.refractionRatio;\n    this.fog = a1.fog;\n    this.wireframe = a1.wireframe;\n    this.wireframeLinewidth = a1.wireframeLinewidth;\n    this.wireframeLinecap = a1.wireframeLinecap;\n    this.wireframeLinejoin = a1.wireframeLinejoin;\n    this.vertexColors = a1.vertexColors;\n    this.skinning = a1.skinning;\n    this.morphTargets = a1.morphTargets;\n    this.morphNormals = a1.morphNormals;\n    return this;\n};\nTHREE.MeshPhongMaterial = function(a1) {\n    THREE.Material.call(this);\n    this.type = \"MeshPhongMaterial\";\n    this.color = new THREE.Color(16777215);\n    this.emissive = new THREE.Color(0);\n    this.specular = new THREE.Color(1118481);\n    this.shininess = 30;\n    this.metal = !1;\n    this.lightMap = this.map = null;\n    this.lightMapIntensity = 1;\n    this.aoMap = null;\n    this.aoMapIntensity = 1;\n    this.bumpMap = this.emissiveMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalScale = new THREE.Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.envMap = this.alphaMap = this.specularMap = null;\n    this.combine = THREE.MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = .98;\n    this.fog = !0;\n    this.shading = THREE.SmoothShading;\n    this.wireframe = !1;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinejoin = this.wireframeLinecap = \"round\";\n    this.vertexColors = THREE.NoColors;\n    this.morphNormals = this.morphTargets = this.skinning = !1;\n    this.setValues(a1);\n};\nTHREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\nTHREE.MeshPhongMaterial.prototype.copy = function(a1) {\n    THREE.Material.prototype.copy.call(this, a1);\n    this.color.copy(a1.color);\n    this.emissive.copy(a1.emissive);\n    this.specular.copy(a1.specular);\n    this.shininess = a1.shininess;\n    this.metal = a1.metal;\n    this.map = a1.map;\n    this.lightMap = a1.lightMap;\n    this.lightMapIntensity = a1.lightMapIntensity;\n    this.aoMap = a1.aoMap;\n    this.aoMapIntensity = a1.aoMapIntensity;\n    this.emissiveMap = a1.emissiveMap;\n    this.bumpMap = a1.bumpMap;\n    this.bumpScale = a1.bumpScale;\n    this.normalMap = a1.normalMap;\n    this.normalScale.copy(a1.normalScale);\n    this.displacementMap = a1.displacementMap;\n    this.displacementScale = a1.displacementScale;\n    this.displacementBias = a1.displacementBias;\n    this.specularMap = a1.specularMap;\n    this.alphaMap = a1.alphaMap;\n    this.envMap = a1.envMap;\n    this.combine = a1.combine;\n    this.reflectivity = a1.reflectivity;\n    this.refractionRatio = a1.refractionRatio;\n    this.fog = a1.fog;\n    this.shading = a1.shading;\n    this.wireframe = a1.wireframe;\n    this.wireframeLinewidth = a1.wireframeLinewidth;\n    this.wireframeLinecap = a1.wireframeLinecap;\n    this.wireframeLinejoin = a1.wireframeLinejoin;\n    this.vertexColors = a1.vertexColors;\n    this.skinning = a1.skinning;\n    this.morphTargets = a1.morphTargets;\n    this.morphNormals = a1.morphNormals;\n    return this;\n};\nTHREE.MeshDepthMaterial = function(a1) {\n    THREE.Material.call(this);\n    this.type = \"MeshDepthMaterial\";\n    this.wireframe = this.morphTargets = !1;\n    this.wireframeLinewidth = 1;\n    this.setValues(a1);\n};\nTHREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\nTHREE.MeshDepthMaterial.prototype.copy = function(a1) {\n    THREE.Material.prototype.copy.call(this, a1);\n    this.wireframe = a1.wireframe;\n    this.wireframeLinewidth = a1.wireframeLinewidth;\n    return this;\n};\nTHREE.MeshNormalMaterial = function(a1) {\n    THREE.Material.call(this, a1);\n    this.type = \"MeshNormalMaterial\";\n    this.wireframe = !1;\n    this.wireframeLinewidth = 1;\n    this.morphTargets = !1;\n    this.setValues(a1);\n};\nTHREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\nTHREE.MeshNormalMaterial.prototype.copy = function(a1) {\n    THREE.Material.prototype.copy.call(this, a1);\n    this.wireframe = a1.wireframe;\n    this.wireframeLinewidth = a1.wireframeLinewidth;\n    return this;\n};\nTHREE.MultiMaterial = function(a1) {\n    this.uuid = THREE.Math.generateUUID();\n    this.type = \"MultiMaterial\";\n    this.materials = a1 instanceof Array ? a1 : [];\n    this.visible = !0;\n};\nTHREE.MultiMaterial.prototype = {\n    constructor: THREE.MultiMaterial,\n    toJSON: function() {\n        for(var a1 = {\n            metadata: {\n                version: 4.2,\n                type: \"material\",\n                generator: \"MaterialExporter\"\n            },\n            uuid: this.uuid,\n            type: this.type,\n            materials: []\n        }, b = 0, c = this.materials.length; b < c; b++)a1.materials.push(this.materials[b].toJSON());\n        a1.visible = this.visible;\n        return a1;\n    },\n    clone: function() {\n        for(var a1 = new this.constructor, b = 0; b < this.materials.length; b++)a1.materials.push(this.materials[b].clone());\n        a1.visible = this.visible;\n        return a1;\n    }\n};\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\nTHREE.PointsMaterial = function(a1) {\n    THREE.Material.call(this);\n    this.type = \"PointsMaterial\";\n    this.color = new THREE.Color(16777215);\n    this.map = null;\n    this.size = 1;\n    this.sizeAttenuation = !0;\n    this.vertexColors = THREE.NoColors;\n    this.fog = !0;\n    this.setValues(a1);\n};\nTHREE.PointsMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\nTHREE.PointsMaterial.prototype.copy = function(a1) {\n    THREE.Material.prototype.copy.call(this, a1);\n    this.color.copy(a1.color);\n    this.map = a1.map;\n    this.size = a1.size;\n    this.sizeAttenuation = a1.sizeAttenuation;\n    this.vertexColors = a1.vertexColors;\n    this.fog = a1.fog;\n    return this;\n};\nTHREE.PointCloudMaterial = function(a1) {\n    console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\");\n    return new THREE.PointsMaterial(a1);\n};\nTHREE.ParticleBasicMaterial = function(a1) {\n    console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\");\n    return new THREE.PointsMaterial(a1);\n};\nTHREE.ParticleSystemMaterial = function(a1) {\n    console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\");\n    return new THREE.PointsMaterial(a1);\n};\nTHREE.ShaderMaterial = function(a1) {\n    THREE.Material.call(this);\n    this.type = \"ShaderMaterial\";\n    this.defines = {};\n    this.uniforms = {};\n    this.vertexShader = \"void main() {\\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n    this.fragmentShader = \"void main() {\\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n    this.shading = THREE.SmoothShading;\n    this.linewidth = 1;\n    this.wireframe = !1;\n    this.wireframeLinewidth = 1;\n    this.lights = this.fog = !1;\n    this.vertexColors = THREE.NoColors;\n    this.derivatives = this.morphNormals = this.morphTargets = this.skinning = !1;\n    this.defaultAttributeValues = {\n        color: [\n            1,\n            1,\n            1\n        ],\n        uv: [\n            0,\n            0\n        ],\n        uv2: [\n            0,\n            0\n        ]\n    };\n    this.index0AttributeName = void 0;\n    void 0 !== a1 && (void 0 !== a1.attributes && console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"), this.setValues(a1));\n};\nTHREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\nTHREE.ShaderMaterial.prototype.copy = function(a1) {\n    THREE.Material.prototype.copy.call(this, a1);\n    this.fragmentShader = a1.fragmentShader;\n    this.vertexShader = a1.vertexShader;\n    this.uniforms = THREE.UniformsUtils.clone(a1.uniforms);\n    this.attributes = a1.attributes;\n    this.defines = a1.defines;\n    this.shading = a1.shading;\n    this.wireframe = a1.wireframe;\n    this.wireframeLinewidth = a1.wireframeLinewidth;\n    this.fog = a1.fog;\n    this.lights = a1.lights;\n    this.vertexColors = a1.vertexColors;\n    this.skinning = a1.skinning;\n    this.morphTargets = a1.morphTargets;\n    this.morphNormals = a1.morphNormals;\n    this.derivatives = a1.derivatives;\n    return this;\n};\nTHREE.ShaderMaterial.prototype.toJSON = function(a1) {\n    a1 = THREE.Material.prototype.toJSON.call(this, a1);\n    a1.uniforms = this.uniforms;\n    a1.attributes = this.attributes;\n    a1.vertexShader = this.vertexShader;\n    a1.fragmentShader = this.fragmentShader;\n    return a1;\n};\nTHREE.RawShaderMaterial = function(a1) {\n    THREE.ShaderMaterial.call(this, a1);\n    this.type = \"RawShaderMaterial\";\n};\nTHREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype);\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\nTHREE.SpriteMaterial = function(a1) {\n    THREE.Material.call(this);\n    this.type = \"SpriteMaterial\";\n    this.color = new THREE.Color(16777215);\n    this.map = null;\n    this.rotation = 0;\n    this.fog = !1;\n    this.setValues(a1);\n};\nTHREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\nTHREE.SpriteMaterial.prototype.copy = function(a1) {\n    THREE.Material.prototype.copy.call(this, a1);\n    this.color.copy(a1.color);\n    this.map = a1.map;\n    this.rotation = a1.rotation;\n    this.fog = a1.fog;\n    return this;\n};\nTHREE.Texture = function(a1, b, c, d, e, g, f, h, k) {\n    Object.defineProperty(this, \"id\", {\n        value: THREE.TextureIdCount++\n    });\n    this.uuid = THREE.Math.generateUUID();\n    this.sourceFile = this.name = \"\";\n    this.image = void 0 !== a1 ? a1 : THREE.Texture.DEFAULT_IMAGE;\n    this.mipmaps = [];\n    this.mapping = void 0 !== b ? b : THREE.Texture.DEFAULT_MAPPING;\n    this.wrapS = void 0 !== c ? c : THREE.ClampToEdgeWrapping;\n    this.wrapT = void 0 !== d ? d : THREE.ClampToEdgeWrapping;\n    this.magFilter = void 0 !== e ? e : THREE.LinearFilter;\n    this.minFilter = void 0 !== g ? g : THREE.LinearMipMapLinearFilter;\n    this.anisotropy = void 0 !== k ? k : 1;\n    this.format = void 0 !== f ? f : THREE.RGBAFormat;\n    this.type = void 0 !== h ? h : THREE.UnsignedByteType;\n    this.offset = new THREE.Vector2(0, 0);\n    this.repeat = new THREE.Vector2(1, 1);\n    this.generateMipmaps = !0;\n    this.premultiplyAlpha = !1;\n    this.flipY = !0;\n    this.unpackAlignment = 4;\n    this.version = 0;\n    this.onUpdate = null;\n};\nTHREE.Texture.DEFAULT_IMAGE = void 0;\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\nTHREE.Texture.prototype = {\n    constructor: THREE.Texture,\n    set needsUpdate (a){\n        !0 === a && this.version++;\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.image = a1.image;\n        this.mipmaps = a1.mipmaps.slice(0);\n        this.mapping = a1.mapping;\n        this.wrapS = a1.wrapS;\n        this.wrapT = a1.wrapT;\n        this.magFilter = a1.magFilter;\n        this.minFilter = a1.minFilter;\n        this.anisotropy = a1.anisotropy;\n        this.format = a1.format;\n        this.type = a1.type;\n        this.offset.copy(a1.offset);\n        this.repeat.copy(a1.repeat);\n        this.generateMipmaps = a1.generateMipmaps;\n        this.premultiplyAlpha = a1.premultiplyAlpha;\n        this.flipY = a1.flipY;\n        this.unpackAlignment = a1.unpackAlignment;\n        return this;\n    },\n    toJSON: function(a1) {\n        if (void 0 !== a1.textures[this.uuid]) return a1.textures[this.uuid];\n        var b = {\n            metadata: {\n                version: 4.4,\n                type: \"Texture\",\n                generator: \"Texture.toJSON\"\n            },\n            uuid: this.uuid,\n            name: this.name,\n            mapping: this.mapping,\n            repeat: [\n                this.repeat.x,\n                this.repeat.y\n            ],\n            offset: [\n                this.offset.x,\n                this.offset.y\n            ],\n            wrap: [\n                this.wrapS,\n                this.wrapT\n            ],\n            minFilter: this.minFilter,\n            magFilter: this.magFilter,\n            anisotropy: this.anisotropy\n        };\n        if (void 0 !== this.image) {\n            var c = this.image;\n            void 0 === c.uuid && (c.uuid = THREE.Math.generateUUID());\n            if (void 0 === a1.images[c.uuid]) {\n                var d = a1.images, e = c.uuid, g = c.uuid, f;\n                void 0 !== c.toDataURL ? f = c : (f = document.createElement(\"canvas\"), f.width = c.width, f.height = c.height, f.getContext(\"2d\").drawImage(c, 0, 0, c.width, c.height));\n                f = 2048 < f.width || 2048 < f.height ? f.toDataURL(\"image/jpeg\", .6) : f.toDataURL(\"image/png\");\n                d[e] = {\n                    uuid: g,\n                    url: f\n                };\n            }\n            b.image = c.uuid;\n        }\n        return a1.textures[this.uuid] = b;\n    },\n    dispose: function() {\n        this.dispatchEvent({\n            type: \"dispose\"\n        });\n    },\n    transformUv: function(a1) {\n        if (this.mapping === THREE.UVMapping) {\n            a1.multiply(this.repeat);\n            a1.add(this.offset);\n            if (0 > a1.x || 1 < a1.x) switch(this.wrapS){\n                case THREE.RepeatWrapping:\n                    a1.x -= Math.floor(a1.x);\n                    break;\n                case THREE.ClampToEdgeWrapping:\n                    a1.x = 0 > a1.x ? 0 : 1;\n                    break;\n                case THREE.MirroredRepeatWrapping:\n                    1 === Math.abs(Math.floor(a1.x) % 2) ? a1.x = Math.ceil(a1.x) - a1.x : a1.x -= Math.floor(a1.x);\n            }\n            if (0 > a1.y || 1 < a1.y) switch(this.wrapT){\n                case THREE.RepeatWrapping:\n                    a1.y -= Math.floor(a1.y);\n                    break;\n                case THREE.ClampToEdgeWrapping:\n                    a1.y = 0 > a1.y ? 0 : 1;\n                    break;\n                case THREE.MirroredRepeatWrapping:\n                    1 === Math.abs(Math.floor(a1.y) % 2) ? a1.y = Math.ceil(a1.y) - a1.y : a1.y -= Math.floor(a1.y);\n            }\n            this.flipY && (a1.y = 1 - a1.y);\n        }\n    }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);\nTHREE.TextureIdCount = 0;\nTHREE.CanvasTexture = function(a1, b, c, d, e, g, f, h, k) {\n    THREE.Texture.call(this, a1, b, c, d, e, g, f, h, k);\n    this.needsUpdate = !0;\n};\nTHREE.CanvasTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\nTHREE.CubeTexture = function(a1, b, c, d, e, g, f, h, k) {\n    b = void 0 !== b ? b : THREE.CubeReflectionMapping;\n    THREE.Texture.call(this, a1, b, c, d, e, g, f, h, k);\n    this.images = a1;\n    this.flipY = !1;\n};\nTHREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\nTHREE.CubeTexture.prototype.copy = function(a1) {\n    THREE.Texture.prototype.copy.call(this, a1);\n    this.images = a1.images;\n    return this;\n};\nTHREE.CompressedTexture = function(a1, b, c, d, e, g, f, h, k, l, n) {\n    THREE.Texture.call(this, null, g, f, h, k, l, d, e, n);\n    this.image = {\n        width: b,\n        height: c\n    };\n    this.mipmaps = a1;\n    this.generateMipmaps = this.flipY = !1;\n};\nTHREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\nTHREE.DataTexture = function(a1, b, c, d, e, g, f, h, k, l, n) {\n    THREE.Texture.call(this, null, g, f, h, k, l, d, e, n);\n    this.image = {\n        data: a1,\n        width: b,\n        height: c\n    };\n    this.magFilter = void 0 !== k ? k : THREE.NearestFilter;\n    this.minFilter = void 0 !== l ? l : THREE.NearestFilter;\n    this.generateMipmaps = this.flipY = !1;\n};\nTHREE.DataTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\nTHREE.VideoTexture = function(a1, b, c, d, e, g, f, h, k) {\n    THREE.Texture.call(this, a1, b, c, d, e, g, f, h, k);\n    this.generateMipmaps = !1;\n    var l = this, n = function() {\n        requestAnimationFrame(n);\n        a1.readyState === a1.HAVE_ENOUGH_DATA && (l.needsUpdate = !0);\n    };\n    n();\n};\nTHREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype);\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\nTHREE.Group = function() {\n    THREE.Object3D.call(this);\n    this.type = \"Group\";\n};\nTHREE.Group.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Group.prototype.constructor = THREE.Group;\nTHREE.Points = function(a1, b) {\n    THREE.Object3D.call(this);\n    this.type = \"Points\";\n    this.geometry = void 0 !== a1 ? a1 : new THREE.Geometry;\n    this.material = void 0 !== b ? b : new THREE.PointsMaterial({\n        color: 16777215 * Math.random()\n    });\n};\nTHREE.Points.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Points.prototype.constructor = THREE.Points;\nTHREE.Points.prototype.raycast = function() {\n    var a1 = new THREE.Matrix4, b = new THREE.Ray;\n    return function(c, d) {\n        function e(a1, e) {\n            var f = b.distanceSqToPoint(a1);\n            if (f < k) {\n                var h = b.closestPointToPoint(a1);\n                h.applyMatrix4(g.matrixWorld);\n                var l = c.ray.origin.distanceTo(h);\n                l < c.near || l > c.far || d.push({\n                    distance: l,\n                    distanceToRay: Math.sqrt(f),\n                    point: h.clone(),\n                    index: e,\n                    face: null,\n                    object: g\n                });\n            }\n        }\n        var g = this, f = g.geometry, h = c.params.Points.threshold;\n        a1.getInverse(this.matrixWorld);\n        b.copy(c.ray).applyMatrix4(a1);\n        if (null === f.boundingBox || !1 !== b.isIntersectionBox(f.boundingBox)) {\n            var h = h / ((this.scale.x + this.scale.y + this.scale.z) / 3), k = h * h, h = new THREE.Vector3;\n            if (f instanceof THREE.BufferGeometry) {\n                var l = f.index, f = f.attributes.position.array;\n                if (null !== l) for(var n = l.array, l = 0, p = n.length; l < p; l++){\n                    var m = n[l];\n                    h.fromArray(f, 3 * m);\n                    e(h, m);\n                }\n                else for(l = 0, n = f.length / 3; l < n; l++)h.fromArray(f, 3 * l), e(h, l);\n            } else for(h = f.vertices, l = 0, n = h.length; l < n; l++)e(h[l], l);\n        }\n    };\n}();\nTHREE.Points.prototype.clone = function() {\n    return new this.constructor(this.geometry, this.material).copy(this);\n};\nTHREE.Points.prototype.toJSON = function(a1) {\n    var b = THREE.Object3D.prototype.toJSON.call(this, a1);\n    void 0 === a1.geometries[this.geometry.uuid] && (a1.geometries[this.geometry.uuid] = this.geometry.toJSON());\n    void 0 === a1.materials[this.material.uuid] && (a1.materials[this.material.uuid] = this.material.toJSON());\n    b.object.geometry = this.geometry.uuid;\n    b.object.material = this.material.uuid;\n    return b;\n};\nTHREE.PointCloud = function(a1, b) {\n    console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\");\n    return new THREE.Points(a1, b);\n};\nTHREE.ParticleSystem = function(a1, b) {\n    console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\");\n    return new THREE.Points(a1, b);\n};\nTHREE.Line = function(a1, b, c) {\n    if (1 === c) return console.warn(\"THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.\"), new THREE.LineSegments(a1, b);\n    THREE.Object3D.call(this);\n    this.type = \"Line\";\n    this.geometry = void 0 !== a1 ? a1 : new THREE.Geometry;\n    this.material = void 0 !== b ? b : new THREE.LineBasicMaterial({\n        color: 16777215 * Math.random()\n    });\n};\nTHREE.Line.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Line.prototype.constructor = THREE.Line;\nTHREE.Line.prototype.raycast = function() {\n    var a1 = new THREE.Matrix4, b = new THREE.Ray, c = new THREE.Sphere;\n    return function(d, e) {\n        var g = d.linePrecision, g = g * g, f = this.geometry;\n        null === f.boundingSphere && f.computeBoundingSphere();\n        c.copy(f.boundingSphere);\n        c.applyMatrix4(this.matrixWorld);\n        if (!1 !== d.ray.isIntersectionSphere(c)) {\n            a1.getInverse(this.matrixWorld);\n            b.copy(d.ray).applyMatrix4(a1);\n            var h = new THREE.Vector3, k = new THREE.Vector3, l = new THREE.Vector3, n = new THREE.Vector3, p = this instanceof THREE.LineSegments ? 2 : 1;\n            if (f instanceof THREE.BufferGeometry) {\n                var m = f.index, q = f.attributes;\n                if (null !== m) for(var f = m.array, q = q.position.array, m = 0, t = f.length - 1; m < t; m += p){\n                    var r = f[m + 1];\n                    h.fromArray(q, 3 * f[m]);\n                    k.fromArray(q, 3 * r);\n                    r = b.distanceSqToSegment(h, k, n, l);\n                    r > g || (n.applyMatrix4(this.matrixWorld), r = d.ray.origin.distanceTo(n), r < d.near || r > d.far || e.push({\n                        distance: r,\n                        point: l.clone().applyMatrix4(this.matrixWorld),\n                        index: m,\n                        face: null,\n                        faceIndex: null,\n                        object: this\n                    }));\n                }\n                else for(q = q.position.array, m = 0, t = q.length / 3 - 1; m < t; m += p)h.fromArray(q, 3 * m), k.fromArray(q, 3 * m + 3), r = b.distanceSqToSegment(h, k, n, l), r > g || (n.applyMatrix4(this.matrixWorld), r = d.ray.origin.distanceTo(n), r < d.near || r > d.far || e.push({\n                    distance: r,\n                    point: l.clone().applyMatrix4(this.matrixWorld),\n                    index: m,\n                    face: null,\n                    faceIndex: null,\n                    object: this\n                }));\n            } else if (f instanceof THREE.Geometry) for(h = f.vertices, k = h.length, m = 0; m < k - 1; m += p)r = b.distanceSqToSegment(h[m], h[m + 1], n, l), r > g || (n.applyMatrix4(this.matrixWorld), r = d.ray.origin.distanceTo(n), r < d.near || r > d.far || e.push({\n                distance: r,\n                point: l.clone().applyMatrix4(this.matrixWorld),\n                index: m,\n                face: null,\n                faceIndex: null,\n                object: this\n            }));\n        }\n    };\n}();\nTHREE.Line.prototype.clone = function() {\n    return new this.constructor(this.geometry, this.material).copy(this);\n};\nTHREE.Line.prototype.toJSON = function(a1) {\n    var b = THREE.Object3D.prototype.toJSON.call(this, a1);\n    void 0 === a1.geometries[this.geometry.uuid] && (a1.geometries[this.geometry.uuid] = this.geometry.toJSON());\n    void 0 === a1.materials[this.material.uuid] && (a1.materials[this.material.uuid] = this.material.toJSON());\n    b.object.geometry = this.geometry.uuid;\n    b.object.material = this.material.uuid;\n    return b;\n};\nTHREE.LineStrip = 0;\nTHREE.LinePieces = 1;\nTHREE.LineSegments = function(a1, b) {\n    THREE.Line.call(this, a1, b);\n    this.type = \"LineSegments\";\n};\nTHREE.LineSegments.prototype = Object.create(THREE.Line.prototype);\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\nTHREE.Mesh = function(a1, b) {\n    THREE.Object3D.call(this);\n    this.type = \"Mesh\";\n    this.geometry = void 0 !== a1 ? a1 : new THREE.Geometry;\n    this.material = void 0 !== b ? b : new THREE.MeshBasicMaterial({\n        color: 16777215 * Math.random()\n    });\n    this.updateMorphTargets();\n};\nTHREE.Mesh.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\nTHREE.Mesh.prototype.updateMorphTargets = function() {\n    if (void 0 !== this.geometry.morphTargets && 0 < this.geometry.morphTargets.length) {\n        this.morphTargetBase = -1;\n        this.morphTargetInfluences = [];\n        this.morphTargetDictionary = {};\n        for(var a1 = 0, b = this.geometry.morphTargets.length; a1 < b; a1++)this.morphTargetInfluences.push(0), this.morphTargetDictionary[this.geometry.morphTargets[a1].name] = a1;\n    }\n};\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function(a1) {\n    if (void 0 !== this.morphTargetDictionary[a1]) return this.morphTargetDictionary[a1];\n    console.warn(\"THREE.Mesh.getMorphTargetIndexByName: morph target \" + a1 + \" does not exist. Returning 0.\");\n    return 0;\n};\nTHREE.Mesh.prototype.raycast = function() {\n    function a1(a1, b, c, d, e, f, g) {\n        THREE.Triangle.barycoordFromPoint(a1, b, c, d, q);\n        e.multiplyScalar(q.x);\n        f.multiplyScalar(q.y);\n        g.multiplyScalar(q.z);\n        e.add(f).add(g);\n        return e.clone();\n    }\n    var b = new THREE.Matrix4, c = new THREE.Ray, d = new THREE.Sphere, e = new THREE.Vector3, g = new THREE.Vector3, f = new THREE.Vector3, h = new THREE.Vector3, k = new THREE.Vector3, l = new THREE.Vector3, n = new THREE.Vector2, p = new THREE.Vector2, m = new THREE.Vector2, q = new THREE.Vector3, t = new THREE.Vector3, r = new THREE.Vector3;\n    return function(q, w) {\n        var v = this.geometry, B = this.material;\n        if (void 0 !== B && (null === v.boundingSphere && v.computeBoundingSphere(), d.copy(v.boundingSphere), d.applyMatrix4(this.matrixWorld), !1 !== q.ray.isIntersectionSphere(d) && (b.getInverse(this.matrixWorld), c.copy(q.ray).applyMatrix4(b), null === v.boundingBox || !1 !== c.isIntersectionBox(v.boundingBox)))) {\n            var x, H, I;\n            if (v instanceof THREE.BufferGeometry) {\n                if (x = v.index, v = v.attributes, null !== x) for(var z = x.array, D = v.position.array, G = 0, O = z.length; G < O; G += 3){\n                    x = z[G];\n                    H = z[G + 1];\n                    I = z[G + 2];\n                    e.fromArray(D, 3 * x);\n                    g.fromArray(D, 3 * H);\n                    f.fromArray(D, 3 * I);\n                    if (B.side === THREE.BackSide) {\n                        if (null === c.intersectTriangle(f, g, e, !0, t)) continue;\n                    } else if (null === c.intersectTriangle(e, g, f, B.side !== THREE.DoubleSide, t)) continue;\n                    r.copy(t);\n                    r.applyMatrix4(this.matrixWorld);\n                    var C = q.ray.origin.distanceTo(r);\n                    if (!(C < q.near || C > q.far)) {\n                        var F;\n                        void 0 !== v.uv && (F = v.uv.array, n.fromArray(F, 2 * x), p.fromArray(F, 2 * H), m.fromArray(F, 2 * I), F = a1(t, e, g, f, n, p, m));\n                        w.push({\n                            distance: C,\n                            point: r.clone(),\n                            uv: F,\n                            face: new THREE.Face3(x, H, I, THREE.Triangle.normal(e, g, f)),\n                            faceIndex: Math.floor(G / 3),\n                            object: this\n                        });\n                    }\n                }\n                else for(D = v.position.array, G = 0, O = D.length; G < O; G += 9){\n                    e.fromArray(D, G);\n                    g.fromArray(D, G + 3);\n                    f.fromArray(D, G + 6);\n                    if (B.side === THREE.BackSide) {\n                        if (null === c.intersectTriangle(f, g, e, !0, t)) continue;\n                    } else if (null === c.intersectTriangle(e, g, f, B.side !== THREE.DoubleSide, t)) continue;\n                    r.copy(t);\n                    r.applyMatrix4(this.matrixWorld);\n                    C = q.ray.origin.distanceTo(r);\n                    C < q.near || C > q.far || (void 0 !== v.uv && (F = v.uv.array, n.fromArray(F, G), p.fromArray(F, G + 2), m.fromArray(F, G + 4), F = a1(t, e, g, f, n, p, m)), x = G / 3, H = x + 1, I = x + 2, w.push({\n                        distance: C,\n                        point: r.clone(),\n                        uv: F,\n                        face: new THREE.Face3(x, H, I, THREE.Triangle.normal(e, g, f)),\n                        index: x,\n                        object: this\n                    }));\n                }\n            } else if (v instanceof THREE.Geometry) for(var z = B instanceof THREE.MeshFaceMaterial, D = !0 === z ? B.materials : null, G = v.vertices, O = v.faces, K = 0, L = O.length; K < L; K++){\n                var E = O[K], C = !0 === z ? D[E.materialIndex] : B;\n                if (void 0 !== C) {\n                    x = G[E.a];\n                    H = G[E.b];\n                    I = G[E.c];\n                    if (!0 === C.morphTargets) {\n                        var J = v.morphTargets, y = this.morphTargetInfluences;\n                        e.set(0, 0, 0);\n                        g.set(0, 0, 0);\n                        f.set(0, 0, 0);\n                        for(var P = 0, U = J.length; P < U; P++){\n                            var Q = y[P];\n                            if (0 !== Q) {\n                                var R = J[P].vertices;\n                                e.addScaledVector(h.subVectors(R[E.a], x), Q);\n                                g.addScaledVector(k.subVectors(R[E.b], H), Q);\n                                f.addScaledVector(l.subVectors(R[E.c], I), Q);\n                            }\n                        }\n                        e.add(x);\n                        g.add(H);\n                        f.add(I);\n                        x = e;\n                        H = g;\n                        I = f;\n                    }\n                    if (C.side === THREE.BackSide) {\n                        if (null === c.intersectTriangle(I, H, x, !0, t)) continue;\n                    } else if (null === c.intersectTriangle(x, H, I, C.side !== THREE.DoubleSide, t)) continue;\n                    r.copy(t);\n                    r.applyMatrix4(this.matrixWorld);\n                    C = q.ray.origin.distanceTo(r);\n                    C < q.near || C > q.far || (0 < v.faceVertexUvs[0].length && (F = v.faceVertexUvs[0][K], n.copy(F[0]), p.copy(F[1]), m.copy(F[2]), F = a1(t, x, H, I, n, p, m)), w.push({\n                        distance: C,\n                        point: r.clone(),\n                        uv: F,\n                        face: E,\n                        faceIndex: K,\n                        object: this\n                    }));\n                }\n            }\n        }\n    };\n}();\nTHREE.Mesh.prototype.clone = function() {\n    return new this.constructor(this.geometry, this.material).copy(this);\n};\nTHREE.Mesh.prototype.toJSON = function(a1) {\n    var b = THREE.Object3D.prototype.toJSON.call(this, a1);\n    void 0 === a1.geometries[this.geometry.uuid] && (a1.geometries[this.geometry.uuid] = this.geometry.toJSON(a1));\n    void 0 === a1.materials[this.material.uuid] && (a1.materials[this.material.uuid] = this.material.toJSON(a1));\n    b.object.geometry = this.geometry.uuid;\n    b.object.material = this.material.uuid;\n    return b;\n};\nTHREE.Bone = function(a1) {\n    THREE.Object3D.call(this);\n    this.type = \"Bone\";\n    this.skin = a1;\n};\nTHREE.Bone.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Bone.prototype.constructor = THREE.Bone;\nTHREE.Bone.prototype.copy = function(a1) {\n    THREE.Object3D.prototype.copy.call(this, a1);\n    this.skin = a1.skin;\n    return this;\n};\nTHREE.Skeleton = function(a1, b, c) {\n    this.useVertexTexture = void 0 !== c ? c : !0;\n    this.identityMatrix = new THREE.Matrix4;\n    a1 = a1 || [];\n    this.bones = a1.slice(0);\n    this.useVertexTexture ? (a1 = Math.sqrt(4 * this.bones.length), a1 = THREE.Math.nextPowerOfTwo(Math.ceil(a1)), this.boneTextureHeight = this.boneTextureWidth = a1 = Math.max(a1, 4), this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4), this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType)) : this.boneMatrices = new Float32Array(16 * this.bones.length);\n    if (void 0 === b) this.calculateInverses();\n    else if (this.bones.length === b.length) this.boneInverses = b.slice(0);\n    else for(console.warn(\"THREE.Skeleton bonInverses is the wrong length.\"), this.boneInverses = [], b = 0, a1 = this.bones.length; b < a1; b++)this.boneInverses.push(new THREE.Matrix4);\n};\nTHREE.Skeleton.prototype.calculateInverses = function() {\n    this.boneInverses = [];\n    for(var a1 = 0, b = this.bones.length; a1 < b; a1++){\n        var c = new THREE.Matrix4;\n        this.bones[a1] && c.getInverse(this.bones[a1].matrixWorld);\n        this.boneInverses.push(c);\n    }\n};\nTHREE.Skeleton.prototype.pose = function() {\n    for(var a1, b = 0, c = this.bones.length; b < c; b++)(a1 = this.bones[b]) && a1.matrixWorld.getInverse(this.boneInverses[b]);\n    b = 0;\n    for(c = this.bones.length; b < c; b++)if (a1 = this.bones[b]) a1.parent ? (a1.matrix.getInverse(a1.parent.matrixWorld), a1.matrix.multiply(a1.matrixWorld)) : a1.matrix.copy(a1.matrixWorld), a1.matrix.decompose(a1.position, a1.quaternion, a1.scale);\n};\nTHREE.Skeleton.prototype.update = function() {\n    var a1 = new THREE.Matrix4;\n    return function() {\n        for(var b = 0, c = this.bones.length; b < c; b++)a1.multiplyMatrices(this.bones[b] ? this.bones[b].matrixWorld : this.identityMatrix, this.boneInverses[b]), a1.flattenToArrayOffset(this.boneMatrices, 16 * b);\n        this.useVertexTexture && (this.boneTexture.needsUpdate = !0);\n    };\n}();\nTHREE.Skeleton.prototype.clone = function() {\n    return new THREE.Skeleton(this.bones, this.boneInverses, this.useVertexTexture);\n};\nTHREE.SkinnedMesh = function(a1, b, c) {\n    THREE.Mesh.call(this, a1, b);\n    this.type = \"SkinnedMesh\";\n    this.bindMode = \"attached\";\n    this.bindMatrix = new THREE.Matrix4;\n    this.bindMatrixInverse = new THREE.Matrix4;\n    a1 = [];\n    if (this.geometry && void 0 !== this.geometry.bones) {\n        for(var d, e = 0, g = this.geometry.bones.length; e < g; ++e)d = this.geometry.bones[e], b = new THREE.Bone(this), a1.push(b), b.name = d.name, b.position.fromArray(d.pos), b.quaternion.fromArray(d.rotq), void 0 !== d.scl && b.scale.fromArray(d.scl);\n        e = 0;\n        for(g = this.geometry.bones.length; e < g; ++e)d = this.geometry.bones[e], -1 !== d.parent ? a1[d.parent].add(a1[e]) : this.add(a1[e]);\n    }\n    this.normalizeSkinWeights();\n    this.updateMatrixWorld(!0);\n    this.bind(new THREE.Skeleton(a1, void 0, c), this.matrixWorld);\n};\nTHREE.SkinnedMesh.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\nTHREE.SkinnedMesh.prototype.bind = function(a1, b) {\n    this.skeleton = a1;\n    void 0 === b && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), b = this.matrixWorld);\n    this.bindMatrix.copy(b);\n    this.bindMatrixInverse.getInverse(b);\n};\nTHREE.SkinnedMesh.prototype.pose = function() {\n    this.skeleton.pose();\n};\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function() {\n    if (this.geometry instanceof THREE.Geometry) for(var a1 = 0; a1 < this.geometry.skinIndices.length; a1++){\n        var b = this.geometry.skinWeights[a1], c = 1 / b.lengthManhattan();\n        Infinity !== c ? b.multiplyScalar(c) : b.set(1);\n    }\n};\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function(a1) {\n    THREE.Mesh.prototype.updateMatrixWorld.call(this, !0);\n    \"attached\" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : \"detached\" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn(\"THREE.SkinnedMesh unrecognized bindMode: \" + this.bindMode);\n};\nTHREE.SkinnedMesh.prototype.clone = function() {\n    return new this.constructor(this.geometry, this.material, this.useVertexTexture).copy(this);\n};\nTHREE.MorphAnimMesh = function(a1, b) {\n    THREE.Mesh.call(this, a1, b);\n    this.type = \"MorphAnimMesh\";\n    this.duration = 1E3;\n    this.mirroredLoop = !1;\n    this.currentKeyframe = this.lastKeyframe = this.time = 0;\n    this.direction = 1;\n    this.directionBackwards = !1;\n    this.setFrameRange(0, a1.morphTargets.length - 1);\n};\nTHREE.MorphAnimMesh.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\nTHREE.MorphAnimMesh.prototype.setFrameRange = function(a1, b) {\n    this.startKeyframe = a1;\n    this.endKeyframe = b;\n    this.length = this.endKeyframe - this.startKeyframe + 1;\n};\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function() {\n    this.direction = 1;\n    this.directionBackwards = !1;\n};\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function() {\n    this.direction = -1;\n    this.directionBackwards = !0;\n};\nTHREE.MorphAnimMesh.prototype.parseAnimations = function() {\n    var a1 = this.geometry;\n    a1.animations || (a1.animations = {});\n    for(var b, c = a1.animations, d = /([a-z]+)_?(\\d+)/, e = 0, g = a1.morphTargets.length; e < g; e++){\n        var f = a1.morphTargets[e].name.match(d);\n        if (f && 1 < f.length) {\n            f = f[1];\n            c[f] || (c[f] = {\n                start: Infinity,\n                end: -Infinity\n            });\n            var h = c[f];\n            e < h.start && (h.start = e);\n            e > h.end && (h.end = e);\n            b || (b = f);\n        }\n    }\n    a1.firstAnimation = b;\n};\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function(a1, b, c) {\n    this.geometry.animations || (this.geometry.animations = {});\n    this.geometry.animations[a1] = {\n        start: b,\n        end: c\n    };\n};\nTHREE.MorphAnimMesh.prototype.playAnimation = function(a1, b) {\n    var c = this.geometry.animations[a1];\n    c ? (this.setFrameRange(c.start, c.end), this.duration = (c.end - c.start) / b * 1E3, this.time = 0) : console.warn(\"THREE.MorphAnimMesh: animation[\" + a1 + \"] undefined in .playAnimation()\");\n};\nTHREE.MorphAnimMesh.prototype.updateAnimation = function(a1) {\n    var b = this.duration / this.length;\n    this.time += this.direction * a1;\n    if (this.mirroredLoop) {\n        if (this.time > this.duration || 0 > this.time) this.direction *= -1, this.time > this.duration && (this.time = this.duration, this.directionBackwards = !0), 0 > this.time && (this.time = 0, this.directionBackwards = !1);\n    } else this.time %= this.duration, 0 > this.time && (this.time += this.duration);\n    var c = this.startKeyframe + THREE.Math.clamp(Math.floor(this.time / b), 0, this.length - 1);\n    a1 = this.morphTargetInfluences;\n    c !== this.currentKeyframe && (a1[this.lastKeyframe] = 0, a1[this.currentKeyframe] = 1, a1[c] = 0, this.lastKeyframe = this.currentKeyframe, this.currentKeyframe = c);\n    b = this.time % b / b;\n    this.directionBackwards && (b = 1 - b);\n    a1[this.currentKeyframe] = b;\n    a1[this.lastKeyframe] = 1 - b;\n};\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function(a1, b, c) {\n    for(var d = this.morphTargetInfluences, e = 0, g = d.length; e < g; e++)d[e] = 0;\n    -1 < a1 && (d[a1] = 1 - c);\n    -1 < b && (d[b] = c);\n};\nTHREE.MorphAnimMesh.prototype.copy = function(a1) {\n    THREE.Mesh.prototype.copy.call(this, a1);\n    this.duration = a1.duration;\n    this.mirroredLoop = a1.mirroredLoop;\n    this.time = a1.time;\n    this.lastKeyframe = a1.lastKeyframe;\n    this.currentKeyframe = a1.currentKeyframe;\n    this.direction = a1.direction;\n    this.directionBackwards = a1.directionBackwards;\n    return this;\n};\nTHREE.LOD = function() {\n    THREE.Object3D.call(this);\n    this.type = \"LOD\";\n    Object.defineProperties(this, {\n        levels: {\n            enumerable: !0,\n            value: []\n        },\n        objects: {\n            get: function() {\n                console.warn(\"THREE.LOD: .objects has been renamed to .levels.\");\n                return this.levels;\n            }\n        }\n    });\n};\nTHREE.LOD.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.LOD.prototype.constructor = THREE.LOD;\nTHREE.LOD.prototype.addLevel = function(a1, b) {\n    void 0 === b && (b = 0);\n    b = Math.abs(b);\n    for(var c = this.levels, d = 0; d < c.length && !(b < c[d].distance); d++);\n    c.splice(d, 0, {\n        distance: b,\n        object: a1\n    });\n    this.add(a1);\n};\nTHREE.LOD.prototype.getObjectForDistance = function(a1) {\n    for(var b = this.levels, c = 1, d = b.length; c < d && !(a1 < b[c].distance); c++);\n    return b[c - 1].object;\n};\nTHREE.LOD.prototype.raycast = function() {\n    var a1 = new THREE.Vector3;\n    return function(b, c) {\n        a1.setFromMatrixPosition(this.matrixWorld);\n        var d = b.ray.origin.distanceTo(a1);\n        this.getObjectForDistance(d).raycast(b, c);\n    };\n}();\nTHREE.LOD.prototype.update = function() {\n    var a1 = new THREE.Vector3, b = new THREE.Vector3;\n    return function(c) {\n        var d = this.levels;\n        if (1 < d.length) {\n            a1.setFromMatrixPosition(c.matrixWorld);\n            b.setFromMatrixPosition(this.matrixWorld);\n            c = a1.distanceTo(b);\n            d[0].object.visible = !0;\n            for(var e = 1, g = d.length; e < g; e++)if (c >= d[e].distance) d[e - 1].object.visible = !1, d[e].object.visible = !0;\n            else break;\n            for(; e < g; e++)d[e].object.visible = !1;\n        }\n    };\n}();\nTHREE.LOD.prototype.copy = function(a1) {\n    THREE.Object3D.prototype.copy.call(this, a1, !1);\n    a1 = a1.levels;\n    for(var b = 0, c = a1.length; b < c; b++){\n        var d = a1[b];\n        this.addLevel(d.object.clone(), d.distance);\n    }\n    return this;\n};\nTHREE.LOD.prototype.toJSON = function(a1) {\n    a1 = THREE.Object3D.prototype.toJSON.call(this, a1);\n    a1.object.levels = [];\n    for(var b = this.levels, c = 0, d = b.length; c < d; c++){\n        var e = b[c];\n        a1.object.levels.push({\n            object: e.object.uuid,\n            distance: e.distance\n        });\n    }\n    return a1;\n};\nTHREE.Sprite = function() {\n    var a1 = new Uint16Array([\n        0,\n        1,\n        2,\n        0,\n        2,\n        3\n    ]), b = new Float32Array([\n        -0.5,\n        -0.5,\n        0,\n        .5,\n        -0.5,\n        0,\n        .5,\n        .5,\n        0,\n        -0.5,\n        .5,\n        0\n    ]), c = new Float32Array([\n        0,\n        0,\n        1,\n        0,\n        1,\n        1,\n        0,\n        1\n    ]), d = new THREE.BufferGeometry;\n    d.setIndex(new THREE.BufferAttribute(a1, 1));\n    d.addAttribute(\"position\", new THREE.BufferAttribute(b, 3));\n    d.addAttribute(\"uv\", new THREE.BufferAttribute(c, 2));\n    return function(a1) {\n        THREE.Object3D.call(this);\n        this.type = \"Sprite\";\n        this.geometry = d;\n        this.material = void 0 !== a1 ? a1 : new THREE.SpriteMaterial;\n    };\n}();\nTHREE.Sprite.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\nTHREE.Sprite.prototype.raycast = function() {\n    var a1 = new THREE.Vector3;\n    return function(b, c) {\n        a1.setFromMatrixPosition(this.matrixWorld);\n        var d = b.ray.distanceSqToPoint(a1);\n        d > this.scale.x * this.scale.y || c.push({\n            distance: Math.sqrt(d),\n            point: this.position,\n            face: null,\n            object: this\n        });\n    };\n}();\nTHREE.Sprite.prototype.clone = function() {\n    return new this.constructor(this.material).copy(this);\n};\nTHREE.Sprite.prototype.toJSON = function(a1) {\n    var b = THREE.Object3D.prototype.toJSON.call(this, a1);\n    void 0 === a1.materials[this.material.uuid] && (a1.materials[this.material.uuid] = this.material.toJSON());\n    b.object.material = this.material.uuid;\n    return b;\n};\nTHREE.Particle = THREE.Sprite;\nTHREE.LensFlare = function(a1, b, c, d, e) {\n    THREE.Object3D.call(this);\n    this.lensFlares = [];\n    this.positionScreen = new THREE.Vector3;\n    this.customUpdateCallback = void 0;\n    void 0 !== a1 && this.add(a1, b, c, d, e);\n};\nTHREE.LensFlare.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\nTHREE.LensFlare.prototype.add = function(a1, b, c, d, e, g) {\n    void 0 === b && (b = -1);\n    void 0 === c && (c = 0);\n    void 0 === g && (g = 1);\n    void 0 === e && (e = new THREE.Color(16777215));\n    void 0 === d && (d = THREE.NormalBlending);\n    c = Math.min(c, Math.max(0, c));\n    this.lensFlares.push({\n        texture: a1,\n        size: b,\n        distance: c,\n        x: 0,\n        y: 0,\n        z: 0,\n        scale: 1,\n        rotation: 0,\n        opacity: g,\n        color: e,\n        blending: d\n    });\n};\nTHREE.LensFlare.prototype.updateLensFlares = function() {\n    var a1, b = this.lensFlares.length, c, d = 2 * -this.positionScreen.x, e = 2 * -this.positionScreen.y;\n    for(a1 = 0; a1 < b; a1++)c = this.lensFlares[a1], c.x = this.positionScreen.x + d * c.distance, c.y = this.positionScreen.y + e * c.distance, c.wantedRotation = c.x * Math.PI * .25, c.rotation += .25 * (c.wantedRotation - c.rotation);\n};\nTHREE.LensFlare.prototype.copy = function(a1) {\n    THREE.Object3D.prototype.copy.call(this, a1);\n    this.positionScreen.copy(a1.positionScreen);\n    this.customUpdateCallback = a1.customUpdateCallback;\n    for(var b = 0, c = a1.lensFlares.length; b < c; b++)this.lensFlares.push(a1.lensFlares[b]);\n    return this;\n};\nTHREE.Scene = function() {\n    THREE.Object3D.call(this);\n    this.type = \"Scene\";\n    this.overrideMaterial = this.fog = null;\n    this.autoUpdate = !0;\n};\nTHREE.Scene.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Scene.prototype.constructor = THREE.Scene;\nTHREE.Scene.prototype.copy = function(a1) {\n    THREE.Object3D.prototype.copy.call(this, a1);\n    null !== a1.fog && (this.fog = a1.fog.clone());\n    null !== a1.overrideMaterial && (this.overrideMaterial = a1.overrideMaterial.clone());\n    this.autoUpdate = a1.autoUpdate;\n    this.matrixAutoUpdate = a1.matrixAutoUpdate;\n    return this;\n};\nTHREE.Fog = function(a1, b, c) {\n    this.name = \"\";\n    this.color = new THREE.Color(a1);\n    this.near = void 0 !== b ? b : 1;\n    this.far = void 0 !== c ? c : 1E3;\n};\nTHREE.Fog.prototype.clone = function() {\n    return new THREE.Fog(this.color.getHex(), this.near, this.far);\n};\nTHREE.FogExp2 = function(a1, b) {\n    this.name = \"\";\n    this.color = new THREE.Color(a1);\n    this.density = void 0 !== b ? b : 2.5E-4;\n};\nTHREE.FogExp2.prototype.clone = function() {\n    return new THREE.FogExp2(this.color.getHex(), this.density);\n};\nTHREE.ShaderChunk = {};\nTHREE.ShaderChunk.alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.alphatest_fragment = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.aomap_fragment = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\nTHREE.ShaderChunk.begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\nTHREE.ShaderChunk.beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\nTHREE.ShaderChunk.bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\nTHREE.ShaderChunk.color_fragment = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\nTHREE.ShaderChunk.color_pars_fragment = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.color_pars_vertex = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\nTHREE.ShaderChunk.color_vertex = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\nTHREE.ShaderChunk.common = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n\\u22C5l)(n\\u22C5v) / 4(n\\u22C5l)(n\\u22C5v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\nTHREE.ShaderChunk.defaultnormal_vertex = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\nTHREE.ShaderChunk.displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\nTHREE.ShaderChunk.displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_fragment = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_pars_vertex = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_vertex = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.fog_fragment = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\nTHREE.ShaderChunk.fog_pars_fragment = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\nTHREE.ShaderChunk.lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\nTHREE.ShaderChunk.lights_lambert_pars_vertex = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_lambert_vertex = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_fragment = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_pars_fragment = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_pars_vertex = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_vertex = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.linear_to_gamma_fragment = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\nTHREE.ShaderChunk.logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\nTHREE.ShaderChunk.logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\nTHREE.ShaderChunk.logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\nTHREE.ShaderChunk.map_fragment = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.map_pars_fragment = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\nTHREE.ShaderChunk.map_particle_fragment = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\nTHREE.ShaderChunk.map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\nTHREE.ShaderChunk.morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\nTHREE.ShaderChunk.morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\nTHREE.ShaderChunk.project_vertex = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\nTHREE.ShaderChunk.shadowmap_fragment = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\nTHREE.ShaderChunk.shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\nTHREE.ShaderChunk.shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\nTHREE.ShaderChunk.skinbase_vertex = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\nTHREE.ShaderChunk.skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.skinning_vertex = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.specularmap_fragment = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\nTHREE.ShaderChunk.specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\nTHREE.ShaderChunk.uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\nTHREE.ShaderChunk.uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\nTHREE.ShaderChunk.uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\nTHREE.ShaderChunk.uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\nTHREE.ShaderChunk.uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\nTHREE.ShaderChunk.worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\nTHREE.UniformsUtils = {\n    merge: function(a1) {\n        for(var b = {}, c = 0; c < a1.length; c++){\n            var d = this.clone(a1[c]), e;\n            for(e in d)b[e] = d[e];\n        }\n        return b;\n    },\n    clone: function(a1) {\n        var b = {}, c;\n        for(c in a1){\n            b[c] = {};\n            for(var d in a1[c]){\n                var e = a1[c][d];\n                e instanceof THREE.Color || e instanceof THREE.Vector2 || e instanceof THREE.Vector3 || e instanceof THREE.Vector4 || e instanceof THREE.Matrix3 || e instanceof THREE.Matrix4 || e instanceof THREE.Texture ? b[c][d] = e.clone() : Array.isArray(e) ? b[c][d] = e.slice() : b[c][d] = e;\n            }\n        }\n        return b;\n    }\n};\nTHREE.UniformsLib = {\n    common: {\n        diffuse: {\n            type: \"c\",\n            value: new THREE.Color(15658734)\n        },\n        opacity: {\n            type: \"f\",\n            value: 1\n        },\n        map: {\n            type: \"t\",\n            value: null\n        },\n        offsetRepeat: {\n            type: \"v4\",\n            value: new THREE.Vector4(0, 0, 1, 1)\n        },\n        specularMap: {\n            type: \"t\",\n            value: null\n        },\n        alphaMap: {\n            type: \"t\",\n            value: null\n        },\n        envMap: {\n            type: \"t\",\n            value: null\n        },\n        flipEnvMap: {\n            type: \"f\",\n            value: -1\n        },\n        reflectivity: {\n            type: \"f\",\n            value: 1\n        },\n        refractionRatio: {\n            type: \"f\",\n            value: .98\n        }\n    },\n    aomap: {\n        aoMap: {\n            type: \"t\",\n            value: null\n        },\n        aoMapIntensity: {\n            type: \"f\",\n            value: 1\n        }\n    },\n    lightmap: {\n        lightMap: {\n            type: \"t\",\n            value: null\n        },\n        lightMapIntensity: {\n            type: \"f\",\n            value: 1\n        }\n    },\n    emissivemap: {\n        emissiveMap: {\n            type: \"t\",\n            value: null\n        }\n    },\n    bumpmap: {\n        bumpMap: {\n            type: \"t\",\n            value: null\n        },\n        bumpScale: {\n            type: \"f\",\n            value: 1\n        }\n    },\n    normalmap: {\n        normalMap: {\n            type: \"t\",\n            value: null\n        },\n        normalScale: {\n            type: \"v2\",\n            value: new THREE.Vector2(1, 1)\n        }\n    },\n    displacementmap: {\n        displacementMap: {\n            type: \"t\",\n            value: null\n        },\n        displacementScale: {\n            type: \"f\",\n            value: 1\n        },\n        displacementBias: {\n            type: \"f\",\n            value: 0\n        }\n    },\n    fog: {\n        fogDensity: {\n            type: \"f\",\n            value: 2.5E-4\n        },\n        fogNear: {\n            type: \"f\",\n            value: 1\n        },\n        fogFar: {\n            type: \"f\",\n            value: 2E3\n        },\n        fogColor: {\n            type: \"c\",\n            value: new THREE.Color(16777215)\n        }\n    },\n    lights: {\n        ambientLightColor: {\n            type: \"fv\",\n            value: []\n        },\n        directionalLightDirection: {\n            type: \"fv\",\n            value: []\n        },\n        directionalLightColor: {\n            type: \"fv\",\n            value: []\n        },\n        hemisphereLightDirection: {\n            type: \"fv\",\n            value: []\n        },\n        hemisphereLightSkyColor: {\n            type: \"fv\",\n            value: []\n        },\n        hemisphereLightGroundColor: {\n            type: \"fv\",\n            value: []\n        },\n        pointLightColor: {\n            type: \"fv\",\n            value: []\n        },\n        pointLightPosition: {\n            type: \"fv\",\n            value: []\n        },\n        pointLightDistance: {\n            type: \"fv1\",\n            value: []\n        },\n        pointLightDecay: {\n            type: \"fv1\",\n            value: []\n        },\n        spotLightColor: {\n            type: \"fv\",\n            value: []\n        },\n        spotLightPosition: {\n            type: \"fv\",\n            value: []\n        },\n        spotLightDirection: {\n            type: \"fv\",\n            value: []\n        },\n        spotLightDistance: {\n            type: \"fv1\",\n            value: []\n        },\n        spotLightAngleCos: {\n            type: \"fv1\",\n            value: []\n        },\n        spotLightExponent: {\n            type: \"fv1\",\n            value: []\n        },\n        spotLightDecay: {\n            type: \"fv1\",\n            value: []\n        }\n    },\n    points: {\n        psColor: {\n            type: \"c\",\n            value: new THREE.Color(15658734)\n        },\n        opacity: {\n            type: \"f\",\n            value: 1\n        },\n        size: {\n            type: \"f\",\n            value: 1\n        },\n        scale: {\n            type: \"f\",\n            value: 1\n        },\n        map: {\n            type: \"t\",\n            value: null\n        },\n        offsetRepeat: {\n            type: \"v4\",\n            value: new THREE.Vector4(0, 0, 1, 1)\n        },\n        fogDensity: {\n            type: \"f\",\n            value: 2.5E-4\n        },\n        fogNear: {\n            type: \"f\",\n            value: 1\n        },\n        fogFar: {\n            type: \"f\",\n            value: 2E3\n        },\n        fogColor: {\n            type: \"c\",\n            value: new THREE.Color(16777215)\n        }\n    },\n    shadowmap: {\n        shadowMap: {\n            type: \"tv\",\n            value: []\n        },\n        shadowMapSize: {\n            type: \"v2v\",\n            value: []\n        },\n        shadowBias: {\n            type: \"fv1\",\n            value: []\n        },\n        shadowDarkness: {\n            type: \"fv1\",\n            value: []\n        },\n        shadowMatrix: {\n            type: \"m4v\",\n            value: []\n        }\n    }\n};\nTHREE.ShaderLib = {\n    basic: {\n        uniforms: THREE.UniformsUtils.merge([\n            THREE.UniformsLib.common,\n            THREE.UniformsLib.aomap,\n            THREE.UniformsLib.fog,\n            THREE.UniformsLib.shadowmap\n        ]),\n        vertexShader: [\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.uv_pars_vertex,\n            THREE.ShaderChunk.uv2_pars_vertex,\n            THREE.ShaderChunk.envmap_pars_vertex,\n            THREE.ShaderChunk.color_pars_vertex,\n            THREE.ShaderChunk.morphtarget_pars_vertex,\n            THREE.ShaderChunk.skinning_pars_vertex,\n            THREE.ShaderChunk.shadowmap_pars_vertex,\n            THREE.ShaderChunk.logdepthbuf_pars_vertex,\n            \"void main() {\",\n            THREE.ShaderChunk.uv_vertex,\n            THREE.ShaderChunk.uv2_vertex,\n            THREE.ShaderChunk.color_vertex,\n            THREE.ShaderChunk.skinbase_vertex,\n            \"\t#ifdef USE_ENVMAP\",\n            THREE.ShaderChunk.beginnormal_vertex,\n            THREE.ShaderChunk.morphnormal_vertex,\n            THREE.ShaderChunk.skinnormal_vertex,\n            THREE.ShaderChunk.defaultnormal_vertex,\n            \"\t#endif\",\n            THREE.ShaderChunk.begin_vertex,\n            THREE.ShaderChunk.morphtarget_vertex,\n            THREE.ShaderChunk.skinning_vertex,\n            THREE.ShaderChunk.project_vertex,\n            THREE.ShaderChunk.logdepthbuf_vertex,\n            THREE.ShaderChunk.worldpos_vertex,\n            THREE.ShaderChunk.envmap_vertex,\n            THREE.ShaderChunk.shadowmap_vertex,\n            \"}\"\n        ].join(\"\\n\"),\n        fragmentShader: [\n            \"uniform vec3 diffuse;\\nuniform float opacity;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.color_pars_fragment,\n            THREE.ShaderChunk.uv_pars_fragment,\n            THREE.ShaderChunk.uv2_pars_fragment,\n            THREE.ShaderChunk.map_pars_fragment,\n            THREE.ShaderChunk.alphamap_pars_fragment,\n            THREE.ShaderChunk.aomap_pars_fragment,\n            THREE.ShaderChunk.envmap_pars_fragment,\n            THREE.ShaderChunk.fog_pars_fragment,\n            THREE.ShaderChunk.shadowmap_pars_fragment,\n            THREE.ShaderChunk.specularmap_pars_fragment,\n            THREE.ShaderChunk.logdepthbuf_pars_fragment,\n            \"void main() {\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tvec3 totalAmbientLight = vec3( 1.0 );\",\n            THREE.ShaderChunk.logdepthbuf_fragment,\n            THREE.ShaderChunk.map_fragment,\n            THREE.ShaderChunk.color_fragment,\n            THREE.ShaderChunk.alphamap_fragment,\n            THREE.ShaderChunk.alphatest_fragment,\n            THREE.ShaderChunk.specularmap_fragment,\n            THREE.ShaderChunk.aomap_fragment,\n            \"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\",\n            THREE.ShaderChunk.envmap_fragment,\n            THREE.ShaderChunk.shadowmap_fragment,\n            THREE.ShaderChunk.linear_to_gamma_fragment,\n            THREE.ShaderChunk.fog_fragment,\n            \"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"\n        ].join(\"\\n\")\n    },\n    lambert: {\n        uniforms: THREE.UniformsUtils.merge([\n            THREE.UniformsLib.common,\n            THREE.UniformsLib.fog,\n            THREE.UniformsLib.lights,\n            THREE.UniformsLib.shadowmap,\n            {\n                emissive: {\n                    type: \"c\",\n                    value: new THREE.Color(0)\n                }\n            }\n        ]),\n        vertexShader: [\n            \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.uv_pars_vertex,\n            THREE.ShaderChunk.uv2_pars_vertex,\n            THREE.ShaderChunk.envmap_pars_vertex,\n            THREE.ShaderChunk.lights_lambert_pars_vertex,\n            THREE.ShaderChunk.color_pars_vertex,\n            THREE.ShaderChunk.morphtarget_pars_vertex,\n            THREE.ShaderChunk.skinning_pars_vertex,\n            THREE.ShaderChunk.shadowmap_pars_vertex,\n            THREE.ShaderChunk.logdepthbuf_pars_vertex,\n            \"void main() {\",\n            THREE.ShaderChunk.uv_vertex,\n            THREE.ShaderChunk.uv2_vertex,\n            THREE.ShaderChunk.color_vertex,\n            THREE.ShaderChunk.beginnormal_vertex,\n            THREE.ShaderChunk.morphnormal_vertex,\n            THREE.ShaderChunk.skinbase_vertex,\n            THREE.ShaderChunk.skinnormal_vertex,\n            THREE.ShaderChunk.defaultnormal_vertex,\n            THREE.ShaderChunk.begin_vertex,\n            THREE.ShaderChunk.morphtarget_vertex,\n            THREE.ShaderChunk.skinning_vertex,\n            THREE.ShaderChunk.project_vertex,\n            THREE.ShaderChunk.logdepthbuf_vertex,\n            THREE.ShaderChunk.worldpos_vertex,\n            THREE.ShaderChunk.envmap_vertex,\n            THREE.ShaderChunk.lights_lambert_vertex,\n            THREE.ShaderChunk.shadowmap_vertex,\n            \"}\"\n        ].join(\"\\n\"),\n        fragmentShader: [\n            \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.color_pars_fragment,\n            THREE.ShaderChunk.uv_pars_fragment,\n            THREE.ShaderChunk.uv2_pars_fragment,\n            THREE.ShaderChunk.map_pars_fragment,\n            THREE.ShaderChunk.alphamap_pars_fragment,\n            THREE.ShaderChunk.envmap_pars_fragment,\n            THREE.ShaderChunk.fog_pars_fragment,\n            THREE.ShaderChunk.shadowmap_pars_fragment,\n            THREE.ShaderChunk.specularmap_pars_fragment,\n            THREE.ShaderChunk.logdepthbuf_pars_fragment,\n            \"void main() {\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\",\n            THREE.ShaderChunk.logdepthbuf_fragment,\n            THREE.ShaderChunk.map_fragment,\n            THREE.ShaderChunk.color_fragment,\n            THREE.ShaderChunk.alphamap_fragment,\n            THREE.ShaderChunk.alphatest_fragment,\n            THREE.ShaderChunk.specularmap_fragment,\n            \"\t#ifdef DOUBLE_SIDED\\n\t\tif ( gl_FrontFacing )\\n\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\\n\t\telse\\n\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\\n\t#else\\n\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\\n\t#endif\",\n            THREE.ShaderChunk.envmap_fragment,\n            THREE.ShaderChunk.shadowmap_fragment,\n            THREE.ShaderChunk.linear_to_gamma_fragment,\n            THREE.ShaderChunk.fog_fragment,\n            \"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"\n        ].join(\"\\n\")\n    },\n    phong: {\n        uniforms: THREE.UniformsUtils.merge([\n            THREE.UniformsLib.common,\n            THREE.UniformsLib.aomap,\n            THREE.UniformsLib.lightmap,\n            THREE.UniformsLib.emissivemap,\n            THREE.UniformsLib.bumpmap,\n            THREE.UniformsLib.normalmap,\n            THREE.UniformsLib.displacementmap,\n            THREE.UniformsLib.fog,\n            THREE.UniformsLib.lights,\n            THREE.UniformsLib.shadowmap,\n            {\n                emissive: {\n                    type: \"c\",\n                    value: new THREE.Color(0)\n                },\n                specular: {\n                    type: \"c\",\n                    value: new THREE.Color(1118481)\n                },\n                shininess: {\n                    type: \"f\",\n                    value: 30\n                }\n            }\n        ]),\n        vertexShader: [\n            \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.uv_pars_vertex,\n            THREE.ShaderChunk.uv2_pars_vertex,\n            THREE.ShaderChunk.displacementmap_pars_vertex,\n            THREE.ShaderChunk.envmap_pars_vertex,\n            THREE.ShaderChunk.lights_phong_pars_vertex,\n            THREE.ShaderChunk.color_pars_vertex,\n            THREE.ShaderChunk.morphtarget_pars_vertex,\n            THREE.ShaderChunk.skinning_pars_vertex,\n            THREE.ShaderChunk.shadowmap_pars_vertex,\n            THREE.ShaderChunk.logdepthbuf_pars_vertex,\n            \"void main() {\",\n            THREE.ShaderChunk.uv_vertex,\n            THREE.ShaderChunk.uv2_vertex,\n            THREE.ShaderChunk.color_vertex,\n            THREE.ShaderChunk.beginnormal_vertex,\n            THREE.ShaderChunk.morphnormal_vertex,\n            THREE.ShaderChunk.skinbase_vertex,\n            THREE.ShaderChunk.skinnormal_vertex,\n            THREE.ShaderChunk.defaultnormal_vertex,\n            \"#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\",\n            THREE.ShaderChunk.begin_vertex,\n            THREE.ShaderChunk.displacementmap_vertex,\n            THREE.ShaderChunk.morphtarget_vertex,\n            THREE.ShaderChunk.skinning_vertex,\n            THREE.ShaderChunk.project_vertex,\n            THREE.ShaderChunk.logdepthbuf_vertex,\n            \"\tvViewPosition = - mvPosition.xyz;\",\n            THREE.ShaderChunk.worldpos_vertex,\n            THREE.ShaderChunk.envmap_vertex,\n            THREE.ShaderChunk.lights_phong_vertex,\n            THREE.ShaderChunk.shadowmap_vertex,\n            \"}\"\n        ].join(\"\\n\"),\n        fragmentShader: [\n            \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.color_pars_fragment,\n            THREE.ShaderChunk.uv_pars_fragment,\n            THREE.ShaderChunk.uv2_pars_fragment,\n            THREE.ShaderChunk.map_pars_fragment,\n            THREE.ShaderChunk.alphamap_pars_fragment,\n            THREE.ShaderChunk.aomap_pars_fragment,\n            THREE.ShaderChunk.lightmap_pars_fragment,\n            THREE.ShaderChunk.emissivemap_pars_fragment,\n            THREE.ShaderChunk.envmap_pars_fragment,\n            THREE.ShaderChunk.fog_pars_fragment,\n            THREE.ShaderChunk.lights_phong_pars_fragment,\n            THREE.ShaderChunk.shadowmap_pars_fragment,\n            THREE.ShaderChunk.bumpmap_pars_fragment,\n            THREE.ShaderChunk.normalmap_pars_fragment,\n            THREE.ShaderChunk.specularmap_pars_fragment,\n            THREE.ShaderChunk.logdepthbuf_pars_fragment,\n            \"void main() {\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tvec3 totalAmbientLight = ambientLightColor;\\n\tvec3 totalEmissiveLight = emissive;\",\n            THREE.ShaderChunk.logdepthbuf_fragment,\n            THREE.ShaderChunk.map_fragment,\n            THREE.ShaderChunk.color_fragment,\n            THREE.ShaderChunk.alphamap_fragment,\n            THREE.ShaderChunk.alphatest_fragment,\n            THREE.ShaderChunk.specularmap_fragment,\n            THREE.ShaderChunk.lightmap_fragment,\n            THREE.ShaderChunk.aomap_fragment,\n            THREE.ShaderChunk.emissivemap_fragment,\n            THREE.ShaderChunk.lights_phong_fragment,\n            THREE.ShaderChunk.envmap_fragment,\n            THREE.ShaderChunk.shadowmap_fragment,\n            THREE.ShaderChunk.linear_to_gamma_fragment,\n            THREE.ShaderChunk.fog_fragment,\n            \"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"\n        ].join(\"\\n\")\n    },\n    points: {\n        uniforms: THREE.UniformsUtils.merge([\n            THREE.UniformsLib.points,\n            THREE.UniformsLib.shadowmap\n        ]),\n        vertexShader: [\n            \"uniform float size;\\nuniform float scale;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.color_pars_vertex,\n            THREE.ShaderChunk.shadowmap_pars_vertex,\n            THREE.ShaderChunk.logdepthbuf_pars_vertex,\n            \"void main() {\",\n            THREE.ShaderChunk.color_vertex,\n            \"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\tgl_Position = projectionMatrix * mvPosition;\",\n            THREE.ShaderChunk.logdepthbuf_vertex,\n            THREE.ShaderChunk.worldpos_vertex,\n            THREE.ShaderChunk.shadowmap_vertex,\n            \"}\"\n        ].join(\"\\n\"),\n        fragmentShader: [\n            \"uniform vec3 psColor;\\nuniform float opacity;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.color_pars_fragment,\n            THREE.ShaderChunk.map_particle_pars_fragment,\n            THREE.ShaderChunk.fog_pars_fragment,\n            THREE.ShaderChunk.shadowmap_pars_fragment,\n            THREE.ShaderChunk.logdepthbuf_pars_fragment,\n            \"void main() {\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( psColor, opacity );\",\n            THREE.ShaderChunk.logdepthbuf_fragment,\n            THREE.ShaderChunk.map_particle_fragment,\n            THREE.ShaderChunk.color_fragment,\n            THREE.ShaderChunk.alphatest_fragment,\n            \"\toutgoingLight = diffuseColor.rgb;\",\n            THREE.ShaderChunk.shadowmap_fragment,\n            THREE.ShaderChunk.fog_fragment,\n            \"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"\n        ].join(\"\\n\")\n    },\n    dashed: {\n        uniforms: THREE.UniformsUtils.merge([\n            THREE.UniformsLib.common,\n            THREE.UniformsLib.fog,\n            {\n                scale: {\n                    type: \"f\",\n                    value: 1\n                },\n                dashSize: {\n                    type: \"f\",\n                    value: 1\n                },\n                totalSize: {\n                    type: \"f\",\n                    value: 2\n                }\n            }\n        ]),\n        vertexShader: [\n            \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.color_pars_vertex,\n            THREE.ShaderChunk.logdepthbuf_pars_vertex,\n            \"void main() {\",\n            THREE.ShaderChunk.color_vertex,\n            \"\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\",\n            THREE.ShaderChunk.logdepthbuf_vertex,\n            \"}\"\n        ].join(\"\\n\"),\n        fragmentShader: [\n            \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.color_pars_fragment,\n            THREE.ShaderChunk.fog_pars_fragment,\n            THREE.ShaderChunk.logdepthbuf_pars_fragment,\n            \"void main() {\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\",\n            THREE.ShaderChunk.logdepthbuf_fragment,\n            THREE.ShaderChunk.color_fragment,\n            \"\toutgoingLight = diffuseColor.rgb;\",\n            THREE.ShaderChunk.fog_fragment,\n            \"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"\n        ].join(\"\\n\")\n    },\n    depth: {\n        uniforms: {\n            mNear: {\n                type: \"f\",\n                value: 1\n            },\n            mFar: {\n                type: \"f\",\n                value: 2E3\n            },\n            opacity: {\n                type: \"f\",\n                value: 1\n            }\n        },\n        vertexShader: [\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.morphtarget_pars_vertex,\n            THREE.ShaderChunk.logdepthbuf_pars_vertex,\n            \"void main() {\",\n            THREE.ShaderChunk.begin_vertex,\n            THREE.ShaderChunk.morphtarget_vertex,\n            THREE.ShaderChunk.project_vertex,\n            THREE.ShaderChunk.logdepthbuf_vertex,\n            \"}\"\n        ].join(\"\\n\"),\n        fragmentShader: [\n            \"uniform float mNear;\\nuniform float mFar;\\nuniform float opacity;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.logdepthbuf_pars_fragment,\n            \"void main() {\",\n            THREE.ShaderChunk.logdepthbuf_fragment,\n            \"\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\\n\tgl_FragColor = vec4( vec3( color ), opacity );\\n}\"\n        ].join(\"\\n\")\n    },\n    normal: {\n        uniforms: {\n            opacity: {\n                type: \"f\",\n                value: 1\n            }\n        },\n        vertexShader: [\n            \"varying vec3 vNormal;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.morphtarget_pars_vertex,\n            THREE.ShaderChunk.logdepthbuf_pars_vertex,\n            \"void main() {\\n\tvNormal = normalize( normalMatrix * normal );\",\n            THREE.ShaderChunk.begin_vertex,\n            THREE.ShaderChunk.morphtarget_vertex,\n            THREE.ShaderChunk.project_vertex,\n            THREE.ShaderChunk.logdepthbuf_vertex,\n            \"}\"\n        ].join(\"\\n\"),\n        fragmentShader: [\n            \"uniform float opacity;\\nvarying vec3 vNormal;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.logdepthbuf_pars_fragment,\n            \"void main() {\\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\n            THREE.ShaderChunk.logdepthbuf_fragment,\n            \"}\"\n        ].join(\"\\n\")\n    },\n    cube: {\n        uniforms: {\n            tCube: {\n                type: \"t\",\n                value: null\n            },\n            tFlip: {\n                type: \"f\",\n                value: -1\n            }\n        },\n        vertexShader: [\n            \"varying vec3 vWorldPosition;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.logdepthbuf_pars_vertex,\n            \"void main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n            THREE.ShaderChunk.logdepthbuf_vertex,\n            \"}\"\n        ].join(\"\\n\"),\n        fragmentShader: [\n            \"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.logdepthbuf_pars_fragment,\n            \"void main() {\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\n            THREE.ShaderChunk.logdepthbuf_fragment,\n            \"}\"\n        ].join(\"\\n\")\n    },\n    equirect: {\n        uniforms: {\n            tEquirect: {\n                type: \"t\",\n                value: null\n            },\n            tFlip: {\n                type: \"f\",\n                value: -1\n            }\n        },\n        vertexShader: [\n            \"varying vec3 vWorldPosition;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.logdepthbuf_pars_vertex,\n            \"void main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n            THREE.ShaderChunk.logdepthbuf_vertex,\n            \"}\"\n        ].join(\"\\n\"),\n        fragmentShader: [\n            \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\",\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.logdepthbuf_pars_fragment,\n            \"void main() {\\nvec3 direction = normalize( vWorldPosition );\\nvec2 sampleUV;\\nsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\nsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\ngl_FragColor = texture2D( tEquirect, sampleUV );\",\n            THREE.ShaderChunk.logdepthbuf_fragment,\n            \"}\"\n        ].join(\"\\n\")\n    },\n    depthRGBA: {\n        uniforms: {},\n        vertexShader: [\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.morphtarget_pars_vertex,\n            THREE.ShaderChunk.skinning_pars_vertex,\n            THREE.ShaderChunk.logdepthbuf_pars_vertex,\n            \"void main() {\",\n            THREE.ShaderChunk.skinbase_vertex,\n            THREE.ShaderChunk.begin_vertex,\n            THREE.ShaderChunk.morphtarget_vertex,\n            THREE.ShaderChunk.skinning_vertex,\n            THREE.ShaderChunk.project_vertex,\n            THREE.ShaderChunk.logdepthbuf_vertex,\n            \"}\"\n        ].join(\"\\n\"),\n        fragmentShader: [\n            THREE.ShaderChunk.common,\n            THREE.ShaderChunk.logdepthbuf_pars_fragment,\n            \"vec4 pack_depth( const in float depth ) {\\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\\n\tres -= res.xxyz * bit_mask;\\n\treturn res;\\n}\\nvoid main() {\",\n            THREE.ShaderChunk.logdepthbuf_fragment,\n            \"\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\\n\t#else\\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\\n\t#endif\\n}\"\n        ].join(\"\\n\")\n    }\n};\nTHREE.WebGLRenderer = function(a1) {\n    function b(a1, b, c, d) {\n        !0 === Q && (a1 *= d, b *= d, c *= d);\n        s.clearColor(a1, b, c, d);\n    }\n    function c() {\n        M.init();\n        s.viewport(Ja, Ka, ta, ua);\n        b(A.r, A.g, A.b, ia);\n    }\n    function d() {\n        Sa = ib = null;\n        pa = \"\";\n        Ta = -1;\n        db = !0;\n        M.reset();\n    }\n    function e(a1) {\n        a1.preventDefault();\n        d();\n        c();\n        Y.clear();\n    }\n    function g(a1) {\n        a1 = a1.target;\n        a1.removeEventListener(\"dispose\", g);\n        a: {\n            var b = Y.get(a1);\n            if (a1.image && b.__image__webglTextureCube) s.deleteTexture(b.__image__webglTextureCube);\n            else {\n                if (void 0 === b.__webglInit) break a;\n                s.deleteTexture(b.__webglTexture);\n            }\n            Y.delete(a1);\n        }\n        La.textures--;\n    }\n    function f(a1) {\n        a1 = a1.target;\n        a1.removeEventListener(\"dispose\", f);\n        var b = Y.get(a1);\n        if (a1 && void 0 !== b.__webglTexture) {\n            s.deleteTexture(b.__webglTexture);\n            if (a1 instanceof THREE.WebGLRenderTargetCube) for(var c = 0; 6 > c; c++)s.deleteFramebuffer(b.__webglFramebuffer[c]), s.deleteRenderbuffer(b.__webglRenderbuffer[c]);\n            else s.deleteFramebuffer(b.__webglFramebuffer), s.deleteRenderbuffer(b.__webglRenderbuffer);\n            Y.delete(a1);\n        }\n        La.textures--;\n    }\n    function h(a1) {\n        a1 = a1.target;\n        a1.removeEventListener(\"dispose\", h);\n        k(a1);\n        Y.delete(a1);\n    }\n    function k(a1) {\n        var b = Y.get(a1).program;\n        a1.program = void 0;\n        void 0 !== b && Ua.releaseProgram(b);\n    }\n    function l(a1, b) {\n        return b[0] - a1[0];\n    }\n    function n(a1, b) {\n        return a1.object.renderOrder !== b.object.renderOrder ? a1.object.renderOrder - b.object.renderOrder : a1.material.id !== b.material.id ? a1.material.id - b.material.id : a1.z !== b.z ? a1.z - b.z : a1.id - b.id;\n    }\n    function p(a1, b) {\n        return a1.object.renderOrder !== b.object.renderOrder ? a1.object.renderOrder - b.object.renderOrder : a1.z !== b.z ? b.z - a1.z : a1.id - b.id;\n    }\n    function m(a1, b, c, d, e) {\n        var f;\n        c.transparent ? (d = va, f = ++ma) : (d = fa, f = ++V);\n        f = d[f];\n        void 0 !== f ? (f.id = a1.id, f.object = a1, f.geometry = b, f.material = c, f.z = $.z, f.group = e) : (f = {\n            id: a1.id,\n            object: a1,\n            geometry: b,\n            material: c,\n            z: $.z,\n            group: e\n        }, d.push(f));\n    }\n    function q(a1) {\n        if (!1 !== a1.visible) {\n            if (a1 instanceof THREE.Light) Z.push(a1);\n            else if (a1 instanceof THREE.Sprite) Ba.push(a1);\n            else if (a1 instanceof THREE.LensFlare) Va.push(a1);\n            else if (a1 instanceof THREE.ImmediateRenderObject) {\n                var b, c;\n                a1.material.transparent ? (b = wa, c = ++qa) : (b = ja, c = ++Ca);\n                c < b.length ? b[c] = a1 : b.push(a1);\n            } else if (a1 instanceof THREE.Mesh || a1 instanceof THREE.Line || a1 instanceof THREE.Points) {\n                if (a1 instanceof THREE.SkinnedMesh && a1.skeleton.update(), !1 === a1.frustumCulled || !0 === Wa.intersectsObject(a1)) {\n                    var d = a1.material;\n                    if (!0 === d.visible) {\n                        if (!0 === la.sortObjects && ($.setFromMatrixPosition(a1.matrixWorld), $.applyProjection(Da)), b = Ea.update(a1), d instanceof THREE.MeshFaceMaterial) {\n                            c = b.groups;\n                            for(var e = d.materials, d = 0, f = c.length; d < f; d++){\n                                var g = c[d], h = e[g.materialIndex];\n                                !0 === h.visible && m(a1, b, h, $.z, g);\n                            }\n                        } else m(a1, b, d, $.z);\n                    }\n                }\n            }\n            a1 = a1.children;\n            d = 0;\n            for(f = a1.length; d < f; d++)q(a1[d]);\n        }\n    }\n    function t(a1, b, c, d, e) {\n        for(var f = 0, g = a1.length; f < g; f++){\n            var h = a1[f], k = h.object, l = h.geometry, m = void 0 === e ? h.material : e, h = h.group;\n            k.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse, k.matrixWorld);\n            k.normalMatrix.getNormalMatrix(k.modelViewMatrix);\n            la.renderBufferDirect(b, c, d, l, m, k, h);\n        }\n    }\n    function r(a1, b, c, d, e) {\n        for(var f = e, g = 0, h = a1.length; g < h; g++){\n            var k = a1[g];\n            k.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse, k.matrixWorld);\n            k.normalMatrix.getNormalMatrix(k.modelViewMatrix);\n            void 0 === e && (f = k.material);\n            u(f);\n            var l = w(b, c, d, f, k);\n            pa = \"\";\n            k.render(function(a1) {\n                la.renderBufferImmediate(a1, l, f);\n            });\n        }\n    }\n    function u(a1) {\n        a1.side !== THREE.DoubleSide ? M.enable(s.CULL_FACE) : M.disable(s.CULL_FACE);\n        M.setFlipSided(a1.side === THREE.BackSide);\n        !0 === a1.transparent ? M.setBlending(a1.blending, a1.blendEquation, a1.blendSrc, a1.blendDst, a1.blendEquationAlpha, a1.blendSrcAlpha, a1.blendDstAlpha) : M.setBlending(THREE.NoBlending);\n        M.setDepthFunc(a1.depthFunc);\n        M.setDepthTest(a1.depthTest);\n        M.setDepthWrite(a1.depthWrite);\n        M.setColorWrite(a1.colorWrite);\n        M.setPolygonOffset(a1.polygonOffset, a1.polygonOffsetFactor, a1.polygonOffsetUnits);\n    }\n    function w(a1, b, c, d, e) {\n        eb = 0;\n        var f = Y.get(d);\n        if (d.needsUpdate || !f.program) {\n            a: {\n                var l = Y.get(d), m = Ua.getParameters(d, b, c, e), n = Ua.getProgramCode(d, m), q = l.program, p = !0;\n                if (void 0 === q) d.addEventListener(\"dispose\", h);\n                else if (q.code !== n) k(d);\n                else if (void 0 !== m.shaderID) break a;\n                else p = !1;\n                if (p) {\n                    if (m.shaderID) {\n                        var t = THREE.ShaderLib[m.shaderID];\n                        l.__webglShader = {\n                            name: d.type,\n                            uniforms: THREE.UniformsUtils.clone(t.uniforms),\n                            vertexShader: t.vertexShader,\n                            fragmentShader: t.fragmentShader\n                        };\n                    } else l.__webglShader = {\n                        name: d.type,\n                        uniforms: d.uniforms,\n                        vertexShader: d.vertexShader,\n                        fragmentShader: d.fragmentShader\n                    };\n                    d.__webglShader = l.__webglShader;\n                    q = Ua.acquireProgram(d, m, n);\n                    l.program = q;\n                    d.program = q;\n                }\n                var r = q.getAttributes();\n                if (d.morphTargets) for(var w = d.numSupportedMorphTargets = 0; w < la.maxMorphTargets; w++)0 <= r[\"morphTarget\" + w] && d.numSupportedMorphTargets++;\n                if (d.morphNormals) for(w = d.numSupportedMorphNormals = 0; w < la.maxMorphNormals; w++)0 <= r[\"morphNormal\" + w] && d.numSupportedMorphNormals++;\n                l.uniformsList = [];\n                var u = l.program.getUniforms(), G;\n                for(G in l.__webglShader.uniforms){\n                    var z = u[G];\n                    z && l.uniformsList.push([\n                        l.__webglShader.uniforms[G],\n                        z\n                    ]);\n                }\n            }\n            d.needsUpdate = !1;\n        }\n        var D = !1, E = !1, K = !1, J = f.program, A = J.getUniforms(), y = f.__webglShader.uniforms;\n        J.id !== ib && (s.useProgram(J.program), ib = J.id, K = E = D = !0);\n        d.id !== Ta && (-1 === Ta && (K = !0), Ta = d.id, E = !0);\n        if (D || a1 !== Sa) s.uniformMatrix4fv(A.projectionMatrix, !1, a1.projectionMatrix.elements), na.logarithmicDepthBuffer && s.uniform1f(A.logDepthBufFC, 2 / (Math.log(a1.far + 1) / Math.LN2)), a1 !== Sa && (Sa = a1), (d instanceof THREE.ShaderMaterial || d instanceof THREE.MeshPhongMaterial || d.envMap) && void 0 !== A.cameraPosition && ($.setFromMatrixPosition(a1.matrixWorld), s.uniform3f(A.cameraPosition, $.x, $.y, $.z)), (d instanceof THREE.MeshPhongMaterial || d instanceof THREE.MeshLambertMaterial || d instanceof THREE.MeshBasicMaterial || d instanceof THREE.ShaderMaterial || d.skinning) && void 0 !== A.viewMatrix && s.uniformMatrix4fv(A.viewMatrix, !1, a1.matrixWorldInverse.elements);\n        if (d.skinning) {\n            if (e.bindMatrix && void 0 !== A.bindMatrix && s.uniformMatrix4fv(A.bindMatrix, !1, e.bindMatrix.elements), e.bindMatrixInverse && void 0 !== A.bindMatrixInverse && s.uniformMatrix4fv(A.bindMatrixInverse, !1, e.bindMatrixInverse.elements), na.floatVertexTextures && e.skeleton && e.skeleton.useVertexTexture) {\n                if (void 0 !== A.boneTexture) {\n                    var P = B();\n                    s.uniform1i(A.boneTexture, P);\n                    la.setTexture(e.skeleton.boneTexture, P);\n                }\n                void 0 !== A.boneTextureWidth && s.uniform1i(A.boneTextureWidth, e.skeleton.boneTextureWidth);\n                void 0 !== A.boneTextureHeight && s.uniform1i(A.boneTextureHeight, e.skeleton.boneTextureHeight);\n            } else e.skeleton && e.skeleton.boneMatrices && void 0 !== A.boneGlobalMatrices && s.uniformMatrix4fv(A.boneGlobalMatrices, !1, e.skeleton.boneMatrices);\n        }\n        if (E) {\n            c && d.fog && (y.fogColor.value = c.color, c instanceof THREE.Fog ? (y.fogNear.value = c.near, y.fogFar.value = c.far) : c instanceof THREE.FogExp2 && (y.fogDensity.value = c.density));\n            if (d instanceof THREE.MeshPhongMaterial || d instanceof THREE.MeshLambertMaterial || d.lights) {\n                if (db) {\n                    var K = !0, F, L, V, Q = 0, U = 0, R = 0, ja, X, va, ma, Z, aa = tb, qa = a1.matrixWorldInverse, Ca = aa.directional.colors, Ba = aa.directional.positions, wa = aa.point.colors, Ra = aa.point.positions, Va = aa.point.distances, ia = aa.point.decays, fa = aa.spot.colors, ga = aa.spot.positions, sa = aa.spot.distances, pa = aa.spot.directions, Ea = aa.spot.anglesCos, Ja = aa.spot.exponents, Ka = aa.spot.decays, ta = aa.hemi.skyColors, ua = aa.hemi.groundColors, Aa = aa.hemi.positions, Xa = 0, Fa = 0, ra = 0, Ma = 0, Da = 0, jb = 0, kb = 0, fb = 0, Ya = 0, Za = 0, xa = 0, Na = 0;\n                    F = 0;\n                    for(L = b.length; F < L; F++)V = b[F], V.onlyShadow || (ja = V.color, ma = V.intensity, Z = V.distance, V instanceof THREE.AmbientLight ? V.visible && (Q += ja.r, U += ja.g, R += ja.b) : V instanceof THREE.DirectionalLight ? (Da += 1, V.visible && (ca.setFromMatrixPosition(V.matrixWorld), $.setFromMatrixPosition(V.target.matrixWorld), ca.sub($), ca.transformDirection(qa), Ya = 3 * Xa, Ba[Ya + 0] = ca.x, Ba[Ya + 1] = ca.y, Ba[Ya + 2] = ca.z, x(Ca, Ya, ja, ma), Xa += 1)) : V instanceof THREE.PointLight ? (jb += 1, V.visible && (Za = 3 * Fa, x(wa, Za, ja, ma), $.setFromMatrixPosition(V.matrixWorld), $.applyMatrix4(qa), Ra[Za + 0] = $.x, Ra[Za + 1] = $.y, Ra[Za + 2] = $.z, Va[Fa] = Z, ia[Fa] = 0 === V.distance ? 0 : V.decay, Fa += 1)) : V instanceof THREE.SpotLight ? (kb += 1, V.visible && (xa = 3 * ra, x(fa, xa, ja, ma), ca.setFromMatrixPosition(V.matrixWorld), $.copy(ca).applyMatrix4(qa), ga[xa + 0] = $.x, ga[xa + 1] = $.y, ga[xa + 2] = $.z, sa[ra] = Z, $.setFromMatrixPosition(V.target.matrixWorld), ca.sub($), ca.transformDirection(qa), pa[xa + 0] = ca.x, pa[xa + 1] = ca.y, pa[xa + 2] = ca.z, Ea[ra] = Math.cos(V.angle), Ja[ra] = V.exponent, Ka[ra] = 0 === V.distance ? 0 : V.decay, ra += 1)) : V instanceof THREE.HemisphereLight && (fb += 1, V.visible && (ca.setFromMatrixPosition(V.matrixWorld), ca.transformDirection(qa), Na = 3 * Ma, Aa[Na + 0] = ca.x, Aa[Na + 1] = ca.y, Aa[Na + 2] = ca.z, X = V.color, va = V.groundColor, x(ta, Na, X, ma), x(ua, Na, va, ma), Ma += 1)));\n                    F = 3 * Xa;\n                    for(L = Math.max(Ca.length, 3 * Da); F < L; F++)Ca[F] = 0;\n                    F = 3 * Fa;\n                    for(L = Math.max(wa.length, 3 * jb); F < L; F++)wa[F] = 0;\n                    F = 3 * ra;\n                    for(L = Math.max(fa.length, 3 * kb); F < L; F++)fa[F] = 0;\n                    F = 3 * Ma;\n                    for(L = Math.max(ta.length, 3 * fb); F < L; F++)ta[F] = 0;\n                    F = 3 * Ma;\n                    for(L = Math.max(ua.length, 3 * fb); F < L; F++)ua[F] = 0;\n                    aa.directional.length = Xa;\n                    aa.point.length = Fa;\n                    aa.spot.length = ra;\n                    aa.hemi.length = Ma;\n                    aa.ambient[0] = Q;\n                    aa.ambient[1] = U;\n                    aa.ambient[2] = R;\n                    db = !1;\n                }\n                if (K) {\n                    var ea = tb;\n                    y.ambientLightColor.value = ea.ambient;\n                    y.directionalLightColor.value = ea.directional.colors;\n                    y.directionalLightDirection.value = ea.directional.positions;\n                    y.pointLightColor.value = ea.point.colors;\n                    y.pointLightPosition.value = ea.point.positions;\n                    y.pointLightDistance.value = ea.point.distances;\n                    y.pointLightDecay.value = ea.point.decays;\n                    y.spotLightColor.value = ea.spot.colors;\n                    y.spotLightPosition.value = ea.spot.positions;\n                    y.spotLightDistance.value = ea.spot.distances;\n                    y.spotLightDirection.value = ea.spot.directions;\n                    y.spotLightAngleCos.value = ea.spot.anglesCos;\n                    y.spotLightExponent.value = ea.spot.exponents;\n                    y.spotLightDecay.value = ea.spot.decays;\n                    y.hemisphereLightSkyColor.value = ea.hemi.skyColors;\n                    y.hemisphereLightGroundColor.value = ea.hemi.groundColors;\n                    y.hemisphereLightDirection.value = ea.hemi.positions;\n                    v(y, !0);\n                } else v(y, !1);\n            }\n            if (d instanceof THREE.MeshBasicMaterial || d instanceof THREE.MeshLambertMaterial || d instanceof THREE.MeshPhongMaterial) {\n                y.opacity.value = d.opacity;\n                y.diffuse.value = d.color;\n                d.emissive && (y.emissive.value = d.emissive);\n                y.map.value = d.map;\n                y.specularMap.value = d.specularMap;\n                y.alphaMap.value = d.alphaMap;\n                d.aoMap && (y.aoMap.value = d.aoMap, y.aoMapIntensity.value = d.aoMapIntensity);\n                var oa;\n                d.map ? oa = d.map : d.specularMap ? oa = d.specularMap : d.displacementMap ? oa = d.displacementMap : d.normalMap ? oa = d.normalMap : d.bumpMap ? oa = d.bumpMap : d.alphaMap ? oa = d.alphaMap : d.emissiveMap && (oa = d.emissiveMap);\n                if (void 0 !== oa) {\n                    var Wa = oa.offset, bb = oa.repeat;\n                    y.offsetRepeat.value.set(Wa.x, Wa.y, bb.x, bb.y);\n                }\n                y.envMap.value = d.envMap;\n                y.flipEnvMap.value = d.envMap instanceof THREE.WebGLRenderTargetCube ? 1 : -1;\n                y.reflectivity.value = d.reflectivity;\n                y.refractionRatio.value = d.refractionRatio;\n            }\n            if (d instanceof THREE.LineBasicMaterial) y.diffuse.value = d.color, y.opacity.value = d.opacity;\n            else if (d instanceof THREE.LineDashedMaterial) y.diffuse.value = d.color, y.opacity.value = d.opacity, y.dashSize.value = d.dashSize, y.totalSize.value = d.dashSize + d.gapSize, y.scale.value = d.scale;\n            else if (d instanceof THREE.PointsMaterial) {\n                if (y.psColor.value = d.color, y.opacity.value = d.opacity, y.size.value = d.size, y.scale.value = C.height / 2, y.map.value = d.map, null !== d.map) {\n                    var cb = d.map.offset, ub = d.map.repeat;\n                    y.offsetRepeat.value.set(cb.x, cb.y, ub.x, ub.y);\n                }\n            } else d instanceof THREE.MeshPhongMaterial ? (y.specular.value = d.specular, y.shininess.value = d.shininess, d.lightMap && (y.lightMap.value = d.lightMap, y.lightMapIntensity.value = d.lightMapIntensity), d.emissiveMap && (y.emissiveMap.value = d.emissiveMap), d.bumpMap && (y.bumpMap.value = d.bumpMap, y.bumpScale.value = d.bumpScale), d.normalMap && (y.normalMap.value = d.normalMap, y.normalScale.value.copy(d.normalScale)), d.displacementMap && (y.displacementMap.value = d.displacementMap, y.displacementScale.value = d.displacementScale, y.displacementBias.value = d.displacementBias)) : d instanceof THREE.MeshDepthMaterial ? (y.mNear.value = a1.near, y.mFar.value = a1.far, y.opacity.value = d.opacity) : d instanceof THREE.MeshNormalMaterial && (y.opacity.value = d.opacity);\n            if (e.receiveShadow && !d._shadowPass && y.shadowMatrix) for(var Oa = 0, lb = 0, pb = b.length; lb < pb; lb++){\n                var ya = b[lb];\n                ya.castShadow && (ya instanceof THREE.SpotLight || ya instanceof THREE.DirectionalLight) && (y.shadowMap.value[Oa] = ya.shadowMap, y.shadowMapSize.value[Oa] = ya.shadowMapSize, y.shadowMatrix.value[Oa] = ya.shadowMatrix, y.shadowDarkness.value[Oa] = ya.shadowDarkness, y.shadowBias.value[Oa] = ya.shadowBias, Oa++);\n            }\n            for(var mb = f.uniformsList, ka, Ga, gb = 0, qb = mb.length; gb < qb; gb++){\n                var S = mb[gb][0];\n                if (!1 !== S.needsUpdate) {\n                    var vb = S.type, N = S.value, W = mb[gb][1];\n                    switch(vb){\n                        case \"1i\":\n                            s.uniform1i(W, N);\n                            break;\n                        case \"1f\":\n                            s.uniform1f(W, N);\n                            break;\n                        case \"2f\":\n                            s.uniform2f(W, N[0], N[1]);\n                            break;\n                        case \"3f\":\n                            s.uniform3f(W, N[0], N[1], N[2]);\n                            break;\n                        case \"4f\":\n                            s.uniform4f(W, N[0], N[1], N[2], N[3]);\n                            break;\n                        case \"1iv\":\n                            s.uniform1iv(W, N);\n                            break;\n                        case \"3iv\":\n                            s.uniform3iv(W, N);\n                            break;\n                        case \"1fv\":\n                            s.uniform1fv(W, N);\n                            break;\n                        case \"2fv\":\n                            s.uniform2fv(W, N);\n                            break;\n                        case \"3fv\":\n                            s.uniform3fv(W, N);\n                            break;\n                        case \"4fv\":\n                            s.uniform4fv(W, N);\n                            break;\n                        case \"Matrix3fv\":\n                            s.uniformMatrix3fv(W, !1, N);\n                            break;\n                        case \"Matrix4fv\":\n                            s.uniformMatrix4fv(W, !1, N);\n                            break;\n                        case \"i\":\n                            s.uniform1i(W, N);\n                            break;\n                        case \"f\":\n                            s.uniform1f(W, N);\n                            break;\n                        case \"v2\":\n                            s.uniform2f(W, N.x, N.y);\n                            break;\n                        case \"v3\":\n                            s.uniform3f(W, N.x, N.y, N.z);\n                            break;\n                        case \"v4\":\n                            s.uniform4f(W, N.x, N.y, N.z, N.w);\n                            break;\n                        case \"c\":\n                            s.uniform3f(W, N.r, N.g, N.b);\n                            break;\n                        case \"iv1\":\n                            s.uniform1iv(W, N);\n                            break;\n                        case \"iv\":\n                            s.uniform3iv(W, N);\n                            break;\n                        case \"fv1\":\n                            s.uniform1fv(W, N);\n                            break;\n                        case \"fv\":\n                            s.uniform3fv(W, N);\n                            break;\n                        case \"v2v\":\n                            void 0 === S._array && (S._array = new Float32Array(2 * N.length));\n                            for(var T = 0, hb = 0, ha = N.length; T < ha; T++, hb += 2)S._array[hb + 0] = N[T].x, S._array[hb + 1] = N[T].y;\n                            s.uniform2fv(W, S._array);\n                            break;\n                        case \"v3v\":\n                            void 0 === S._array && (S._array = new Float32Array(3 * N.length));\n                            for(var $a = T = 0, ha = N.length; T < ha; T++, $a += 3)S._array[$a + 0] = N[T].x, S._array[$a + 1] = N[T].y, S._array[$a + 2] = N[T].z;\n                            s.uniform3fv(W, S._array);\n                            break;\n                        case \"v4v\":\n                            void 0 === S._array && (S._array = new Float32Array(4 * N.length));\n                            for(var Pa = T = 0, ha = N.length; T < ha; T++, Pa += 4)S._array[Pa + 0] = N[T].x, S._array[Pa + 1] = N[T].y, S._array[Pa + 2] = N[T].z, S._array[Pa + 3] = N[T].w;\n                            s.uniform4fv(W, S._array);\n                            break;\n                        case \"m3\":\n                            s.uniformMatrix3fv(W, !1, N.elements);\n                            break;\n                        case \"m3v\":\n                            void 0 === S._array && (S._array = new Float32Array(9 * N.length));\n                            T = 0;\n                            for(ha = N.length; T < ha; T++)N[T].flattenToArrayOffset(S._array, 9 * T);\n                            s.uniformMatrix3fv(W, !1, S._array);\n                            break;\n                        case \"m4\":\n                            s.uniformMatrix4fv(W, !1, N.elements);\n                            break;\n                        case \"m4v\":\n                            void 0 === S._array && (S._array = new Float32Array(16 * N.length));\n                            T = 0;\n                            for(ha = N.length; T < ha; T++)N[T].flattenToArrayOffset(S._array, 16 * T);\n                            s.uniformMatrix4fv(W, !1, S._array);\n                            break;\n                        case \"t\":\n                            ka = N;\n                            Ga = B();\n                            s.uniform1i(W, Ga);\n                            if (!ka) continue;\n                            if (ka instanceof THREE.CubeTexture || Array.isArray(ka.image) && 6 === ka.image.length) {\n                                var ba = ka, wb = Ga, Qa = Y.get(ba);\n                                if (6 === ba.image.length) {\n                                    if (0 < ba.version && Qa.__version !== ba.version) {\n                                        Qa.__image__webglTextureCube || (ba.addEventListener(\"dispose\", g), Qa.__image__webglTextureCube = s.createTexture(), La.textures++);\n                                        M.activeTexture(s.TEXTURE0 + wb);\n                                        M.bindTexture(s.TEXTURE_CUBE_MAP, Qa.__image__webglTextureCube);\n                                        s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL, ba.flipY);\n                                        for(var xb = ba instanceof THREE.CompressedTexture, nb = ba.image[0] instanceof THREE.DataTexture, Ha = [], da = 0; 6 > da; da++)Ha[da] = !la.autoScaleCubemaps || xb || nb ? nb ? ba.image[da].image : ba.image[da] : I(ba.image[da], na.maxCubemapSize);\n                                        var yb = Ha[0], zb = THREE.Math.isPowerOfTwo(yb.width) && THREE.Math.isPowerOfTwo(yb.height), za = O(ba.format), ob = O(ba.type);\n                                        H(s.TEXTURE_CUBE_MAP, ba, zb);\n                                        for(da = 0; 6 > da; da++)if (xb) for(var Ia, Ab = Ha[da].mipmaps, ab = 0, rb = Ab.length; ab < rb; ab++)Ia = Ab[ab], ba.format !== THREE.RGBAFormat && ba.format !== THREE.RGBFormat ? -1 < M.getCompressedTextureFormats().indexOf(za) ? M.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X + da, ab, za, Ia.width, Ia.height, 0, Ia.data) : console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\") : M.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X + da, ab, za, Ia.width, Ia.height, 0, za, ob, Ia.data);\n                                        else nb ? M.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X + da, 0, za, Ha[da].width, Ha[da].height, 0, za, ob, Ha[da].data) : M.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X + da, 0, za, za, ob, Ha[da]);\n                                        ba.generateMipmaps && zb && s.generateMipmap(s.TEXTURE_CUBE_MAP);\n                                        Qa.__version = ba.version;\n                                        if (ba.onUpdate) ba.onUpdate(ba);\n                                    } else M.activeTexture(s.TEXTURE0 + wb), M.bindTexture(s.TEXTURE_CUBE_MAP, Qa.__image__webglTextureCube);\n                                }\n                            } else if (ka instanceof THREE.WebGLRenderTargetCube) {\n                                var sb = ka;\n                                M.activeTexture(s.TEXTURE0 + Ga);\n                                M.bindTexture(s.TEXTURE_CUBE_MAP, Y.get(sb).__webglTexture);\n                            } else la.setTexture(ka, Ga);\n                            break;\n                        case \"tv\":\n                            void 0 === S._array && (S._array = []);\n                            T = 0;\n                            for(ha = S.value.length; T < ha; T++)S._array[T] = B();\n                            s.uniform1iv(W, S._array);\n                            T = 0;\n                            for(ha = S.value.length; T < ha; T++)ka = S.value[T], Ga = S._array[T], ka && la.setTexture(ka, Ga);\n                            break;\n                        default:\n                            console.warn(\"THREE.WebGLRenderer: Unknown uniform type: \" + vb);\n                    }\n                }\n            }\n        }\n        s.uniformMatrix4fv(A.modelViewMatrix, !1, e.modelViewMatrix.elements);\n        A.normalMatrix && s.uniformMatrix3fv(A.normalMatrix, !1, e.normalMatrix.elements);\n        void 0 !== A.modelMatrix && s.uniformMatrix4fv(A.modelMatrix, !1, e.matrixWorld.elements);\n        return J;\n    }\n    function v(a1, b) {\n        a1.ambientLightColor.needsUpdate = b;\n        a1.directionalLightColor.needsUpdate = b;\n        a1.directionalLightDirection.needsUpdate = b;\n        a1.pointLightColor.needsUpdate = b;\n        a1.pointLightPosition.needsUpdate = b;\n        a1.pointLightDistance.needsUpdate = b;\n        a1.pointLightDecay.needsUpdate = b;\n        a1.spotLightColor.needsUpdate = b;\n        a1.spotLightPosition.needsUpdate = b;\n        a1.spotLightDistance.needsUpdate = b;\n        a1.spotLightDirection.needsUpdate = b;\n        a1.spotLightAngleCos.needsUpdate = b;\n        a1.spotLightExponent.needsUpdate = b;\n        a1.spotLightDecay.needsUpdate = b;\n        a1.hemisphereLightSkyColor.needsUpdate = b;\n        a1.hemisphereLightGroundColor.needsUpdate = b;\n        a1.hemisphereLightDirection.needsUpdate = b;\n    }\n    function B() {\n        var a1 = eb;\n        a1 >= na.maxTextures && console.warn(\"WebGLRenderer: trying to use \" + a1 + \" texture units while this GPU supports only \" + na.maxTextures);\n        eb += 1;\n        return a1;\n    }\n    function x(a1, b, c, d) {\n        a1[b + 0] = c.r * d;\n        a1[b + 1] = c.g * d;\n        a1[b + 2] = c.b * d;\n    }\n    function H(a1, b, c) {\n        c ? (s.texParameteri(a1, s.TEXTURE_WRAP_S, O(b.wrapS)), s.texParameteri(a1, s.TEXTURE_WRAP_T, O(b.wrapT)), s.texParameteri(a1, s.TEXTURE_MAG_FILTER, O(b.magFilter)), s.texParameteri(a1, s.TEXTURE_MIN_FILTER, O(b.minFilter))) : (s.texParameteri(a1, s.TEXTURE_WRAP_S, s.CLAMP_TO_EDGE), s.texParameteri(a1, s.TEXTURE_WRAP_T, s.CLAMP_TO_EDGE), b.wrapS === THREE.ClampToEdgeWrapping && b.wrapT === THREE.ClampToEdgeWrapping || console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( \" + b.sourceFile + \" )\"), s.texParameteri(a1, s.TEXTURE_MAG_FILTER, G(b.magFilter)), s.texParameteri(a1, s.TEXTURE_MIN_FILTER, G(b.minFilter)), b.minFilter !== THREE.NearestFilter && b.minFilter !== THREE.LinearFilter && console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( \" + b.sourceFile + \" )\"));\n        !(c = X.get(\"EXT_texture_filter_anisotropic\")) || b.type === THREE.FloatType && null === X.get(\"OES_texture_float_linear\") || b.type === THREE.HalfFloatType && null === X.get(\"OES_texture_half_float_linear\") || !(1 < b.anisotropy || Y.get(b).__currentAnisotropy) || (s.texParameterf(a1, c.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(b.anisotropy, la.getMaxAnisotropy())), Y.get(b).__currentAnisotropy = b.anisotropy);\n    }\n    function I(a1, b) {\n        if (a1.width > b || a1.height > b) {\n            var c = b / Math.max(a1.width, a1.height), d = document.createElement(\"canvas\");\n            d.width = Math.floor(a1.width * c);\n            d.height = Math.floor(a1.height * c);\n            d.getContext(\"2d\").drawImage(a1, 0, 0, a1.width, a1.height, 0, 0, d.width, d.height);\n            console.warn(\"THREE.WebGLRenderer: image is too big (\" + a1.width + \"x\" + a1.height + \"). Resized to \" + d.width + \"x\" + d.height, a1);\n            return d;\n        }\n        return a1;\n    }\n    function z(a1, b, c) {\n        s.bindFramebuffer(s.FRAMEBUFFER, a1);\n        s.framebufferTexture2D(s.FRAMEBUFFER, s.COLOR_ATTACHMENT0, c, Y.get(b).__webglTexture, 0);\n    }\n    function D(a1, b) {\n        s.bindRenderbuffer(s.RENDERBUFFER, a1);\n        b.depthBuffer && !b.stencilBuffer ? (s.renderbufferStorage(s.RENDERBUFFER, s.DEPTH_COMPONENT16, b.width, b.height), s.framebufferRenderbuffer(s.FRAMEBUFFER, s.DEPTH_ATTACHMENT, s.RENDERBUFFER, a1)) : b.depthBuffer && b.stencilBuffer ? (s.renderbufferStorage(s.RENDERBUFFER, s.DEPTH_STENCIL, b.width, b.height), s.framebufferRenderbuffer(s.FRAMEBUFFER, s.DEPTH_STENCIL_ATTACHMENT, s.RENDERBUFFER, a1)) : s.renderbufferStorage(s.RENDERBUFFER, s.RGBA4, b.width, b.height);\n    }\n    function G(a1) {\n        return a1 === THREE.NearestFilter || a1 === THREE.NearestMipMapNearestFilter || a1 === THREE.NearestMipMapLinearFilter ? s.NEAREST : s.LINEAR;\n    }\n    function O(a1) {\n        var b;\n        if (a1 === THREE.RepeatWrapping) return s.REPEAT;\n        if (a1 === THREE.ClampToEdgeWrapping) return s.CLAMP_TO_EDGE;\n        if (a1 === THREE.MirroredRepeatWrapping) return s.MIRRORED_REPEAT;\n        if (a1 === THREE.NearestFilter) return s.NEAREST;\n        if (a1 === THREE.NearestMipMapNearestFilter) return s.NEAREST_MIPMAP_NEAREST;\n        if (a1 === THREE.NearestMipMapLinearFilter) return s.NEAREST_MIPMAP_LINEAR;\n        if (a1 === THREE.LinearFilter) return s.LINEAR;\n        if (a1 === THREE.LinearMipMapNearestFilter) return s.LINEAR_MIPMAP_NEAREST;\n        if (a1 === THREE.LinearMipMapLinearFilter) return s.LINEAR_MIPMAP_LINEAR;\n        if (a1 === THREE.UnsignedByteType) return s.UNSIGNED_BYTE;\n        if (a1 === THREE.UnsignedShort4444Type) return s.UNSIGNED_SHORT_4_4_4_4;\n        if (a1 === THREE.UnsignedShort5551Type) return s.UNSIGNED_SHORT_5_5_5_1;\n        if (a1 === THREE.UnsignedShort565Type) return s.UNSIGNED_SHORT_5_6_5;\n        if (a1 === THREE.ByteType) return s.BYTE;\n        if (a1 === THREE.ShortType) return s.SHORT;\n        if (a1 === THREE.UnsignedShortType) return s.UNSIGNED_SHORT;\n        if (a1 === THREE.IntType) return s.INT;\n        if (a1 === THREE.UnsignedIntType) return s.UNSIGNED_INT;\n        if (a1 === THREE.FloatType) return s.FLOAT;\n        b = X.get(\"OES_texture_half_float\");\n        if (null !== b && a1 === THREE.HalfFloatType) return b.HALF_FLOAT_OES;\n        if (a1 === THREE.AlphaFormat) return s.ALPHA;\n        if (a1 === THREE.RGBFormat) return s.RGB;\n        if (a1 === THREE.RGBAFormat) return s.RGBA;\n        if (a1 === THREE.LuminanceFormat) return s.LUMINANCE;\n        if (a1 === THREE.LuminanceAlphaFormat) return s.LUMINANCE_ALPHA;\n        if (a1 === THREE.AddEquation) return s.FUNC_ADD;\n        if (a1 === THREE.SubtractEquation) return s.FUNC_SUBTRACT;\n        if (a1 === THREE.ReverseSubtractEquation) return s.FUNC_REVERSE_SUBTRACT;\n        if (a1 === THREE.ZeroFactor) return s.ZERO;\n        if (a1 === THREE.OneFactor) return s.ONE;\n        if (a1 === THREE.SrcColorFactor) return s.SRC_COLOR;\n        if (a1 === THREE.OneMinusSrcColorFactor) return s.ONE_MINUS_SRC_COLOR;\n        if (a1 === THREE.SrcAlphaFactor) return s.SRC_ALPHA;\n        if (a1 === THREE.OneMinusSrcAlphaFactor) return s.ONE_MINUS_SRC_ALPHA;\n        if (a1 === THREE.DstAlphaFactor) return s.DST_ALPHA;\n        if (a1 === THREE.OneMinusDstAlphaFactor) return s.ONE_MINUS_DST_ALPHA;\n        if (a1 === THREE.DstColorFactor) return s.DST_COLOR;\n        if (a1 === THREE.OneMinusDstColorFactor) return s.ONE_MINUS_DST_COLOR;\n        if (a1 === THREE.SrcAlphaSaturateFactor) return s.SRC_ALPHA_SATURATE;\n        b = X.get(\"WEBGL_compressed_texture_s3tc\");\n        if (null !== b) {\n            if (a1 === THREE.RGB_S3TC_DXT1_Format) return b.COMPRESSED_RGB_S3TC_DXT1_EXT;\n            if (a1 === THREE.RGBA_S3TC_DXT1_Format) return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n            if (a1 === THREE.RGBA_S3TC_DXT3_Format) return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n            if (a1 === THREE.RGBA_S3TC_DXT5_Format) return b.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n        }\n        b = X.get(\"WEBGL_compressed_texture_pvrtc\");\n        if (null !== b) {\n            if (a1 === THREE.RGB_PVRTC_4BPPV1_Format) return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n            if (a1 === THREE.RGB_PVRTC_2BPPV1_Format) return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n            if (a1 === THREE.RGBA_PVRTC_4BPPV1_Format) return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n            if (a1 === THREE.RGBA_PVRTC_2BPPV1_Format) return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n        }\n        b = X.get(\"EXT_blend_minmax\");\n        if (null !== b) {\n            if (a1 === THREE.MinEquation) return b.MIN_EXT;\n            if (a1 === THREE.MaxEquation) return b.MAX_EXT;\n        }\n        return 0;\n    }\n    console.log(\"THREE.WebGLRenderer\", THREE.REVISION);\n    a1 = a1 || {};\n    var C = void 0 !== a1.canvas ? a1.canvas : document.createElement(\"canvas\"), F = void 0 !== a1.context ? a1.context : null, K = C.width, L = C.height, E = 1, J = void 0 !== a1.alpha ? a1.alpha : !1, y = void 0 !== a1.depth ? a1.depth : !0, P = void 0 !== a1.stencil ? a1.stencil : !0, U = void 0 !== a1.antialias ? a1.antialias : !1, Q = void 0 !== a1.premultipliedAlpha ? a1.premultipliedAlpha : !0, R = void 0 !== a1.preserveDrawingBuffer ? a1.preserveDrawingBuffer : !1, A = new THREE.Color(0), ia = 0, Z = [], fa = [], V = -1, va = [], ma = -1, ja = [], Ca = -1, wa = [], qa = -1, Ra = new Float32Array(8), Ba = [], Va = [];\n    this.domElement = C;\n    this.context = null;\n    this.sortObjects = this.autoClearStencil = this.autoClearDepth = this.autoClearColor = this.autoClear = !0;\n    this.gammaFactor = 2;\n    this.gammaOutput = this.gammaInput = !1;\n    this.maxMorphTargets = 8;\n    this.maxMorphNormals = 4;\n    this.autoScaleCubemaps = !0;\n    var la = this, ib = null, Aa = null, Ta = -1, pa = \"\", Sa = null, eb = 0, Ja = 0, Ka = 0, ta = C.width, ua = C.height, bb = 0, cb = 0, Wa = new THREE.Frustum, Da = new THREE.Matrix4, $ = new THREE.Vector3, ca = new THREE.Vector3, db = !0, tb = {\n        ambient: [\n            0,\n            0,\n            0\n        ],\n        directional: {\n            length: 0,\n            colors: [],\n            positions: []\n        },\n        point: {\n            length: 0,\n            colors: [],\n            positions: [],\n            distances: [],\n            decays: []\n        },\n        spot: {\n            length: 0,\n            colors: [],\n            positions: [],\n            distances: [],\n            directions: [],\n            anglesCos: [],\n            exponents: [],\n            decays: []\n        },\n        hemi: {\n            length: 0,\n            skyColors: [],\n            groundColors: [],\n            positions: []\n        }\n    }, La = {\n        geometries: 0,\n        textures: 0\n    }, sa = {\n        calls: 0,\n        vertices: 0,\n        faces: 0,\n        points: 0\n    };\n    this.info = {\n        render: sa,\n        memory: La,\n        programs: null\n    };\n    var s;\n    try {\n        J = {\n            alpha: J,\n            depth: y,\n            stencil: P,\n            antialias: U,\n            premultipliedAlpha: Q,\n            preserveDrawingBuffer: R\n        };\n        s = F || C.getContext(\"webgl\", J) || C.getContext(\"experimental-webgl\", J);\n        if (null === s) {\n            if (null !== C.getContext(\"webgl\")) throw \"Error creating WebGL context with your selected attributes.\";\n            throw \"Error creating WebGL context.\";\n        }\n        C.addEventListener(\"webglcontextlost\", e, !1);\n    } catch (pb) {\n        console.error(\"THREE.WebGLRenderer: \" + pb);\n    }\n    var X = new THREE.WebGLExtensions(s);\n    X.get(\"OES_texture_float\");\n    X.get(\"OES_texture_float_linear\");\n    X.get(\"OES_texture_half_float\");\n    X.get(\"OES_texture_half_float_linear\");\n    X.get(\"OES_standard_derivatives\");\n    X.get(\"ANGLE_instanced_arrays\");\n    X.get(\"OES_element_index_uint\") && (THREE.BufferGeometry.MaxIndex = 4294967296);\n    var na = new THREE.WebGLCapabilities(s, X, a1), M = new THREE.WebGLState(s, X, O), Y = new THREE.WebGLProperties, Ea = new THREE.WebGLObjects(s, Y, this.info), Ua = new THREE.WebGLPrograms(this, na);\n    this.info.programs = Ua.programs;\n    var qb = new THREE.WebGLBufferRenderer(s, X, sa), rb = new THREE.WebGLIndexedBufferRenderer(s, X, sa);\n    c();\n    this.context = s;\n    this.capabilities = na;\n    this.extensions = X;\n    this.state = M;\n    var ga = new THREE.WebGLShadowMap(this, Z, Ea);\n    this.shadowMap = ga;\n    var sb = new THREE.SpritePlugin(this, Ba), Bb = new THREE.LensFlarePlugin(this, Va);\n    this.getContext = function() {\n        return s;\n    };\n    this.getContextAttributes = function() {\n        return s.getContextAttributes();\n    };\n    this.forceContextLoss = function() {\n        X.get(\"WEBGL_lose_context\").loseContext();\n    };\n    this.getMaxAnisotropy = function() {\n        var a1;\n        return function() {\n            if (void 0 !== a1) return a1;\n            var b = X.get(\"EXT_texture_filter_anisotropic\");\n            return a1 = null !== b ? s.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;\n        };\n    }();\n    this.getPrecision = function() {\n        return na.precision;\n    };\n    this.getPixelRatio = function() {\n        return E;\n    };\n    this.setPixelRatio = function(a1) {\n        void 0 !== a1 && (E = a1);\n    };\n    this.getSize = function() {\n        return {\n            width: K,\n            height: L\n        };\n    };\n    this.setSize = function(a1, b, c) {\n        K = a1;\n        L = b;\n        C.width = a1 * E;\n        C.height = b * E;\n        !1 !== c && (C.style.width = a1 + \"px\", C.style.height = b + \"px\");\n        this.setViewport(0, 0, a1, b);\n    };\n    this.setViewport = function(a1, b, c, d) {\n        Ja = a1 * E;\n        Ka = b * E;\n        ta = c * E;\n        ua = d * E;\n        s.viewport(Ja, Ka, ta, ua);\n    };\n    this.setScissor = function(a1, b, c, d) {\n        s.scissor(a1 * E, b * E, c * E, d * E);\n    };\n    this.enableScissorTest = function(a1) {\n        M.setScissorTest(a1);\n    };\n    this.getClearColor = function() {\n        return A;\n    };\n    this.setClearColor = function(a1, c) {\n        A.set(a1);\n        ia = void 0 !== c ? c : 1;\n        b(A.r, A.g, A.b, ia);\n    };\n    this.getClearAlpha = function() {\n        return ia;\n    };\n    this.setClearAlpha = function(a1) {\n        ia = a1;\n        b(A.r, A.g, A.b, ia);\n    };\n    this.clear = function(a1, b, c) {\n        var d = 0;\n        if (void 0 === a1 || a1) d |= s.COLOR_BUFFER_BIT;\n        if (void 0 === b || b) d |= s.DEPTH_BUFFER_BIT;\n        if (void 0 === c || c) d |= s.STENCIL_BUFFER_BIT;\n        s.clear(d);\n    };\n    this.clearColor = function() {\n        s.clear(s.COLOR_BUFFER_BIT);\n    };\n    this.clearDepth = function() {\n        s.clear(s.DEPTH_BUFFER_BIT);\n    };\n    this.clearStencil = function() {\n        s.clear(s.STENCIL_BUFFER_BIT);\n    };\n    this.clearTarget = function(a1, b, c, d) {\n        this.setRenderTarget(a1);\n        this.clear(b, c, d);\n    };\n    this.resetGLState = d;\n    this.dispose = function() {\n        C.removeEventListener(\"webglcontextlost\", e, !1);\n    };\n    this.renderBufferImmediate = function(a1, b, c) {\n        M.initAttributes();\n        var d = Y.get(a1);\n        a1.hasPositions && !d.position && (d.position = s.createBuffer());\n        a1.hasNormals && !d.normal && (d.normal = s.createBuffer());\n        a1.hasUvs && !d.uv && (d.uv = s.createBuffer());\n        a1.hasColors && !d.color && (d.color = s.createBuffer());\n        b = b.getAttributes();\n        a1.hasPositions && (s.bindBuffer(s.ARRAY_BUFFER, d.position), s.bufferData(s.ARRAY_BUFFER, a1.positionArray, s.DYNAMIC_DRAW), M.enableAttribute(b.position), s.vertexAttribPointer(b.position, 3, s.FLOAT, !1, 0, 0));\n        if (a1.hasNormals) {\n            s.bindBuffer(s.ARRAY_BUFFER, d.normal);\n            if (\"MeshPhongMaterial\" !== c.type && c.shading === THREE.FlatShading) for(var e = 0, f = 3 * a1.count; e < f; e += 9){\n                var g = a1.normalArray, h = (g[e + 0] + g[e + 3] + g[e + 6]) / 3, k = (g[e + 1] + g[e + 4] + g[e + 7]) / 3, l = (g[e + 2] + g[e + 5] + g[e + 8]) / 3;\n                g[e + 0] = h;\n                g[e + 1] = k;\n                g[e + 2] = l;\n                g[e + 3] = h;\n                g[e + 4] = k;\n                g[e + 5] = l;\n                g[e + 6] = h;\n                g[e + 7] = k;\n                g[e + 8] = l;\n            }\n            s.bufferData(s.ARRAY_BUFFER, a1.normalArray, s.DYNAMIC_DRAW);\n            M.enableAttribute(b.normal);\n            s.vertexAttribPointer(b.normal, 3, s.FLOAT, !1, 0, 0);\n        }\n        a1.hasUvs && c.map && (s.bindBuffer(s.ARRAY_BUFFER, d.uv), s.bufferData(s.ARRAY_BUFFER, a1.uvArray, s.DYNAMIC_DRAW), M.enableAttribute(b.uv), s.vertexAttribPointer(b.uv, 2, s.FLOAT, !1, 0, 0));\n        a1.hasColors && c.vertexColors !== THREE.NoColors && (s.bindBuffer(s.ARRAY_BUFFER, d.color), s.bufferData(s.ARRAY_BUFFER, a1.colorArray, s.DYNAMIC_DRAW), M.enableAttribute(b.color), s.vertexAttribPointer(b.color, 3, s.FLOAT, !1, 0, 0));\n        M.disableUnusedAttributes();\n        s.drawArrays(s.TRIANGLES, 0, a1.count);\n        a1.count = 0;\n    };\n    this.renderBufferDirect = function(a1, b, c, d, e, f, g) {\n        u(e);\n        var h = w(a1, b, c, e, f), k = !1;\n        a1 = d.id + \"_\" + h.id + \"_\" + e.wireframe;\n        a1 !== pa && (pa = a1, k = !0);\n        a1 = f.morphTargetInfluences;\n        if (void 0 !== a1) {\n            b = [];\n            c = 0;\n            for(k = a1.length; c < k; c++){\n                var m = a1[c];\n                b.push([\n                    m,\n                    c\n                ]);\n            }\n            b.sort(l);\n            8 < b.length && (b.length = 8);\n            var n = d.morphAttributes;\n            c = 0;\n            for(k = b.length; c < k; c++)m = b[c], Ra[c] = m[0], 0 !== m[0] ? (a1 = m[1], !0 === e.morphTargets && n.position && d.addAttribute(\"morphTarget\" + c, n.position[a1]), !0 === e.morphNormals && n.normal && d.addAttribute(\"morphNormal\" + c, n.normal[a1])) : (!0 === e.morphTargets && d.removeAttribute(\"morphTarget\" + c), !0 === e.morphNormals && d.removeAttribute(\"morphNormal\" + c));\n            a1 = h.getUniforms();\n            null !== a1.morphTargetInfluences && s.uniform1fv(a1.morphTargetInfluences, Ra);\n            k = !0;\n        }\n        a1 = d.index;\n        c = d.attributes.position;\n        !0 === e.wireframe && (a1 = Ea.getWireframeAttribute(d));\n        null !== a1 ? (b = rb, b.setIndex(a1)) : b = qb;\n        if (k) {\n            a: {\n                var k = void 0, q;\n                if (d instanceof THREE.InstancedBufferGeometry && (q = X.get(\"ANGLE_instanced_arrays\"), null === q)) {\n                    console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\n                    break a;\n                }\n                void 0 === k && (k = 0);\n                M.initAttributes();\n                var m = d.attributes, h = h.getAttributes(), n = e.defaultAttributeValues, p;\n                for(p in h){\n                    var t = h[p];\n                    if (0 <= t) {\n                        var r = m[p];\n                        if (void 0 !== r) {\n                            M.enableAttribute(t);\n                            var v = r.itemSize, x = Ea.getAttributeBuffer(r);\n                            if (r instanceof THREE.InterleavedBufferAttribute) {\n                                var G = r.data, B = G.stride, r = r.offset;\n                                s.bindBuffer(s.ARRAY_BUFFER, x);\n                                s.vertexAttribPointer(t, v, s.FLOAT, !1, B * G.array.BYTES_PER_ELEMENT, (k * B + r) * G.array.BYTES_PER_ELEMENT);\n                                if (G instanceof THREE.InstancedInterleavedBuffer) {\n                                    if (null === q) {\n                                        console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.\");\n                                        break a;\n                                    }\n                                    q.vertexAttribDivisorANGLE(t, G.meshPerAttribute);\n                                    void 0 === d.maxInstancedCount && (d.maxInstancedCount = G.meshPerAttribute * G.count);\n                                }\n                            } else if (s.bindBuffer(s.ARRAY_BUFFER, x), s.vertexAttribPointer(t, v, s.FLOAT, !1, 0, k * v * 4), r instanceof THREE.InstancedBufferAttribute) {\n                                if (null === q) {\n                                    console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.\");\n                                    break a;\n                                }\n                                q.vertexAttribDivisorANGLE(t, r.meshPerAttribute);\n                                void 0 === d.maxInstancedCount && (d.maxInstancedCount = r.meshPerAttribute * r.count);\n                            }\n                        } else if (void 0 !== n && (v = n[p], void 0 !== v)) switch(v.length){\n                            case 2:\n                                s.vertexAttrib2fv(t, v);\n                                break;\n                            case 3:\n                                s.vertexAttrib3fv(t, v);\n                                break;\n                            case 4:\n                                s.vertexAttrib4fv(t, v);\n                                break;\n                            default:\n                                s.vertexAttrib1fv(t, v);\n                        }\n                    }\n                }\n                M.disableUnusedAttributes();\n            }\n            null !== a1 && s.bindBuffer(s.ELEMENT_ARRAY_BUFFER, Ea.getAttributeBuffer(a1));\n        }\n        void 0 === g && (g = d.drawRange, g = {\n            start: g.start,\n            count: Math.min(g.count, null !== a1 ? a1.array.length : c.count)\n        });\n        f instanceof THREE.Mesh ? (!0 === e.wireframe ? (M.setLineWidth(e.wireframeLinewidth * E), b.setMode(s.LINES)) : b.setMode(s.TRIANGLES), d instanceof THREE.InstancedBufferGeometry && 0 < d.maxInstancedCount ? b.renderInstances(d) : b.render(g.start, g.count)) : f instanceof THREE.Line ? (d = e.linewidth, void 0 === d && (d = 1), M.setLineWidth(d * E), f instanceof THREE.LineSegments ? b.setMode(s.LINES) : b.setMode(s.LINE_STRIP), b.render(g.start, g.count)) : f instanceof THREE.Points && (b.setMode(s.POINTS), b.render(g.start, g.count));\n    };\n    this.render = function(a1, b, c, d) {\n        if (!1 === b instanceof THREE.Camera) console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");\n        else {\n            var e = a1.fog;\n            pa = \"\";\n            Ta = -1;\n            Sa = null;\n            db = !0;\n            !0 === a1.autoUpdate && a1.updateMatrixWorld();\n            null === b.parent && b.updateMatrixWorld();\n            b.matrixWorldInverse.getInverse(b.matrixWorld);\n            Da.multiplyMatrices(b.projectionMatrix, b.matrixWorldInverse);\n            Wa.setFromMatrix(Da);\n            Z.length = 0;\n            qa = Ca = ma = V = -1;\n            Ba.length = 0;\n            Va.length = 0;\n            q(a1);\n            fa.length = V + 1;\n            va.length = ma + 1;\n            ja.length = Ca + 1;\n            wa.length = qa + 1;\n            !0 === la.sortObjects && (fa.sort(n), va.sort(p));\n            ga.render(a1, b);\n            sa.calls = 0;\n            sa.vertices = 0;\n            sa.faces = 0;\n            sa.points = 0;\n            this.setRenderTarget(c);\n            (this.autoClear || d) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil);\n            a1.overrideMaterial ? (d = a1.overrideMaterial, t(fa, b, Z, e, d), t(va, b, Z, e, d), r(ja, b, Z, e, d), r(wa, b, Z, e, d)) : (M.setBlending(THREE.NoBlending), t(fa, b, Z, e), r(ja, b, Z, e), t(va, b, Z, e), r(wa, b, Z, e));\n            sb.render(a1, b);\n            Bb.render(a1, b, bb, cb);\n            c && c.generateMipmaps && c.minFilter !== THREE.NearestFilter && c.minFilter !== THREE.LinearFilter && (c instanceof THREE.WebGLRenderTargetCube ? (M.bindTexture(s.TEXTURE_CUBE_MAP, Y.get(c).__webglTexture), s.generateMipmap(s.TEXTURE_CUBE_MAP), M.bindTexture(s.TEXTURE_CUBE_MAP, null)) : (M.bindTexture(s.TEXTURE_2D, Y.get(c).__webglTexture), s.generateMipmap(s.TEXTURE_2D), M.bindTexture(s.TEXTURE_2D, null)));\n            M.setDepthTest(!0);\n            M.setDepthWrite(!0);\n            M.setColorWrite(!0);\n        }\n    };\n    this.setFaceCulling = function(a1, b) {\n        a1 === THREE.CullFaceNone ? M.disable(s.CULL_FACE) : (b === THREE.FrontFaceDirectionCW ? s.frontFace(s.CW) : s.frontFace(s.CCW), a1 === THREE.CullFaceBack ? s.cullFace(s.BACK) : a1 === THREE.CullFaceFront ? s.cullFace(s.FRONT) : s.cullFace(s.FRONT_AND_BACK), M.enable(s.CULL_FACE));\n    };\n    this.setTexture = function(a1, b) {\n        var c = Y.get(a1);\n        if (0 < a1.version && c.__version !== a1.version) {\n            var d = a1.image;\n            if (void 0 === d) console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\", a1);\n            else if (!1 === d.complete) console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\", a1);\n            else {\n                void 0 === c.__webglInit && (c.__webglInit = !0, a1.__webglInit = !0, a1.addEventListener(\"dispose\", g), c.__webglTexture = s.createTexture(), La.textures++);\n                M.activeTexture(s.TEXTURE0 + b);\n                M.bindTexture(s.TEXTURE_2D, c.__webglTexture);\n                s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL, a1.flipY);\n                s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL, a1.premultiplyAlpha);\n                s.pixelStorei(s.UNPACK_ALIGNMENT, a1.unpackAlignment);\n                a1.image = I(a1.image, na.maxTextureSize);\n                var e = a1.image, d = THREE.Math.isPowerOfTwo(e.width) && THREE.Math.isPowerOfTwo(e.height), f = O(a1.format), h = O(a1.type);\n                H(s.TEXTURE_2D, a1, d);\n                var k = a1.mipmaps;\n                if (a1 instanceof THREE.DataTexture) {\n                    if (0 < k.length && d) {\n                        for(var l = 0, m = k.length; l < m; l++)e = k[l], M.texImage2D(s.TEXTURE_2D, l, f, e.width, e.height, 0, f, h, e.data);\n                        a1.generateMipmaps = !1;\n                    } else M.texImage2D(s.TEXTURE_2D, 0, f, e.width, e.height, 0, f, h, e.data);\n                } else if (a1 instanceof THREE.CompressedTexture) for(l = 0, m = k.length; l < m; l++)e = k[l], a1.format !== THREE.RGBAFormat && a1.format !== THREE.RGBFormat ? -1 < M.getCompressedTextureFormats().indexOf(f) ? M.compressedTexImage2D(s.TEXTURE_2D, l, f, e.width, e.height, 0, e.data) : console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\") : M.texImage2D(s.TEXTURE_2D, l, f, e.width, e.height, 0, f, h, e.data);\n                else if (0 < k.length && d) {\n                    l = 0;\n                    for(m = k.length; l < m; l++)e = k[l], M.texImage2D(s.TEXTURE_2D, l, f, f, h, e);\n                    a1.generateMipmaps = !1;\n                } else M.texImage2D(s.TEXTURE_2D, 0, f, f, h, a1.image);\n                a1.generateMipmaps && d && s.generateMipmap(s.TEXTURE_2D);\n                c.__version = a1.version;\n                if (a1.onUpdate) a1.onUpdate(a1);\n            }\n        } else M.activeTexture(s.TEXTURE0 + b), M.bindTexture(s.TEXTURE_2D, c.__webglTexture);\n    };\n    this.setRenderTarget = function(a1) {\n        var b = a1 instanceof THREE.WebGLRenderTargetCube;\n        if (a1 && void 0 === Y.get(a1).__webglFramebuffer) {\n            var c = Y.get(a1);\n            void 0 === a1.depthBuffer && (a1.depthBuffer = !0);\n            void 0 === a1.stencilBuffer && (a1.stencilBuffer = !0);\n            a1.addEventListener(\"dispose\", f);\n            c.__webglTexture = s.createTexture();\n            La.textures++;\n            var d = THREE.Math.isPowerOfTwo(a1.width) && THREE.Math.isPowerOfTwo(a1.height), e = O(a1.format), g = O(a1.type);\n            if (b) {\n                c.__webglFramebuffer = [];\n                c.__webglRenderbuffer = [];\n                M.bindTexture(s.TEXTURE_CUBE_MAP, c.__webglTexture);\n                H(s.TEXTURE_CUBE_MAP, a1, d);\n                for(var h = 0; 6 > h; h++)c.__webglFramebuffer[h] = s.createFramebuffer(), c.__webglRenderbuffer[h] = s.createRenderbuffer(), M.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X + h, 0, e, a1.width, a1.height, 0, e, g, null), z(c.__webglFramebuffer[h], a1, s.TEXTURE_CUBE_MAP_POSITIVE_X + h), D(c.__webglRenderbuffer[h], a1);\n                a1.generateMipmaps && d && s.generateMipmap(s.TEXTURE_CUBE_MAP);\n            } else c.__webglFramebuffer = s.createFramebuffer(), c.__webglRenderbuffer = a1.shareDepthFrom ? a1.shareDepthFrom.__webglRenderbuffer : s.createRenderbuffer(), M.bindTexture(s.TEXTURE_2D, c.__webglTexture), H(s.TEXTURE_2D, a1, d), M.texImage2D(s.TEXTURE_2D, 0, e, a1.width, a1.height, 0, e, g, null), z(c.__webglFramebuffer, a1, s.TEXTURE_2D), a1.shareDepthFrom ? a1.depthBuffer && !a1.stencilBuffer ? s.framebufferRenderbuffer(s.FRAMEBUFFER, s.DEPTH_ATTACHMENT, s.RENDERBUFFER, c.__webglRenderbuffer) : a1.depthBuffer && a1.stencilBuffer && s.framebufferRenderbuffer(s.FRAMEBUFFER, s.DEPTH_STENCIL_ATTACHMENT, s.RENDERBUFFER, c.__webglRenderbuffer) : D(c.__webglRenderbuffer, a1), a1.generateMipmaps && d && s.generateMipmap(s.TEXTURE_2D);\n            b ? M.bindTexture(s.TEXTURE_CUBE_MAP, null) : M.bindTexture(s.TEXTURE_2D, null);\n            s.bindRenderbuffer(s.RENDERBUFFER, null);\n            s.bindFramebuffer(s.FRAMEBUFFER, null);\n        }\n        a1 ? (c = Y.get(a1), b = b ? c.__webglFramebuffer[a1.activeCubeFace] : c.__webglFramebuffer, c = a1.width, a1 = a1.height, e = d = 0) : (b = null, c = ta, a1 = ua, d = Ja, e = Ka);\n        b !== Aa && (s.bindFramebuffer(s.FRAMEBUFFER, b), s.viewport(d, e, c, a1), Aa = b);\n        bb = c;\n        cb = a1;\n    };\n    this.readRenderTargetPixels = function(a1, b, c, d, e, f) {\n        if (!(a1 instanceof THREE.WebGLRenderTarget)) console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");\n        else if (Y.get(a1).__webglFramebuffer) {\n            if (a1.format !== THREE.RGBAFormat) console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.\");\n            else {\n                var g = !1;\n                Y.get(a1).__webglFramebuffer !== Aa && (s.bindFramebuffer(s.FRAMEBUFFER, Y.get(a1).__webglFramebuffer), g = !0);\n                s.checkFramebufferStatus(s.FRAMEBUFFER) === s.FRAMEBUFFER_COMPLETE ? s.readPixels(b, c, d, e, s.RGBA, s.UNSIGNED_BYTE, f) : console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\");\n                g && s.bindFramebuffer(s.FRAMEBUFFER, Aa);\n            }\n        }\n    };\n    this.supportsFloatTextures = function() {\n        console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\");\n        return X.get(\"OES_texture_float\");\n    };\n    this.supportsHalfFloatTextures = function() {\n        console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\");\n        return X.get(\"OES_texture_half_float\");\n    };\n    this.supportsStandardDerivatives = function() {\n        console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\");\n        return X.get(\"OES_standard_derivatives\");\n    };\n    this.supportsCompressedTextureS3TC = function() {\n        console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\");\n        return X.get(\"WEBGL_compressed_texture_s3tc\");\n    };\n    this.supportsCompressedTexturePVRTC = function() {\n        console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\");\n        return X.get(\"WEBGL_compressed_texture_pvrtc\");\n    };\n    this.supportsBlendMinMax = function() {\n        console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\");\n        return X.get(\"EXT_blend_minmax\");\n    };\n    this.supportsVertexTextures = function() {\n        return na.vertexTextures;\n    };\n    this.supportsInstancedArrays = function() {\n        console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\");\n        return X.get(\"ANGLE_instanced_arrays\");\n    };\n    this.initMaterial = function() {\n        console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\");\n    };\n    this.addPrePlugin = function() {\n        console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\");\n    };\n    this.addPostPlugin = function() {\n        console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\");\n    };\n    this.updateShadowMap = function() {\n        console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\");\n    };\n    Object.defineProperties(this, {\n        shadowMapEnabled: {\n            get: function() {\n                return ga.enabled;\n            },\n            set: function(a1) {\n                console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\");\n                ga.enabled = a1;\n            }\n        },\n        shadowMapType: {\n            get: function() {\n                return ga.type;\n            },\n            set: function(a1) {\n                console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\");\n                ga.type = a1;\n            }\n        },\n        shadowMapCullFace: {\n            get: function() {\n                return ga.cullFace;\n            },\n            set: function(a1) {\n                console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.\");\n                ga.cullFace = a1;\n            }\n        },\n        shadowMapDebug: {\n            get: function() {\n                return ga.debug;\n            },\n            set: function(a1) {\n                console.warn(\"THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.\");\n                ga.debug = a1;\n            }\n        }\n    });\n};\nTHREE.WebGLRenderTarget = function(a1, b, c) {\n    this.uuid = THREE.Math.generateUUID();\n    this.width = a1;\n    this.height = b;\n    c = c || {};\n    this.wrapS = void 0 !== c.wrapS ? c.wrapS : THREE.ClampToEdgeWrapping;\n    this.wrapT = void 0 !== c.wrapT ? c.wrapT : THREE.ClampToEdgeWrapping;\n    this.magFilter = void 0 !== c.magFilter ? c.magFilter : THREE.LinearFilter;\n    this.minFilter = void 0 !== c.minFilter ? c.minFilter : THREE.LinearMipMapLinearFilter;\n    this.anisotropy = void 0 !== c.anisotropy ? c.anisotropy : 1;\n    this.offset = new THREE.Vector2(0, 0);\n    this.repeat = new THREE.Vector2(1, 1);\n    this.format = void 0 !== c.format ? c.format : THREE.RGBAFormat;\n    this.type = void 0 !== c.type ? c.type : THREE.UnsignedByteType;\n    this.depthBuffer = void 0 !== c.depthBuffer ? c.depthBuffer : !0;\n    this.stencilBuffer = void 0 !== c.stencilBuffer ? c.stencilBuffer : !0;\n    this.generateMipmaps = !0;\n    this.shareDepthFrom = void 0 !== c.shareDepthFrom ? c.shareDepthFrom : null;\n};\nTHREE.WebGLRenderTarget.prototype = {\n    constructor: THREE.WebGLRenderTarget,\n    setSize: function(a1, b) {\n        if (this.width !== a1 || this.height !== b) this.width = a1, this.height = b, this.dispose();\n    },\n    clone: function() {\n        return (new this.constructor).copy(this);\n    },\n    copy: function(a1) {\n        this.width = a1.width;\n        this.height = a1.height;\n        this.wrapS = a1.wrapS;\n        this.wrapT = a1.wrapT;\n        this.magFilter = a1.magFilter;\n        this.minFilter = a1.minFilter;\n        this.anisotropy = a1.anisotropy;\n        this.offset.copy(a1.offset);\n        this.repeat.copy(a1.repeat);\n        this.format = a1.format;\n        this.type = a1.type;\n        this.depthBuffer = a1.depthBuffer;\n        this.stencilBuffer = a1.stencilBuffer;\n        this.generateMipmaps = a1.generateMipmaps;\n        this.shareDepthFrom = a1.shareDepthFrom;\n        return this;\n    },\n    dispose: function() {\n        this.dispatchEvent({\n            type: \"dispose\"\n        });\n    }\n};\nTHREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);\nTHREE.WebGLRenderTargetCube = function(a1, b, c) {\n    THREE.WebGLRenderTarget.call(this, a1, b, c);\n    this.activeCubeFace = 0;\n};\nTHREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype);\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\nTHREE.WebGLBufferRenderer = function(a1, b, c) {\n    var d;\n    this.setMode = function(a1) {\n        d = a1;\n    };\n    this.render = function(b, g) {\n        a1.drawArrays(d, b, g);\n        c.calls++;\n        c.vertices += g;\n        d === a1.TRIANGLES && (c.faces += g / 3);\n    };\n    this.renderInstances = function(a1) {\n        var c = b.get(\"ANGLE_instanced_arrays\");\n        if (null === c) console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");\n        else {\n            var f = a1.attributes.position;\n            f instanceof THREE.InterleavedBufferAttribute ? c.drawArraysInstancedANGLE(d, 0, f.data.count, a1.maxInstancedCount) : c.drawArraysInstancedANGLE(d, 0, f.count, a1.maxInstancedCount);\n        }\n    };\n};\nTHREE.WebGLIndexedBufferRenderer = function(a1, b, c) {\n    var d, e, g;\n    this.setMode = function(a1) {\n        d = a1;\n    };\n    this.setIndex = function(c) {\n        c.array instanceof Uint32Array && b.get(\"OES_element_index_uint\") ? (e = a1.UNSIGNED_INT, g = 4) : (e = a1.UNSIGNED_SHORT, g = 2);\n    };\n    this.render = function(b, h) {\n        a1.drawElements(d, h, e, b * g);\n        c.calls++;\n        c.vertices += h;\n        d === a1.TRIANGLES && (c.faces += h / 3);\n    };\n    this.renderInstances = function(a1) {\n        var c = b.get(\"ANGLE_instanced_arrays\");\n        null === c ? console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\") : c.drawElementsInstancedANGLE(d, a1.index.array.length, e, 0, a1.maxInstancedCount);\n    };\n};\nTHREE.WebGLExtensions = function(a1) {\n    var b = {};\n    this.get = function(c) {\n        if (void 0 !== b[c]) return b[c];\n        var d;\n        switch(c){\n            case \"EXT_texture_filter_anisotropic\":\n                d = a1.getExtension(\"EXT_texture_filter_anisotropic\") || a1.getExtension(\"MOZ_EXT_texture_filter_anisotropic\") || a1.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");\n                break;\n            case \"WEBGL_compressed_texture_s3tc\":\n                d = a1.getExtension(\"WEBGL_compressed_texture_s3tc\") || a1.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\") || a1.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\n                break;\n            case \"WEBGL_compressed_texture_pvrtc\":\n                d = a1.getExtension(\"WEBGL_compressed_texture_pvrtc\") || a1.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");\n                break;\n            default:\n                d = a1.getExtension(c);\n        }\n        null === d && console.warn(\"THREE.WebGLRenderer: \" + c + \" extension not supported.\");\n        return b[c] = d;\n    };\n};\nTHREE.WebGLCapabilities = function(a1, b, c) {\n    function d(b) {\n        if (\"highp\" === b) {\n            if (0 < a1.getShaderPrecisionFormat(a1.VERTEX_SHADER, a1.HIGH_FLOAT).precision && 0 < a1.getShaderPrecisionFormat(a1.FRAGMENT_SHADER, a1.HIGH_FLOAT).precision) return \"highp\";\n            b = \"mediump\";\n        }\n        return \"mediump\" === b && 0 < a1.getShaderPrecisionFormat(a1.VERTEX_SHADER, a1.MEDIUM_FLOAT).precision && 0 < a1.getShaderPrecisionFormat(a1.FRAGMENT_SHADER, a1.MEDIUM_FLOAT).precision ? \"mediump\" : \"lowp\";\n    }\n    this.getMaxPrecision = d;\n    this.precision = void 0 !== c.precision ? c.precision : \"highp\";\n    this.logarithmicDepthBuffer = void 0 !== c.logarithmicDepthBuffer ? c.logarithmicDepthBuffer : !1;\n    this.maxTextures = a1.getParameter(a1.MAX_TEXTURE_IMAGE_UNITS);\n    this.maxVertexTextures = a1.getParameter(a1.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = a1.getParameter(a1.MAX_TEXTURE_SIZE);\n    this.maxCubemapSize = a1.getParameter(a1.MAX_CUBE_MAP_TEXTURE_SIZE);\n    this.maxAttributes = a1.getParameter(a1.MAX_VERTEX_ATTRIBS);\n    this.maxVertexUniforms = a1.getParameter(a1.MAX_VERTEX_UNIFORM_VECTORS);\n    this.maxVaryings = a1.getParameter(a1.MAX_VARYING_VECTORS);\n    this.maxFragmentUniforms = a1.getParameter(a1.MAX_FRAGMENT_UNIFORM_VECTORS);\n    this.vertexTextures = 0 < this.maxVertexTextures;\n    this.floatFragmentTextures = !!b.get(\"OES_texture_float\");\n    this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\n    c = d(this.precision);\n    c !== this.precision && (console.warn(\"THREE.WebGLRenderer:\", this.precision, \"not supported, using\", c, \"instead.\"), this.precision = c);\n    this.logarithmicDepthBuffer && (this.logarithmicDepthBuffer = !!b.get(\"EXT_frag_depth\"));\n};\nTHREE.WebGLGeometries = function(a1, b, c) {\n    function d(a1) {\n        a1 = a1.target;\n        var h = g[a1.id].attributes, k;\n        for(k in h)e(h[k]);\n        a1.removeEventListener(\"dispose\", d);\n        delete g[a1.id];\n        k = b.get(a1);\n        k.wireframe && e(k.wireframe);\n        c.memory.geometries--;\n    }\n    function e(c) {\n        var d;\n        d = c instanceof THREE.InterleavedBufferAttribute ? b.get(c.data).__webglBuffer : b.get(c).__webglBuffer;\n        void 0 !== d && (a1.deleteBuffer(d), c instanceof THREE.InterleavedBufferAttribute ? b.delete(c.data) : b.delete(c));\n    }\n    var g = {};\n    this.get = function(a1) {\n        var b = a1.geometry;\n        if (void 0 !== g[b.id]) return g[b.id];\n        b.addEventListener(\"dispose\", d);\n        var e;\n        b instanceof THREE.BufferGeometry ? e = b : b instanceof THREE.Geometry && (void 0 === b._bufferGeometry && (b._bufferGeometry = (new THREE.BufferGeometry).setFromObject(a1)), e = b._bufferGeometry);\n        g[b.id] = e;\n        c.memory.geometries++;\n        return e;\n    };\n};\nTHREE.WebGLObjects = function(a1, b, c) {\n    function d(c, d) {\n        var e = c instanceof THREE.InterleavedBufferAttribute ? c.data : c, g = b.get(e);\n        void 0 === g.__webglBuffer ? (g.__webglBuffer = a1.createBuffer(), a1.bindBuffer(d, g.__webglBuffer), a1.bufferData(d, e.array, e.dynamic ? a1.DYNAMIC_DRAW : a1.STATIC_DRAW), g.version = e.version) : g.version !== e.version && (a1.bindBuffer(d, g.__webglBuffer), !1 === e.dynamic || -1 === e.updateRange.count ? a1.bufferSubData(d, 0, e.array) : 0 === e.updateRange.count ? console.error(\"THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.\") : (a1.bufferSubData(d, e.updateRange.offset * e.array.BYTES_PER_ELEMENT, e.array.subarray(e.updateRange.offset, e.updateRange.offset + e.updateRange.count)), e.updateRange.count = 0), g.version = e.version);\n    }\n    function e(a1, b, c) {\n        if (b > c) {\n            var d = b;\n            b = c;\n            c = d;\n        }\n        d = a1[b];\n        return void 0 === d ? (a1[b] = [\n            c\n        ], !0) : -1 === d.indexOf(c) ? (d.push(c), !0) : !1;\n    }\n    var g = new THREE.WebGLGeometries(a1, b, c);\n    this.getAttributeBuffer = function(a1) {\n        return a1 instanceof THREE.InterleavedBufferAttribute ? b.get(a1.data).__webglBuffer : b.get(a1).__webglBuffer;\n    };\n    this.getWireframeAttribute = function(c) {\n        var g = b.get(c);\n        if (void 0 !== g.wireframe) return g.wireframe;\n        var k = [], l = c.index, n = c.attributes;\n        c = n.position;\n        if (null !== l) for(var n = {}, l = l.array, p = 0, m = l.length; p < m; p += 3){\n            var q = l[p + 0], t = l[p + 1], r = l[p + 2];\n            e(n, q, t) && k.push(q, t);\n            e(n, t, r) && k.push(t, r);\n            e(n, r, q) && k.push(r, q);\n        }\n        else for(l = n.position.array, p = 0, m = l.length / 3 - 1; p < m; p += 3)q = p + 0, t = p + 1, r = p + 2, k.push(q, t, t, r, r, q);\n        k = new THREE.BufferAttribute(new (65535 < c.count ? Uint32Array : Uint16Array)(k), 1);\n        d(k, a1.ELEMENT_ARRAY_BUFFER);\n        return g.wireframe = k;\n    };\n    this.update = function(b) {\n        var c = g.get(b);\n        b.geometry instanceof THREE.Geometry && c.updateFromObject(b);\n        b = c.index;\n        var e = c.attributes;\n        null !== b && d(b, a1.ELEMENT_ARRAY_BUFFER);\n        for(var l in e)d(e[l], a1.ARRAY_BUFFER);\n        b = c.morphAttributes;\n        for(l in b)for(var e = b[l], n = 0, p = e.length; n < p; n++)d(e[n], a1.ARRAY_BUFFER);\n        return c;\n    };\n};\nTHREE.WebGLProgram = function() {\n    function a1(a1) {\n        var b = [], c;\n        for(c in a1){\n            var f = a1[c];\n            !1 !== f && b.push(\"#define \" + c + \" \" + f);\n        }\n        return b.join(\"\\n\");\n    }\n    function b(a1) {\n        return \"\" !== a1;\n    }\n    var c = 0;\n    return function(d, e, g, f) {\n        var h = d.context, k = g.defines, l = g.__webglShader.vertexShader, n = g.__webglShader.fragmentShader, p = \"SHADOWMAP_TYPE_BASIC\";\n        f.shadowMapType === THREE.PCFShadowMap ? p = \"SHADOWMAP_TYPE_PCF\" : f.shadowMapType === THREE.PCFSoftShadowMap && (p = \"SHADOWMAP_TYPE_PCF_SOFT\");\n        var m = \"ENVMAP_TYPE_CUBE\", q = \"ENVMAP_MODE_REFLECTION\", t = \"ENVMAP_BLENDING_MULTIPLY\";\n        if (f.envMap) {\n            switch(g.envMap.mapping){\n                case THREE.CubeReflectionMapping:\n                case THREE.CubeRefractionMapping:\n                    m = \"ENVMAP_TYPE_CUBE\";\n                    break;\n                case THREE.EquirectangularReflectionMapping:\n                case THREE.EquirectangularRefractionMapping:\n                    m = \"ENVMAP_TYPE_EQUIREC\";\n                    break;\n                case THREE.SphericalReflectionMapping:\n                    m = \"ENVMAP_TYPE_SPHERE\";\n            }\n            switch(g.envMap.mapping){\n                case THREE.CubeRefractionMapping:\n                case THREE.EquirectangularRefractionMapping:\n                    q = \"ENVMAP_MODE_REFRACTION\";\n            }\n            switch(g.combine){\n                case THREE.MultiplyOperation:\n                    t = \"ENVMAP_BLENDING_MULTIPLY\";\n                    break;\n                case THREE.MixOperation:\n                    t = \"ENVMAP_BLENDING_MIX\";\n                    break;\n                case THREE.AddOperation:\n                    t = \"ENVMAP_BLENDING_ADD\";\n            }\n        }\n        var r = 0 < d.gammaFactor ? d.gammaFactor : 1, u = a1(k), w = h.createProgram();\n        g instanceof THREE.RawShaderMaterial ? d = k = \"\" : (k = [\n            \"precision \" + f.precision + \" float;\",\n            \"precision \" + f.precision + \" int;\",\n            \"#define SHADER_NAME \" + g.__webglShader.name,\n            u,\n            f.supportsVertexTextures ? \"#define VERTEX_TEXTURES\" : \"\",\n            d.gammaInput ? \"#define GAMMA_INPUT\" : \"\",\n            d.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\",\n            \"#define GAMMA_FACTOR \" + r,\n            \"#define MAX_DIR_LIGHTS \" + f.maxDirLights,\n            \"#define MAX_POINT_LIGHTS \" + f.maxPointLights,\n            \"#define MAX_SPOT_LIGHTS \" + f.maxSpotLights,\n            \"#define MAX_HEMI_LIGHTS \" + f.maxHemiLights,\n            \"#define MAX_SHADOWS \" + f.maxShadows,\n            \"#define MAX_BONES \" + f.maxBones,\n            f.map ? \"#define USE_MAP\" : \"\",\n            f.envMap ? \"#define USE_ENVMAP\" : \"\",\n            f.envMap ? \"#define \" + q : \"\",\n            f.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\n            f.aoMap ? \"#define USE_AOMAP\" : \"\",\n            f.emissiveMap ? \"#define USE_EMISSIVEMAP\" : \"\",\n            f.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\n            f.normalMap ? \"#define USE_NORMALMAP\" : \"\",\n            f.displacementMap && f.supportsVertexTextures ? \"#define USE_DISPLACEMENTMAP\" : \"\",\n            f.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\n            f.alphaMap ? \"#define USE_ALPHAMAP\" : \"\",\n            f.vertexColors ? \"#define USE_COLOR\" : \"\",\n            f.flatShading ? \"#define FLAT_SHADED\" : \"\",\n            f.skinning ? \"#define USE_SKINNING\" : \"\",\n            f.useVertexTexture ? \"#define BONE_TEXTURE\" : \"\",\n            f.morphTargets ? \"#define USE_MORPHTARGETS\" : \"\",\n            f.morphNormals && !1 === f.flatShading ? \"#define USE_MORPHNORMALS\" : \"\",\n            f.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\n            f.flipSided ? \"#define FLIP_SIDED\" : \"\",\n            f.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\n            f.shadowMapEnabled ? \"#define \" + p : \"\",\n            f.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\",\n            f.sizeAttenuation ? \"#define USE_SIZEATTENUATION\" : \"\",\n            f.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\",\n            f.logarithmicDepthBuffer && d.extensions.get(\"EXT_frag_depth\") ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\",\n            \"uniform mat4 modelMatrix;\",\n            \"uniform mat4 modelViewMatrix;\",\n            \"uniform mat4 projectionMatrix;\",\n            \"uniform mat4 viewMatrix;\",\n            \"uniform mat3 normalMatrix;\",\n            \"uniform vec3 cameraPosition;\",\n            \"attribute vec3 position;\",\n            \"attribute vec3 normal;\",\n            \"attribute vec2 uv;\",\n            \"#ifdef USE_COLOR\",\n            \"\tattribute vec3 color;\",\n            \"#endif\",\n            \"#ifdef USE_MORPHTARGETS\",\n            \"\tattribute vec3 morphTarget0;\",\n            \"\tattribute vec3 morphTarget1;\",\n            \"\tattribute vec3 morphTarget2;\",\n            \"\tattribute vec3 morphTarget3;\",\n            \"\t#ifdef USE_MORPHNORMALS\",\n            \"\t\tattribute vec3 morphNormal0;\",\n            \"\t\tattribute vec3 morphNormal1;\",\n            \"\t\tattribute vec3 morphNormal2;\",\n            \"\t\tattribute vec3 morphNormal3;\",\n            \"\t#else\",\n            \"\t\tattribute vec3 morphTarget4;\",\n            \"\t\tattribute vec3 morphTarget5;\",\n            \"\t\tattribute vec3 morphTarget6;\",\n            \"\t\tattribute vec3 morphTarget7;\",\n            \"\t#endif\",\n            \"#endif\",\n            \"#ifdef USE_SKINNING\",\n            \"\tattribute vec4 skinIndex;\",\n            \"\tattribute vec4 skinWeight;\",\n            \"#endif\",\n            \"\\n\"\n        ].filter(b).join(\"\\n\"), d = [\n            f.bumpMap || f.normalMap || f.flatShading || g.derivatives ? \"#extension GL_OES_standard_derivatives : enable\" : \"\",\n            f.logarithmicDepthBuffer && d.extensions.get(\"EXT_frag_depth\") ? \"#extension GL_EXT_frag_depth : enable\" : \"\",\n            \"precision \" + f.precision + \" float;\",\n            \"precision \" + f.precision + \" int;\",\n            \"#define SHADER_NAME \" + g.__webglShader.name,\n            u,\n            \"#define MAX_DIR_LIGHTS \" + f.maxDirLights,\n            \"#define MAX_POINT_LIGHTS \" + f.maxPointLights,\n            \"#define MAX_SPOT_LIGHTS \" + f.maxSpotLights,\n            \"#define MAX_HEMI_LIGHTS \" + f.maxHemiLights,\n            \"#define MAX_SHADOWS \" + f.maxShadows,\n            f.alphaTest ? \"#define ALPHATEST \" + f.alphaTest : \"\",\n            d.gammaInput ? \"#define GAMMA_INPUT\" : \"\",\n            d.gammaOutput ? \"#define GAMMA_OUTPUT\" : \"\",\n            \"#define GAMMA_FACTOR \" + r,\n            f.useFog && f.fog ? \"#define USE_FOG\" : \"\",\n            f.useFog && f.fogExp ? \"#define FOG_EXP2\" : \"\",\n            f.map ? \"#define USE_MAP\" : \"\",\n            f.envMap ? \"#define USE_ENVMAP\" : \"\",\n            f.envMap ? \"#define \" + m : \"\",\n            f.envMap ? \"#define \" + q : \"\",\n            f.envMap ? \"#define \" + t : \"\",\n            f.lightMap ? \"#define USE_LIGHTMAP\" : \"\",\n            f.aoMap ? \"#define USE_AOMAP\" : \"\",\n            f.emissiveMap ? \"#define USE_EMISSIVEMAP\" : \"\",\n            f.bumpMap ? \"#define USE_BUMPMAP\" : \"\",\n            f.normalMap ? \"#define USE_NORMALMAP\" : \"\",\n            f.specularMap ? \"#define USE_SPECULARMAP\" : \"\",\n            f.alphaMap ? \"#define USE_ALPHAMAP\" : \"\",\n            f.vertexColors ? \"#define USE_COLOR\" : \"\",\n            f.flatShading ? \"#define FLAT_SHADED\" : \"\",\n            f.metal ? \"#define METAL\" : \"\",\n            f.doubleSided ? \"#define DOUBLE_SIDED\" : \"\",\n            f.flipSided ? \"#define FLIP_SIDED\" : \"\",\n            f.shadowMapEnabled ? \"#define USE_SHADOWMAP\" : \"\",\n            f.shadowMapEnabled ? \"#define \" + p : \"\",\n            f.shadowMapDebug ? \"#define SHADOWMAP_DEBUG\" : \"\",\n            f.logarithmicDepthBuffer ? \"#define USE_LOGDEPTHBUF\" : \"\",\n            f.logarithmicDepthBuffer && d.extensions.get(\"EXT_frag_depth\") ? \"#define USE_LOGDEPTHBUF_EXT\" : \"\",\n            \"uniform mat4 viewMatrix;\",\n            \"uniform vec3 cameraPosition;\",\n            \"\\n\"\n        ].filter(b).join(\"\\n\"));\n        n = d + n;\n        l = THREE.WebGLShader(h, h.VERTEX_SHADER, k + l);\n        n = THREE.WebGLShader(h, h.FRAGMENT_SHADER, n);\n        h.attachShader(w, l);\n        h.attachShader(w, n);\n        void 0 !== g.index0AttributeName ? h.bindAttribLocation(w, 0, g.index0AttributeName) : !0 === f.morphTargets && h.bindAttribLocation(w, 0, \"position\");\n        h.linkProgram(w);\n        f = h.getProgramInfoLog(w);\n        p = h.getShaderInfoLog(l);\n        m = h.getShaderInfoLog(n);\n        t = q = !0;\n        if (!1 === h.getProgramParameter(w, h.LINK_STATUS)) q = !1, console.error(\"THREE.WebGLProgram: shader error: \", h.getError(), \"gl.VALIDATE_STATUS\", h.getProgramParameter(w, h.VALIDATE_STATUS), \"gl.getProgramInfoLog\", f, p, m);\n        else if (\"\" !== f) console.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\", f);\n        else if (\"\" === p || \"\" === m) t = !1;\n        t && (this.diagnostics = {\n            runnable: q,\n            material: g,\n            programLog: f,\n            vertexShader: {\n                log: p,\n                prefix: k\n            },\n            fragmentShader: {\n                log: m,\n                prefix: d\n            }\n        });\n        h.deleteShader(l);\n        h.deleteShader(n);\n        var v;\n        this.getUniforms = function() {\n            if (void 0 === v) {\n                for(var a1 = {}, b = h.getProgramParameter(w, h.ACTIVE_UNIFORMS), c = 0; c < b; c++){\n                    var d = h.getActiveUniform(w, c).name, e = h.getUniformLocation(w, d), f = d.lastIndexOf(\"[0]\");\n                    -1 !== f && f === d.length - 3 && (a1[d.substr(0, f)] = e);\n                    a1[d] = e;\n                }\n                v = a1;\n            }\n            return v;\n        };\n        var B;\n        this.getAttributes = function() {\n            if (void 0 === B) {\n                for(var a1 = {}, b = h.getProgramParameter(w, h.ACTIVE_ATTRIBUTES), c = 0; c < b; c++){\n                    var d = h.getActiveAttrib(w, c).name;\n                    a1[d] = h.getAttribLocation(w, d);\n                }\n                B = a1;\n            }\n            return B;\n        };\n        this.destroy = function() {\n            h.deleteProgram(w);\n            this.program = void 0;\n        };\n        Object.defineProperties(this, {\n            uniforms: {\n                get: function() {\n                    console.warn(\"THREE.WebGLProgram: .uniforms is now .getUniforms().\");\n                    return this.getUniforms();\n                }\n            },\n            attributes: {\n                get: function() {\n                    console.warn(\"THREE.WebGLProgram: .attributes is now .getAttributes().\");\n                    return this.getAttributes();\n                }\n            }\n        });\n        this.id = c++;\n        this.code = e;\n        this.usedTimes = 1;\n        this.program = w;\n        this.vertexShader = l;\n        this.fragmentShader = n;\n        return this;\n    };\n}();\nTHREE.WebGLPrograms = function(a1, b) {\n    var c = [], d = {\n        MeshDepthMaterial: \"depth\",\n        MeshNormalMaterial: \"normal\",\n        MeshBasicMaterial: \"basic\",\n        MeshLambertMaterial: \"lambert\",\n        MeshPhongMaterial: \"phong\",\n        LineBasicMaterial: \"basic\",\n        LineDashedMaterial: \"dashed\",\n        PointsMaterial: \"points\"\n    }, e = \"precision supportsVertexTextures map envMap envMapMode lightMap aoMap emissiveMap bumpMap normalMap specularMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals maxDirLights maxPointLights maxSpotLights maxHemiLights maxShadows shadowMapEnabled shadowMapType shadowMapDebug alphaTest metal doubleSided flipSided\".split(\" \");\n    this.getParameters = function(c, e, h, k) {\n        for(var l, n, p, m, q = d[c.type], t = m = p = n = l = 0, r = e.length; t < r; t++){\n            var u = e[t];\n            u.onlyShadow || !1 === u.visible || (u instanceof THREE.DirectionalLight && l++, u instanceof THREE.PointLight && n++, u instanceof THREE.SpotLight && p++, u instanceof THREE.HemisphereLight && m++);\n        }\n        r = t = 0;\n        for(u = e.length; r < u; r++){\n            var w = e[r];\n            w.castShadow && (w instanceof THREE.SpotLight && t++, w instanceof THREE.DirectionalLight && t++);\n        }\n        e = t;\n        b.floatVertexTextures && k && k.skeleton && k.skeleton.useVertexTexture ? t = 1024 : (t = Math.floor((b.maxVertexUniforms - 20) / 4), void 0 !== k && k instanceof THREE.SkinnedMesh && (t = Math.min(k.skeleton.bones.length, t), t < k.skeleton.bones.length && console.warn(\"WebGLRenderer: too many bones - \" + k.skeleton.bones.length + \", this GPU supports just \" + t + \" (try OpenGL instead of ANGLE)\")));\n        r = a1.getPrecision();\n        null !== c.precision && (r = b.getMaxPrecision(c.precision), r !== c.precision && console.warn(\"THREE.WebGLRenderer.initMaterial:\", c.precision, \"not supported, using\", r, \"instead.\"));\n        return {\n            shaderID: q,\n            precision: r,\n            supportsVertexTextures: b.vertexTextures,\n            map: !!c.map,\n            envMap: !!c.envMap,\n            envMapMode: c.envMap && c.envMap.mapping,\n            lightMap: !!c.lightMap,\n            aoMap: !!c.aoMap,\n            emissiveMap: !!c.emissiveMap,\n            bumpMap: !!c.bumpMap,\n            normalMap: !!c.normalMap,\n            displacementMap: !!c.displacementMap,\n            specularMap: !!c.specularMap,\n            alphaMap: !!c.alphaMap,\n            combine: c.combine,\n            vertexColors: c.vertexColors,\n            fog: h,\n            useFog: c.fog,\n            fogExp: h instanceof THREE.FogExp2,\n            flatShading: c.shading === THREE.FlatShading,\n            sizeAttenuation: c.sizeAttenuation,\n            logarithmicDepthBuffer: b.logarithmicDepthBuffer,\n            skinning: c.skinning,\n            maxBones: t,\n            useVertexTexture: b.floatVertexTextures && k && k.skeleton && k.skeleton.useVertexTexture,\n            morphTargets: c.morphTargets,\n            morphNormals: c.morphNormals,\n            maxMorphTargets: a1.maxMorphTargets,\n            maxMorphNormals: a1.maxMorphNormals,\n            maxDirLights: l,\n            maxPointLights: n,\n            maxSpotLights: p,\n            maxHemiLights: m,\n            maxShadows: e,\n            shadowMapEnabled: a1.shadowMap.enabled && k.receiveShadow && 0 < e,\n            shadowMapType: a1.shadowMap.type,\n            shadowMapDebug: a1.shadowMap.debug,\n            alphaTest: c.alphaTest,\n            metal: c.metal,\n            doubleSided: c.side === THREE.DoubleSide,\n            flipSided: c.side === THREE.BackSide\n        };\n    };\n    this.getProgramCode = function(a1, b) {\n        var c = [];\n        b.shaderID ? c.push(b.shaderID) : (c.push(a1.fragmentShader), c.push(a1.vertexShader));\n        if (void 0 !== a1.defines) for(var d in a1.defines)c.push(d), c.push(a1.defines[d]);\n        for(d = 0; d < e.length; d++){\n            var l = e[d];\n            c.push(l);\n            c.push(b[l]);\n        }\n        return c.join();\n    };\n    this.acquireProgram = function(b, d, e) {\n        for(var k, l = 0, n = c.length; l < n; l++){\n            var p = c[l];\n            if (p.code === e) {\n                k = p;\n                ++k.usedTimes;\n                break;\n            }\n        }\n        void 0 === k && (k = new THREE.WebGLProgram(a1, e, b, d), c.push(k));\n        return k;\n    };\n    this.releaseProgram = function(a1) {\n        if (0 === --a1.usedTimes) {\n            var b = c.indexOf(a1);\n            c[b] = c[c.length - 1];\n            c.pop();\n            a1.destroy();\n        }\n    };\n    this.programs = c;\n};\nTHREE.WebGLProperties = function() {\n    var a1 = {};\n    this.get = function(b) {\n        b = b.uuid;\n        var c = a1[b];\n        void 0 === c && (c = {}, a1[b] = c);\n        return c;\n    };\n    this.delete = function(b) {\n        delete a1[b.uuid];\n    };\n    this.clear = function() {\n        a1 = {};\n    };\n};\nTHREE.WebGLShader = function() {\n    var a1 = function(a1) {\n        a1 = a1.split(\"\\n\");\n        for(var c = 0; c < a1.length; c++)a1[c] = c + 1 + \": \" + a1[c];\n        return a1.join(\"\\n\");\n    };\n    return function(b, c, d) {\n        var e = b.createShader(c);\n        b.shaderSource(e, d);\n        b.compileShader(e);\n        !1 === b.getShaderParameter(e, b.COMPILE_STATUS) && console.error(\"THREE.WebGLShader: Shader couldn't compile.\");\n        \"\" !== b.getShaderInfoLog(e) && console.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\", c === b.VERTEX_SHADER ? \"vertex\" : \"fragment\", b.getShaderInfoLog(e), a1(d));\n        return e;\n    };\n}();\nTHREE.WebGLShadowMap = function(a1, b, c) {\n    function d(a1, b) {\n        var c = a1.geometry, c = void 0 !== c.morphTargets && 0 < c.morphTargets.length && b.morphTargets, d = a1 instanceof THREE.SkinnedMesh && b.skinning, c = a1.customDepthMaterial ? a1.customDepthMaterial : d ? c ? u : r : c ? t : q;\n        c.visible = b.visible;\n        c.wireframe = b.wireframe;\n        c.wireframeLinewidth = b.wireframeLinewidth;\n        return c;\n    }\n    function e(a1, b) {\n        if (!1 !== a1.visible) {\n            (a1 instanceof THREE.Mesh || a1 instanceof THREE.Line || a1 instanceof THREE.Points) && a1.castShadow && (!1 === a1.frustumCulled || !0 === h.intersectsObject(a1)) && !0 === a1.material.visible && (a1.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse, a1.matrixWorld), n.push(a1));\n            for(var c = a1.children, d = 0, f = c.length; d < f; d++)e(c[d], b);\n        }\n    }\n    var g = a1.context, f = a1.state, h = new THREE.Frustum, k = new THREE.Matrix4;\n    new THREE.Vector3;\n    new THREE.Vector3;\n    var l = new THREE.Vector3, n = [], p = THREE.ShaderLib.depthRGBA, m = THREE.UniformsUtils.clone(p.uniforms), q = new THREE.ShaderMaterial({\n        uniforms: m,\n        vertexShader: p.vertexShader,\n        fragmentShader: p.fragmentShader\n    }), t = new THREE.ShaderMaterial({\n        uniforms: m,\n        vertexShader: p.vertexShader,\n        fragmentShader: p.fragmentShader,\n        morphTargets: !0\n    }), r = new THREE.ShaderMaterial({\n        uniforms: m,\n        vertexShader: p.vertexShader,\n        fragmentShader: p.fragmentShader,\n        skinning: !0\n    }), u = new THREE.ShaderMaterial({\n        uniforms: m,\n        vertexShader: p.vertexShader,\n        fragmentShader: p.fragmentShader,\n        morphTargets: !0,\n        skinning: !0\n    });\n    q._shadowPass = !0;\n    t._shadowPass = !0;\n    r._shadowPass = !0;\n    u._shadowPass = !0;\n    var w = this;\n    this.enabled = !1;\n    this.autoUpdate = !0;\n    this.needsUpdate = !1;\n    this.type = THREE.PCFShadowMap;\n    this.cullFace = THREE.CullFaceFront;\n    this.render = function(m, q) {\n        if (!1 !== w.enabled && (!1 !== w.autoUpdate || !1 !== w.needsUpdate)) {\n            g.clearColor(1, 1, 1, 1);\n            f.disable(g.BLEND);\n            f.enable(g.CULL_FACE);\n            g.frontFace(g.CCW);\n            w.cullFace === THREE.CullFaceFront ? g.cullFace(g.FRONT) : g.cullFace(g.BACK);\n            f.setDepthTest(!0);\n            for(var p = 0, t = b.length; p < t; p++){\n                var r = b[p];\n                if (r.castShadow) {\n                    if (!r.shadowMap) {\n                        var u = THREE.LinearFilter;\n                        w.type === THREE.PCFSoftShadowMap && (u = THREE.NearestFilter);\n                        r.shadowMap = new THREE.WebGLRenderTarget(r.shadowMapWidth, r.shadowMapHeight, {\n                            minFilter: u,\n                            magFilter: u,\n                            format: THREE.RGBAFormat\n                        });\n                        r.shadowMapSize = new THREE.Vector2(r.shadowMapWidth, r.shadowMapHeight);\n                        r.shadowMatrix = new THREE.Matrix4;\n                    }\n                    if (!r.shadowCamera) {\n                        if (r instanceof THREE.SpotLight) r.shadowCamera = new THREE.PerspectiveCamera(r.shadowCameraFov, r.shadowMapWidth / r.shadowMapHeight, r.shadowCameraNear, r.shadowCameraFar);\n                        else if (r instanceof THREE.DirectionalLight) r.shadowCamera = new THREE.OrthographicCamera(r.shadowCameraLeft, r.shadowCameraRight, r.shadowCameraTop, r.shadowCameraBottom, r.shadowCameraNear, r.shadowCameraFar);\n                        else {\n                            console.error(\"THREE.ShadowMapPlugin: Unsupported light type for shadow\", r);\n                            continue;\n                        }\n                        m.add(r.shadowCamera);\n                        !0 === m.autoUpdate && m.updateMatrixWorld();\n                    }\n                    r.shadowCameraVisible && !r.cameraHelper && (r.cameraHelper = new THREE.CameraHelper(r.shadowCamera), m.add(r.cameraHelper));\n                    var D = r.shadowMap, G = r.shadowMatrix, u = r.shadowCamera;\n                    u.position.setFromMatrixPosition(r.matrixWorld);\n                    l.setFromMatrixPosition(r.target.matrixWorld);\n                    u.lookAt(l);\n                    u.updateMatrixWorld();\n                    u.matrixWorldInverse.getInverse(u.matrixWorld);\n                    r.cameraHelper && (r.cameraHelper.visible = r.shadowCameraVisible);\n                    r.shadowCameraVisible && r.cameraHelper.update();\n                    G.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1);\n                    G.multiply(u.projectionMatrix);\n                    G.multiply(u.matrixWorldInverse);\n                    k.multiplyMatrices(u.projectionMatrix, u.matrixWorldInverse);\n                    h.setFromMatrix(k);\n                    a1.setRenderTarget(D);\n                    a1.clear();\n                    n.length = 0;\n                    e(m, u);\n                    r = 0;\n                    for(D = n.length; r < D; r++){\n                        var G = n[r], O = c.update(G), C = G.material;\n                        if (C instanceof THREE.MeshFaceMaterial) for(var F = O.groups, C = C.materials, K = 0, L = F.length; K < L; K++){\n                            var E = F[K], J = C[E.materialIndex];\n                            !0 === J.visible && a1.renderBufferDirect(u, b, null, O, d(G, J), G, E);\n                        }\n                        else a1.renderBufferDirect(u, b, null, O, d(G, C), G);\n                    }\n                }\n            }\n            p = a1.getClearColor();\n            t = a1.getClearAlpha();\n            a1.setClearColor(p, t);\n            f.enable(g.BLEND);\n            w.cullFace === THREE.CullFaceFront && g.cullFace(g.BACK);\n            a1.resetGLState();\n            w.needsUpdate = !1;\n        }\n    };\n};\nTHREE.WebGLState = function(a1, b, c) {\n    var d = this, e = new Uint8Array(16), g = new Uint8Array(16), f = {}, h = null, k = null, l = null, n = null, p = null, m = null, q = null, t = null, r = null, u = null, w = null, v = null, B = null, x = null, H = null, I = a1.getParameter(a1.MAX_TEXTURE_IMAGE_UNITS), z = void 0, D = {};\n    this.init = function() {\n        a1.clearColor(0, 0, 0, 1);\n        a1.clearDepth(1);\n        a1.clearStencil(0);\n        this.enable(a1.DEPTH_TEST);\n        a1.depthFunc(a1.LEQUAL);\n        a1.frontFace(a1.CCW);\n        a1.cullFace(a1.BACK);\n        this.enable(a1.CULL_FACE);\n        this.enable(a1.BLEND);\n        a1.blendEquation(a1.FUNC_ADD);\n        a1.blendFunc(a1.SRC_ALPHA, a1.ONE_MINUS_SRC_ALPHA);\n    };\n    this.initAttributes = function() {\n        for(var a1 = 0, b = e.length; a1 < b; a1++)e[a1] = 0;\n    };\n    this.enableAttribute = function(b) {\n        e[b] = 1;\n        0 === g[b] && (a1.enableVertexAttribArray(b), g[b] = 1);\n    };\n    this.disableUnusedAttributes = function() {\n        for(var b = 0, c = g.length; b < c; b++)g[b] !== e[b] && (a1.disableVertexAttribArray(b), g[b] = 0);\n    };\n    this.enable = function(b) {\n        !0 !== f[b] && (a1.enable(b), f[b] = !0);\n    };\n    this.disable = function(b) {\n        !1 !== f[b] && (a1.disable(b), f[b] = !1);\n    };\n    this.getCompressedTextureFormats = function() {\n        if (null === h && (h = [], b.get(\"WEBGL_compressed_texture_pvrtc\") || b.get(\"WEBGL_compressed_texture_s3tc\"))) for(var c = a1.getParameter(a1.COMPRESSED_TEXTURE_FORMATS), d = 0; d < c.length; d++)h.push(c[d]);\n        return h;\n    };\n    this.setBlending = function(b, d, e, f, g, h, r) {\n        b !== k && (b === THREE.NoBlending ? this.disable(a1.BLEND) : b === THREE.AdditiveBlending ? (this.enable(a1.BLEND), a1.blendEquation(a1.FUNC_ADD), a1.blendFunc(a1.SRC_ALPHA, a1.ONE)) : b === THREE.SubtractiveBlending ? (this.enable(a1.BLEND), a1.blendEquation(a1.FUNC_ADD), a1.blendFunc(a1.ZERO, a1.ONE_MINUS_SRC_COLOR)) : b === THREE.MultiplyBlending ? (this.enable(a1.BLEND), a1.blendEquation(a1.FUNC_ADD), a1.blendFunc(a1.ZERO, a1.SRC_COLOR)) : b === THREE.CustomBlending ? this.enable(a1.BLEND) : (this.enable(a1.BLEND), a1.blendEquationSeparate(a1.FUNC_ADD, a1.FUNC_ADD), a1.blendFuncSeparate(a1.SRC_ALPHA, a1.ONE_MINUS_SRC_ALPHA, a1.ONE, a1.ONE_MINUS_SRC_ALPHA)), k = b);\n        if (b === THREE.CustomBlending) {\n            g = g || d;\n            h = h || e;\n            r = r || f;\n            if (d !== l || g !== m) a1.blendEquationSeparate(c(d), c(g)), l = d, m = g;\n            if (e !== n || f !== p || h !== q || r !== t) a1.blendFuncSeparate(c(e), c(f), c(h), c(r)), n = e, p = f, q = h, t = r;\n        } else t = q = m = p = n = l = null;\n    };\n    this.setDepthFunc = function(b) {\n        if (r !== b) {\n            if (b) switch(b){\n                case THREE.NeverDepth:\n                    a1.depthFunc(a1.NEVER);\n                    break;\n                case THREE.AlwaysDepth:\n                    a1.depthFunc(a1.ALWAYS);\n                    break;\n                case THREE.LessDepth:\n                    a1.depthFunc(a1.LESS);\n                    break;\n                case THREE.LessEqualDepth:\n                    a1.depthFunc(a1.LEQUAL);\n                    break;\n                case THREE.EqualDepth:\n                    a1.depthFunc(a1.EQUAL);\n                    break;\n                case THREE.GreaterEqualDepth:\n                    a1.depthFunc(a1.GEQUAL);\n                    break;\n                case THREE.GreaterDepth:\n                    a1.depthFunc(a1.GREATER);\n                    break;\n                case THREE.NotEqualDepth:\n                    a1.depthFunc(a1.NOTEQUAL);\n                    break;\n                default:\n                    a1.depthFunc(a1.LEQUAL);\n            }\n            else a1.depthFunc(a1.LEQUAL);\n            r = b;\n        }\n    };\n    this.setDepthTest = function(b) {\n        b ? this.enable(a1.DEPTH_TEST) : this.disable(a1.DEPTH_TEST);\n    };\n    this.setDepthWrite = function(b) {\n        u !== b && (a1.depthMask(b), u = b);\n    };\n    this.setColorWrite = function(b) {\n        w !== b && (a1.colorMask(b, b, b, b), w = b);\n    };\n    this.setFlipSided = function(b) {\n        v !== b && (b ? a1.frontFace(a1.CW) : a1.frontFace(a1.CCW), v = b);\n    };\n    this.setLineWidth = function(b) {\n        b !== B && (a1.lineWidth(b), B = b);\n    };\n    this.setPolygonOffset = function(b, c, d) {\n        b ? this.enable(a1.POLYGON_OFFSET_FILL) : this.disable(a1.POLYGON_OFFSET_FILL);\n        !b || x === c && H === d || (a1.polygonOffset(c, d), x = c, H = d);\n    };\n    this.setScissorTest = function(b) {\n        b ? this.enable(a1.SCISSOR_TEST) : this.disable(a1.SCISSOR_TEST);\n    };\n    this.activeTexture = function(b) {\n        void 0 === b && (b = a1.TEXTURE0 + I - 1);\n        z !== b && (a1.activeTexture(b), z = b);\n    };\n    this.bindTexture = function(b, c) {\n        void 0 === z && d.activeTexture();\n        var e = D[z];\n        void 0 === e && (e = {\n            type: void 0,\n            texture: void 0\n        }, D[z] = e);\n        if (e.type !== b || e.texture !== c) a1.bindTexture(b, c), e.type = b, e.texture = c;\n    };\n    this.compressedTexImage2D = function() {\n        try {\n            a1.compressedTexImage2D.apply(a1, arguments);\n        } catch (b) {\n            console.error(b);\n        }\n    };\n    this.texImage2D = function() {\n        try {\n            a1.texImage2D.apply(a1, arguments);\n        } catch (b) {\n            console.error(b);\n        }\n    };\n    this.reset = function() {\n        for(var b = 0; b < g.length; b++)1 === g[b] && (a1.disableVertexAttribArray(b), g[b] = 0);\n        f = {};\n        v = w = u = k = h = null;\n    };\n};\nTHREE.LensFlarePlugin = function(a1, b) {\n    var c, d, e, g, f, h, k, l, n, p, m = a1.context, q = a1.state, t, r, u, w, v, B;\n    this.render = function(x, H, I, z) {\n        if (0 !== b.length) {\n            x = new THREE.Vector3;\n            var D = z / I, G = .5 * I, O = .5 * z, C = 16 / z, F = new THREE.Vector2(C * D, C), K = new THREE.Vector3(1, 1, 0), L = new THREE.Vector2(1, 1);\n            if (void 0 === u) {\n                var C = new Float32Array([\n                    -1,\n                    -1,\n                    0,\n                    0,\n                    1,\n                    -1,\n                    1,\n                    0,\n                    1,\n                    1,\n                    1,\n                    1,\n                    -1,\n                    1,\n                    0,\n                    1\n                ]), E = new Uint16Array([\n                    0,\n                    1,\n                    2,\n                    0,\n                    2,\n                    3\n                ]);\n                t = m.createBuffer();\n                r = m.createBuffer();\n                m.bindBuffer(m.ARRAY_BUFFER, t);\n                m.bufferData(m.ARRAY_BUFFER, C, m.STATIC_DRAW);\n                m.bindBuffer(m.ELEMENT_ARRAY_BUFFER, r);\n                m.bufferData(m.ELEMENT_ARRAY_BUFFER, E, m.STATIC_DRAW);\n                v = m.createTexture();\n                B = m.createTexture();\n                q.bindTexture(m.TEXTURE_2D, v);\n                m.texImage2D(m.TEXTURE_2D, 0, m.RGB, 16, 16, 0, m.RGB, m.UNSIGNED_BYTE, null);\n                m.texParameteri(m.TEXTURE_2D, m.TEXTURE_WRAP_S, m.CLAMP_TO_EDGE);\n                m.texParameteri(m.TEXTURE_2D, m.TEXTURE_WRAP_T, m.CLAMP_TO_EDGE);\n                m.texParameteri(m.TEXTURE_2D, m.TEXTURE_MAG_FILTER, m.NEAREST);\n                m.texParameteri(m.TEXTURE_2D, m.TEXTURE_MIN_FILTER, m.NEAREST);\n                q.bindTexture(m.TEXTURE_2D, B);\n                m.texImage2D(m.TEXTURE_2D, 0, m.RGBA, 16, 16, 0, m.RGBA, m.UNSIGNED_BYTE, null);\n                m.texParameteri(m.TEXTURE_2D, m.TEXTURE_WRAP_S, m.CLAMP_TO_EDGE);\n                m.texParameteri(m.TEXTURE_2D, m.TEXTURE_WRAP_T, m.CLAMP_TO_EDGE);\n                m.texParameteri(m.TEXTURE_2D, m.TEXTURE_MAG_FILTER, m.NEAREST);\n                m.texParameteri(m.TEXTURE_2D, m.TEXTURE_MIN_FILTER, m.NEAREST);\n                var C = (w = 0 < m.getParameter(m.MAX_VERTEX_TEXTURE_IMAGE_UNITS)) ? {\n                    vertexShader: \"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility =        visibility.r / 9.0;\\nvVisibility *= 1.0 - visibility.g / 9.0;\\nvVisibility *=       visibility.b / 9.0;\\nvVisibility *= 1.0 - visibility.a / 9.0;\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\n                    fragmentShader: \"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"\n                } : {\n                    vertexShader: \"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\n                    fragmentShader: \"precision mediump float;\\nuniform lowp int renderType;\\nuniform sampler2D map;\\nuniform sampler2D occlusionMap;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\\nvisibility = ( 1.0 - visibility / 4.0 );\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * visibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"\n                }, E = m.createProgram(), J = m.createShader(m.FRAGMENT_SHADER), y = m.createShader(m.VERTEX_SHADER), P = \"precision \" + a1.getPrecision() + \" float;\\n\";\n                m.shaderSource(J, P + C.fragmentShader);\n                m.shaderSource(y, P + C.vertexShader);\n                m.compileShader(J);\n                m.compileShader(y);\n                m.attachShader(E, J);\n                m.attachShader(E, y);\n                m.linkProgram(E);\n                u = E;\n                n = m.getAttribLocation(u, \"position\");\n                p = m.getAttribLocation(u, \"uv\");\n                c = m.getUniformLocation(u, \"renderType\");\n                d = m.getUniformLocation(u, \"map\");\n                e = m.getUniformLocation(u, \"occlusionMap\");\n                g = m.getUniformLocation(u, \"opacity\");\n                f = m.getUniformLocation(u, \"color\");\n                h = m.getUniformLocation(u, \"scale\");\n                k = m.getUniformLocation(u, \"rotation\");\n                l = m.getUniformLocation(u, \"screenPosition\");\n            }\n            m.useProgram(u);\n            q.initAttributes();\n            q.enableAttribute(n);\n            q.enableAttribute(p);\n            q.disableUnusedAttributes();\n            m.uniform1i(e, 0);\n            m.uniform1i(d, 1);\n            m.bindBuffer(m.ARRAY_BUFFER, t);\n            m.vertexAttribPointer(n, 2, m.FLOAT, !1, 16, 0);\n            m.vertexAttribPointer(p, 2, m.FLOAT, !1, 16, 8);\n            m.bindBuffer(m.ELEMENT_ARRAY_BUFFER, r);\n            q.disable(m.CULL_FACE);\n            m.depthMask(!1);\n            E = 0;\n            for(J = b.length; E < J; E++)if (C = 16 / z, F.set(C * D, C), y = b[E], x.set(y.matrixWorld.elements[12], y.matrixWorld.elements[13], y.matrixWorld.elements[14]), x.applyMatrix4(H.matrixWorldInverse), x.applyProjection(H.projectionMatrix), K.copy(x), L.x = K.x * G + G, L.y = K.y * O + O, w || 0 < L.x && L.x < I && 0 < L.y && L.y < z) {\n                q.activeTexture(m.TEXTURE0);\n                q.bindTexture(m.TEXTURE_2D, null);\n                q.activeTexture(m.TEXTURE1);\n                q.bindTexture(m.TEXTURE_2D, v);\n                m.copyTexImage2D(m.TEXTURE_2D, 0, m.RGB, L.x - 8, L.y - 8, 16, 16, 0);\n                m.uniform1i(c, 0);\n                m.uniform2f(h, F.x, F.y);\n                m.uniform3f(l, K.x, K.y, K.z);\n                q.disable(m.BLEND);\n                q.enable(m.DEPTH_TEST);\n                m.drawElements(m.TRIANGLES, 6, m.UNSIGNED_SHORT, 0);\n                q.activeTexture(m.TEXTURE0);\n                q.bindTexture(m.TEXTURE_2D, B);\n                m.copyTexImage2D(m.TEXTURE_2D, 0, m.RGBA, L.x - 8, L.y - 8, 16, 16, 0);\n                m.uniform1i(c, 1);\n                q.disable(m.DEPTH_TEST);\n                q.activeTexture(m.TEXTURE1);\n                q.bindTexture(m.TEXTURE_2D, v);\n                m.drawElements(m.TRIANGLES, 6, m.UNSIGNED_SHORT, 0);\n                y.positionScreen.copy(K);\n                y.customUpdateCallback ? y.customUpdateCallback(y) : y.updateLensFlares();\n                m.uniform1i(c, 2);\n                q.enable(m.BLEND);\n                for(var P = 0, U = y.lensFlares.length; P < U; P++){\n                    var Q = y.lensFlares[P];\n                    .001 < Q.opacity && .001 < Q.scale && (K.x = Q.x, K.y = Q.y, K.z = Q.z, C = Q.size * Q.scale / z, F.x = C * D, F.y = C, m.uniform3f(l, K.x, K.y, K.z), m.uniform2f(h, F.x, F.y), m.uniform1f(k, Q.rotation), m.uniform1f(g, Q.opacity), m.uniform3f(f, Q.color.r, Q.color.g, Q.color.b), q.setBlending(Q.blending, Q.blendEquation, Q.blendSrc, Q.blendDst), a1.setTexture(Q.texture, 1), m.drawElements(m.TRIANGLES, 6, m.UNSIGNED_SHORT, 0));\n                }\n            }\n            q.enable(m.CULL_FACE);\n            q.enable(m.DEPTH_TEST);\n            m.depthMask(!0);\n            a1.resetGLState();\n        }\n    };\n};\nTHREE.SpritePlugin = function(a1, b) {\n    var c, d, e, g, f, h, k, l, n, p, m, q, t, r, u, w, v;\n    function B(a1, b) {\n        return a1.z !== b.z ? b.z - a1.z : b.id - a1.id;\n    }\n    var x = a1.context, H = a1.state, I, z, D, G, O = new THREE.Vector3, C = new THREE.Quaternion, F = new THREE.Vector3;\n    this.render = function(K, L) {\n        if (0 !== b.length) {\n            if (void 0 === D) {\n                var E = new Float32Array([\n                    -0.5,\n                    -0.5,\n                    0,\n                    0,\n                    .5,\n                    -0.5,\n                    1,\n                    0,\n                    .5,\n                    .5,\n                    1,\n                    1,\n                    -0.5,\n                    .5,\n                    0,\n                    1\n                ]), J = new Uint16Array([\n                    0,\n                    1,\n                    2,\n                    0,\n                    2,\n                    3\n                ]);\n                I = x.createBuffer();\n                z = x.createBuffer();\n                x.bindBuffer(x.ARRAY_BUFFER, I);\n                x.bufferData(x.ARRAY_BUFFER, E, x.STATIC_DRAW);\n                x.bindBuffer(x.ELEMENT_ARRAY_BUFFER, z);\n                x.bufferData(x.ELEMENT_ARRAY_BUFFER, J, x.STATIC_DRAW);\n                var E = x.createProgram(), J = x.createShader(x.VERTEX_SHADER), y = x.createShader(x.FRAGMENT_SHADER);\n                x.shaderSource(J, [\n                    \"precision \" + a1.getPrecision() + \" float;\",\n                    \"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position * scale;\\nvec2 rotatedPosition;\\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\nvec4 finalPosition;\\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition;\\nfinalPosition = projectionMatrix * finalPosition;\\ngl_Position = finalPosition;\\n}\"\n                ].join(\"\\n\"));\n                x.shaderSource(y, [\n                    \"precision \" + a1.getPrecision() + \" float;\",\n                    \"uniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int fogType;\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float alphaTest;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\nif ( texture.a < alphaTest ) discard;\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\nif ( fogType > 0 ) {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat fogFactor = 0.0;\\nif ( fogType == 1 ) {\\nfogFactor = smoothstep( fogNear, fogFar, depth );\\n} else {\\nconst float LOG2 = 1.442695;\\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n}\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n}\\n}\"\n                ].join(\"\\n\"));\n                x.compileShader(J);\n                x.compileShader(y);\n                x.attachShader(E, J);\n                x.attachShader(E, y);\n                x.linkProgram(E);\n                D = E;\n                w = x.getAttribLocation(D, \"position\");\n                v = x.getAttribLocation(D, \"uv\");\n                c = x.getUniformLocation(D, \"uvOffset\");\n                d = x.getUniformLocation(D, \"uvScale\");\n                e = x.getUniformLocation(D, \"rotation\");\n                g = x.getUniformLocation(D, \"scale\");\n                f = x.getUniformLocation(D, \"color\");\n                h = x.getUniformLocation(D, \"map\");\n                k = x.getUniformLocation(D, \"opacity\");\n                l = x.getUniformLocation(D, \"modelViewMatrix\");\n                n = x.getUniformLocation(D, \"projectionMatrix\");\n                p = x.getUniformLocation(D, \"fogType\");\n                m = x.getUniformLocation(D, \"fogDensity\");\n                q = x.getUniformLocation(D, \"fogNear\");\n                t = x.getUniformLocation(D, \"fogFar\");\n                r = x.getUniformLocation(D, \"fogColor\");\n                u = x.getUniformLocation(D, \"alphaTest\");\n                E = document.createElement(\"canvas\");\n                E.width = 8;\n                E.height = 8;\n                J = E.getContext(\"2d\");\n                J.fillStyle = \"white\";\n                J.fillRect(0, 0, 8, 8);\n                G = new THREE.Texture(E);\n                G.needsUpdate = !0;\n            }\n            x.useProgram(D);\n            H.initAttributes();\n            H.enableAttribute(w);\n            H.enableAttribute(v);\n            H.disableUnusedAttributes();\n            H.disable(x.CULL_FACE);\n            H.enable(x.BLEND);\n            x.bindBuffer(x.ARRAY_BUFFER, I);\n            x.vertexAttribPointer(w, 2, x.FLOAT, !1, 16, 0);\n            x.vertexAttribPointer(v, 2, x.FLOAT, !1, 16, 8);\n            x.bindBuffer(x.ELEMENT_ARRAY_BUFFER, z);\n            x.uniformMatrix4fv(n, !1, L.projectionMatrix.elements);\n            H.activeTexture(x.TEXTURE0);\n            x.uniform1i(h, 0);\n            J = E = 0;\n            (y = K.fog) ? (x.uniform3f(r, y.color.r, y.color.g, y.color.b), y instanceof THREE.Fog ? (x.uniform1f(q, y.near), x.uniform1f(t, y.far), x.uniform1i(p, 1), J = E = 1) : y instanceof THREE.FogExp2 && (x.uniform1f(m, y.density), x.uniform1i(p, 2), J = E = 2)) : (x.uniform1i(p, 0), J = E = 0);\n            for(var y = 0, P = b.length; y < P; y++){\n                var U = b[y];\n                U.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse, U.matrixWorld);\n                U.z = -U.modelViewMatrix.elements[14];\n            }\n            b.sort(B);\n            for(var Q = [], y = 0, P = b.length; y < P; y++){\n                var U = b[y], R = U.material;\n                x.uniform1f(u, R.alphaTest);\n                x.uniformMatrix4fv(l, !1, U.modelViewMatrix.elements);\n                U.matrixWorld.decompose(O, C, F);\n                Q[0] = F.x;\n                Q[1] = F.y;\n                U = 0;\n                K.fog && R.fog && (U = J);\n                E !== U && (x.uniform1i(p, U), E = U);\n                null !== R.map ? (x.uniform2f(c, R.map.offset.x, R.map.offset.y), x.uniform2f(d, R.map.repeat.x, R.map.repeat.y)) : (x.uniform2f(c, 0, 0), x.uniform2f(d, 1, 1));\n                x.uniform1f(k, R.opacity);\n                x.uniform3f(f, R.color.r, R.color.g, R.color.b);\n                x.uniform1f(e, R.rotation);\n                x.uniform2fv(g, Q);\n                H.setBlending(R.blending, R.blendEquation, R.blendSrc, R.blendDst);\n                H.setDepthTest(R.depthTest);\n                H.setDepthWrite(R.depthWrite);\n                R.map && R.map.image && R.map.image.width ? a1.setTexture(R.map, 0) : a1.setTexture(G, 0);\n                x.drawElements(x.TRIANGLES, 6, x.UNSIGNED_SHORT, 0);\n            }\n            H.enable(x.CULL_FACE);\n            a1.resetGLState();\n        }\n    };\n};\nTHREE.GeometryUtils = {\n    merge: function(a1, b, c) {\n        console.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\");\n        var d;\n        b instanceof THREE.Mesh && (b.matrixAutoUpdate && b.updateMatrix(), d = b.matrix, b = b.geometry);\n        a1.merge(b, d, c);\n    },\n    center: function(a1) {\n        console.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\");\n        return a1.center();\n    }\n};\nTHREE.ImageUtils = {\n    crossOrigin: void 0,\n    loadTexture: function(a1, b, c, d) {\n        var e = new THREE.ImageLoader;\n        e.crossOrigin = this.crossOrigin;\n        var g = new THREE.Texture(void 0, b);\n        e.load(a1, function(a1) {\n            g.image = a1;\n            g.needsUpdate = !0;\n            c && c(g);\n        }, void 0, function(a1) {\n            d && d(a1);\n        });\n        g.sourceFile = a1;\n        return g;\n    },\n    loadTextureCube: function(a1, b, c, d) {\n        var e = new THREE.ImageLoader;\n        e.crossOrigin = this.crossOrigin;\n        var g = new THREE.CubeTexture([], b), f = 0;\n        b = function(b) {\n            e.load(a1[b], function(a1) {\n                g.images[b] = a1;\n                f += 1;\n                6 === f && (g.needsUpdate = !0, c && c(g));\n            }, void 0, d);\n        };\n        for(var h = 0, k = a1.length; h < k; ++h)b(h);\n        return g;\n    },\n    loadCompressedTexture: function() {\n        console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\");\n    },\n    loadCompressedTextureCube: function() {\n        console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\");\n    },\n    getNormalMap: function(a1, b) {\n        var c = function(a1) {\n            var b = Math.sqrt(a1[0] * a1[0] + a1[1] * a1[1] + a1[2] * a1[2]);\n            return [\n                a1[0] / b,\n                a1[1] / b,\n                a1[2] / b\n            ];\n        };\n        b |= 1;\n        var d = a1.width, e = a1.height, g = document.createElement(\"canvas\");\n        g.width = d;\n        g.height = e;\n        var f = g.getContext(\"2d\");\n        f.drawImage(a1, 0, 0);\n        for(var h = f.getImageData(0, 0, d, e).data, k = f.createImageData(d, e), l = k.data, n = 0; n < d; n++)for(var p = 0; p < e; p++){\n            var m = 0 > p - 1 ? 0 : p - 1, q = p + 1 > e - 1 ? e - 1 : p + 1, t = 0 > n - 1 ? 0 : n - 1, r = n + 1 > d - 1 ? d - 1 : n + 1, u = [], w = [\n                0,\n                0,\n                h[4 * (p * d + n)] / 255 * b\n            ];\n            u.push([\n                -1,\n                0,\n                h[4 * (p * d + t)] / 255 * b\n            ]);\n            u.push([\n                -1,\n                -1,\n                h[4 * (m * d + t)] / 255 * b\n            ]);\n            u.push([\n                0,\n                -1,\n                h[4 * (m * d + n)] / 255 * b\n            ]);\n            u.push([\n                1,\n                -1,\n                h[4 * (m * d + r)] / 255 * b\n            ]);\n            u.push([\n                1,\n                0,\n                h[4 * (p * d + r)] / 255 * b\n            ]);\n            u.push([\n                1,\n                1,\n                h[4 * (q * d + r)] / 255 * b\n            ]);\n            u.push([\n                0,\n                1,\n                h[4 * (q * d + n)] / 255 * b\n            ]);\n            u.push([\n                -1,\n                1,\n                h[4 * (q * d + t)] / 255 * b\n            ]);\n            m = [];\n            t = u.length;\n            for(q = 0; q < t; q++){\n                var r = u[q], v = u[(q + 1) % t], r = [\n                    r[0] - w[0],\n                    r[1] - w[1],\n                    r[2] - w[2]\n                ], v = [\n                    v[0] - w[0],\n                    v[1] - w[1],\n                    v[2] - w[2]\n                ];\n                m.push(c([\n                    r[1] * v[2] - r[2] * v[1],\n                    r[2] * v[0] - r[0] * v[2],\n                    r[0] * v[1] - r[1] * v[0]\n                ]));\n            }\n            u = [\n                0,\n                0,\n                0\n            ];\n            for(q = 0; q < m.length; q++)u[0] += m[q][0], u[1] += m[q][1], u[2] += m[q][2];\n            u[0] /= m.length;\n            u[1] /= m.length;\n            u[2] /= m.length;\n            w = 4 * (p * d + n);\n            l[w] = (u[0] + 1) / 2 * 255 | 0;\n            l[w + 1] = (u[1] + 1) / 2 * 255 | 0;\n            l[w + 2] = 255 * u[2] | 0;\n            l[w + 3] = 255;\n        }\n        f.putImageData(k, 0, 0);\n        return g;\n    },\n    generateDataTexture: function(a1, b, c) {\n        var d = a1 * b, e = new Uint8Array(3 * d), g = Math.floor(255 * c.r), f = Math.floor(255 * c.g);\n        c = Math.floor(255 * c.b);\n        for(var h = 0; h < d; h++)e[3 * h] = g, e[3 * h + 1] = f, e[3 * h + 2] = c;\n        a1 = new THREE.DataTexture(e, a1, b, THREE.RGBFormat);\n        a1.needsUpdate = !0;\n        return a1;\n    }\n};\nTHREE.SceneUtils = {\n    createMultiMaterialObject: function(a1, b) {\n        for(var c = new THREE.Group, d = 0, e = b.length; d < e; d++)c.add(new THREE.Mesh(a1, b[d]));\n        return c;\n    },\n    detach: function(a1, b, c) {\n        a1.applyMatrix(b.matrixWorld);\n        b.remove(a1);\n        c.add(a1);\n    },\n    attach: function(a1, b, c) {\n        var d = new THREE.Matrix4;\n        d.getInverse(c.matrixWorld);\n        a1.applyMatrix(d);\n        b.remove(a1);\n        c.add(a1);\n    }\n};\nTHREE.FontUtils = {\n    faces: {},\n    face: \"helvetiker\",\n    weight: \"normal\",\n    style: \"normal\",\n    size: 150,\n    divisions: 10,\n    getFace: function() {\n        try {\n            return this.faces[this.face.toLowerCase()][this.weight][this.style];\n        } catch (a1) {\n            throw \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\";\n        }\n    },\n    loadFace: function(a1) {\n        var b = a1.familyName.toLowerCase();\n        this.faces[b] = this.faces[b] || {};\n        this.faces[b][a1.cssFontWeight] = this.faces[b][a1.cssFontWeight] || {};\n        this.faces[b][a1.cssFontWeight][a1.cssFontStyle] = a1;\n        return this.faces[b][a1.cssFontWeight][a1.cssFontStyle] = a1;\n    },\n    drawText: function(a1) {\n        var b = this.getFace(), c = this.size / b.resolution, d = 0, e = String(a1).split(\"\"), g = e.length, f = [];\n        for(a1 = 0; a1 < g; a1++){\n            var h = new THREE.Path, h = this.extractGlyphPoints(e[a1], b, c, d, h), d = d + h.offset;\n            f.push(h.path);\n        }\n        return {\n            paths: f,\n            offset: d / 2\n        };\n    },\n    extractGlyphPoints: function(a1, b, c, d, e) {\n        var g = [], f, h, k, l, n, p, m, q, t, r, u, w = b.glyphs[a1] || b.glyphs[\"?\"];\n        if (w) {\n            if (w.o) for(b = w._cachedOutline || (w._cachedOutline = w.o.split(\" \")), l = b.length, a1 = 0; a1 < l;)switch(k = b[a1++], k){\n                case \"m\":\n                    k = b[a1++] * c + d;\n                    n = b[a1++] * c;\n                    e.moveTo(k, n);\n                    break;\n                case \"l\":\n                    k = b[a1++] * c + d;\n                    n = b[a1++] * c;\n                    e.lineTo(k, n);\n                    break;\n                case \"q\":\n                    k = b[a1++] * c + d;\n                    n = b[a1++] * c;\n                    q = b[a1++] * c + d;\n                    t = b[a1++] * c;\n                    e.quadraticCurveTo(q, t, k, n);\n                    if (f = g[g.length - 1]) for(p = f.x, m = f.y, f = 1, h = this.divisions; f <= h; f++){\n                        var v = f / h;\n                        THREE.Shape.Utils.b2(v, p, q, k);\n                        THREE.Shape.Utils.b2(v, m, t, n);\n                    }\n                    break;\n                case \"b\":\n                    if (k = b[a1++] * c + d, n = b[a1++] * c, q = b[a1++] * c + d, t = b[a1++] * c, r = b[a1++] * c + d, u = b[a1++] * c, e.bezierCurveTo(q, t, r, u, k, n), f = g[g.length - 1]) for(p = f.x, m = f.y, f = 1, h = this.divisions; f <= h; f++)v = f / h, THREE.Shape.Utils.b3(v, p, q, r, k), THREE.Shape.Utils.b3(v, m, t, u, n);\n            }\n            return {\n                offset: w.ha * c,\n                path: e\n            };\n        }\n    }\n};\nTHREE.FontUtils.generateShapes = function(a1, b) {\n    b = b || {};\n    var c = void 0 !== b.curveSegments ? b.curveSegments : 4, d = void 0 !== b.font ? b.font : \"helvetiker\", e = void 0 !== b.weight ? b.weight : \"normal\", g = void 0 !== b.style ? b.style : \"normal\";\n    THREE.FontUtils.size = void 0 !== b.size ? b.size : 100;\n    THREE.FontUtils.divisions = c;\n    THREE.FontUtils.face = d;\n    THREE.FontUtils.weight = e;\n    THREE.FontUtils.style = g;\n    c = THREE.FontUtils.drawText(a1).paths;\n    d = [];\n    e = 0;\n    for(g = c.length; e < g; e++)Array.prototype.push.apply(d, c[e].toShapes());\n    return d;\n};\n(function(a1) {\n    var b = function(a1) {\n        for(var b = a1.length, e = 0, g = b - 1, f = 0; f < b; g = f++)e += a1[g].x * a1[f].y - a1[f].x * a1[g].y;\n        return .5 * e;\n    };\n    a1.Triangulate = function(a1, d) {\n        var e = a1.length;\n        if (3 > e) return null;\n        var g = [], f = [], h = [], k, l, n;\n        if (0 < b(a1)) for(l = 0; l < e; l++)f[l] = l;\n        else for(l = 0; l < e; l++)f[l] = e - 1 - l;\n        var p = 2 * e;\n        for(l = e - 1; 2 < e;){\n            if (0 >= p--) {\n                console.warn(\"THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()\");\n                break;\n            }\n            k = l;\n            e <= k && (k = 0);\n            l = k + 1;\n            e <= l && (l = 0);\n            n = l + 1;\n            e <= n && (n = 0);\n            var m;\n            a: {\n                var q = m = void 0, t = void 0, r = void 0, u = void 0, w = void 0, v = void 0, B = void 0, x = void 0, q = a1[f[k]].x, t = a1[f[k]].y, r = a1[f[l]].x, u = a1[f[l]].y, w = a1[f[n]].x, v = a1[f[n]].y;\n                if (1E-10 > (r - q) * (v - t) - (u - t) * (w - q)) m = !1;\n                else {\n                    var H = void 0, I = void 0, z = void 0, D = void 0, G = void 0, O = void 0, C = void 0, F = void 0, K = void 0, L = void 0, K = F = C = x = B = void 0, H = w - r, I = v - u, z = q - w, D = t - v, G = r - q, O = u - t;\n                    for(m = 0; m < e; m++)if (B = a1[f[m]].x, x = a1[f[m]].y, !(B === q && x === t || B === r && x === u || B === w && x === v) && (C = B - q, F = x - t, K = B - r, L = x - u, B -= w, x -= v, K = H * L - I * K, C = G * F - O * C, F = z * x - D * B, -0.0000000001 <= K && -0.0000000001 <= F && -0.0000000001 <= C)) {\n                        m = !1;\n                        break a;\n                    }\n                    m = !0;\n                }\n            }\n            if (m) {\n                g.push([\n                    a1[f[k]],\n                    a1[f[l]],\n                    a1[f[n]]\n                ]);\n                h.push([\n                    f[k],\n                    f[l],\n                    f[n]\n                ]);\n                k = l;\n                for(n = l + 1; n < e; k++, n++)f[k] = f[n];\n                e--;\n                p = 2 * e;\n            }\n        }\n        return d ? h : g;\n    };\n    a1.Triangulate.area = b;\n    return a1;\n})(THREE.FontUtils);\nTHREE.typeface_js = {\n    faces: THREE.FontUtils.faces,\n    loadFace: THREE.FontUtils.loadFace\n};\n\"undefined\" !== typeof self && (self._typeface_js = THREE.typeface_js);\nTHREE.Audio = function(a1) {\n    THREE.Object3D.call(this);\n    this.type = \"Audio\";\n    this.context = a1.context;\n    this.source = this.context.createBufferSource();\n    this.source.onended = this.onEnded.bind(this);\n    this.gain = this.context.createGain();\n    this.gain.connect(this.context.destination);\n    this.panner = this.context.createPanner();\n    this.panner.connect(this.gain);\n    this.autoplay = !1;\n    this.startTime = 0;\n    this.playbackRate = 1;\n    this.isPlaying = !1;\n};\nTHREE.Audio.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.Audio.prototype.constructor = THREE.Audio;\nTHREE.Audio.prototype.load = function(a1) {\n    var b = this, c = new XMLHttpRequest;\n    c.open(\"GET\", a1, !0);\n    c.responseType = \"arraybuffer\";\n    c.onload = function(a1) {\n        b.context.decodeAudioData(this.response, function(a1) {\n            b.source.buffer = a1;\n            b.autoplay && b.play();\n        });\n    };\n    c.send();\n    return this;\n};\nTHREE.Audio.prototype.play = function() {\n    if (!0 === this.isPlaying) console.warn(\"THREE.Audio: Audio is already playing.\");\n    else {\n        var a1 = this.context.createBufferSource();\n        a1.buffer = this.source.buffer;\n        a1.loop = this.source.loop;\n        a1.onended = this.source.onended;\n        a1.start(0, this.startTime);\n        a1.playbackRate.value = this.playbackRate;\n        this.isPlaying = !0;\n        this.source = a1;\n        this.connect();\n    }\n};\nTHREE.Audio.prototype.pause = function() {\n    this.source.stop();\n    this.startTime = this.context.currentTime;\n};\nTHREE.Audio.prototype.stop = function() {\n    this.source.stop();\n    this.startTime = 0;\n};\nTHREE.Audio.prototype.connect = function() {\n    void 0 !== this.filter ? (this.source.connect(this.filter), this.filter.connect(this.panner)) : this.source.connect(this.panner);\n};\nTHREE.Audio.prototype.disconnect = function() {\n    void 0 !== this.filter ? (this.source.disconnect(this.filter), this.filter.disconnect(this.panner)) : this.source.disconnect(this.panner);\n};\nTHREE.Audio.prototype.setFilter = function(a1) {\n    !0 === this.isPlaying ? (this.disconnect(), this.filter = a1, this.connect()) : this.filter = a1;\n};\nTHREE.Audio.prototype.getFilter = function() {\n    return this.filter;\n};\nTHREE.Audio.prototype.setPlaybackRate = function(a1) {\n    this.playbackRate = a1;\n    !0 === this.isPlaying && (this.source.playbackRate.value = this.playbackRate);\n};\nTHREE.Audio.prototype.getPlaybackRate = function() {\n    return this.playbackRate;\n};\nTHREE.Audio.prototype.onEnded = function() {\n    this.isPlaying = !1;\n};\nTHREE.Audio.prototype.setLoop = function(a1) {\n    this.source.loop = a1;\n};\nTHREE.Audio.prototype.getLoop = function() {\n    return this.source.loop;\n};\nTHREE.Audio.prototype.setRefDistance = function(a1) {\n    this.panner.refDistance = a1;\n};\nTHREE.Audio.prototype.getRefDistance = function() {\n    return this.panner.refDistance;\n};\nTHREE.Audio.prototype.setRolloffFactor = function(a1) {\n    this.panner.rolloffFactor = a1;\n};\nTHREE.Audio.prototype.getRolloffFactor = function() {\n    return this.panner.rolloffFactor;\n};\nTHREE.Audio.prototype.setVolume = function(a1) {\n    this.gain.gain.value = a1;\n};\nTHREE.Audio.prototype.getVolume = function() {\n    return this.gain.gain.value;\n};\nTHREE.Audio.prototype.updateMatrixWorld = function() {\n    var a1 = new THREE.Vector3;\n    return function(b) {\n        THREE.Object3D.prototype.updateMatrixWorld.call(this, b);\n        a1.setFromMatrixPosition(this.matrixWorld);\n        this.panner.setPosition(a1.x, a1.y, a1.z);\n    };\n}();\nTHREE.AudioListener = function() {\n    THREE.Object3D.call(this);\n    this.type = \"AudioListener\";\n    this.context = new (window.AudioContext || window.webkitAudioContext);\n};\nTHREE.AudioListener.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\nTHREE.AudioListener.prototype.updateMatrixWorld = function() {\n    var a1 = new THREE.Vector3, b = new THREE.Quaternion, c = new THREE.Vector3, d = new THREE.Vector3;\n    return function(e) {\n        THREE.Object3D.prototype.updateMatrixWorld.call(this, e);\n        e = this.context.listener;\n        var g = this.up;\n        this.matrixWorld.decompose(a1, b, c);\n        d.set(0, 0, -1).applyQuaternion(b);\n        e.setPosition(a1.x, a1.y, a1.z);\n        e.setOrientation(d.x, d.y, d.z, g.x, g.y, g.z);\n    };\n}();\nTHREE.Curve = function() {};\nTHREE.Curve.prototype.getPoint = function(a1) {\n    console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");\n    return null;\n};\nTHREE.Curve.prototype.getPointAt = function(a1) {\n    a1 = this.getUtoTmapping(a1);\n    return this.getPoint(a1);\n};\nTHREE.Curve.prototype.getPoints = function(a1) {\n    a1 || (a1 = 5);\n    var b, c = [];\n    for(b = 0; b <= a1; b++)c.push(this.getPoint(b / a1));\n    return c;\n};\nTHREE.Curve.prototype.getSpacedPoints = function(a1) {\n    a1 || (a1 = 5);\n    var b, c = [];\n    for(b = 0; b <= a1; b++)c.push(this.getPointAt(b / a1));\n    return c;\n};\nTHREE.Curve.prototype.getLength = function() {\n    var a1 = this.getLengths();\n    return a1[a1.length - 1];\n};\nTHREE.Curve.prototype.getLengths = function(a1) {\n    a1 || (a1 = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200);\n    if (this.cacheArcLengths && this.cacheArcLengths.length === a1 + 1 && !this.needsUpdate) return this.cacheArcLengths;\n    this.needsUpdate = !1;\n    var b = [], c, d = this.getPoint(0), e, g = 0;\n    b.push(0);\n    for(e = 1; e <= a1; e++)c = this.getPoint(e / a1), g += c.distanceTo(d), b.push(g), d = c;\n    return this.cacheArcLengths = b;\n};\nTHREE.Curve.prototype.updateArcLengths = function() {\n    this.needsUpdate = !0;\n    this.getLengths();\n};\nTHREE.Curve.prototype.getUtoTmapping = function(a1, b) {\n    var c = this.getLengths(), d = 0, e = c.length, g;\n    g = b ? b : a1 * c[e - 1];\n    for(var f = 0, h = e - 1, k; f <= h;)if (d = Math.floor(f + (h - f) / 2), k = c[d] - g, 0 > k) f = d + 1;\n    else if (0 < k) h = d - 1;\n    else {\n        h = d;\n        break;\n    }\n    d = h;\n    if (c[d] === g) return d / (e - 1);\n    f = c[d];\n    return c = (d + (g - f) / (c[d + 1] - f)) / (e - 1);\n};\nTHREE.Curve.prototype.getTangent = function(a1) {\n    var b = a1 - 1E-4;\n    a1 += 1E-4;\n    0 > b && (b = 0);\n    1 < a1 && (a1 = 1);\n    b = this.getPoint(b);\n    return this.getPoint(a1).clone().sub(b).normalize();\n};\nTHREE.Curve.prototype.getTangentAt = function(a1) {\n    a1 = this.getUtoTmapping(a1);\n    return this.getTangent(a1);\n};\nTHREE.Curve.Utils = {\n    tangentQuadraticBezier: function(a1, b, c, d) {\n        return 2 * (1 - a1) * (c - b) + 2 * a1 * (d - c);\n    },\n    tangentCubicBezier: function(a1, b, c, d, e) {\n        return -3 * b * (1 - a1) * (1 - a1) + 3 * c * (1 - a1) * (1 - a1) - 6 * a1 * c * (1 - a1) + 6 * a1 * d * (1 - a1) - 3 * a1 * a1 * d + 3 * a1 * a1 * e;\n    },\n    tangentSpline: function(a1, b, c, d, e) {\n        return 6 * a1 * a1 - 6 * a1 + (3 * a1 * a1 - 4 * a1 + 1) + (-6 * a1 * a1 + 6 * a1) + (3 * a1 * a1 - 2 * a1);\n    },\n    interpolate: function(a1, b, c, d, e) {\n        a1 = .5 * (c - a1);\n        d = .5 * (d - b);\n        var g = e * e;\n        return (2 * b - 2 * c + a1 + d) * e * g + (-3 * b + 3 * c - 2 * a1 - d) * g + a1 * e + b;\n    }\n};\nTHREE.Curve.create = function(a1, b) {\n    a1.prototype = Object.create(THREE.Curve.prototype);\n    a1.prototype.constructor = a1;\n    a1.prototype.getPoint = b;\n    return a1;\n};\nTHREE.CurvePath = function() {\n    this.curves = [];\n    this.bends = [];\n    this.autoClose = !1;\n};\nTHREE.CurvePath.prototype = Object.create(THREE.Curve.prototype);\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\nTHREE.CurvePath.prototype.add = function(a1) {\n    this.curves.push(a1);\n};\nTHREE.CurvePath.prototype.checkConnection = function() {};\nTHREE.CurvePath.prototype.closePath = function() {\n    var a1 = this.curves[0].getPoint(0), b = this.curves[this.curves.length - 1].getPoint(1);\n    a1.equals(b) || this.curves.push(new THREE.LineCurve(b, a1));\n};\nTHREE.CurvePath.prototype.getPoint = function(a1) {\n    var b = a1 * this.getLength(), c = this.getCurveLengths();\n    for(a1 = 0; a1 < c.length;){\n        if (c[a1] >= b) return b = c[a1] - b, a1 = this.curves[a1], b = 1 - b / a1.getLength(), a1.getPointAt(b);\n        a1++;\n    }\n    return null;\n};\nTHREE.CurvePath.prototype.getLength = function() {\n    var a1 = this.getCurveLengths();\n    return a1[a1.length - 1];\n};\nTHREE.CurvePath.prototype.getCurveLengths = function() {\n    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;\n    var a1 = [], b = 0, c, d = this.curves.length;\n    for(c = 0; c < d; c++)b += this.curves[c].getLength(), a1.push(b);\n    return this.cacheLengths = a1;\n};\nTHREE.CurvePath.prototype.getBoundingBox = function() {\n    var a1 = this.getPoints(), b, c, d, e, g, f;\n    b = c = Number.NEGATIVE_INFINITY;\n    e = g = Number.POSITIVE_INFINITY;\n    var h, k, l, n, p = a1[0] instanceof THREE.Vector3;\n    n = p ? new THREE.Vector3 : new THREE.Vector2;\n    k = 0;\n    for(l = a1.length; k < l; k++)h = a1[k], h.x > b ? b = h.x : h.x < e && (e = h.x), h.y > c ? c = h.y : h.y < g && (g = h.y), p && (h.z > d ? d = h.z : h.z < f && (f = h.z)), n.add(h);\n    a1 = {\n        minX: e,\n        minY: g,\n        maxX: b,\n        maxY: c\n    };\n    p && (a1.maxZ = d, a1.minZ = f);\n    return a1;\n};\nTHREE.CurvePath.prototype.createPointsGeometry = function(a1) {\n    a1 = this.getPoints(a1, !0);\n    return this.createGeometry(a1);\n};\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function(a1) {\n    a1 = this.getSpacedPoints(a1, !0);\n    return this.createGeometry(a1);\n};\nTHREE.CurvePath.prototype.createGeometry = function(a1) {\n    for(var b = new THREE.Geometry, c = 0; c < a1.length; c++)b.vertices.push(new THREE.Vector3(a1[c].x, a1[c].y, a1[c].z || 0));\n    return b;\n};\nTHREE.CurvePath.prototype.addWrapPath = function(a1) {\n    this.bends.push(a1);\n};\nTHREE.CurvePath.prototype.getTransformedPoints = function(a1, b) {\n    var c = this.getPoints(a1), d, e;\n    b || (b = this.bends);\n    d = 0;\n    for(e = b.length; d < e; d++)c = this.getWrapPoints(c, b[d]);\n    return c;\n};\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function(a1, b) {\n    var c = this.getSpacedPoints(a1), d, e;\n    b || (b = this.bends);\n    d = 0;\n    for(e = b.length; d < e; d++)c = this.getWrapPoints(c, b[d]);\n    return c;\n};\nTHREE.CurvePath.prototype.getWrapPoints = function(a1, b) {\n    var c = this.getBoundingBox(), d, e, g, f, h, k;\n    d = 0;\n    for(e = a1.length; d < e; d++)g = a1[d], f = g.x, h = g.y, k = f / c.maxX, k = b.getUtoTmapping(k, f), f = b.getPoint(k), k = b.getTangent(k), k.set(-k.y, k.x).multiplyScalar(h), g.x = f.x + k.x, g.y = f.y + k.y;\n    return a1;\n};\nTHREE.Path = function(a1) {\n    THREE.CurvePath.call(this);\n    this.actions = [];\n    a1 && this.fromPoints(a1);\n};\nTHREE.Path.prototype = Object.create(THREE.CurvePath.prototype);\nTHREE.Path.prototype.constructor = THREE.Path;\nTHREE.PathActions = {\n    MOVE_TO: \"moveTo\",\n    LINE_TO: \"lineTo\",\n    QUADRATIC_CURVE_TO: \"quadraticCurveTo\",\n    BEZIER_CURVE_TO: \"bezierCurveTo\",\n    CSPLINE_THRU: \"splineThru\",\n    ARC: \"arc\",\n    ELLIPSE: \"ellipse\"\n};\nTHREE.Path.prototype.fromPoints = function(a1) {\n    this.moveTo(a1[0].x, a1[0].y);\n    for(var b = 1, c = a1.length; b < c; b++)this.lineTo(a1[b].x, a1[b].y);\n};\nTHREE.Path.prototype.moveTo = function(a1, b) {\n    var c = Array.prototype.slice.call(arguments);\n    this.actions.push({\n        action: THREE.PathActions.MOVE_TO,\n        args: c\n    });\n};\nTHREE.Path.prototype.lineTo = function(a1, b) {\n    var c = Array.prototype.slice.call(arguments), d = this.actions[this.actions.length - 1].args, d = new THREE.LineCurve(new THREE.Vector2(d[d.length - 2], d[d.length - 1]), new THREE.Vector2(a1, b));\n    this.curves.push(d);\n    this.actions.push({\n        action: THREE.PathActions.LINE_TO,\n        args: c\n    });\n};\nTHREE.Path.prototype.quadraticCurveTo = function(a1, b, c, d) {\n    var e = Array.prototype.slice.call(arguments), g = this.actions[this.actions.length - 1].args, g = new THREE.QuadraticBezierCurve(new THREE.Vector2(g[g.length - 2], g[g.length - 1]), new THREE.Vector2(a1, b), new THREE.Vector2(c, d));\n    this.curves.push(g);\n    this.actions.push({\n        action: THREE.PathActions.QUADRATIC_CURVE_TO,\n        args: e\n    });\n};\nTHREE.Path.prototype.bezierCurveTo = function(a1, b, c, d, e, g) {\n    var f = Array.prototype.slice.call(arguments), h = this.actions[this.actions.length - 1].args, h = new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length - 2], h[h.length - 1]), new THREE.Vector2(a1, b), new THREE.Vector2(c, d), new THREE.Vector2(e, g));\n    this.curves.push(h);\n    this.actions.push({\n        action: THREE.PathActions.BEZIER_CURVE_TO,\n        args: f\n    });\n};\nTHREE.Path.prototype.splineThru = function(a1) {\n    var b = Array.prototype.slice.call(arguments), c = this.actions[this.actions.length - 1].args, c = [\n        new THREE.Vector2(c[c.length - 2], c[c.length - 1])\n    ];\n    Array.prototype.push.apply(c, a1);\n    c = new THREE.SplineCurve(c);\n    this.curves.push(c);\n    this.actions.push({\n        action: THREE.PathActions.CSPLINE_THRU,\n        args: b\n    });\n};\nTHREE.Path.prototype.arc = function(a1, b, c, d, e, g) {\n    var f = this.actions[this.actions.length - 1].args;\n    this.absarc(a1 + f[f.length - 2], b + f[f.length - 1], c, d, e, g);\n};\nTHREE.Path.prototype.absarc = function(a1, b, c, d, e, g) {\n    this.absellipse(a1, b, c, c, d, e, g);\n};\nTHREE.Path.prototype.ellipse = function(a1, b, c, d, e, g, f, h) {\n    var k = this.actions[this.actions.length - 1].args;\n    this.absellipse(a1 + k[k.length - 2], b + k[k.length - 1], c, d, e, g, f, h);\n};\nTHREE.Path.prototype.absellipse = function(a1, b, c, d, e, g, f, h) {\n    var k = [\n        a1,\n        b,\n        c,\n        d,\n        e,\n        g,\n        f,\n        h || 0\n    ];\n    a1 = new THREE.EllipseCurve(a1, b, c, d, e, g, f, h);\n    this.curves.push(a1);\n    a1 = a1.getPoint(1);\n    k.push(a1.x);\n    k.push(a1.y);\n    this.actions.push({\n        action: THREE.PathActions.ELLIPSE,\n        args: k\n    });\n};\nTHREE.Path.prototype.getSpacedPoints = function(a1, b) {\n    a1 || (a1 = 40);\n    for(var c = [], d = 0; d < a1; d++)c.push(this.getPoint(d / a1));\n    return c;\n};\nTHREE.Path.prototype.getPoints = function(a1, b) {\n    if (this.useSpacedPoints) return this.getSpacedPoints(a1, b);\n    a1 = a1 || 12;\n    var c = [], d, e, g, f, h, k, l, n, p, m, q, t, r;\n    d = 0;\n    for(e = this.actions.length; d < e; d++)switch(g = this.actions[d], f = g.action, g = g.args, f){\n        case THREE.PathActions.MOVE_TO:\n            c.push(new THREE.Vector2(g[0], g[1]));\n            break;\n        case THREE.PathActions.LINE_TO:\n            c.push(new THREE.Vector2(g[0], g[1]));\n            break;\n        case THREE.PathActions.QUADRATIC_CURVE_TO:\n            h = g[2];\n            k = g[3];\n            p = g[0];\n            m = g[1];\n            0 < c.length ? (f = c[c.length - 1], q = f.x, t = f.y) : (f = this.actions[d - 1].args, q = f[f.length - 2], t = f[f.length - 1]);\n            for(g = 1; g <= a1; g++)r = g / a1, f = THREE.Shape.Utils.b2(r, q, p, h), r = THREE.Shape.Utils.b2(r, t, m, k), c.push(new THREE.Vector2(f, r));\n            break;\n        case THREE.PathActions.BEZIER_CURVE_TO:\n            h = g[4];\n            k = g[5];\n            p = g[0];\n            m = g[1];\n            l = g[2];\n            n = g[3];\n            0 < c.length ? (f = c[c.length - 1], q = f.x, t = f.y) : (f = this.actions[d - 1].args, q = f[f.length - 2], t = f[f.length - 1]);\n            for(g = 1; g <= a1; g++)r = g / a1, f = THREE.Shape.Utils.b3(r, q, p, l, h), r = THREE.Shape.Utils.b3(r, t, m, n, k), c.push(new THREE.Vector2(f, r));\n            break;\n        case THREE.PathActions.CSPLINE_THRU:\n            f = this.actions[d - 1].args;\n            r = [\n                new THREE.Vector2(f[f.length - 2], f[f.length - 1])\n            ];\n            f = a1 * g[0].length;\n            r = r.concat(g[0]);\n            r = new THREE.SplineCurve(r);\n            for(g = 1; g <= f; g++)c.push(r.getPointAt(g / f));\n            break;\n        case THREE.PathActions.ARC:\n            h = g[0];\n            k = g[1];\n            m = g[2];\n            l = g[3];\n            f = g[4];\n            p = !!g[5];\n            q = f - l;\n            t = 2 * a1;\n            for(g = 1; g <= t; g++)r = g / t, p || (r = 1 - r), r = l + r * q, f = h + m * Math.cos(r), r = k + m * Math.sin(r), c.push(new THREE.Vector2(f, r));\n            break;\n        case THREE.PathActions.ELLIPSE:\n            h = g[0];\n            k = g[1];\n            m = g[2];\n            n = g[3];\n            l = g[4];\n            f = g[5];\n            p = !!g[6];\n            var u = g[7];\n            q = f - l;\n            t = 2 * a1;\n            var w, v;\n            0 !== u && (w = Math.cos(u), v = Math.sin(u));\n            for(g = 1; g <= t; g++){\n                r = g / t;\n                p || (r = 1 - r);\n                r = l + r * q;\n                f = h + m * Math.cos(r);\n                r = k + n * Math.sin(r);\n                if (0 !== u) {\n                    var B = f;\n                    f = (B - h) * w - (r - k) * v + h;\n                    r = (B - h) * v + (r - k) * w + k;\n                }\n                c.push(new THREE.Vector2(f, r));\n            }\n    }\n    d = c[c.length - 1];\n    1E-10 > Math.abs(d.x - c[0].x) && 1E-10 > Math.abs(d.y - c[0].y) && c.splice(c.length - 1, 1);\n    b && c.push(c[0]);\n    return c;\n};\nTHREE.Path.prototype.toShapes = function(a1, b) {\n    function c(a1) {\n        for(var b = [], c = 0, d = a1.length; c < d; c++){\n            var e = a1[c], f = new THREE.Shape;\n            f.actions = e.actions;\n            f.curves = e.curves;\n            b.push(f);\n        }\n        return b;\n    }\n    function d(a1, b) {\n        for(var c = b.length, d = !1, e = c - 1, f = 0; f < c; e = f++){\n            var g = b[e], h = b[f], k = h.x - g.x, l = h.y - g.y;\n            if (1E-10 < Math.abs(l)) {\n                if (0 > l && (g = b[f], k = -k, h = b[e], l = -l), !(a1.y < g.y || a1.y > h.y)) {\n                    if (a1.y === g.y) {\n                        if (a1.x === g.x) return !0;\n                    } else {\n                        e = l * (a1.x - g.x) - k * (a1.y - g.y);\n                        if (0 === e) return !0;\n                        0 > e || (d = !d);\n                    }\n                }\n            } else if (a1.y === g.y && (h.x <= a1.x && a1.x <= g.x || g.x <= a1.x && a1.x <= h.x)) return !0;\n        }\n        return d;\n    }\n    var e = function(a1) {\n        var b, c, d, e, f = [], g = new THREE.Path;\n        b = 0;\n        for(c = a1.length; b < c; b++)d = a1[b], e = d.args, d = d.action, d === THREE.PathActions.MOVE_TO && 0 !== g.actions.length && (f.push(g), g = new THREE.Path), g[d].apply(g, e);\n        0 !== g.actions.length && f.push(g);\n        return f;\n    }(this.actions);\n    if (0 === e.length) return [];\n    if (!0 === b) return c(e);\n    var g, f, h, k = [];\n    if (1 === e.length) return f = e[0], h = new THREE.Shape, h.actions = f.actions, h.curves = f.curves, k.push(h), k;\n    var l = !THREE.Shape.Utils.isClockWise(e[0].getPoints()), l = a1 ? !l : l;\n    h = [];\n    var n = [], p = [], m = 0, q;\n    n[m] = void 0;\n    p[m] = [];\n    var t, r;\n    t = 0;\n    for(r = e.length; t < r; t++)f = e[t], q = f.getPoints(), g = THREE.Shape.Utils.isClockWise(q), (g = a1 ? !g : g) ? (!l && n[m] && m++, n[m] = {\n        s: new THREE.Shape,\n        p: q\n    }, n[m].s.actions = f.actions, n[m].s.curves = f.curves, l && m++, p[m] = []) : p[m].push({\n        h: f,\n        p: q[0]\n    });\n    if (!n[0]) return c(e);\n    if (1 < n.length) {\n        t = !1;\n        r = [];\n        f = 0;\n        for(e = n.length; f < e; f++)h[f] = [];\n        f = 0;\n        for(e = n.length; f < e; f++)for(g = p[f], l = 0; l < g.length; l++){\n            m = g[l];\n            q = !0;\n            for(var u = 0; u < n.length; u++)d(m.p, n[u].p) && (f !== u && r.push({\n                froms: f,\n                tos: u,\n                hole: l\n            }), q ? (q = !1, h[u].push(m)) : t = !0);\n            q && h[f].push(m);\n        }\n        0 < r.length && (t || (p = h));\n    }\n    t = 0;\n    for(r = n.length; t < r; t++)for(h = n[t].s, k.push(h), f = p[t], e = 0, g = f.length; e < g; e++)h.holes.push(f[e].h);\n    return k;\n};\nTHREE.Shape = function() {\n    THREE.Path.apply(this, arguments);\n    this.holes = [];\n};\nTHREE.Shape.prototype = Object.create(THREE.Path.prototype);\nTHREE.Shape.prototype.constructor = THREE.Shape;\nTHREE.Shape.prototype.extrude = function(a1) {\n    return new THREE.ExtrudeGeometry(this, a1);\n};\nTHREE.Shape.prototype.makeGeometry = function(a1) {\n    return new THREE.ShapeGeometry(this, a1);\n};\nTHREE.Shape.prototype.getPointsHoles = function(a1) {\n    var b, c = this.holes.length, d = [];\n    for(b = 0; b < c; b++)d[b] = this.holes[b].getTransformedPoints(a1, this.bends);\n    return d;\n};\nTHREE.Shape.prototype.getSpacedPointsHoles = function(a1) {\n    var b, c = this.holes.length, d = [];\n    for(b = 0; b < c; b++)d[b] = this.holes[b].getTransformedSpacedPoints(a1, this.bends);\n    return d;\n};\nTHREE.Shape.prototype.extractAllPoints = function(a1) {\n    return {\n        shape: this.getTransformedPoints(a1),\n        holes: this.getPointsHoles(a1)\n    };\n};\nTHREE.Shape.prototype.extractPoints = function(a1) {\n    return this.useSpacedPoints ? this.extractAllSpacedPoints(a1) : this.extractAllPoints(a1);\n};\nTHREE.Shape.prototype.extractAllSpacedPoints = function(a1) {\n    return {\n        shape: this.getTransformedSpacedPoints(a1),\n        holes: this.getSpacedPointsHoles(a1)\n    };\n};\nTHREE.Shape.Utils = {\n    triangulateShape: function(a1, b) {\n        function c(a1, b, c) {\n            return a1.x !== b.x ? a1.x < b.x ? a1.x <= c.x && c.x <= b.x : b.x <= c.x && c.x <= a1.x : a1.y < b.y ? a1.y <= c.y && c.y <= b.y : b.y <= c.y && c.y <= a1.y;\n        }\n        function d(a1, b, d, e, f) {\n            var g = b.x - a1.x, h = b.y - a1.y, k = e.x - d.x, l = e.y - d.y, n = a1.x - d.x, p = a1.y - d.y, z = h * k - g * l, D = h * n - g * p;\n            if (1E-10 < Math.abs(z)) {\n                if (0 < z) {\n                    if (0 > D || D > z) return [];\n                    k = l * n - k * p;\n                    if (0 > k || k > z) return [];\n                } else {\n                    if (0 < D || D < z) return [];\n                    k = l * n - k * p;\n                    if (0 < k || k < z) return [];\n                }\n                if (0 === k) return !f || 0 !== D && D !== z ? [\n                    a1\n                ] : [];\n                if (k === z) return !f || 0 !== D && D !== z ? [\n                    b\n                ] : [];\n                if (0 === D) return [\n                    d\n                ];\n                if (D === z) return [\n                    e\n                ];\n                f = k / z;\n                return [\n                    {\n                        x: a1.x + f * g,\n                        y: a1.y + f * h\n                    }\n                ];\n            }\n            if (0 !== D || l * n !== k * p) return [];\n            h = 0 === g && 0 === h;\n            k = 0 === k && 0 === l;\n            if (h && k) return a1.x !== d.x || a1.y !== d.y ? [] : [\n                a1\n            ];\n            if (h) return c(d, e, a1) ? [\n                a1\n            ] : [];\n            if (k) return c(a1, b, d) ? [\n                d\n            ] : [];\n            0 !== g ? (a1.x < b.x ? (g = a1, k = a1.x, h = b, a1 = b.x) : (g = b, k = b.x, h = a1, a1 = a1.x), d.x < e.x ? (b = d, z = d.x, l = e, d = e.x) : (b = e, z = e.x, l = d, d = d.x)) : (a1.y < b.y ? (g = a1, k = a1.y, h = b, a1 = b.y) : (g = b, k = b.y, h = a1, a1 = a1.y), d.y < e.y ? (b = d, z = d.y, l = e, d = e.y) : (b = e, z = e.y, l = d, d = d.y));\n            return k <= z ? a1 < z ? [] : a1 === z ? f ? [] : [\n                b\n            ] : a1 <= d ? [\n                b,\n                h\n            ] : [\n                b,\n                l\n            ] : k > d ? [] : k === d ? f ? [] : [\n                g\n            ] : a1 <= d ? [\n                g,\n                h\n            ] : [\n                g,\n                l\n            ];\n        }\n        function e(a1, b, c, d) {\n            var e = b.x - a1.x, f = b.y - a1.y;\n            b = c.x - a1.x;\n            c = c.y - a1.y;\n            var g = d.x - a1.x;\n            d = d.y - a1.y;\n            a1 = e * c - f * b;\n            e = e * d - f * g;\n            return 1E-10 < Math.abs(a1) ? (b = g * c - d * b, 0 < a1 ? 0 <= e && 0 <= b : 0 <= e || 0 <= b) : 0 < e;\n        }\n        var g, f, h, k, l, n = {};\n        h = a1.concat();\n        g = 0;\n        for(f = b.length; g < f; g++)Array.prototype.push.apply(h, b[g]);\n        g = 0;\n        for(f = h.length; g < f; g++)l = h[g].x + \":\" + h[g].y, void 0 !== n[l] && console.warn(\"THREE.Shape: Duplicate point\", l), n[l] = g;\n        g = function(a1, b) {\n            function c(a1, b) {\n                var d = h.length - 1, f = a1 - 1;\n                0 > f && (f = d);\n                var g = a1 + 1;\n                g > d && (g = 0);\n                d = e(h[a1], h[f], h[g], k[b]);\n                if (!d) return !1;\n                d = k.length - 1;\n                f = b - 1;\n                0 > f && (f = d);\n                g = b + 1;\n                g > d && (g = 0);\n                return (d = e(k[b], k[f], k[g], h[a1])) ? !0 : !1;\n            }\n            function f(a1, b) {\n                var c, e;\n                for(c = 0; c < h.length; c++)if (e = c + 1, e %= h.length, e = d(a1, b, h[c], h[e], !0), 0 < e.length) return !0;\n                return !1;\n            }\n            function g(a1, c) {\n                var e, f, h, k;\n                for(e = 0; e < l.length; e++)for(f = b[l[e]], h = 0; h < f.length; h++)if (k = h + 1, k %= f.length, k = d(a1, c, f[h], f[k], !0), 0 < k.length) return !0;\n                return !1;\n            }\n            var h = a1.concat(), k, l = [], n, p, I, z, D, G = [], O, C, F, K = 0;\n            for(n = b.length; K < n; K++)l.push(K);\n            O = 0;\n            for(var L = 2 * l.length; 0 < l.length;){\n                L--;\n                if (0 > L) {\n                    console.log(\"Infinite Loop! Holes left:\" + l.length + \", Probably Hole outside Shape!\");\n                    break;\n                }\n                for(p = O; p < h.length; p++){\n                    I = h[p];\n                    n = -1;\n                    for(K = 0; K < l.length; K++)if (z = l[K], D = I.x + \":\" + I.y + \":\" + z, void 0 === G[D]) {\n                        k = b[z];\n                        for(C = 0; C < k.length; C++)if (z = k[C], c(p, C) && !f(I, z) && !g(I, z)) {\n                            n = C;\n                            l.splice(K, 1);\n                            O = h.slice(0, p + 1);\n                            z = h.slice(p);\n                            C = k.slice(n);\n                            F = k.slice(0, n + 1);\n                            h = O.concat(C).concat(F).concat(z);\n                            O = p;\n                            break;\n                        }\n                        if (0 <= n) break;\n                        G[D] = !0;\n                    }\n                    if (0 <= n) break;\n                }\n            }\n            return h;\n        }(a1, b);\n        var p = THREE.FontUtils.Triangulate(g, !1);\n        g = 0;\n        for(f = p.length; g < f; g++)for(k = p[g], h = 0; 3 > h; h++)l = k[h].x + \":\" + k[h].y, l = n[l], void 0 !== l && (k[h] = l);\n        return p.concat();\n    },\n    isClockWise: function(a1) {\n        return 0 > THREE.FontUtils.Triangulate.area(a1);\n    },\n    b2p0: function(a1, b) {\n        var c = 1 - a1;\n        return c * c * b;\n    },\n    b2p1: function(a1, b) {\n        return 2 * (1 - a1) * a1 * b;\n    },\n    b2p2: function(a1, b) {\n        return a1 * a1 * b;\n    },\n    b2: function(a1, b, c, d) {\n        return this.b2p0(a1, b) + this.b2p1(a1, c) + this.b2p2(a1, d);\n    },\n    b3p0: function(a1, b) {\n        var c = 1 - a1;\n        return c * c * c * b;\n    },\n    b3p1: function(a1, b) {\n        var c = 1 - a1;\n        return 3 * c * c * a1 * b;\n    },\n    b3p2: function(a1, b) {\n        return 3 * (1 - a1) * a1 * a1 * b;\n    },\n    b3p3: function(a1, b) {\n        return a1 * a1 * a1 * b;\n    },\n    b3: function(a1, b, c, d, e) {\n        return this.b3p0(a1, b) + this.b3p1(a1, c) + this.b3p2(a1, d) + this.b3p3(a1, e);\n    }\n};\nTHREE.LineCurve = function(a1, b) {\n    this.v1 = a1;\n    this.v2 = b;\n};\nTHREE.LineCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\nTHREE.LineCurve.prototype.getPoint = function(a1) {\n    var b = this.v2.clone().sub(this.v1);\n    b.multiplyScalar(a1).add(this.v1);\n    return b;\n};\nTHREE.LineCurve.prototype.getPointAt = function(a1) {\n    return this.getPoint(a1);\n};\nTHREE.LineCurve.prototype.getTangent = function(a1) {\n    return this.v2.clone().sub(this.v1).normalize();\n};\nTHREE.QuadraticBezierCurve = function(a1, b, c) {\n    this.v0 = a1;\n    this.v1 = b;\n    this.v2 = c;\n};\nTHREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\nTHREE.QuadraticBezierCurve.prototype.getPoint = function(a1) {\n    var b = new THREE.Vector2;\n    b.x = THREE.Shape.Utils.b2(a1, this.v0.x, this.v1.x, this.v2.x);\n    b.y = THREE.Shape.Utils.b2(a1, this.v0.y, this.v1.y, this.v2.y);\n    return b;\n};\nTHREE.QuadraticBezierCurve.prototype.getTangent = function(a1) {\n    var b = new THREE.Vector2;\n    b.x = THREE.Curve.Utils.tangentQuadraticBezier(a1, this.v0.x, this.v1.x, this.v2.x);\n    b.y = THREE.Curve.Utils.tangentQuadraticBezier(a1, this.v0.y, this.v1.y, this.v2.y);\n    return b.normalize();\n};\nTHREE.CubicBezierCurve = function(a1, b, c, d) {\n    this.v0 = a1;\n    this.v1 = b;\n    this.v2 = c;\n    this.v3 = d;\n};\nTHREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\nTHREE.CubicBezierCurve.prototype.getPoint = function(a1) {\n    var b;\n    b = THREE.Shape.Utils.b3(a1, this.v0.x, this.v1.x, this.v2.x, this.v3.x);\n    a1 = THREE.Shape.Utils.b3(a1, this.v0.y, this.v1.y, this.v2.y, this.v3.y);\n    return new THREE.Vector2(b, a1);\n};\nTHREE.CubicBezierCurve.prototype.getTangent = function(a1) {\n    var b;\n    b = THREE.Curve.Utils.tangentCubicBezier(a1, this.v0.x, this.v1.x, this.v2.x, this.v3.x);\n    a1 = THREE.Curve.Utils.tangentCubicBezier(a1, this.v0.y, this.v1.y, this.v2.y, this.v3.y);\n    b = new THREE.Vector2(b, a1);\n    b.normalize();\n    return b;\n};\nTHREE.SplineCurve = function(a1) {\n    this.points = void 0 == a1 ? [] : a1;\n};\nTHREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\nTHREE.SplineCurve.prototype.getPoint = function(a1) {\n    var b = this.points;\n    a1 *= b.length - 1;\n    var c = Math.floor(a1);\n    a1 -= c;\n    var d = b[0 === c ? c : c - 1], e = b[c], g = b[c > b.length - 2 ? b.length - 1 : c + 1], b = b[c > b.length - 3 ? b.length - 1 : c + 2], c = new THREE.Vector2;\n    c.x = THREE.Curve.Utils.interpolate(d.x, e.x, g.x, b.x, a1);\n    c.y = THREE.Curve.Utils.interpolate(d.y, e.y, g.y, b.y, a1);\n    return c;\n};\nTHREE.EllipseCurve = function(a1, b, c, d, e, g, f, h) {\n    this.aX = a1;\n    this.aY = b;\n    this.xRadius = c;\n    this.yRadius = d;\n    this.aStartAngle = e;\n    this.aEndAngle = g;\n    this.aClockwise = f;\n    this.aRotation = h || 0;\n};\nTHREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype);\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\nTHREE.EllipseCurve.prototype.getPoint = function(a1) {\n    var b = this.aEndAngle - this.aStartAngle;\n    0 > b && (b += 2 * Math.PI);\n    b > 2 * Math.PI && (b -= 2 * Math.PI);\n    b = !0 === this.aClockwise ? this.aEndAngle + (1 - a1) * (2 * Math.PI - b) : this.aStartAngle + a1 * b;\n    a1 = this.aX + this.xRadius * Math.cos(b);\n    var c = this.aY + this.yRadius * Math.sin(b);\n    if (0 !== this.aRotation) {\n        var b = Math.cos(this.aRotation), d = Math.sin(this.aRotation), e = a1;\n        a1 = (e - this.aX) * b - (c - this.aY) * d + this.aX;\n        c = (e - this.aX) * d + (c - this.aY) * b + this.aY;\n    }\n    return new THREE.Vector2(a1, c);\n};\nTHREE.ArcCurve = function(a1, b, c, d, e, g) {\n    THREE.EllipseCurve.call(this, a1, b, c, c, d, e, g);\n};\nTHREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype);\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\nTHREE.LineCurve3 = THREE.Curve.create(function(a1, b) {\n    this.v1 = a1;\n    this.v2 = b;\n}, function(a1) {\n    var b = new THREE.Vector3;\n    b.subVectors(this.v2, this.v1);\n    b.multiplyScalar(a1);\n    b.add(this.v1);\n    return b;\n});\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(function(a1, b, c) {\n    this.v0 = a1;\n    this.v1 = b;\n    this.v2 = c;\n}, function(a1) {\n    var b = new THREE.Vector3;\n    b.x = THREE.Shape.Utils.b2(a1, this.v0.x, this.v1.x, this.v2.x);\n    b.y = THREE.Shape.Utils.b2(a1, this.v0.y, this.v1.y, this.v2.y);\n    b.z = THREE.Shape.Utils.b2(a1, this.v0.z, this.v1.z, this.v2.z);\n    return b;\n});\nTHREE.CubicBezierCurve3 = THREE.Curve.create(function(a1, b, c, d) {\n    this.v0 = a1;\n    this.v1 = b;\n    this.v2 = c;\n    this.v3 = d;\n}, function(a1) {\n    var b = new THREE.Vector3;\n    b.x = THREE.Shape.Utils.b3(a1, this.v0.x, this.v1.x, this.v2.x, this.v3.x);\n    b.y = THREE.Shape.Utils.b3(a1, this.v0.y, this.v1.y, this.v2.y, this.v3.y);\n    b.z = THREE.Shape.Utils.b3(a1, this.v0.z, this.v1.z, this.v2.z, this.v3.z);\n    return b;\n});\nTHREE.SplineCurve3 = THREE.Curve.create(function(a1) {\n    console.warn(\"THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3\");\n    this.points = void 0 == a1 ? [] : a1;\n}, function(a1) {\n    var b = this.points;\n    a1 *= b.length - 1;\n    var c = Math.floor(a1);\n    a1 -= c;\n    var d = b[0 == c ? c : c - 1], e = b[c], g = b[c > b.length - 2 ? b.length - 1 : c + 1], b = b[c > b.length - 3 ? b.length - 1 : c + 2], c = new THREE.Vector3;\n    c.x = THREE.Curve.Utils.interpolate(d.x, e.x, g.x, b.x, a1);\n    c.y = THREE.Curve.Utils.interpolate(d.y, e.y, g.y, b.y, a1);\n    c.z = THREE.Curve.Utils.interpolate(d.z, e.z, g.z, b.z, a1);\n    return c;\n});\nTHREE.CatmullRomCurve3 = function() {\n    function a1() {}\n    var b = new THREE.Vector3, c = new a1, d = new a1, e = new a1;\n    a1.prototype.init = function(a1, b, c, d) {\n        this.c0 = a1;\n        this.c1 = c;\n        this.c2 = -3 * a1 + 3 * b - 2 * c - d;\n        this.c3 = 2 * a1 - 2 * b + c + d;\n    };\n    a1.prototype.initNonuniformCatmullRom = function(a1, b, c, d, e, n, p) {\n        a1 = ((b - a1) / e - (c - a1) / (e + n) + (c - b) / n) * n;\n        d = ((c - b) / n - (d - b) / (n + p) + (d - c) / p) * n;\n        this.init(b, c, a1, d);\n    };\n    a1.prototype.initCatmullRom = function(a1, b, c, d, e) {\n        this.init(b, c, e * (c - a1), e * (d - b));\n    };\n    a1.prototype.calc = function(a1) {\n        var b = a1 * a1;\n        return this.c0 + this.c1 * a1 + this.c2 * b + this.c3 * b * a1;\n    };\n    return THREE.Curve.create(function(a1) {\n        this.points = a1 || [];\n    }, function(a1) {\n        var f = this.points, h, k;\n        k = f.length;\n        2 > k && console.log(\"duh, you need at least 2 points\");\n        a1 *= k - 1;\n        h = Math.floor(a1);\n        a1 -= h;\n        0 === a1 && h === k - 1 && (h = k - 2, a1 = 1);\n        var l, n, p;\n        0 === h ? (b.subVectors(f[0], f[1]).add(f[0]), l = b) : l = f[h - 1];\n        n = f[h];\n        p = f[h + 1];\n        h + 2 < k ? f = f[h + 2] : (b.subVectors(f[k - 1], f[k - 2]).add(f[k - 2]), f = b);\n        if (void 0 === this.type || \"centripetal\" === this.type || \"chordal\" === this.type) {\n            var m = \"chordal\" === this.type ? .5 : .25;\n            k = Math.pow(l.distanceToSquared(n), m);\n            h = Math.pow(n.distanceToSquared(p), m);\n            m = Math.pow(p.distanceToSquared(f), m);\n            1E-4 > h && (h = 1);\n            1E-4 > k && (k = h);\n            1E-4 > m && (m = h);\n            c.initNonuniformCatmullRom(l.x, n.x, p.x, f.x, k, h, m);\n            d.initNonuniformCatmullRom(l.y, n.y, p.y, f.y, k, h, m);\n            e.initNonuniformCatmullRom(l.z, n.z, p.z, f.z, k, h, m);\n        } else \"catmullrom\" === this.type && (k = void 0 !== this.tension ? this.tension : .5, c.initCatmullRom(l.x, n.x, p.x, f.x, k), d.initCatmullRom(l.y, n.y, p.y, f.y, k), e.initCatmullRom(l.z, n.z, p.z, f.z, k));\n        return new THREE.Vector3(c.calc(a1), d.calc(a1), e.calc(a1));\n    });\n}();\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(function(a1) {\n    this.points = void 0 == a1 ? [] : a1;\n}, function(a1) {\n    var b = this.points;\n    a1 *= b.length - 0;\n    var c = Math.floor(a1);\n    a1 -= c;\n    var c = c + (0 < c ? 0 : (Math.floor(Math.abs(c) / b.length) + 1) * b.length), d = b[(c - 1) % b.length], e = b[c % b.length], g = b[(c + 1) % b.length], b = b[(c + 2) % b.length], c = new THREE.Vector3;\n    c.x = THREE.Curve.Utils.interpolate(d.x, e.x, g.x, b.x, a1);\n    c.y = THREE.Curve.Utils.interpolate(d.y, e.y, g.y, b.y, a1);\n    c.z = THREE.Curve.Utils.interpolate(d.z, e.z, g.z, b.z, a1);\n    return c;\n});\nTHREE.AnimationHandler = {\n    LINEAR: 0,\n    CATMULLROM: 1,\n    CATMULLROM_FORWARD: 2,\n    add: function() {\n        console.warn(\"THREE.AnimationHandler.add() has been deprecated.\");\n    },\n    get: function() {\n        console.warn(\"THREE.AnimationHandler.get() has been deprecated.\");\n    },\n    remove: function() {\n        console.warn(\"THREE.AnimationHandler.remove() has been deprecated.\");\n    },\n    animations: [],\n    init: function(a1) {\n        if (!0 === a1.initialized) return a1;\n        for(var b = 0; b < a1.hierarchy.length; b++){\n            for(var c = 0; c < a1.hierarchy[b].keys.length; c++)if (0 > a1.hierarchy[b].keys[c].time && (a1.hierarchy[b].keys[c].time = 0), void 0 !== a1.hierarchy[b].keys[c].rot && !(a1.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)) {\n                var d = a1.hierarchy[b].keys[c].rot;\n                a1.hierarchy[b].keys[c].rot = (new THREE.Quaternion).fromArray(d);\n            }\n            if (a1.hierarchy[b].keys.length && void 0 !== a1.hierarchy[b].keys[0].morphTargets) {\n                d = {};\n                for(c = 0; c < a1.hierarchy[b].keys.length; c++)for(var e = 0; e < a1.hierarchy[b].keys[c].morphTargets.length; e++){\n                    var g = a1.hierarchy[b].keys[c].morphTargets[e];\n                    d[g] = -1;\n                }\n                a1.hierarchy[b].usedMorphTargets = d;\n                for(c = 0; c < a1.hierarchy[b].keys.length; c++){\n                    var f = {};\n                    for(g in d){\n                        for(e = 0; e < a1.hierarchy[b].keys[c].morphTargets.length; e++)if (a1.hierarchy[b].keys[c].morphTargets[e] === g) {\n                            f[g] = a1.hierarchy[b].keys[c].morphTargetsInfluences[e];\n                            break;\n                        }\n                        e === a1.hierarchy[b].keys[c].morphTargets.length && (f[g] = 0);\n                    }\n                    a1.hierarchy[b].keys[c].morphTargetsInfluences = f;\n                }\n            }\n            for(c = 1; c < a1.hierarchy[b].keys.length; c++)a1.hierarchy[b].keys[c].time === a1.hierarchy[b].keys[c - 1].time && (a1.hierarchy[b].keys.splice(c, 1), c--);\n            for(c = 0; c < a1.hierarchy[b].keys.length; c++)a1.hierarchy[b].keys[c].index = c;\n        }\n        a1.initialized = !0;\n        return a1;\n    },\n    parse: function(a1) {\n        var b = function(a1, c) {\n            c.push(a1);\n            for(var d = 0; d < a1.children.length; d++)b(a1.children[d], c);\n        }, c = [];\n        if (a1 instanceof THREE.SkinnedMesh) for(var d = 0; d < a1.skeleton.bones.length; d++)c.push(a1.skeleton.bones[d]);\n        else b(a1, c);\n        return c;\n    },\n    play: function(a1) {\n        -1 === this.animations.indexOf(a1) && this.animations.push(a1);\n    },\n    stop: function(a1) {\n        a1 = this.animations.indexOf(a1);\n        -1 !== a1 && this.animations.splice(a1, 1);\n    },\n    update: function(a1) {\n        for(var b = 0; b < this.animations.length; b++)this.animations[b].resetBlendWeights();\n        for(b = 0; b < this.animations.length; b++)this.animations[b].update(a1);\n    }\n};\nTHREE.Animation = function(a1, b) {\n    this.root = a1;\n    this.data = THREE.AnimationHandler.init(b);\n    this.hierarchy = THREE.AnimationHandler.parse(a1);\n    this.currentTime = 0;\n    this.timeScale = 1;\n    this.isPlaying = !1;\n    this.loop = !0;\n    this.weight = 0;\n    this.interpolationType = THREE.AnimationHandler.LINEAR;\n};\nTHREE.Animation.prototype = {\n    constructor: THREE.Animation,\n    keyTypes: [\n        \"pos\",\n        \"rot\",\n        \"scl\"\n    ],\n    play: function(a1, b) {\n        this.currentTime = void 0 !== a1 ? a1 : 0;\n        this.weight = void 0 !== b ? b : 1;\n        this.isPlaying = !0;\n        this.reset();\n        THREE.AnimationHandler.play(this);\n    },\n    stop: function() {\n        this.isPlaying = !1;\n        THREE.AnimationHandler.stop(this);\n    },\n    reset: function() {\n        for(var a1 = 0, b = this.hierarchy.length; a1 < b; a1++){\n            var c = this.hierarchy[a1];\n            void 0 === c.animationCache && (c.animationCache = {\n                animations: {},\n                blending: {\n                    positionWeight: 0,\n                    quaternionWeight: 0,\n                    scaleWeight: 0\n                }\n            });\n            var d = this.data.name, e = c.animationCache.animations, g = e[d];\n            void 0 === g && (g = {\n                prevKey: {\n                    pos: 0,\n                    rot: 0,\n                    scl: 0\n                },\n                nextKey: {\n                    pos: 0,\n                    rot: 0,\n                    scl: 0\n                },\n                originalMatrix: c.matrix\n            }, e[d] = g);\n            for(c = 0; 3 > c; c++){\n                for(var d = this.keyTypes[c], e = this.data.hierarchy[a1].keys[0], f = this.getNextKeyWith(d, a1, 1); f.time < this.currentTime && f.index > e.index;)e = f, f = this.getNextKeyWith(d, a1, f.index + 1);\n                g.prevKey[d] = e;\n                g.nextKey[d] = f;\n            }\n        }\n    },\n    resetBlendWeights: function() {\n        for(var a1 = 0, b = this.hierarchy.length; a1 < b; a1++){\n            var c = this.hierarchy[a1].animationCache;\n            void 0 !== c && (c = c.blending, c.positionWeight = 0, c.quaternionWeight = 0, c.scaleWeight = 0);\n        }\n    },\n    update: function() {\n        var a1 = [], b = new THREE.Vector3, c = new THREE.Vector3, d = new THREE.Quaternion, e = function(a1, b) {\n            var c = [], d = [], e, p, m, q, t, r;\n            e = (a1.length - 1) * b;\n            p = Math.floor(e);\n            e -= p;\n            c[0] = 0 === p ? p : p - 1;\n            c[1] = p;\n            c[2] = p > a1.length - 2 ? p : p + 1;\n            c[3] = p > a1.length - 3 ? p : p + 2;\n            p = a1[c[0]];\n            q = a1[c[1]];\n            t = a1[c[2]];\n            r = a1[c[3]];\n            c = e * e;\n            m = e * c;\n            d[0] = g(p[0], q[0], t[0], r[0], e, c, m);\n            d[1] = g(p[1], q[1], t[1], r[1], e, c, m);\n            d[2] = g(p[2], q[2], t[2], r[2], e, c, m);\n            return d;\n        }, g = function(a1, b, c, d, e, g, m) {\n            a1 = .5 * (c - a1);\n            d = .5 * (d - b);\n            return (2 * (b - c) + a1 + d) * m + (-3 * (b - c) - 2 * a1 - d) * g + a1 * e + b;\n        };\n        return function(f) {\n            if (!1 !== this.isPlaying && (this.currentTime += f * this.timeScale, 0 !== this.weight)) {\n                f = this.data.length;\n                if (this.currentTime > f || 0 > this.currentTime) this.loop ? (this.currentTime %= f, 0 > this.currentTime && (this.currentTime += f), this.reset()) : this.stop();\n                f = 0;\n                for(var g = this.hierarchy.length; f < g; f++)for(var k = this.hierarchy[f], l = k.animationCache.animations[this.data.name], n = k.animationCache.blending, p = 0; 3 > p; p++){\n                    var m = this.keyTypes[p], q = l.prevKey[m], t = l.nextKey[m];\n                    if (0 < this.timeScale && t.time <= this.currentTime || 0 > this.timeScale && q.time >= this.currentTime) {\n                        q = this.data.hierarchy[f].keys[0];\n                        for(t = this.getNextKeyWith(m, f, 1); t.time < this.currentTime && t.index > q.index;)q = t, t = this.getNextKeyWith(m, f, t.index + 1);\n                        l.prevKey[m] = q;\n                        l.nextKey[m] = t;\n                    }\n                    var r = (this.currentTime - q.time) / (t.time - q.time), u = q[m], w = t[m];\n                    0 > r && (r = 0);\n                    1 < r && (r = 1);\n                    if (\"pos\" === m) {\n                        if (this.interpolationType === THREE.AnimationHandler.LINEAR) c.x = u[0] + (w[0] - u[0]) * r, c.y = u[1] + (w[1] - u[1]) * r, c.z = u[2] + (w[2] - u[2]) * r, q = this.weight / (this.weight + n.positionWeight), k.position.lerp(c, q), n.positionWeight += this.weight;\n                        else if (this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD) a1[0] = this.getPrevKeyWith(\"pos\", f, q.index - 1).pos, a1[1] = u, a1[2] = w, a1[3] = this.getNextKeyWith(\"pos\", f, t.index + 1).pos, r = .33 * r + .33, t = e(a1, r), q = this.weight / (this.weight + n.positionWeight), n.positionWeight += this.weight, m = k.position, m.x += (t[0] - m.x) * q, m.y += (t[1] - m.y) * q, m.z += (t[2] - m.z) * q, this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD && (r = e(a1, 1.01 * r), b.set(r[0], r[1], r[2]), b.sub(m), b.y = 0, b.normalize(), r = Math.atan2(b.x, b.z), k.rotation.set(0, r, 0));\n                    } else \"rot\" === m ? (THREE.Quaternion.slerp(u, w, d, r), 0 === n.quaternionWeight ? (k.quaternion.copy(d), n.quaternionWeight = this.weight) : (q = this.weight / (this.weight + n.quaternionWeight), THREE.Quaternion.slerp(k.quaternion, d, k.quaternion, q), n.quaternionWeight += this.weight)) : \"scl\" === m && (c.x = u[0] + (w[0] - u[0]) * r, c.y = u[1] + (w[1] - u[1]) * r, c.z = u[2] + (w[2] - u[2]) * r, q = this.weight / (this.weight + n.scaleWeight), k.scale.lerp(c, q), n.scaleWeight += this.weight);\n                }\n                return !0;\n            }\n        };\n    }(),\n    getNextKeyWith: function(a1, b, c) {\n        var d = this.data.hierarchy[b].keys;\n        for(c = this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ? c < d.length - 1 ? c : d.length - 1 : c % d.length; c < d.length; c++)if (void 0 !== d[c][a1]) return d[c];\n        return this.data.hierarchy[b].keys[0];\n    },\n    getPrevKeyWith: function(a1, b, c) {\n        var d = this.data.hierarchy[b].keys;\n        for(c = this.interpolationType === THREE.AnimationHandler.CATMULLROM || this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ? 0 < c ? c : 0 : 0 <= c ? c : c + d.length; 0 <= c; c--)if (void 0 !== d[c][a1]) return d[c];\n        return this.data.hierarchy[b].keys[d.length - 1];\n    }\n};\nTHREE.KeyFrameAnimation = function(a1) {\n    this.root = a1.node;\n    this.data = THREE.AnimationHandler.init(a1);\n    this.hierarchy = THREE.AnimationHandler.parse(this.root);\n    this.currentTime = 0;\n    this.timeScale = .001;\n    this.isPlaying = !1;\n    this.loop = this.isPaused = !0;\n    a1 = 0;\n    for(var b = this.hierarchy.length; a1 < b; a1++){\n        var c = this.data.hierarchy[a1].sids, d = this.hierarchy[a1];\n        if (this.data.hierarchy[a1].keys.length && c) {\n            for(var e = 0; e < c.length; e++){\n                var g = c[e], f = this.getNextKeyWith(g, a1, 0);\n                f && f.apply(g);\n            }\n            d.matrixAutoUpdate = !1;\n            this.data.hierarchy[a1].node.updateMatrix();\n            d.matrixWorldNeedsUpdate = !0;\n        }\n    }\n};\nTHREE.KeyFrameAnimation.prototype = {\n    constructor: THREE.KeyFrameAnimation,\n    play: function(a1) {\n        this.currentTime = void 0 !== a1 ? a1 : 0;\n        if (!1 === this.isPlaying) {\n            this.isPlaying = !0;\n            var b = this.hierarchy.length, c, d;\n            for(a1 = 0; a1 < b; a1++)c = this.hierarchy[a1], d = this.data.hierarchy[a1], void 0 === d.animationCache && (d.animationCache = {}, d.animationCache.prevKey = null, d.animationCache.nextKey = null, d.animationCache.originalMatrix = c.matrix), c = this.data.hierarchy[a1].keys, c.length && (d.animationCache.prevKey = c[0], d.animationCache.nextKey = c[1], this.startTime = Math.min(c[0].time, this.startTime), this.endTime = Math.max(c[c.length - 1].time, this.endTime));\n            this.update(0);\n        }\n        this.isPaused = !1;\n        THREE.AnimationHandler.play(this);\n    },\n    stop: function() {\n        this.isPaused = this.isPlaying = !1;\n        THREE.AnimationHandler.stop(this);\n        for(var a1 = 0; a1 < this.data.hierarchy.length; a1++){\n            var b = this.hierarchy[a1], c = this.data.hierarchy[a1];\n            if (void 0 !== c.animationCache) {\n                var d = c.animationCache.originalMatrix;\n                d.copy(b.matrix);\n                b.matrix = d;\n                delete c.animationCache;\n            }\n        }\n    },\n    update: function(a1) {\n        if (!1 !== this.isPlaying) {\n            this.currentTime += a1 * this.timeScale;\n            a1 = this.data.length;\n            !0 === this.loop && this.currentTime > a1 && (this.currentTime %= a1);\n            this.currentTime = Math.min(this.currentTime, a1);\n            a1 = 0;\n            for(var b = this.hierarchy.length; a1 < b; a1++){\n                var c = this.hierarchy[a1], d = this.data.hierarchy[a1], e = d.keys, d = d.animationCache;\n                if (e.length) {\n                    var g = d.prevKey, f = d.nextKey;\n                    if (f.time <= this.currentTime) {\n                        for(; f.time < this.currentTime && f.index > g.index;)g = f, f = e[g.index + 1];\n                        d.prevKey = g;\n                        d.nextKey = f;\n                    }\n                    f.time >= this.currentTime ? g.interpolate(f, this.currentTime) : g.interpolate(f, f.time);\n                    this.data.hierarchy[a1].node.updateMatrix();\n                    c.matrixWorldNeedsUpdate = !0;\n                }\n            }\n        }\n    },\n    getNextKeyWith: function(a1, b, c) {\n        b = this.data.hierarchy[b].keys;\n        for(c %= b.length; c < b.length; c++)if (b[c].hasTarget(a1)) return b[c];\n        return b[0];\n    },\n    getPrevKeyWith: function(a1, b, c) {\n        b = this.data.hierarchy[b].keys;\n        for(c = 0 <= c ? c : c + b.length; 0 <= c; c--)if (b[c].hasTarget(a1)) return b[c];\n        return b[b.length - 1];\n    }\n};\nTHREE.MorphAnimation = function(a1) {\n    this.mesh = a1;\n    this.frames = a1.morphTargetInfluences.length;\n    this.currentTime = 0;\n    this.duration = 1E3;\n    this.loop = !0;\n    this.currentFrame = this.lastFrame = 0;\n    this.isPlaying = !1;\n};\nTHREE.MorphAnimation.prototype = {\n    constructor: THREE.MorphAnimation,\n    play: function() {\n        this.isPlaying = !0;\n    },\n    pause: function() {\n        this.isPlaying = !1;\n    },\n    update: function(a1) {\n        if (!1 !== this.isPlaying) {\n            this.currentTime += a1;\n            !0 === this.loop && this.currentTime > this.duration && (this.currentTime %= this.duration);\n            this.currentTime = Math.min(this.currentTime, this.duration);\n            var b = this.duration / this.frames;\n            a1 = Math.floor(this.currentTime / b);\n            var c = this.mesh.morphTargetInfluences;\n            a1 !== this.currentFrame && (c[this.lastFrame] = 0, c[this.currentFrame] = 1, c[a1] = 0, this.lastFrame = this.currentFrame, this.currentFrame = a1);\n            b = this.currentTime % b / b;\n            c[a1] = b;\n            c[this.lastFrame] = 1 - b;\n        }\n    }\n};\nTHREE.BoxGeometry = function(a1, b, c, d, e, g) {\n    function f(a1, b, c, d, e, f, g, r) {\n        var u, w = h.widthSegments, v = h.heightSegments, B = e / 2, x = f / 2, H = h.vertices.length;\n        if (\"x\" === a1 && \"y\" === b || \"y\" === a1 && \"x\" === b) u = \"z\";\n        else if (\"x\" === a1 && \"z\" === b || \"z\" === a1 && \"x\" === b) u = \"y\", v = h.depthSegments;\n        else if (\"z\" === a1 && \"y\" === b || \"y\" === a1 && \"z\" === b) u = \"x\", w = h.depthSegments;\n        var I = w + 1, z = v + 1, D = e / w, G = f / v, O = new THREE.Vector3;\n        O[u] = 0 < g ? 1 : -1;\n        for(e = 0; e < z; e++)for(f = 0; f < I; f++){\n            var C = new THREE.Vector3;\n            C[a1] = (f * D - B) * c;\n            C[b] = (e * G - x) * d;\n            C[u] = g;\n            h.vertices.push(C);\n        }\n        for(e = 0; e < v; e++)for(f = 0; f < w; f++)x = f + I * e, a1 = f + I * (e + 1), b = f + 1 + I * (e + 1), c = f + 1 + I * e, d = new THREE.Vector2(f / w, 1 - e / v), g = new THREE.Vector2(f / w, 1 - (e + 1) / v), u = new THREE.Vector2((f + 1) / w, 1 - (e + 1) / v), B = new THREE.Vector2((f + 1) / w, 1 - e / v), x = new THREE.Face3(x + H, a1 + H, c + H), x.normal.copy(O), x.vertexNormals.push(O.clone(), O.clone(), O.clone()), x.materialIndex = r, h.faces.push(x), h.faceVertexUvs[0].push([\n            d,\n            g,\n            B\n        ]), x = new THREE.Face3(a1 + H, b + H, c + H), x.normal.copy(O), x.vertexNormals.push(O.clone(), O.clone(), O.clone()), x.materialIndex = r, h.faces.push(x), h.faceVertexUvs[0].push([\n            g.clone(),\n            u,\n            B.clone()\n        ]);\n    }\n    THREE.Geometry.call(this);\n    this.type = \"BoxGeometry\";\n    this.parameters = {\n        width: a1,\n        height: b,\n        depth: c,\n        widthSegments: d,\n        heightSegments: e,\n        depthSegments: g\n    };\n    this.widthSegments = d || 1;\n    this.heightSegments = e || 1;\n    this.depthSegments = g || 1;\n    var h = this;\n    d = a1 / 2;\n    e = b / 2;\n    g = c / 2;\n    f(\"z\", \"y\", -1, -1, c, b, d, 0);\n    f(\"z\", \"y\", 1, -1, c, b, -d, 1);\n    f(\"x\", \"z\", 1, 1, a1, c, e, 2);\n    f(\"x\", \"z\", 1, -1, a1, c, -e, 3);\n    f(\"x\", \"y\", 1, -1, a1, b, g, 4);\n    f(\"x\", \"y\", -1, -1, a1, b, -g, 5);\n    this.mergeVertices();\n};\nTHREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\nTHREE.BoxGeometry.prototype.clone = function() {\n    return new THREE.BoxGeometry(this.parameters.width, this.parameters.height, this.parameters.depth, this.parameters.widthSegments, this.parameters.heightSegments, this.parameters.depthSegments);\n};\nTHREE.CubeGeometry = THREE.BoxGeometry;\nTHREE.CircleGeometry = function(a1, b, c, d) {\n    THREE.Geometry.call(this);\n    this.type = \"CircleGeometry\";\n    this.parameters = {\n        radius: a1,\n        segments: b,\n        thetaStart: c,\n        thetaLength: d\n    };\n    a1 = a1 || 50;\n    b = void 0 !== b ? Math.max(3, b) : 8;\n    c = void 0 !== c ? c : 0;\n    d = void 0 !== d ? d : 2 * Math.PI;\n    var e, g = [];\n    e = new THREE.Vector3;\n    var f = new THREE.Vector2(.5, .5);\n    this.vertices.push(e);\n    g.push(f);\n    for(e = 0; e <= b; e++){\n        var h = new THREE.Vector3, k = c + e / b * d;\n        h.x = a1 * Math.cos(k);\n        h.y = a1 * Math.sin(k);\n        this.vertices.push(h);\n        g.push(new THREE.Vector2((h.x / a1 + 1) / 2, (h.y / a1 + 1) / 2));\n    }\n    c = new THREE.Vector3(0, 0, 1);\n    for(e = 1; e <= b; e++)this.faces.push(new THREE.Face3(e, e + 1, 0, [\n        c.clone(),\n        c.clone(),\n        c.clone()\n    ])), this.faceVertexUvs[0].push([\n        g[e].clone(),\n        g[e + 1].clone(),\n        f.clone()\n    ]);\n    this.computeFaceNormals();\n    this.boundingSphere = new THREE.Sphere(new THREE.Vector3, a1);\n};\nTHREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\nTHREE.CircleGeometry.prototype.clone = function() {\n    return new THREE.CircleGeometry(this.parameters.radius, this.parameters.segments, this.parameters.thetaStart, this.parameters.thetaLength);\n};\nTHREE.CircleBufferGeometry = function(a1, b, c, d) {\n    THREE.BufferGeometry.call(this);\n    this.type = \"CircleBufferGeometry\";\n    this.parameters = {\n        radius: a1,\n        segments: b,\n        thetaStart: c,\n        thetaLength: d\n    };\n    a1 = a1 || 50;\n    b = void 0 !== b ? Math.max(3, b) : 8;\n    c = void 0 !== c ? c : 0;\n    d = void 0 !== d ? d : 2 * Math.PI;\n    var e = b + 2, g = new Float32Array(3 * e), f = new Float32Array(3 * e), e = new Float32Array(2 * e);\n    f[3] = 1;\n    e[0] = .5;\n    e[1] = .5;\n    for(var h = 0, k = 3, l = 2; h <= b; h++, k += 3, l += 2){\n        var n = c + h / b * d;\n        g[k] = a1 * Math.cos(n);\n        g[k + 1] = a1 * Math.sin(n);\n        f[k + 2] = 1;\n        e[l] = (g[k] / a1 + 1) / 2;\n        e[l + 1] = (g[k + 1] / a1 + 1) / 2;\n    }\n    c = [];\n    for(k = 1; k <= b; k++)c.push(k), c.push(k + 1), c.push(0);\n    this.setIndex(new THREE.BufferAttribute(new Uint16Array(c), 1));\n    this.addAttribute(\"position\", new THREE.BufferAttribute(g, 3));\n    this.addAttribute(\"normal\", new THREE.BufferAttribute(f, 3));\n    this.addAttribute(\"uv\", new THREE.BufferAttribute(e, 2));\n    this.boundingSphere = new THREE.Sphere(new THREE.Vector3, a1);\n};\nTHREE.CircleBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\nTHREE.CircleBufferGeometry.prototype.clone = function() {\n    var a1 = new THREE.CircleBufferGeometry(this.parameters.radius, this.parameters.segments, this.parameters.thetaStart, this.parameters.thetaLength);\n    a1.copy(this);\n    return a1;\n};\nTHREE.CylinderGeometry = function(a1, b, c, d, e, g, f, h) {\n    THREE.Geometry.call(this);\n    this.type = \"CylinderGeometry\";\n    this.parameters = {\n        radiusTop: a1,\n        radiusBottom: b,\n        height: c,\n        radialSegments: d,\n        heightSegments: e,\n        openEnded: g,\n        thetaStart: f,\n        thetaLength: h\n    };\n    a1 = void 0 !== a1 ? a1 : 20;\n    b = void 0 !== b ? b : 20;\n    c = void 0 !== c ? c : 100;\n    d = d || 8;\n    e = e || 1;\n    g = void 0 !== g ? g : !1;\n    f = void 0 !== f ? f : 0;\n    h = void 0 !== h ? h : 2 * Math.PI;\n    var k = c / 2, l, n, p = [], m = [];\n    for(n = 0; n <= e; n++){\n        var q = [], t = [], r = n / e, u = r * (b - a1) + a1;\n        for(l = 0; l <= d; l++){\n            var w = l / d, v = new THREE.Vector3;\n            v.x = u * Math.sin(w * h + f);\n            v.y = -r * c + k;\n            v.z = u * Math.cos(w * h + f);\n            this.vertices.push(v);\n            q.push(this.vertices.length - 1);\n            t.push(new THREE.Vector2(w, 1 - r));\n        }\n        p.push(q);\n        m.push(t);\n    }\n    c = (b - a1) / c;\n    for(l = 0; l < d; l++)for(0 !== a1 ? (f = this.vertices[p[0][l]].clone(), h = this.vertices[p[0][l + 1]].clone()) : (f = this.vertices[p[1][l]].clone(), h = this.vertices[p[1][l + 1]].clone()), f.setY(Math.sqrt(f.x * f.x + f.z * f.z) * c).normalize(), h.setY(Math.sqrt(h.x * h.x + h.z * h.z) * c).normalize(), n = 0; n < e; n++){\n        var q = p[n][l], t = p[n + 1][l], r = p[n + 1][l + 1], u = p[n][l + 1], w = f.clone(), v = f.clone(), B = h.clone(), x = h.clone(), H = m[n][l].clone(), I = m[n + 1][l].clone(), z = m[n + 1][l + 1].clone(), D = m[n][l + 1].clone();\n        this.faces.push(new THREE.Face3(q, t, u, [\n            w,\n            v,\n            x\n        ]));\n        this.faceVertexUvs[0].push([\n            H,\n            I,\n            D\n        ]);\n        this.faces.push(new THREE.Face3(t, r, u, [\n            v.clone(),\n            B,\n            x.clone()\n        ]));\n        this.faceVertexUvs[0].push([\n            I.clone(),\n            z,\n            D.clone()\n        ]);\n    }\n    if (!1 === g && 0 < a1) for(this.vertices.push(new THREE.Vector3(0, k, 0)), l = 0; l < d; l++)q = p[0][l], t = p[0][l + 1], r = this.vertices.length - 1, w = new THREE.Vector3(0, 1, 0), v = new THREE.Vector3(0, 1, 0), B = new THREE.Vector3(0, 1, 0), H = m[0][l].clone(), I = m[0][l + 1].clone(), z = new THREE.Vector2(I.x, 0), this.faces.push(new THREE.Face3(q, t, r, [\n        w,\n        v,\n        B\n    ], void 0, 1)), this.faceVertexUvs[0].push([\n        H,\n        I,\n        z\n    ]);\n    if (!1 === g && 0 < b) for(this.vertices.push(new THREE.Vector3(0, -k, 0)), l = 0; l < d; l++)q = p[e][l + 1], t = p[e][l], r = this.vertices.length - 1, w = new THREE.Vector3(0, -1, 0), v = new THREE.Vector3(0, -1, 0), B = new THREE.Vector3(0, -1, 0), H = m[e][l + 1].clone(), I = m[e][l].clone(), z = new THREE.Vector2(I.x, 1), this.faces.push(new THREE.Face3(q, t, r, [\n        w,\n        v,\n        B\n    ], void 0, 2)), this.faceVertexUvs[0].push([\n        H,\n        I,\n        z\n    ]);\n    this.computeFaceNormals();\n};\nTHREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\nTHREE.CylinderGeometry.prototype.clone = function() {\n    return new THREE.CylinderGeometry(this.parameters.radiusTop, this.parameters.radiusBottom, this.parameters.height, this.parameters.radialSegments, this.parameters.heightSegments, this.parameters.openEnded, this.parameters.thetaStart, this.parameters.thetaLength);\n};\nTHREE.EdgesGeometry = function(a1, b) {\n    THREE.BufferGeometry.call(this);\n    var c = Math.cos(THREE.Math.degToRad(void 0 !== b ? b : 1)), d = [\n        0,\n        0\n    ], e = {}, g = function(a1, b) {\n        return a1 - b;\n    }, f = [\n        \"a\",\n        \"b\",\n        \"c\"\n    ], h;\n    a1 instanceof THREE.BufferGeometry ? (h = new THREE.Geometry, h.fromBufferGeometry(a1)) : h = a1.clone();\n    h.mergeVertices();\n    h.computeFaceNormals();\n    var k = h.vertices;\n    h = h.faces;\n    for(var l = 0, n = h.length; l < n; l++)for(var p = h[l], m = 0; 3 > m; m++){\n        d[0] = p[f[m]];\n        d[1] = p[f[(m + 1) % 3]];\n        d.sort(g);\n        var q = d.toString();\n        void 0 === e[q] ? e[q] = {\n            vert1: d[0],\n            vert2: d[1],\n            face1: l,\n            face2: void 0\n        } : e[q].face2 = l;\n    }\n    d = [];\n    for(q in e)if (g = e[q], void 0 === g.face2 || h[g.face1].normal.dot(h[g.face2].normal) <= c) f = k[g.vert1], d.push(f.x), d.push(f.y), d.push(f.z), f = k[g.vert2], d.push(f.x), d.push(f.y), d.push(f.z);\n    this.addAttribute(\"position\", new THREE.BufferAttribute(new Float32Array(d), 3));\n};\nTHREE.EdgesGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\nTHREE.ExtrudeGeometry = function(a1, b) {\n    \"undefined\" !== typeof a1 && (THREE.Geometry.call(this), this.type = \"ExtrudeGeometry\", a1 = Array.isArray(a1) ? a1 : [\n        a1\n    ], this.addShapeList(a1, b), this.computeFaceNormals());\n};\nTHREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\nTHREE.ExtrudeGeometry.prototype.addShapeList = function(a1, b) {\n    for(var c = a1.length, d = 0; d < c; d++)this.addShape(a1[d], b);\n};\nTHREE.ExtrudeGeometry.prototype.addShape = function(a1, b) {\n    function c(a1, b, c) {\n        b || console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n        return b.clone().multiplyScalar(c).add(a1);\n    }\n    function d(a1, b, c) {\n        var d = 1, d = a1.x - b.x, e = a1.y - b.y, f = c.x - a1.x, g = c.y - a1.y, h = d * d + e * e;\n        if (1E-10 < Math.abs(d * g - e * f)) {\n            var k = Math.sqrt(h), l = Math.sqrt(f * f + g * g), h = b.x - e / k;\n            b = b.y + d / k;\n            f = ((c.x - g / l - h) * g - (c.y + f / l - b) * f) / (d * g - e * f);\n            c = h + d * f - a1.x;\n            a1 = b + e * f - a1.y;\n            d = c * c + a1 * a1;\n            if (2 >= d) return new THREE.Vector2(c, a1);\n            d = Math.sqrt(d / 2);\n        } else a1 = !1, 1E-10 < d ? 1E-10 < f && (a1 = !0) : -0.0000000001 > d ? -0.0000000001 > f && (a1 = !0) : Math.sign(e) === Math.sign(g) && (a1 = !0), a1 ? (c = -e, a1 = d, d = Math.sqrt(h)) : (c = d, a1 = e, d = Math.sqrt(h / 2));\n        return new THREE.Vector2(c / d, a1 / d);\n    }\n    function e(a1, b) {\n        var c, d;\n        for(A = a1.length; 0 <= --A;){\n            c = A;\n            d = A - 1;\n            0 > d && (d = a1.length - 1);\n            for(var e = 0, f = q + 2 * n, e = 0; e < f; e++){\n                var g = U * e, h = U * (e + 1), k = b + c + g, g = b + d + g, l = b + d + h, h = b + c + h, k = k + O, g = g + O, l = l + O, h = h + O;\n                G.faces.push(new THREE.Face3(k, g, h));\n                G.faces.push(new THREE.Face3(g, l, h));\n                k = w.generateSideWallUV(G, k, g, l, h);\n                G.faceVertexUvs[0].push([\n                    k[0],\n                    k[1],\n                    k[3]\n                ]);\n                G.faceVertexUvs[0].push([\n                    k[1],\n                    k[2],\n                    k[3]\n                ]);\n            }\n        }\n    }\n    function g(a1, b, c) {\n        G.vertices.push(new THREE.Vector3(a1, b, c));\n    }\n    function f(a1, b, c) {\n        a1 += O;\n        b += O;\n        c += O;\n        G.faces.push(new THREE.Face3(a1, b, c));\n        a1 = w.generateTopUV(G, a1, b, c);\n        G.faceVertexUvs[0].push(a1);\n    }\n    var h = void 0 !== b.amount ? b.amount : 100, k = void 0 !== b.bevelThickness ? b.bevelThickness : 6, l = void 0 !== b.bevelSize ? b.bevelSize : k - 2, n = void 0 !== b.bevelSegments ? b.bevelSegments : 3, p = void 0 !== b.bevelEnabled ? b.bevelEnabled : !0, m = void 0 !== b.curveSegments ? b.curveSegments : 12, q = void 0 !== b.steps ? b.steps : 1, t = b.extrudePath, r, u = !1, w = void 0 !== b.UVGenerator ? b.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator, v, B, x, H;\n    t && (r = t.getSpacedPoints(q), u = !0, p = !1, v = void 0 !== b.frames ? b.frames : new THREE.TubeGeometry.FrenetFrames(t, q, !1), B = new THREE.Vector3, x = new THREE.Vector3, H = new THREE.Vector3);\n    p || (l = k = n = 0);\n    var I, z, D, G = this, O = this.vertices.length, t = a1.extractPoints(m), m = t.shape, C = t.holes;\n    if (t = !THREE.Shape.Utils.isClockWise(m)) {\n        m = m.reverse();\n        z = 0;\n        for(D = C.length; z < D; z++)I = C[z], THREE.Shape.Utils.isClockWise(I) && (C[z] = I.reverse());\n        t = !1;\n    }\n    var F = THREE.Shape.Utils.triangulateShape(m, C), K = m;\n    z = 0;\n    for(D = C.length; z < D; z++)I = C[z], m = m.concat(I);\n    var L, E, J, y, P, U = m.length, Q, R = F.length, t = [], A = 0;\n    J = K.length;\n    L = J - 1;\n    for(E = A + 1; A < J; A++, L++, E++)L === J && (L = 0), E === J && (E = 0), t[A] = d(K[A], K[L], K[E]);\n    var ia = [], Z, fa = t.concat();\n    z = 0;\n    for(D = C.length; z < D; z++){\n        I = C[z];\n        Z = [];\n        A = 0;\n        J = I.length;\n        L = J - 1;\n        for(E = A + 1; A < J; A++, L++, E++)L === J && (L = 0), E === J && (E = 0), Z[A] = d(I[A], I[L], I[E]);\n        ia.push(Z);\n        fa = fa.concat(Z);\n    }\n    for(L = 0; L < n; L++){\n        J = L / n;\n        y = k * (1 - J);\n        E = l * Math.sin(J * Math.PI / 2);\n        A = 0;\n        for(J = K.length; A < J; A++)P = c(K[A], t[A], E), g(P.x, P.y, -y);\n        z = 0;\n        for(D = C.length; z < D; z++)for(I = C[z], Z = ia[z], A = 0, J = I.length; A < J; A++)P = c(I[A], Z[A], E), g(P.x, P.y, -y);\n    }\n    E = l;\n    for(A = 0; A < U; A++)P = p ? c(m[A], fa[A], E) : m[A], u ? (x.copy(v.normals[0]).multiplyScalar(P.x), B.copy(v.binormals[0]).multiplyScalar(P.y), H.copy(r[0]).add(x).add(B), g(H.x, H.y, H.z)) : g(P.x, P.y, 0);\n    for(J = 1; J <= q; J++)for(A = 0; A < U; A++)P = p ? c(m[A], fa[A], E) : m[A], u ? (x.copy(v.normals[J]).multiplyScalar(P.x), B.copy(v.binormals[J]).multiplyScalar(P.y), H.copy(r[J]).add(x).add(B), g(H.x, H.y, H.z)) : g(P.x, P.y, h / q * J);\n    for(L = n - 1; 0 <= L; L--){\n        J = L / n;\n        y = k * (1 - J);\n        E = l * Math.sin(J * Math.PI / 2);\n        A = 0;\n        for(J = K.length; A < J; A++)P = c(K[A], t[A], E), g(P.x, P.y, h + y);\n        z = 0;\n        for(D = C.length; z < D; z++)for(I = C[z], Z = ia[z], A = 0, J = I.length; A < J; A++)P = c(I[A], Z[A], E), u ? g(P.x, P.y + r[q - 1].y, r[q - 1].x + y) : g(P.x, P.y, h + y);\n    }\n    (function() {\n        if (p) {\n            var a1;\n            a1 = 0 * U;\n            for(A = 0; A < R; A++)Q = F[A], f(Q[2] + a1, Q[1] + a1, Q[0] + a1);\n            a1 = q + 2 * n;\n            a1 *= U;\n            for(A = 0; A < R; A++)Q = F[A], f(Q[0] + a1, Q[1] + a1, Q[2] + a1);\n        } else {\n            for(A = 0; A < R; A++)Q = F[A], f(Q[2], Q[1], Q[0]);\n            for(A = 0; A < R; A++)Q = F[A], f(Q[0] + U * q, Q[1] + U * q, Q[2] + U * q);\n        }\n    })();\n    (function() {\n        var a1 = 0;\n        e(K, a1);\n        a1 += K.length;\n        z = 0;\n        for(D = C.length; z < D; z++)I = C[z], e(I, a1), a1 += I.length;\n    })();\n};\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\n    generateTopUV: function(a1, b, c, d) {\n        a1 = a1.vertices;\n        b = a1[b];\n        c = a1[c];\n        d = a1[d];\n        return [\n            new THREE.Vector2(b.x, b.y),\n            new THREE.Vector2(c.x, c.y),\n            new THREE.Vector2(d.x, d.y)\n        ];\n    },\n    generateSideWallUV: function(a1, b, c, d, e) {\n        a1 = a1.vertices;\n        b = a1[b];\n        c = a1[c];\n        d = a1[d];\n        e = a1[e];\n        return .01 > Math.abs(b.y - c.y) ? [\n            new THREE.Vector2(b.x, 1 - b.z),\n            new THREE.Vector2(c.x, 1 - c.z),\n            new THREE.Vector2(d.x, 1 - d.z),\n            new THREE.Vector2(e.x, 1 - e.z)\n        ] : [\n            new THREE.Vector2(b.y, 1 - b.z),\n            new THREE.Vector2(c.y, 1 - c.z),\n            new THREE.Vector2(d.y, 1 - d.z),\n            new THREE.Vector2(e.y, 1 - e.z)\n        ];\n    }\n};\nTHREE.ShapeGeometry = function(a1, b) {\n    THREE.Geometry.call(this);\n    this.type = \"ShapeGeometry\";\n    !1 === Array.isArray(a1) && (a1 = [\n        a1\n    ]);\n    this.addShapeList(a1, b);\n    this.computeFaceNormals();\n};\nTHREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\nTHREE.ShapeGeometry.prototype.addShapeList = function(a1, b) {\n    for(var c = 0, d = a1.length; c < d; c++)this.addShape(a1[c], b);\n    return this;\n};\nTHREE.ShapeGeometry.prototype.addShape = function(a1, b) {\n    void 0 === b && (b = {});\n    var c = b.material, d = void 0 === b.UVGenerator ? THREE.ExtrudeGeometry.WorldUVGenerator : b.UVGenerator, e, g, f, h = this.vertices.length;\n    e = a1.extractPoints(void 0 !== b.curveSegments ? b.curveSegments : 12);\n    var k = e.shape, l = e.holes;\n    if (!THREE.Shape.Utils.isClockWise(k)) for(k = k.reverse(), e = 0, g = l.length; e < g; e++)f = l[e], THREE.Shape.Utils.isClockWise(f) && (l[e] = f.reverse());\n    var n = THREE.Shape.Utils.triangulateShape(k, l);\n    e = 0;\n    for(g = l.length; e < g; e++)f = l[e], k = k.concat(f);\n    l = k.length;\n    g = n.length;\n    for(e = 0; e < l; e++)f = k[e], this.vertices.push(new THREE.Vector3(f.x, f.y, 0));\n    for(e = 0; e < g; e++)l = n[e], k = l[0] + h, f = l[1] + h, l = l[2] + h, this.faces.push(new THREE.Face3(k, f, l, null, null, c)), this.faceVertexUvs[0].push(d.generateTopUV(this, k, f, l));\n};\nTHREE.LatheGeometry = function(a1, b, c, d) {\n    THREE.Geometry.call(this);\n    this.type = \"LatheGeometry\";\n    this.parameters = {\n        points: a1,\n        segments: b,\n        phiStart: c,\n        phiLength: d\n    };\n    b = b || 12;\n    c = c || 0;\n    d = d || 2 * Math.PI;\n    for(var e = 1 / (a1.length - 1), g = 1 / b, f = 0, h = b; f <= h; f++)for(var k = c + f * g * d, l = Math.cos(k), n = Math.sin(k), k = 0, p = a1.length; k < p; k++){\n        var m = a1[k], q = new THREE.Vector3;\n        q.x = l * m.x - n * m.y;\n        q.y = n * m.x + l * m.y;\n        q.z = m.z;\n        this.vertices.push(q);\n    }\n    c = a1.length;\n    f = 0;\n    for(h = b; f < h; f++)for(k = 0, p = a1.length - 1; k < p; k++){\n        b = n = k + c * f;\n        d = n + c;\n        var l = n + 1 + c, n = n + 1, m = f * g, q = k * e, t = m + g, r = q + e;\n        this.faces.push(new THREE.Face3(b, d, n));\n        this.faceVertexUvs[0].push([\n            new THREE.Vector2(m, q),\n            new THREE.Vector2(t, q),\n            new THREE.Vector2(m, r)\n        ]);\n        this.faces.push(new THREE.Face3(d, l, n));\n        this.faceVertexUvs[0].push([\n            new THREE.Vector2(t, q),\n            new THREE.Vector2(t, r),\n            new THREE.Vector2(m, r)\n        ]);\n    }\n    this.mergeVertices();\n    this.computeFaceNormals();\n    this.computeVertexNormals();\n};\nTHREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\nTHREE.PlaneGeometry = function(a1, b, c, d) {\n    THREE.Geometry.call(this);\n    this.type = \"PlaneGeometry\";\n    this.parameters = {\n        width: a1,\n        height: b,\n        widthSegments: c,\n        heightSegments: d\n    };\n    this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a1, b, c, d));\n};\nTHREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\nTHREE.PlaneGeometry.prototype.clone = function() {\n    return new THREE.PlaneGeometry(this.parameters.width, this.parameters.height, this.parameters.widthSegments, this.parameters.heightSegments);\n};\nTHREE.PlaneBufferGeometry = function(a1, b, c, d) {\n    THREE.BufferGeometry.call(this);\n    this.type = \"PlaneBufferGeometry\";\n    this.parameters = {\n        width: a1,\n        height: b,\n        widthSegments: c,\n        heightSegments: d\n    };\n    var e = a1 / 2, g = b / 2;\n    c = Math.floor(c) || 1;\n    d = Math.floor(d) || 1;\n    var f = c + 1, h = d + 1, k = a1 / c, l = b / d;\n    b = new Float32Array(f * h * 3);\n    a1 = new Float32Array(f * h * 3);\n    for(var n = new Float32Array(f * h * 2), p = 0, m = 0, q = 0; q < h; q++)for(var t = q * l - g, r = 0; r < f; r++)b[p] = r * k - e, b[p + 1] = -t, a1[p + 2] = 1, n[m] = r / c, n[m + 1] = 1 - q / d, p += 3, m += 2;\n    p = 0;\n    e = new (65535 < b.length / 3 ? Uint32Array : Uint16Array)(c * d * 6);\n    for(q = 0; q < d; q++)for(r = 0; r < c; r++)g = r + f * (q + 1), h = r + 1 + f * (q + 1), k = r + 1 + f * q, e[p] = r + f * q, e[p + 1] = g, e[p + 2] = k, e[p + 3] = g, e[p + 4] = h, e[p + 5] = k, p += 6;\n    this.setIndex(new THREE.BufferAttribute(e, 1));\n    this.addAttribute(\"position\", new THREE.BufferAttribute(b, 3));\n    this.addAttribute(\"normal\", new THREE.BufferAttribute(a1, 3));\n    this.addAttribute(\"uv\", new THREE.BufferAttribute(n, 2));\n};\nTHREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\nTHREE.PlaneBufferGeometry.prototype.clone = function() {\n    var a1 = new THREE.PlaneBufferGeometry(this.parameters.width, this.parameters.height, this.parameters.widthSegments, this.parameters.heightSegments);\n    a1.copy(this);\n    return a1;\n};\nTHREE.RingGeometry = function(a1, b, c, d, e, g) {\n    THREE.Geometry.call(this);\n    this.type = \"RingGeometry\";\n    this.parameters = {\n        innerRadius: a1,\n        outerRadius: b,\n        thetaSegments: c,\n        phiSegments: d,\n        thetaStart: e,\n        thetaLength: g\n    };\n    a1 = a1 || 0;\n    b = b || 50;\n    e = void 0 !== e ? e : 0;\n    g = void 0 !== g ? g : 2 * Math.PI;\n    c = void 0 !== c ? Math.max(3, c) : 8;\n    d = void 0 !== d ? Math.max(1, d) : 8;\n    var f, h = [], k = a1, l = (b - a1) / d;\n    for(a1 = 0; a1 < d + 1; a1++){\n        for(f = 0; f < c + 1; f++){\n            var n = new THREE.Vector3, p = e + f / c * g;\n            n.x = k * Math.cos(p);\n            n.y = k * Math.sin(p);\n            this.vertices.push(n);\n            h.push(new THREE.Vector2((n.x / b + 1) / 2, (n.y / b + 1) / 2));\n        }\n        k += l;\n    }\n    b = new THREE.Vector3(0, 0, 1);\n    for(a1 = 0; a1 < d; a1++)for(e = a1 * (c + 1), f = 0; f < c; f++)g = p = f + e, l = p + c + 1, n = p + c + 2, this.faces.push(new THREE.Face3(g, l, n, [\n        b.clone(),\n        b.clone(),\n        b.clone()\n    ])), this.faceVertexUvs[0].push([\n        h[g].clone(),\n        h[l].clone(),\n        h[n].clone()\n    ]), g = p, l = p + c + 2, n = p + 1, this.faces.push(new THREE.Face3(g, l, n, [\n        b.clone(),\n        b.clone(),\n        b.clone()\n    ])), this.faceVertexUvs[0].push([\n        h[g].clone(),\n        h[l].clone(),\n        h[n].clone()\n    ]);\n    this.computeFaceNormals();\n    this.boundingSphere = new THREE.Sphere(new THREE.Vector3, k);\n};\nTHREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\nTHREE.RingGeometry.prototype.clone = function() {\n    return new THREE.RingGeometry(this.parameters.innerRadius, this.parameters.outerRadius, this.parameters.thetaSegments, this.parameters.phiSegments, this.parameters.thetaStart, this.parameters.thetaLength);\n};\nTHREE.SphereGeometry = function(a1, b, c, d, e, g, f) {\n    THREE.Geometry.call(this);\n    this.type = \"SphereGeometry\";\n    this.parameters = {\n        radius: a1,\n        widthSegments: b,\n        heightSegments: c,\n        phiStart: d,\n        phiLength: e,\n        thetaStart: g,\n        thetaLength: f\n    };\n    this.fromBufferGeometry(new THREE.SphereBufferGeometry(a1, b, c, d, e, g, f));\n};\nTHREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\nTHREE.SphereGeometry.prototype.clone = function() {\n    return new THREE.SphereGeometry(this.parameters.radius, this.parameters.widthSegments, this.parameters.heightSegments, this.parameters.phiStart, this.parameters.phiLength, this.parameters.thetaStart, this.parameters.thetaLength);\n};\nTHREE.SphereBufferGeometry = function(a1, b, c, d, e, g, f) {\n    THREE.BufferGeometry.call(this);\n    this.type = \"SphereBufferGeometry\";\n    this.parameters = {\n        radius: a1,\n        widthSegments: b,\n        heightSegments: c,\n        phiStart: d,\n        phiLength: e,\n        thetaStart: g,\n        thetaLength: f\n    };\n    a1 = a1 || 50;\n    b = Math.max(3, Math.floor(b) || 8);\n    c = Math.max(2, Math.floor(c) || 6);\n    d = void 0 !== d ? d : 0;\n    e = void 0 !== e ? e : 2 * Math.PI;\n    g = void 0 !== g ? g : 0;\n    f = void 0 !== f ? f : Math.PI;\n    for(var h = g + f, k = (b + 1) * (c + 1), l = new THREE.BufferAttribute(new Float32Array(3 * k), 3), n = new THREE.BufferAttribute(new Float32Array(3 * k), 3), k = new THREE.BufferAttribute(new Float32Array(2 * k), 2), p = 0, m = [], q = new THREE.Vector3, t = 0; t <= c; t++){\n        for(var r = [], u = t / c, w = 0; w <= b; w++){\n            var v = w / b, B = -a1 * Math.cos(d + v * e) * Math.sin(g + u * f), x = a1 * Math.cos(g + u * f), H = a1 * Math.sin(d + v * e) * Math.sin(g + u * f);\n            q.set(B, x, H).normalize();\n            l.setXYZ(p, B, x, H);\n            n.setXYZ(p, q.x, q.y, q.z);\n            k.setXY(p, v, 1 - u);\n            r.push(p);\n            p++;\n        }\n        m.push(r);\n    }\n    d = [];\n    for(t = 0; t < c; t++)for(w = 0; w < b; w++)e = m[t][w + 1], f = m[t][w], p = m[t + 1][w], q = m[t + 1][w + 1], (0 !== t || 0 < g) && d.push(e, f, q), (t !== c - 1 || h < Math.PI) && d.push(f, p, q);\n    this.setIndex(new THREE.BufferAttribute(new Uint16Array(d), 1));\n    this.addAttribute(\"position\", l);\n    this.addAttribute(\"normal\", n);\n    this.addAttribute(\"uv\", k);\n    this.boundingSphere = new THREE.Sphere(new THREE.Vector3, a1);\n};\nTHREE.SphereBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\nTHREE.SphereBufferGeometry.prototype.clone = function() {\n    var a1 = new THREE.SphereBufferGeometry(this.parameters.radius, this.parameters.widthSegments, this.parameters.heightSegments, this.parameters.phiStart, this.parameters.phiLength, this.parameters.thetaStart, this.parameters.thetaLength);\n    a1.copy(this);\n    return a1;\n};\nTHREE.TextGeometry = function(a1, b) {\n    b = b || {};\n    var c = THREE.FontUtils.generateShapes(a1, b);\n    b.amount = void 0 !== b.height ? b.height : 50;\n    void 0 === b.bevelThickness && (b.bevelThickness = 10);\n    void 0 === b.bevelSize && (b.bevelSize = 8);\n    void 0 === b.bevelEnabled && (b.bevelEnabled = !1);\n    THREE.ExtrudeGeometry.call(this, c, b);\n    this.type = \"TextGeometry\";\n};\nTHREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype);\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\nTHREE.TorusGeometry = function(a1, b, c, d, e) {\n    THREE.Geometry.call(this);\n    this.type = \"TorusGeometry\";\n    this.parameters = {\n        radius: a1,\n        tube: b,\n        radialSegments: c,\n        tubularSegments: d,\n        arc: e\n    };\n    a1 = a1 || 100;\n    b = b || 40;\n    c = c || 8;\n    d = d || 6;\n    e = e || 2 * Math.PI;\n    for(var g = new THREE.Vector3, f = [], h = [], k = 0; k <= c; k++)for(var l = 0; l <= d; l++){\n        var n = l / d * e, p = k / c * Math.PI * 2;\n        g.x = a1 * Math.cos(n);\n        g.y = a1 * Math.sin(n);\n        var m = new THREE.Vector3;\n        m.x = (a1 + b * Math.cos(p)) * Math.cos(n);\n        m.y = (a1 + b * Math.cos(p)) * Math.sin(n);\n        m.z = b * Math.sin(p);\n        this.vertices.push(m);\n        f.push(new THREE.Vector2(l / d, k / c));\n        h.push(m.clone().sub(g).normalize());\n    }\n    for(k = 1; k <= c; k++)for(l = 1; l <= d; l++)a1 = (d + 1) * k + l - 1, b = (d + 1) * (k - 1) + l - 1, e = (d + 1) * (k - 1) + l, g = (d + 1) * k + l, n = new THREE.Face3(a1, b, g, [\n        h[a1].clone(),\n        h[b].clone(),\n        h[g].clone()\n    ]), this.faces.push(n), this.faceVertexUvs[0].push([\n        f[a1].clone(),\n        f[b].clone(),\n        f[g].clone()\n    ]), n = new THREE.Face3(b, e, g, [\n        h[b].clone(),\n        h[e].clone(),\n        h[g].clone()\n    ]), this.faces.push(n), this.faceVertexUvs[0].push([\n        f[b].clone(),\n        f[e].clone(),\n        f[g].clone()\n    ]);\n    this.computeFaceNormals();\n};\nTHREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\nTHREE.TorusGeometry.prototype.clone = function() {\n    return new THREE.TorusGeometry(this.parameters.radius, this.parameters.tube, this.parameters.radialSegments, this.parameters.tubularSegments, this.parameters.arc);\n};\nTHREE.TorusKnotGeometry = function(a1, b, c, d, e, g, f) {\n    function h(a1, b, c, d, e) {\n        var f = Math.cos(a1), g = Math.sin(a1);\n        a1 *= b / c;\n        b = Math.cos(a1);\n        f *= d * (2 + b) * .5;\n        g = d * (2 + b) * g * .5;\n        d = e * d * Math.sin(a1) * .5;\n        return new THREE.Vector3(f, g, d);\n    }\n    THREE.Geometry.call(this);\n    this.type = \"TorusKnotGeometry\";\n    this.parameters = {\n        radius: a1,\n        tube: b,\n        radialSegments: c,\n        tubularSegments: d,\n        p: e,\n        q: g,\n        heightScale: f\n    };\n    a1 = a1 || 100;\n    b = b || 40;\n    c = c || 64;\n    d = d || 8;\n    e = e || 2;\n    g = g || 3;\n    f = f || 1;\n    for(var k = Array(c), l = new THREE.Vector3, n = new THREE.Vector3, p = new THREE.Vector3, m = 0; m < c; ++m){\n        k[m] = Array(d);\n        var q = m / c * 2 * e * Math.PI, t = h(q, g, e, a1, f), q = h(q + .01, g, e, a1, f);\n        l.subVectors(q, t);\n        n.addVectors(q, t);\n        p.crossVectors(l, n);\n        n.crossVectors(p, l);\n        p.normalize();\n        n.normalize();\n        for(q = 0; q < d; ++q){\n            var r = q / d * 2 * Math.PI, u = -b * Math.cos(r), r = b * Math.sin(r), w = new THREE.Vector3;\n            w.x = t.x + u * n.x + r * p.x;\n            w.y = t.y + u * n.y + r * p.y;\n            w.z = t.z + u * n.z + r * p.z;\n            k[m][q] = this.vertices.push(w) - 1;\n        }\n    }\n    for(m = 0; m < c; ++m)for(q = 0; q < d; ++q)e = (m + 1) % c, g = (q + 1) % d, a1 = k[m][q], b = k[e][q], e = k[e][g], g = k[m][g], f = new THREE.Vector2(m / c, q / d), l = new THREE.Vector2((m + 1) / c, q / d), n = new THREE.Vector2((m + 1) / c, (q + 1) / d), p = new THREE.Vector2(m / c, (q + 1) / d), this.faces.push(new THREE.Face3(a1, b, g)), this.faceVertexUvs[0].push([\n        f,\n        l,\n        p\n    ]), this.faces.push(new THREE.Face3(b, e, g)), this.faceVertexUvs[0].push([\n        l.clone(),\n        n,\n        p.clone()\n    ]);\n    this.computeFaceNormals();\n    this.computeVertexNormals();\n};\nTHREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\nTHREE.TorusKnotGeometry.prototype.clone = function() {\n    return new THREE.TorusKnotGeometry(this.parameters.radius, this.parameters.tube, this.parameters.radialSegments, this.parameters.tubularSegments, this.parameters.p, this.parameters.q, this.parameters.heightScale);\n};\nTHREE.TubeGeometry = function(a1, b, c, d, e, g) {\n    THREE.Geometry.call(this);\n    this.type = \"TubeGeometry\";\n    this.parameters = {\n        path: a1,\n        segments: b,\n        radius: c,\n        radialSegments: d,\n        closed: e\n    };\n    b = b || 64;\n    c = c || 1;\n    d = d || 8;\n    e = e || !1;\n    g = g || THREE.TubeGeometry.NoTaper;\n    var f = [], h, k, l = b + 1, n, p, m, q, t, r = new THREE.Vector3, u, w, v;\n    u = new THREE.TubeGeometry.FrenetFrames(a1, b, e);\n    w = u.normals;\n    v = u.binormals;\n    this.tangents = u.tangents;\n    this.normals = w;\n    this.binormals = v;\n    for(u = 0; u < l; u++)for(f[u] = [], n = u / (l - 1), t = a1.getPointAt(n), h = w[u], k = v[u], m = c * g(n), n = 0; n < d; n++)p = n / d * 2 * Math.PI, q = -m * Math.cos(p), p = m * Math.sin(p), r.copy(t), r.x += q * h.x + p * k.x, r.y += q * h.y + p * k.y, r.z += q * h.z + p * k.z, f[u][n] = this.vertices.push(new THREE.Vector3(r.x, r.y, r.z)) - 1;\n    for(u = 0; u < b; u++)for(n = 0; n < d; n++)g = e ? (u + 1) % b : u + 1, l = (n + 1) % d, a1 = f[u][n], c = f[g][n], g = f[g][l], l = f[u][l], r = new THREE.Vector2(u / b, n / d), w = new THREE.Vector2((u + 1) / b, n / d), v = new THREE.Vector2((u + 1) / b, (n + 1) / d), h = new THREE.Vector2(u / b, (n + 1) / d), this.faces.push(new THREE.Face3(a1, c, l)), this.faceVertexUvs[0].push([\n        r,\n        w,\n        h\n    ]), this.faces.push(new THREE.Face3(c, g, l)), this.faceVertexUvs[0].push([\n        w.clone(),\n        v,\n        h.clone()\n    ]);\n    this.computeFaceNormals();\n    this.computeVertexNormals();\n};\nTHREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\nTHREE.TubeGeometry.NoTaper = function(a1) {\n    return 1;\n};\nTHREE.TubeGeometry.SinusoidalTaper = function(a1) {\n    return Math.sin(Math.PI * a1);\n};\nTHREE.TubeGeometry.FrenetFrames = function(a1, b, c) {\n    var d = new THREE.Vector3, e = [], g = [], f = [], h = new THREE.Vector3, k = new THREE.Matrix4;\n    b += 1;\n    var l, n, p;\n    this.tangents = e;\n    this.normals = g;\n    this.binormals = f;\n    for(l = 0; l < b; l++)n = l / (b - 1), e[l] = a1.getTangentAt(n), e[l].normalize();\n    g[0] = new THREE.Vector3;\n    f[0] = new THREE.Vector3;\n    a1 = Number.MAX_VALUE;\n    l = Math.abs(e[0].x);\n    n = Math.abs(e[0].y);\n    p = Math.abs(e[0].z);\n    l <= a1 && (a1 = l, d.set(1, 0, 0));\n    n <= a1 && (a1 = n, d.set(0, 1, 0));\n    p <= a1 && d.set(0, 0, 1);\n    h.crossVectors(e[0], d).normalize();\n    g[0].crossVectors(e[0], h);\n    f[0].crossVectors(e[0], g[0]);\n    for(l = 1; l < b; l++)g[l] = g[l - 1].clone(), f[l] = f[l - 1].clone(), h.crossVectors(e[l - 1], e[l]), 1E-4 < h.length() && (h.normalize(), d = Math.acos(THREE.Math.clamp(e[l - 1].dot(e[l]), -1, 1)), g[l].applyMatrix4(k.makeRotationAxis(h, d))), f[l].crossVectors(e[l], g[l]);\n    if (c) for(d = Math.acos(THREE.Math.clamp(g[0].dot(g[b - 1]), -1, 1)), d /= b - 1, 0 < e[0].dot(h.crossVectors(g[0], g[b - 1])) && (d = -d), l = 1; l < b; l++)g[l].applyMatrix4(k.makeRotationAxis(e[l], d * l)), f[l].crossVectors(e[l], g[l]);\n};\nTHREE.PolyhedronGeometry = function(a1, b, c, d) {\n    function e(a1) {\n        var b = a1.normalize().clone();\n        b.index = k.vertices.push(b) - 1;\n        var c = Math.atan2(a1.z, -a1.x) / 2 / Math.PI + .5;\n        a1 = Math.atan2(-a1.y, Math.sqrt(a1.x * a1.x + a1.z * a1.z)) / Math.PI + .5;\n        b.uv = new THREE.Vector2(c, 1 - a1);\n        return b;\n    }\n    function g(a1, b, c, d) {\n        d = new THREE.Face3(a1.index, b.index, c.index, [\n            a1.clone(),\n            b.clone(),\n            c.clone()\n        ], void 0, d);\n        k.faces.push(d);\n        u.copy(a1).add(b).add(c).divideScalar(3);\n        d = Math.atan2(u.z, -u.x);\n        k.faceVertexUvs[0].push([\n            h(a1.uv, a1, d),\n            h(b.uv, b, d),\n            h(c.uv, c, d)\n        ]);\n    }\n    function f(a1, b) {\n        for(var c = Math.pow(2, b), d = e(k.vertices[a1.a]), f = e(k.vertices[a1.b]), h = e(k.vertices[a1.c]), l = [], m = a1.materialIndex, n = 0; n <= c; n++){\n            l[n] = [];\n            for(var p = e(d.clone().lerp(h, n / c)), q = e(f.clone().lerp(h, n / c)), r = c - n, t = 0; t <= r; t++)l[n][t] = 0 === t && n === c ? p : e(p.clone().lerp(q, t / r));\n        }\n        for(n = 0; n < c; n++)for(t = 0; t < 2 * (c - n) - 1; t++)d = Math.floor(t / 2), 0 === t % 2 ? g(l[n][d + 1], l[n + 1][d], l[n][d], m) : g(l[n][d + 1], l[n + 1][d + 1], l[n + 1][d], m);\n    }\n    function h(a1, b, c) {\n        0 > c && 1 === a1.x && (a1 = new THREE.Vector2(a1.x - 1, a1.y));\n        0 === b.x && 0 === b.z && (a1 = new THREE.Vector2(c / 2 / Math.PI + .5, a1.y));\n        return a1.clone();\n    }\n    THREE.Geometry.call(this);\n    this.type = \"PolyhedronGeometry\";\n    this.parameters = {\n        vertices: a1,\n        indices: b,\n        radius: c,\n        detail: d\n    };\n    c = c || 1;\n    d = d || 0;\n    for(var k = this, l = 0, n = a1.length; l < n; l += 3)e(new THREE.Vector3(a1[l], a1[l + 1], a1[l + 2]));\n    a1 = this.vertices;\n    for(var p = [], m = l = 0, n = b.length; l < n; l += 3, m++){\n        var q = a1[b[l]], t = a1[b[l + 1]], r = a1[b[l + 2]];\n        p[m] = new THREE.Face3(q.index, t.index, r.index, [\n            q.clone(),\n            t.clone(),\n            r.clone()\n        ], void 0, m);\n    }\n    for(var u = new THREE.Vector3, l = 0, n = p.length; l < n; l++)f(p[l], d);\n    l = 0;\n    for(n = this.faceVertexUvs[0].length; l < n; l++)b = this.faceVertexUvs[0][l], d = b[0].x, a1 = b[1].x, p = b[2].x, m = Math.max(d, Math.max(a1, p)), q = Math.min(d, Math.min(a1, p)), .9 < m && .1 > q && (.2 > d && (b[0].x += 1), .2 > a1 && (b[1].x += 1), .2 > p && (b[2].x += 1));\n    l = 0;\n    for(n = this.vertices.length; l < n; l++)this.vertices[l].multiplyScalar(c);\n    this.mergeVertices();\n    this.computeFaceNormals();\n    this.boundingSphere = new THREE.Sphere(new THREE.Vector3, c);\n};\nTHREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\nTHREE.PolyhedronGeometry.prototype.clone = function() {\n    return new THREE.PolyhedronGeometry(this.parameters.vertices, this.parameters.indices, this.parameters.radius, this.parameters.detail).copy(this);\n};\nTHREE.PolyhedronGeometry.prototype.copy = function(a1) {\n    THREE.Geometry.prototype.copy.call(this, a1);\n    return this;\n};\nTHREE.DodecahedronGeometry = function(a1, b) {\n    var c = (1 + Math.sqrt(5)) / 2, d = 1 / c;\n    THREE.PolyhedronGeometry.call(this, [\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        1,\n        -1,\n        1,\n        -1,\n        -1,\n        1,\n        1,\n        1,\n        -1,\n        -1,\n        1,\n        -1,\n        1,\n        1,\n        1,\n        -1,\n        1,\n        1,\n        1,\n        0,\n        -d,\n        -c,\n        0,\n        -d,\n        c,\n        0,\n        d,\n        -c,\n        0,\n        d,\n        c,\n        -d,\n        -c,\n        0,\n        -d,\n        c,\n        0,\n        d,\n        -c,\n        0,\n        d,\n        c,\n        0,\n        -c,\n        0,\n        -d,\n        c,\n        0,\n        -d,\n        -c,\n        0,\n        d,\n        c,\n        0,\n        d\n    ], [\n        3,\n        11,\n        7,\n        3,\n        7,\n        15,\n        3,\n        15,\n        13,\n        7,\n        19,\n        17,\n        7,\n        17,\n        6,\n        7,\n        6,\n        15,\n        17,\n        4,\n        8,\n        17,\n        8,\n        10,\n        17,\n        10,\n        6,\n        8,\n        0,\n        16,\n        8,\n        16,\n        2,\n        8,\n        2,\n        10,\n        0,\n        12,\n        1,\n        0,\n        1,\n        18,\n        0,\n        18,\n        16,\n        6,\n        10,\n        2,\n        6,\n        2,\n        13,\n        6,\n        13,\n        15,\n        2,\n        16,\n        18,\n        2,\n        18,\n        3,\n        2,\n        3,\n        13,\n        18,\n        1,\n        9,\n        18,\n        9,\n        11,\n        18,\n        11,\n        3,\n        4,\n        14,\n        12,\n        4,\n        12,\n        0,\n        4,\n        0,\n        8,\n        11,\n        9,\n        5,\n        11,\n        5,\n        19,\n        11,\n        19,\n        7,\n        19,\n        5,\n        14,\n        19,\n        14,\n        4,\n        19,\n        4,\n        17,\n        1,\n        12,\n        14,\n        1,\n        14,\n        5,\n        1,\n        5,\n        9\n    ], a1, b);\n    this.type = \"DodecahedronGeometry\";\n    this.parameters = {\n        radius: a1,\n        detail: b\n    };\n};\nTHREE.DodecahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\nTHREE.DodecahedronGeometry.prototype.clone = function() {\n    var a1 = new THREE.DodecahedronGeometry(this.parameters.radius, this.parameters.detail);\n    a1.copy(this);\n    return a1;\n};\nTHREE.IcosahedronGeometry = function(a1, b) {\n    var c = (1 + Math.sqrt(5)) / 2;\n    THREE.PolyhedronGeometry.call(this, [\n        -1,\n        c,\n        0,\n        1,\n        c,\n        0,\n        -1,\n        -c,\n        0,\n        1,\n        -c,\n        0,\n        0,\n        -1,\n        c,\n        0,\n        1,\n        c,\n        0,\n        -1,\n        -c,\n        0,\n        1,\n        -c,\n        c,\n        0,\n        -1,\n        c,\n        0,\n        1,\n        -c,\n        0,\n        -1,\n        -c,\n        0,\n        1\n    ], [\n        0,\n        11,\n        5,\n        0,\n        5,\n        1,\n        0,\n        1,\n        7,\n        0,\n        7,\n        10,\n        0,\n        10,\n        11,\n        1,\n        5,\n        9,\n        5,\n        11,\n        4,\n        11,\n        10,\n        2,\n        10,\n        7,\n        6,\n        7,\n        1,\n        8,\n        3,\n        9,\n        4,\n        3,\n        4,\n        2,\n        3,\n        2,\n        6,\n        3,\n        6,\n        8,\n        3,\n        8,\n        9,\n        4,\n        9,\n        5,\n        2,\n        4,\n        11,\n        6,\n        2,\n        10,\n        8,\n        6,\n        7,\n        9,\n        8,\n        1\n    ], a1, b);\n    this.type = \"IcosahedronGeometry\";\n    this.parameters = {\n        radius: a1,\n        detail: b\n    };\n};\nTHREE.IcosahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\nTHREE.IcosahedronGeometry.prototype.clone = function() {\n    var a1 = new THREE.IcosahedronGeometry(this.parameters.radius, this.parameters.detail);\n    a1.copy(this);\n    return a1;\n};\nTHREE.OctahedronGeometry = function(a1, b) {\n    THREE.PolyhedronGeometry.call(this, [\n        1,\n        0,\n        0,\n        -1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        -1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        -1\n    ], [\n        0,\n        2,\n        4,\n        0,\n        4,\n        3,\n        0,\n        3,\n        5,\n        0,\n        5,\n        2,\n        1,\n        2,\n        5,\n        1,\n        5,\n        3,\n        1,\n        3,\n        4,\n        1,\n        4,\n        2\n    ], a1, b);\n    this.type = \"OctahedronGeometry\";\n    this.parameters = {\n        radius: a1,\n        detail: b\n    };\n};\nTHREE.OctahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\nTHREE.OctahedronGeometry.prototype.clone = function() {\n    var a1 = new THREE.OctahedronGeometry(this.parameters.radius, this.parameters.detail);\n    a1.copy(this);\n    return a1;\n};\nTHREE.TetrahedronGeometry = function(a1, b) {\n    THREE.PolyhedronGeometry.call(this, [\n        1,\n        1,\n        1,\n        -1,\n        -1,\n        1,\n        -1,\n        1,\n        -1,\n        1,\n        -1,\n        -1\n    ], [\n        2,\n        1,\n        0,\n        0,\n        3,\n        2,\n        1,\n        3,\n        0,\n        2,\n        3,\n        1\n    ], a1, b);\n    this.type = \"TetrahedronGeometry\";\n    this.parameters = {\n        radius: a1,\n        detail: b\n    };\n};\nTHREE.TetrahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\nTHREE.TetrahedronGeometry.prototype.clone = function() {\n    var a1 = new THREE.TetrahedronGeometry(this.parameters.radius, this.parameters.detail);\n    a1.copy(this);\n    return a1;\n};\nTHREE.ParametricGeometry = function(a1, b, c) {\n    THREE.Geometry.call(this);\n    this.type = \"ParametricGeometry\";\n    this.parameters = {\n        func: a1,\n        slices: b,\n        stacks: c\n    };\n    var d = this.vertices, e = this.faces, g = this.faceVertexUvs[0], f, h, k, l, n = b + 1;\n    for(f = 0; f <= c; f++)for(l = f / c, h = 0; h <= b; h++)k = h / b, k = a1(k, l), d.push(k);\n    var p, m, q, t;\n    for(f = 0; f < c; f++)for(h = 0; h < b; h++)a1 = f * n + h, d = f * n + h + 1, l = (f + 1) * n + h + 1, k = (f + 1) * n + h, p = new THREE.Vector2(h / b, f / c), m = new THREE.Vector2((h + 1) / b, f / c), q = new THREE.Vector2((h + 1) / b, (f + 1) / c), t = new THREE.Vector2(h / b, (f + 1) / c), e.push(new THREE.Face3(a1, d, k)), g.push([\n        p,\n        m,\n        t\n    ]), e.push(new THREE.Face3(d, l, k)), g.push([\n        m.clone(),\n        q,\n        t.clone()\n    ]);\n    this.computeFaceNormals();\n    this.computeVertexNormals();\n};\nTHREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype);\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\nTHREE.WireframeGeometry = function(a1) {\n    THREE.BufferGeometry.call(this);\n    var b = [\n        0,\n        0\n    ], c = {}, d = function(a1, b) {\n        return a1 - b;\n    }, e = [\n        \"a\",\n        \"b\",\n        \"c\"\n    ];\n    if (a1 instanceof THREE.Geometry) {\n        var g = a1.vertices, f = a1.faces, h = 0, k = new Uint32Array(6 * f.length);\n        a1 = 0;\n        for(var l = f.length; a1 < l; a1++)for(var n = f[a1], p = 0; 3 > p; p++){\n            b[0] = n[e[p]];\n            b[1] = n[e[(p + 1) % 3]];\n            b.sort(d);\n            var m = b.toString();\n            void 0 === c[m] && (k[2 * h] = b[0], k[2 * h + 1] = b[1], c[m] = !0, h++);\n        }\n        b = new Float32Array(6 * h);\n        a1 = 0;\n        for(l = h; a1 < l; a1++)for(p = 0; 2 > p; p++)c = g[k[2 * a1 + p]], h = 6 * a1 + 3 * p, b[h + 0] = c.x, b[h + 1] = c.y, b[h + 2] = c.z;\n        this.addAttribute(\"position\", new THREE.BufferAttribute(b, 3));\n    } else if (a1 instanceof THREE.BufferGeometry) {\n        if (null !== a1.index) {\n            l = a1.index.array;\n            g = a1.attributes.position;\n            e = a1.drawcalls;\n            h = 0;\n            0 === e.length && a1.addDrawCall(0, l.length);\n            k = new Uint32Array(2 * l.length);\n            f = 0;\n            for(n = e.length; f < n; ++f){\n                a1 = e[f];\n                p = a1.start;\n                m = a1.count;\n                a1 = p;\n                for(var q = p + m; a1 < q; a1 += 3)for(p = 0; 3 > p; p++)b[0] = l[a1 + p], b[1] = l[a1 + (p + 1) % 3], b.sort(d), m = b.toString(), void 0 === c[m] && (k[2 * h] = b[0], k[2 * h + 1] = b[1], c[m] = !0, h++);\n            }\n            b = new Float32Array(6 * h);\n            a1 = 0;\n            for(l = h; a1 < l; a1++)for(p = 0; 2 > p; p++)h = 6 * a1 + 3 * p, c = k[2 * a1 + p], b[h + 0] = g.getX(c), b[h + 1] = g.getY(c), b[h + 2] = g.getZ(c);\n        } else for(g = a1.attributes.position.array, h = g.length / 3, k = h / 3, b = new Float32Array(6 * h), a1 = 0, l = k; a1 < l; a1++)for(p = 0; 3 > p; p++)h = 18 * a1 + 6 * p, k = 9 * a1 + 3 * p, b[h + 0] = g[k], b[h + 1] = g[k + 1], b[h + 2] = g[k + 2], c = 9 * a1 + (p + 1) % 3 * 3, b[h + 3] = g[c], b[h + 4] = g[c + 1], b[h + 5] = g[c + 2];\n        this.addAttribute(\"position\", new THREE.BufferAttribute(b, 3));\n    }\n};\nTHREE.WireframeGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\nTHREE.AxisHelper = function(a1) {\n    a1 = a1 || 1;\n    var b = new Float32Array([\n        0,\n        0,\n        0,\n        a1,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        a1,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        a1\n    ]), c = new Float32Array([\n        1,\n        0,\n        0,\n        1,\n        .6,\n        0,\n        0,\n        1,\n        0,\n        .6,\n        1,\n        0,\n        0,\n        0,\n        1,\n        0,\n        .6,\n        1\n    ]);\n    a1 = new THREE.BufferGeometry;\n    a1.addAttribute(\"position\", new THREE.BufferAttribute(b, 3));\n    a1.addAttribute(\"color\", new THREE.BufferAttribute(c, 3));\n    b = new THREE.LineBasicMaterial({\n        vertexColors: THREE.VertexColors\n    });\n    THREE.LineSegments.call(this, a1, b);\n};\nTHREE.AxisHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\nTHREE.ArrowHelper = function() {\n    var a1 = new THREE.Geometry;\n    a1.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 1, 0));\n    var b = new THREE.CylinderGeometry(0, .5, 1, 5, 1);\n    b.translate(0, -0.5, 0);\n    return function(c, d, e, g, f, h) {\n        THREE.Object3D.call(this);\n        void 0 === g && (g = 16776960);\n        void 0 === e && (e = 1);\n        void 0 === f && (f = .2 * e);\n        void 0 === h && (h = .2 * f);\n        this.position.copy(d);\n        f < e && (this.line = new THREE.Line(a1, new THREE.LineBasicMaterial({\n            color: g\n        })), this.line.matrixAutoUpdate = !1, this.add(this.line));\n        this.cone = new THREE.Mesh(b, new THREE.MeshBasicMaterial({\n            color: g\n        }));\n        this.cone.matrixAutoUpdate = !1;\n        this.add(this.cone);\n        this.setDirection(c);\n        this.setLength(e, f, h);\n    };\n}();\nTHREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\nTHREE.ArrowHelper.prototype.setDirection = function() {\n    var a1 = new THREE.Vector3, b;\n    return function(c) {\n        .99999 < c.y ? this.quaternion.set(0, 0, 0, 1) : -0.99999 > c.y ? this.quaternion.set(1, 0, 0, 0) : (a1.set(c.z, 0, -c.x).normalize(), b = Math.acos(c.y), this.quaternion.setFromAxisAngle(a1, b));\n    };\n}();\nTHREE.ArrowHelper.prototype.setLength = function(a1, b, c) {\n    void 0 === b && (b = .2 * a1);\n    void 0 === c && (c = .2 * b);\n    b < a1 && (this.line.scale.set(1, a1 - b, 1), this.line.updateMatrix());\n    this.cone.scale.set(c, b, c);\n    this.cone.position.y = a1;\n    this.cone.updateMatrix();\n};\nTHREE.ArrowHelper.prototype.setColor = function(a1) {\n    void 0 !== this.line && this.line.material.color.set(a1);\n    this.cone.material.color.set(a1);\n};\nTHREE.BoxHelper = function(a1) {\n    var b = new Uint16Array([\n        0,\n        1,\n        1,\n        2,\n        2,\n        3,\n        3,\n        0,\n        4,\n        5,\n        5,\n        6,\n        6,\n        7,\n        7,\n        4,\n        0,\n        4,\n        1,\n        5,\n        2,\n        6,\n        3,\n        7\n    ]), c = new Float32Array(24), d = new THREE.BufferGeometry;\n    d.setIndex(new THREE.BufferAttribute(b, 1));\n    d.addAttribute(\"position\", new THREE.BufferAttribute(c, 3));\n    THREE.LineSegments.call(this, d, new THREE.LineBasicMaterial({\n        color: 16776960\n    }));\n    void 0 !== a1 && this.update(a1);\n};\nTHREE.BoxHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\nTHREE.BoxHelper.prototype.update = function() {\n    var a1 = new THREE.Box3;\n    return function(b) {\n        a1.setFromObject(b);\n        if (!a1.empty()) {\n            b = a1.min;\n            var c = a1.max, d = this.geometry.attributes.position, e = d.array;\n            e[0] = c.x;\n            e[1] = c.y;\n            e[2] = c.z;\n            e[3] = b.x;\n            e[4] = c.y;\n            e[5] = c.z;\n            e[6] = b.x;\n            e[7] = b.y;\n            e[8] = c.z;\n            e[9] = c.x;\n            e[10] = b.y;\n            e[11] = c.z;\n            e[12] = c.x;\n            e[13] = c.y;\n            e[14] = b.z;\n            e[15] = b.x;\n            e[16] = c.y;\n            e[17] = b.z;\n            e[18] = b.x;\n            e[19] = b.y;\n            e[20] = b.z;\n            e[21] = c.x;\n            e[22] = b.y;\n            e[23] = b.z;\n            d.needsUpdate = !0;\n            this.geometry.computeBoundingSphere();\n        }\n    };\n}();\nTHREE.BoundingBoxHelper = function(a1, b) {\n    var c = void 0 !== b ? b : 8947848;\n    this.object = a1;\n    this.box = new THREE.Box3;\n    THREE.Mesh.call(this, new THREE.BoxGeometry(1, 1, 1), new THREE.MeshBasicMaterial({\n        color: c,\n        wireframe: !0\n    }));\n};\nTHREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\nTHREE.BoundingBoxHelper.prototype.update = function() {\n    this.box.setFromObject(this.object);\n    this.box.size(this.scale);\n    this.box.center(this.position);\n};\nTHREE.CameraHelper = function(a1) {\n    function b(a1, b, d) {\n        c(a1, d);\n        c(b, d);\n    }\n    function c(a1, b) {\n        d.vertices.push(new THREE.Vector3);\n        d.colors.push(new THREE.Color(b));\n        void 0 === g[a1] && (g[a1] = []);\n        g[a1].push(d.vertices.length - 1);\n    }\n    var d = new THREE.Geometry, e = new THREE.LineBasicMaterial({\n        color: 16777215,\n        vertexColors: THREE.FaceColors\n    }), g = {};\n    b(\"n1\", \"n2\", 16755200);\n    b(\"n2\", \"n4\", 16755200);\n    b(\"n4\", \"n3\", 16755200);\n    b(\"n3\", \"n1\", 16755200);\n    b(\"f1\", \"f2\", 16755200);\n    b(\"f2\", \"f4\", 16755200);\n    b(\"f4\", \"f3\", 16755200);\n    b(\"f3\", \"f1\", 16755200);\n    b(\"n1\", \"f1\", 16755200);\n    b(\"n2\", \"f2\", 16755200);\n    b(\"n3\", \"f3\", 16755200);\n    b(\"n4\", \"f4\", 16755200);\n    b(\"p\", \"n1\", 16711680);\n    b(\"p\", \"n2\", 16711680);\n    b(\"p\", \"n3\", 16711680);\n    b(\"p\", \"n4\", 16711680);\n    b(\"u1\", \"u2\", 43775);\n    b(\"u2\", \"u3\", 43775);\n    b(\"u3\", \"u1\", 43775);\n    b(\"c\", \"t\", 16777215);\n    b(\"p\", \"c\", 3355443);\n    b(\"cn1\", \"cn2\", 3355443);\n    b(\"cn3\", \"cn4\", 3355443);\n    b(\"cf1\", \"cf2\", 3355443);\n    b(\"cf3\", \"cf4\", 3355443);\n    THREE.LineSegments.call(this, d, e);\n    this.camera = a1;\n    this.matrix = a1.matrixWorld;\n    this.matrixAutoUpdate = !1;\n    this.pointMap = g;\n    this.update();\n};\nTHREE.CameraHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\nTHREE.CameraHelper.prototype.update = function() {\n    var a1, b, c = new THREE.Vector3, d = new THREE.Camera, e = function(e, f, h, k) {\n        c.set(f, h, k).unproject(d);\n        e = b[e];\n        if (void 0 !== e) for(f = 0, h = e.length; f < h; f++)a1.vertices[e[f]].copy(c);\n    };\n    return function() {\n        a1 = this.geometry;\n        b = this.pointMap;\n        d.projectionMatrix.copy(this.camera.projectionMatrix);\n        e(\"c\", 0, 0, -1);\n        e(\"t\", 0, 0, 1);\n        e(\"n1\", -1, -1, -1);\n        e(\"n2\", 1, -1, -1);\n        e(\"n3\", -1, 1, -1);\n        e(\"n4\", 1, 1, -1);\n        e(\"f1\", -1, -1, 1);\n        e(\"f2\", 1, -1, 1);\n        e(\"f3\", -1, 1, 1);\n        e(\"f4\", 1, 1, 1);\n        e(\"u1\", .7, 1.1, -1);\n        e(\"u2\", -0.7, 1.1, -1);\n        e(\"u3\", 0, 2, -1);\n        e(\"cf1\", -1, 0, 1);\n        e(\"cf2\", 1, 0, 1);\n        e(\"cf3\", 0, -1, 1);\n        e(\"cf4\", 0, 1, 1);\n        e(\"cn1\", -1, 0, -1);\n        e(\"cn2\", 1, 0, -1);\n        e(\"cn3\", 0, -1, -1);\n        e(\"cn4\", 0, 1, -1);\n        a1.verticesNeedUpdate = !0;\n    };\n}();\nTHREE.DirectionalLightHelper = function(a1, b) {\n    THREE.Object3D.call(this);\n    this.light = a1;\n    this.light.updateMatrixWorld();\n    this.matrix = a1.matrixWorld;\n    this.matrixAutoUpdate = !1;\n    b = b || 1;\n    var c = new THREE.Geometry;\n    c.vertices.push(new THREE.Vector3(-b, b, 0), new THREE.Vector3(b, b, 0), new THREE.Vector3(b, -b, 0), new THREE.Vector3(-b, -b, 0), new THREE.Vector3(-b, b, 0));\n    var d = new THREE.LineBasicMaterial({\n        fog: !1\n    });\n    d.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    this.lightPlane = new THREE.Line(c, d);\n    this.add(this.lightPlane);\n    c = new THREE.Geometry;\n    c.vertices.push(new THREE.Vector3, new THREE.Vector3);\n    d = new THREE.LineBasicMaterial({\n        fog: !1\n    });\n    d.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    this.targetLine = new THREE.Line(c, d);\n    this.add(this.targetLine);\n    this.update();\n};\nTHREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\nTHREE.DirectionalLightHelper.prototype.dispose = function() {\n    this.lightPlane.geometry.dispose();\n    this.lightPlane.material.dispose();\n    this.targetLine.geometry.dispose();\n    this.targetLine.material.dispose();\n};\nTHREE.DirectionalLightHelper.prototype.update = function() {\n    var a1 = new THREE.Vector3, b = new THREE.Vector3, c = new THREE.Vector3;\n    return function() {\n        a1.setFromMatrixPosition(this.light.matrixWorld);\n        b.setFromMatrixPosition(this.light.target.matrixWorld);\n        c.subVectors(b, a1);\n        this.lightPlane.lookAt(c);\n        this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n        this.targetLine.geometry.vertices[1].copy(c);\n        this.targetLine.geometry.verticesNeedUpdate = !0;\n        this.targetLine.material.color.copy(this.lightPlane.material.color);\n    };\n}();\nTHREE.EdgesHelper = function(a1, b, c) {\n    b = void 0 !== b ? b : 16777215;\n    THREE.LineSegments.call(this, new THREE.EdgesGeometry(a1.geometry, c), new THREE.LineBasicMaterial({\n        color: b\n    }));\n    this.matrix = a1.matrixWorld;\n    this.matrixAutoUpdate = !1;\n};\nTHREE.EdgesHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\nTHREE.FaceNormalsHelper = function(a1, b, c, d) {\n    this.object = a1;\n    this.size = void 0 !== b ? b : 1;\n    a1 = void 0 !== c ? c : 16776960;\n    d = void 0 !== d ? d : 1;\n    b = 0;\n    c = this.object.geometry;\n    c instanceof THREE.Geometry ? b = c.faces.length : console.warn(\"THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.\");\n    c = new THREE.BufferGeometry;\n    b = new THREE.Float32Attribute(6 * b, 3);\n    c.addAttribute(\"position\", b);\n    THREE.LineSegments.call(this, c, new THREE.LineBasicMaterial({\n        color: a1,\n        linewidth: d\n    }));\n    this.matrixAutoUpdate = !1;\n    this.update();\n};\nTHREE.FaceNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\nTHREE.FaceNormalsHelper.prototype.update = function() {\n    var a1 = new THREE.Vector3, b = new THREE.Vector3, c = new THREE.Matrix3;\n    return function() {\n        this.object.updateMatrixWorld(!0);\n        c.getNormalMatrix(this.object.matrixWorld);\n        for(var d = this.object.matrixWorld, e = this.geometry.attributes.position, g = this.object.geometry, f = g.vertices, g = g.faces, h = 0, k = 0, l = g.length; k < l; k++){\n            var n = g[k], p = n.normal;\n            a1.copy(f[n.a]).add(f[n.b]).add(f[n.c]).divideScalar(3).applyMatrix4(d);\n            b.copy(p).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a1);\n            e.setXYZ(h, a1.x, a1.y, a1.z);\n            h += 1;\n            e.setXYZ(h, b.x, b.y, b.z);\n            h += 1;\n        }\n        e.needsUpdate = !0;\n        return this;\n    };\n}();\nTHREE.GridHelper = function(a1, b) {\n    var c = new THREE.Geometry, d = new THREE.LineBasicMaterial({\n        vertexColors: THREE.VertexColors\n    });\n    this.color1 = new THREE.Color(4473924);\n    this.color2 = new THREE.Color(8947848);\n    for(var e = -a1; e <= a1; e += b){\n        c.vertices.push(new THREE.Vector3(-a1, 0, e), new THREE.Vector3(a1, 0, e), new THREE.Vector3(e, 0, -a1), new THREE.Vector3(e, 0, a1));\n        var g = 0 === e ? this.color1 : this.color2;\n        c.colors.push(g, g, g, g);\n    }\n    THREE.LineSegments.call(this, c, d);\n};\nTHREE.GridHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\nTHREE.GridHelper.prototype.setColors = function(a1, b) {\n    this.color1.set(a1);\n    this.color2.set(b);\n    this.geometry.colorsNeedUpdate = !0;\n};\nTHREE.HemisphereLightHelper = function(a1, b) {\n    THREE.Object3D.call(this);\n    this.light = a1;\n    this.light.updateMatrixWorld();\n    this.matrix = a1.matrixWorld;\n    this.matrixAutoUpdate = !1;\n    this.colors = [\n        new THREE.Color,\n        new THREE.Color\n    ];\n    var c = new THREE.SphereGeometry(b, 4, 2);\n    c.rotateX(-Math.PI / 2);\n    for(var d = 0; 8 > d; d++)c.faces[d].color = this.colors[4 > d ? 0 : 1];\n    d = new THREE.MeshBasicMaterial({\n        vertexColors: THREE.FaceColors,\n        wireframe: !0\n    });\n    this.lightSphere = new THREE.Mesh(c, d);\n    this.add(this.lightSphere);\n    this.update();\n};\nTHREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\nTHREE.HemisphereLightHelper.prototype.dispose = function() {\n    this.lightSphere.geometry.dispose();\n    this.lightSphere.material.dispose();\n};\nTHREE.HemisphereLightHelper.prototype.update = function() {\n    var a1 = new THREE.Vector3;\n    return function() {\n        this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);\n        this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);\n        this.lightSphere.lookAt(a1.setFromMatrixPosition(this.light.matrixWorld).negate());\n        this.lightSphere.geometry.colorsNeedUpdate = !0;\n    };\n}();\nTHREE.PointLightHelper = function(a1, b) {\n    this.light = a1;\n    this.light.updateMatrixWorld();\n    var c = new THREE.SphereGeometry(b, 4, 2), d = new THREE.MeshBasicMaterial({\n        wireframe: !0,\n        fog: !1\n    });\n    d.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    THREE.Mesh.call(this, c, d);\n    this.matrix = this.light.matrixWorld;\n    this.matrixAutoUpdate = !1;\n};\nTHREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\nTHREE.PointLightHelper.prototype.dispose = function() {\n    this.geometry.dispose();\n    this.material.dispose();\n};\nTHREE.PointLightHelper.prototype.update = function() {\n    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n};\nTHREE.SkeletonHelper = function(a1) {\n    this.bones = this.getBoneList(a1);\n    for(var b = new THREE.Geometry, c = 0; c < this.bones.length; c++)this.bones[c].parent instanceof THREE.Bone && (b.vertices.push(new THREE.Vector3), b.vertices.push(new THREE.Vector3), b.colors.push(new THREE.Color(0, 0, 1)), b.colors.push(new THREE.Color(0, 1, 0)));\n    b.dynamic = !0;\n    c = new THREE.LineBasicMaterial({\n        vertexColors: THREE.VertexColors,\n        depthTest: !1,\n        depthWrite: !1,\n        transparent: !0\n    });\n    THREE.LineSegments.call(this, b, c);\n    this.root = a1;\n    this.matrix = a1.matrixWorld;\n    this.matrixAutoUpdate = !1;\n    this.update();\n};\nTHREE.SkeletonHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\nTHREE.SkeletonHelper.prototype.getBoneList = function(a1) {\n    var b = [];\n    a1 instanceof THREE.Bone && b.push(a1);\n    for(var c = 0; c < a1.children.length; c++)b.push.apply(b, this.getBoneList(a1.children[c]));\n    return b;\n};\nTHREE.SkeletonHelper.prototype.update = function() {\n    for(var a1 = this.geometry, b = (new THREE.Matrix4).getInverse(this.root.matrixWorld), c = new THREE.Matrix4, d = 0, e = 0; e < this.bones.length; e++){\n        var g = this.bones[e];\n        g.parent instanceof THREE.Bone && (c.multiplyMatrices(b, g.matrixWorld), a1.vertices[d].setFromMatrixPosition(c), c.multiplyMatrices(b, g.parent.matrixWorld), a1.vertices[d + 1].setFromMatrixPosition(c), d += 2);\n    }\n    a1.verticesNeedUpdate = !0;\n    a1.computeBoundingSphere();\n};\nTHREE.SpotLightHelper = function(a1) {\n    THREE.Object3D.call(this);\n    this.light = a1;\n    this.light.updateMatrixWorld();\n    this.matrix = a1.matrixWorld;\n    this.matrixAutoUpdate = !1;\n    a1 = new THREE.CylinderGeometry(0, 1, 1, 8, 1, !0);\n    a1.translate(0, -0.5, 0);\n    a1.rotateX(-Math.PI / 2);\n    var b = new THREE.MeshBasicMaterial({\n        wireframe: !0,\n        fog: !1\n    });\n    this.cone = new THREE.Mesh(a1, b);\n    this.add(this.cone);\n    this.update();\n};\nTHREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\nTHREE.SpotLightHelper.prototype.dispose = function() {\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n};\nTHREE.SpotLightHelper.prototype.update = function() {\n    var a1 = new THREE.Vector3, b = new THREE.Vector3;\n    return function() {\n        var c = this.light.distance ? this.light.distance : 1E4, d = c * Math.tan(this.light.angle);\n        this.cone.scale.set(d, d, c);\n        a1.setFromMatrixPosition(this.light.matrixWorld);\n        b.setFromMatrixPosition(this.light.target.matrixWorld);\n        this.cone.lookAt(b.sub(a1));\n        this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n    };\n}();\nTHREE.VertexNormalsHelper = function(a1, b, c, d) {\n    this.object = a1;\n    this.size = void 0 !== b ? b : 1;\n    a1 = void 0 !== c ? c : 16711680;\n    d = void 0 !== d ? d : 1;\n    b = 0;\n    c = this.object.geometry;\n    c instanceof THREE.Geometry ? b = 3 * c.faces.length : c instanceof THREE.BufferGeometry && (b = c.attributes.normal.count);\n    c = new THREE.BufferGeometry;\n    b = new THREE.Float32Attribute(6 * b, 3);\n    c.addAttribute(\"position\", b);\n    THREE.LineSegments.call(this, c, new THREE.LineBasicMaterial({\n        color: a1,\n        linewidth: d\n    }));\n    this.matrixAutoUpdate = !1;\n    this.update();\n};\nTHREE.VertexNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\nTHREE.VertexNormalsHelper.prototype.update = function() {\n    var a1 = new THREE.Vector3, b = new THREE.Vector3, c = new THREE.Matrix3;\n    return function() {\n        var d = [\n            \"a\",\n            \"b\",\n            \"c\"\n        ];\n        this.object.updateMatrixWorld(!0);\n        c.getNormalMatrix(this.object.matrixWorld);\n        var e = this.object.matrixWorld, g = this.geometry.attributes.position, f = this.object.geometry;\n        if (f instanceof THREE.Geometry) for(var h = f.vertices, k = f.faces, l = f = 0, n = k.length; l < n; l++)for(var p = k[l], m = 0, q = p.vertexNormals.length; m < q; m++){\n            var t = p.vertexNormals[m];\n            a1.copy(h[p[d[m]]]).applyMatrix4(e);\n            b.copy(t).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a1);\n            g.setXYZ(f, a1.x, a1.y, a1.z);\n            f += 1;\n            g.setXYZ(f, b.x, b.y, b.z);\n            f += 1;\n        }\n        else if (f instanceof THREE.BufferGeometry) for(d = f.attributes.position, h = f.attributes.normal, m = f = 0, q = d.count; m < q; m++)a1.set(d.getX(m), d.getY(m), d.getZ(m)).applyMatrix4(e), b.set(h.getX(m), h.getY(m), h.getZ(m)), b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a1), g.setXYZ(f, a1.x, a1.y, a1.z), f += 1, g.setXYZ(f, b.x, b.y, b.z), f += 1;\n        g.needsUpdate = !0;\n        return this;\n    };\n}();\nTHREE.WireframeHelper = function(a1, b) {\n    var c = void 0 !== b ? b : 16777215;\n    THREE.LineSegments.call(this, new THREE.WireframeGeometry(a1.geometry), new THREE.LineBasicMaterial({\n        color: c\n    }));\n    this.matrix = a1.matrixWorld;\n    this.matrixAutoUpdate = !1;\n};\nTHREE.WireframeHelper.prototype = Object.create(THREE.LineSegments.prototype);\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\nTHREE.ImmediateRenderObject = function() {\n    THREE.Object3D.call(this);\n    this.render = function(a1) {};\n};\nTHREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\nTHREE.MorphBlendMesh = function(a1, b) {\n    THREE.Mesh.call(this, a1, b);\n    this.animationsMap = {};\n    this.animationsList = [];\n    var c = this.geometry.morphTargets.length;\n    this.createAnimation(\"__default\", 0, c - 1, c / 1);\n    this.setAnimationWeight(\"__default\", 1);\n};\nTHREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype);\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\nTHREE.MorphBlendMesh.prototype.createAnimation = function(a1, b, c, d) {\n    b = {\n        start: b,\n        end: c,\n        length: c - b + 1,\n        fps: d,\n        duration: (c - b) / d,\n        lastFrame: 0,\n        currentFrame: 0,\n        active: !1,\n        time: 0,\n        direction: 1,\n        weight: 1,\n        directionBackwards: !1,\n        mirroredLoop: !1\n    };\n    this.animationsMap[a1] = b;\n    this.animationsList.push(b);\n};\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function(a1) {\n    for(var b = /([a-z]+)_?(\\d+)/, c, d = {}, e = this.geometry, g = 0, f = e.morphTargets.length; g < f; g++){\n        var h = e.morphTargets[g].name.match(b);\n        if (h && 1 < h.length) {\n            var k = h[1];\n            d[k] || (d[k] = {\n                start: Infinity,\n                end: -Infinity\n            });\n            h = d[k];\n            g < h.start && (h.start = g);\n            g > h.end && (h.end = g);\n            c || (c = k);\n        }\n    }\n    for(k in d)h = d[k], this.createAnimation(k, h.start, h.end, a1);\n    this.firstAnimation = c;\n};\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function(a1) {\n    if (a1 = this.animationsMap[a1]) a1.direction = 1, a1.directionBackwards = !1;\n};\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function(a1) {\n    if (a1 = this.animationsMap[a1]) a1.direction = -1, a1.directionBackwards = !0;\n};\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function(a1, b) {\n    var c = this.animationsMap[a1];\n    c && (c.fps = b, c.duration = (c.end - c.start) / c.fps);\n};\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function(a1, b) {\n    var c = this.animationsMap[a1];\n    c && (c.duration = b, c.fps = (c.end - c.start) / c.duration);\n};\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function(a1, b) {\n    var c = this.animationsMap[a1];\n    c && (c.weight = b);\n};\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function(a1, b) {\n    var c = this.animationsMap[a1];\n    c && (c.time = b);\n};\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function(a1) {\n    var b = 0;\n    if (a1 = this.animationsMap[a1]) b = a1.time;\n    return b;\n};\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function(a1) {\n    var b = -1;\n    if (a1 = this.animationsMap[a1]) b = a1.duration;\n    return b;\n};\nTHREE.MorphBlendMesh.prototype.playAnimation = function(a1) {\n    var b = this.animationsMap[a1];\n    b ? (b.time = 0, b.active = !0) : console.warn(\"THREE.MorphBlendMesh: animation[\" + a1 + \"] undefined in .playAnimation()\");\n};\nTHREE.MorphBlendMesh.prototype.stopAnimation = function(a1) {\n    if (a1 = this.animationsMap[a1]) a1.active = !1;\n};\nTHREE.MorphBlendMesh.prototype.update = function(a1) {\n    for(var b = 0, c = this.animationsList.length; b < c; b++){\n        var d = this.animationsList[b];\n        if (d.active) {\n            var e = d.duration / d.length;\n            d.time += d.direction * a1;\n            if (d.mirroredLoop) {\n                if (d.time > d.duration || 0 > d.time) d.direction *= -1, d.time > d.duration && (d.time = d.duration, d.directionBackwards = !0), 0 > d.time && (d.time = 0, d.directionBackwards = !1);\n            } else d.time %= d.duration, 0 > d.time && (d.time += d.duration);\n            var g = d.start + THREE.Math.clamp(Math.floor(d.time / e), 0, d.length - 1), f = d.weight;\n            g !== d.currentFrame && (this.morphTargetInfluences[d.lastFrame] = 0, this.morphTargetInfluences[d.currentFrame] = 1 * f, this.morphTargetInfluences[g] = 0, d.lastFrame = d.currentFrame, d.currentFrame = g);\n            e = d.time % e / e;\n            d.directionBackwards && (e = 1 - e);\n            d.currentFrame !== d.lastFrame ? (this.morphTargetInfluences[d.currentFrame] = e * f, this.morphTargetInfluences[d.lastFrame] = (1 - e) * f) : this.morphTargetInfluences[d.currentFrame] = f;\n        }\n    }\n};\n\n//# sourceMappingURL=index.366cbe3a.js.map\n","// threejs.org/license\n'use strict';var THREE={REVISION:\"72\"};\"function\"===typeof define&&define.amd?define(\"three\",THREE):\"undefined\"!==typeof exports&&\"undefined\"!==typeof module&&(module.exports=THREE);\nvoid 0!==self.requestAnimationFrame&&void 0!==self.cancelAnimationFrame||function(){for(var a=0,b=[\"ms\",\"moz\",\"webkit\",\"o\"],c=0;c<b.length&&!self.requestAnimationFrame;++c)self.requestAnimationFrame=self[b[c]+\"RequestAnimationFrame\"],self.cancelAnimationFrame=self[b[c]+\"CancelAnimationFrame\"]||self[b[c]+\"CancelRequestAnimationFrame\"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(b){var c=Date.now(),g=Math.max(0,16-(c-a)),f=self.setTimeout(function(){b(c+\ng)},g);a=c+g;return f});void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(a){self.clearTimeout(a)})}();void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:0<a?1:+a});void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,\"name\",{get:function(){return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1]}});THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;\nTHREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;\nTHREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.NeverDepth=0;THREE.AlwaysDepth=1;THREE.LessDepth=2;THREE.LessEqualDepth=3;\nTHREE.EqualDepth=4;THREE.GreaterEqualDepth=5;THREE.GreaterDepth=6;THREE.NotEqualDepth=7;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;THREE.CubeRefractionMapping=302;THREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;THREE.SphericalReflectionMapping=305;THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;\nTHREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.HalfFloatType=1025;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;\nTHREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;\nTHREE.Projector=function(){console.error(\"THREE.Projector has been moved to /examples/js/renderers/Projector.js.\");this.projectVector=function(a,b){console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");a.project(b)};this.unprojectVector=function(a,b){console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");a.unproject(b)};this.pickingRay=function(a,b){console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\")}};\nTHREE.CanvasRenderer=function(){console.error(\"THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js\");this.domElement=document.createElement(\"canvas\");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)};\nTHREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){a instanceof THREE.Color?this.copy(a):\"number\"===typeof a?this.setHex(a):\"string\"===typeof a&&this.setStyle(a);return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSL:function(){function a(a,c,d){0>d&&(d+=1);1<d&&(d-=1);return d<1/6?a+6*(c-a)*d:.5>d?c:d<2/3?a+6*(c-a)*(2/3-d):a}return function(b,\nc,d){b=THREE.Math.euclideanModulo(b,1);c=THREE.Math.clamp(c,0,1);d=THREE.Math.clamp(d,0,1);0===c?this.r=this.g=this.b=d:(c=.5>=d?d*(1+c):d+c-d*c,d=2*d-c,this.r=a(d,c,b+1/3),this.g=a(d,c,b),this.b=a(d,c,b-1/3));return this}}(),setStyle:function(a){var b=function(b){b=parseFloat(b);1>b&&console.warn(\"THREE.Color: Alpha component of color \"+a+\" will be ignored.\");return b},c;if(c=/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(a)){var d=c[2];switch(c[1]){case \"rgb\":if(c=/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec(d))return this.r=\nMath.min(255,parseInt(c[1],10))/255,this.g=Math.min(255,parseInt(c[2],10))/255,this.b=Math.min(255,parseInt(c[3],10))/255,this;if(c=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec(d))return this.r=Math.min(100,parseInt(c[1],10))/100,this.g=Math.min(100,parseInt(c[2],10))/100,this.b=Math.min(100,parseInt(c[3],10))/100,this;break;case \"rgba\":if(c=/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec(d))return this.r=Math.min(255,parseInt(c[1],10))/255,this.g=Math.min(255,parseInt(c[2],10))/\n255,this.b=Math.min(255,parseInt(c[3],10))/255,b(c[4]),this;if(c=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec(d))return this.r=Math.min(100,parseInt(c[1],10))/100,this.g=Math.min(100,parseInt(c[2],10))/100,this.b=Math.min(100,parseInt(c[3],10))/100,b(c[4]),this;break;case \"hsl\":if(c=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec(d)){var d=parseFloat(c[1]),e=parseInt(c[2],10)/100,g=parseInt(c[3],10)/100;return this.setHSL(d,e,g)}break;case \"hsla\":if(c=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec(d))return d=\nparseFloat(c[1]),e=parseInt(c[2],10)/100,g=parseInt(c[3],10)/100,b(c[4]),this.setHSL(d,e,g)}}else if(c=/^\\#([A-Fa-f0-9]+)$/.exec(a)){b=c[1];c=b.length;if(3===c)return this.r=parseInt(b.charAt(0)+b.charAt(0),16)/255,this.g=parseInt(b.charAt(1)+b.charAt(1),16)/255,this.b=parseInt(b.charAt(2)+b.charAt(2),16)/255,this;if(6===c)return this.r=parseInt(b.charAt(0)+b.charAt(1),16)/255,this.g=parseInt(b.charAt(2)+b.charAt(3),16)/255,this.b=parseInt(b.charAt(4)+b.charAt(5),16)/255,this}a&&0<a.length&&(b=THREE.ColorKeywords[a],\nvoid 0!==b?this.setHex(b):console.warn(\"THREE.Color: Unknown color \"+a));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){void 0===b&&(b=2);this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);var c=0<b?1/b:1;this.r=Math.pow(a.r,c);this.g=Math.pow(a.g,c);this.b=Math.pow(a.b,c);return this},convertGammaToLinear:function(){var a=\nthis.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return(\"000000\"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){a=a||{h:0,s:0,l:0};var b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),g=Math.min(b,c,d),f,h=(g+e)/2;if(g===e)g=f=0;else{var k=e-g,g=.5>=h?k/(e+g):\nk/(2-e-g);switch(e){case b:f=(c-d)/k+(c<d?6:0);break;case c:f=(d-b)/k+2;break;case d:f=(b-c)/k+4}f/=6}a.h=f;a.s=g;a.l=h;return a},getStyle:function(){return\"rgb(\"+(255*this.r|0)+\",\"+(255*this.g|0)+\",\"+(255*this.b|0)+\")\"},offsetHSL:function(a,b,c){var d=this.getHSL();d.h+=a;d.s+=b;d.l+=c;this.setHSL(d.h,d.s,d.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=\na;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){this.r=a[0];this.g=a[1];this.b=a[2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.r;a[b+1]=this.g;a[b+\n2]=this.b;return a}};\nTHREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,\ndarkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,\ngrey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,\nlime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,\npalegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,\ntomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._w=void 0!==d?d:1};\nTHREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._w=d;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},\ncopy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,b){if(!1===a instanceof THREE.Euler)throw Error(\"THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),g=Math.sin(a._x/2),f=Math.sin(a._y/2),h=Math.sin(a._z/2),k=a.order;\"XYZ\"===k?(this._x=g*d*e+c*f*h,this._y=c*f*e-g*d*h,this._z=c*d*h+g*f*e,this._w=c*d*e-g*f*h):\"YXZ\"===\nk?(this._x=g*d*e+c*f*h,this._y=c*f*e-g*d*h,this._z=c*d*h-g*f*e,this._w=c*d*e+g*f*h):\"ZXY\"===k?(this._x=g*d*e-c*f*h,this._y=c*f*e+g*d*h,this._z=c*d*h+g*f*e,this._w=c*d*e-g*f*h):\"ZYX\"===k?(this._x=g*d*e-c*f*h,this._y=c*f*e+g*d*h,this._z=c*d*h-g*f*e,this._w=c*d*e+g*f*h):\"YZX\"===k?(this._x=g*d*e+c*f*h,this._y=c*f*e+g*d*h,this._z=c*d*h-g*f*e,this._w=c*d*e-g*f*h):\"XZY\"===k&&(this._x=g*d*e-c*f*h,this._y=c*f*e-g*d*h,this._z=c*d*h+g*f*e,this._w=c*d*e+g*f*h);if(!1!==b)this.onChangeCallback();return this},setFromAxisAngle:function(a,\nb){var c=b/2,d=Math.sin(c);this._x=a.x*d;this._y=a.y*d;this._z=a.z*d;this._w=Math.cos(c);this.onChangeCallback();return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],g=b[5],f=b[9],h=b[2],k=b[6],b=b[10],l=c+g+b;0<l?(c=.5/Math.sqrt(l+1),this._w=.25/c,this._x=(k-f)*c,this._y=(d-h)*c,this._z=(e-a)*c):c>g&&c>b?(c=2*Math.sqrt(1+c-g-b),this._w=(k-f)/c,this._x=.25*c,this._y=(a+e)/c,this._z=(d+h)/c):g>b?(c=2*Math.sqrt(1+g-c-b),this._w=(d-h)/c,this._x=(a+e)/c,this._y=\n.25*c,this._z=(f+k)/c):(c=2*Math.sqrt(1+b-c-g),this._w=(e-a)/c,this._x=(d+h)/c,this._y=(f+k)/c,this._z=.25*c);this.onChangeCallback();return this},setFromUnitVectors:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3);b=c.dot(d)+1;1E-6>b?(b=0,Math.abs(c.x)>Math.abs(c.z)?a.set(-c.y,c.x,0):a.set(0,-c.z,c.y)):a.crossVectors(c,d);this._x=a.x;this._y=a.y;this._z=a.z;this._w=b;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=\n-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();0===a?(this._z=this._y=this._x=0,this._w=1):(a=1/a,this._x*=a,this._y*=a,this._z*=a,this._w*=a);this.onChangeCallback();return this},\nmultiply:function(a,b){return void 0!==b?(console.warn(\"THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.\"),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,g=a._w,f=b._x,h=b._y,k=b._z,l=b._w;this._x=c*l+g*f+d*k-e*h;this._y=d*l+g*h+e*f-c*k;this._z=e*l+g*k+c*h-d*f;this._w=g*l-c*f-d*h-e*k;this.onChangeCallback();return this},multiplyVector3:function(a){console.warn(\"THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.\");\nreturn a.applyQuaternion(this)},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,g=this._w,f=g*a._w+c*a._x+d*a._y+e*a._z;0>f?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,f=-f):this.copy(a);if(1<=f)return this._w=g,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(f),k=Math.sqrt(1-f*f);if(.001>Math.abs(k))return this._w=.5*(g+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;f=Math.sin((1-b)*h)/k;h=\nMath.sin(b*h)/k;this._w=g*f+this._w*h;this._x=c*f+this._x*h;this._y=d*f+this._y*h;this._z=e*f+this._z*h;this.onChangeCallback();return this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){void 0===b&&(b=0);this._x=a[b];this._y=a[b+1];this._z=a[b+2];this._w=a[b+3];this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+3]=this._w;return a},onChange:function(a){this.onChangeCallback=\na;return this},onChangeCallback:function(){}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};\nTHREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y)},\ncopy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),\nthis.subVectors(a,b);this.x-=a.x;this.y-=a.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a):this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=\na.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2);a.set(c,c);b.set(d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);\nthis.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+\nMath.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},equals:function(a){return a.x===\nthis.x&&a.y===this.y},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];return this}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};\nTHREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error(\"index is out of range: \"+\na);}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addScaledVector:function(a,\nb){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"),\nthis.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var a;return function(b){!1===b instanceof THREE.Euler&&console.error(\"THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.\");void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromEuler(b));return this}}(),\napplyAxisAngle:function(){var a;return function(b,c){void 0===a&&(a=new THREE.Quaternion);this.applyQuaternion(a.setFromAxisAngle(b,c));return this}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},\napplyProjection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;var e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,g=a.y,f=a.z;a=a.w;var h=a*b+g*d-f*c,k=a*c+f*b-e*d,l=a*d+e*c-g*b,b=-e*b-g*c-f*d;this.x=h*a+b*-e+k*-f-l*-g;this.y=k*a+b*-g+l*-e-h*-f;this.z=l*a+b*-f+h*-g-k*-e;return this},project:function(){var a;return function(b){void 0===\na&&(a=new THREE.Matrix4);a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld));return this.applyProjection(a)}}(),unproject:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix));return this.applyProjection(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d;this.y=a[1]*b+a[5]*c+a[9]*d;this.z=a[2]*b+a[6]*c+a[10]*d;this.normalize();return this},divide:function(a){this.x/=\na.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=a,this.y*=a,this.z*=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&\n(this.z=b.z);return this},clampScalar:function(){var a,b;return function(c,d){void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3);a.set(c,c,c);b.set(d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},\nroundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+\nMath.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(a,b,c){this.subVectors(b,a).multiplyScalar(c).add(a);return this},cross:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"),\nthis.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,g=b.x,f=b.y,h=b.z;this.x=d*h-e*f;this.y=e*g-c*h;this.z=c*f-d*g;return this},projectOnVector:function(){var a,b;return function(c){void 0===a&&(a=new THREE.Vector3);a.copy(c).normalize();b=this.dot(a);return this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);a.copy(this).projectOnVector(b);\nreturn this.sub(a)}}(),reflect:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);return this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){a=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(a,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;a=this.z-a.z;return b*b+c*c+a*a},setEulerFromRotationMatrix:function(a,b){console.error(\"THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.\")},\nsetEulerFromQuaternion:function(a,b){console.error(\"THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.\")},getPositionFromMatrix:function(a){console.warn(\"THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().\");return this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){console.warn(\"THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().\");return this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,\nb){console.warn(\"THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().\");return this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=\na;return this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;this.x=d[c];this.y=d[c+1];this.z=d[c+2];return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=\na.array[b+2];return this}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};\nTHREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error(\"index is out of range: \"+a);}},getComponent:function(a){switch(a){case 0:return this.x;\ncase 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error(\"index is out of range: \"+a);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},\naddScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this},sub:function(a,b){if(void 0!==b)return console.warn(\"THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subScalar:function(a){this.x-=\na;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w;a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(a=1/a,this.x*=\na,this.y*=a,this.z*=a,this.w*=a):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var g=a[8],f=a[1],h=a[5],k=a[9];c=a[2];b=a[6];var l=a[10];if(.01>Math.abs(d-f)&&.01>Math.abs(g-c)&&.01>Math.abs(k-b)){if(.1>Math.abs(d+f)&&.1>Math.abs(g+c)&&.1>\nMath.abs(k+b)&&.1>Math.abs(e+h+l-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;l=(l+1)/2;d=(d+f)/4;g=(g+c)/4;k=(k+b)/4;e>h&&e>l?.01>e?(b=0,d=c=.707106781):(b=Math.sqrt(e),c=d/b,d=g/b):h>l?.01>h?(b=.707106781,c=0,d=.707106781):(c=Math.sqrt(h),b=d/c,d=k/c):.01>l?(c=b=.707106781,d=0):(d=Math.sqrt(l),b=g/d,c=k/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-k)*(b-k)+(g-c)*(g-c)+(f-d)*(f-d));.001>Math.abs(a)&&(a=1);this.x=(b-k)/a;this.y=(g-c)/a;this.z=(f-d)/a;this.w=Math.acos((e+h+l-1)/\n2);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},clampScalar:function(){var a,\nb;return function(c,d){void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4);a.set(c,c,c,c);b.set(d,d,d,d);return this.clamp(a,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);\nreturn this},roundToZero:function(){this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x);this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y);this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z);this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},\nlength:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(a,b,\nc){this.subVectors(b,a).multiplyScalar(c).add(a);return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){void 0===b&&(b=0);this.x=a[b];this.y=a[b+1];this.z=a[b+2];this.w=a[b+3];return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this.x;a[b+1]=this.y;a[b+2]=this.z;a[b+3]=this.w;return a},fromAttribute:function(a,b,c){void 0===c&&(c=0);b=b*a.itemSize+c;this.x=a.array[b];this.y=a.array[b+1];this.z=a.array[b+2];this.w=\na.array[b+3];return this}};THREE.Euler=function(a,b,c,d){this._x=a||0;this._y=b||0;this._z=c||0;this._order=d||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=\"XYZ YZX ZXY XZY YXZ ZYX\".split(\" \");THREE.Euler.DefaultOrder=\"XYZ\";\nTHREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(a,b,c,d){this._x=a;this._y=b;this._z=c;this._order=d||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,\nthis._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(a,b,c){var d=THREE.Math.clamp,e=a.elements;a=e[0];var g=e[4],f=e[8],h=e[1],k=e[5],l=e[9],n=e[2],p=e[6],e=e[10];b=b||this._order;\"XYZ\"===b?(this._y=Math.asin(d(f,-1,1)),.99999>Math.abs(f)?(this._x=Math.atan2(-l,e),this._z=Math.atan2(-g,a)):(this._x=Math.atan2(p,k),this._z=0)):\"YXZ\"===b?(this._x=Math.asin(-d(l,-1,1)),.99999>Math.abs(l)?\n(this._y=Math.atan2(f,e),this._z=Math.atan2(h,k)):(this._y=Math.atan2(-n,a),this._z=0)):\"ZXY\"===b?(this._x=Math.asin(d(p,-1,1)),.99999>Math.abs(p)?(this._y=Math.atan2(-n,e),this._z=Math.atan2(-g,k)):(this._y=0,this._z=Math.atan2(h,a))):\"ZYX\"===b?(this._y=Math.asin(-d(n,-1,1)),.99999>Math.abs(n)?(this._x=Math.atan2(p,e),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-g,k))):\"YZX\"===b?(this._z=Math.asin(d(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(-l,k),this._y=Math.atan2(-n,a)):(this._x=\n0,this._y=Math.atan2(f,e))):\"XZY\"===b?(this._z=Math.asin(-d(g,-1,1)),.99999>Math.abs(g)?(this._x=Math.atan2(p,k),this._y=Math.atan2(f,a)):(this._x=Math.atan2(-l,e),this._y=0)):console.warn(\"THREE.Euler: .setFromRotationMatrix() given unsupported order: \"+b);this._order=b;if(!1!==c)this.onChangeCallback();return this},setFromQuaternion:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeRotationFromQuaternion(b);this.setFromRotationMatrix(a,c,d);return this}}(),setFromVector3:function(a,\nb){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];void 0!==a[3]&&(this._order=a[3]);this.onChangeCallback();return this},toArray:function(a,b){void 0===a&&(a=[]);void 0===b&&(b=0);a[b]=this._x;a[b+1]=this._y;a[b+2]=this._z;a[b+\n3]=this._order;return a},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3;this.end=void 0!==b?b:new THREE.Vector3};\nTHREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){this.start.copy(a);this.end.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(a){return(a||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){return(a||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},\nat:function(a,b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start);b.subVectors(this.end,this.start);var e=b.dot(b),e=b.dot(a)/e;d&&(e=THREE.Math.clamp(e,0,1));return e}}(),closestPointToPoint:function(a,b,c){a=this.closestPointToPointParameter(a,b);c=c||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);\nthis.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};\nTHREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);\nreturn this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);\nthis.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector2).set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>\nthis.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&\na.max.equals(this.max)}};THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};\nTHREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);this.min.copy(b).sub(d);this.max.copy(b).add(d);return this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;b.updateMatrixWorld(!0);\nthis.makeEmpty();b.traverse(function(b){var e=b.geometry;if(void 0!==e)if(e instanceof THREE.Geometry)for(var g=e.vertices,e=0,f=g.length;e<f;e++)a.copy(g[e]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a);else if(e instanceof THREE.BufferGeometry&&void 0!==e.attributes.position)for(g=e.attributes.position.array,e=0,f=g.length;e<f;e+=3)a.set(g[e],g[e+1],g[e+2]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)});return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.min.copy(a.min);\nthis.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);\nthis.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){return(b||new THREE.Vector3).set((a.x-this.min.x)/(this.max.x-\nthis.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){return a.copy(b).clamp(this.min,this.max).sub(b).length()}}(),getBoundingSphere:function(){var a=\nnew THREE.Vector3;return function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=.5*this.size(a).length();return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){a[0].set(this.min.x,this.min.y,\nthis.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);\nthis.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);0<arguments.length&&console.error(\"THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.\")};\nTHREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,g,f,h,k){var l=this.elements;l[0]=a;l[3]=b;l[6]=c;l[1]=d;l[4]=e;l[7]=g;l[2]=f;l[5]=h;l[8]=k;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn(\"THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.\");\nreturn a.applyMatrix3(this)},multiplyVector3Array:function(a){console.warn(\"THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");return this.applyToVector3Array(a)},applyToVector3Array:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.fromArray(b,c),a.applyMatrix3(this),a.toArray(b,c);return b}}(),applyToBuffer:function(){var a;return function(b,c,d){void 0===\na&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length/b.itemSize);for(var e=0;e<d;e++,c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix3(this),b.setXYZ(a.x,a.y,a.z);return b}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],g=a[4],f=a[5],h=a[6],k=a[7],a=a[8];return b*g*a-b*f*k-c*e*a+c*f*h+d*e*k-d*g*h},getInverse:function(a,\nb){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\");console.warn(\"Matrix3.getInverse(): can't invert matrix, determinant is 0\");this.identity();return this}this.multiplyScalar(1/\nc);return this},transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];return a},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=\nb[2];a[7]=b[5];a[8]=b[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]}};THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);0<arguments.length&&console.error(\"THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.\")};\nTHREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,g,f,h,k,l,n,p,m,q,t,r){var u=this.elements;u[0]=a;u[4]=b;u[8]=c;u[12]=d;u[1]=e;u[5]=g;u[9]=f;u[13]=h;u[2]=k;u[6]=l;u[10]=n;u[14]=p;u[3]=m;u[7]=q;u[11]=t;u[15]=r;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(a){this.elements.set(a.elements);return this},extractPosition:function(a){console.warn(\"THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().\");\nreturn this.copyPosition(a)},copyPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractBasis:function(a,b,c){var d=this.elements;a.set(d[0],d[1],d[2]);b.set(d[4],d[5],d[6]);c.set(d[8],d[9],d[10]);return this},makeBasis:function(a,b,c){this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a;return function(b){void 0===a&&(a=new THREE.Vector3);var c=this.elements;b=b.elements;var d=1/a.set(b[0],\nb[1],b[2]).length(),e=1/a.set(b[4],b[5],b[6]).length(),g=1/a.set(b[8],b[9],b[10]).length();c[0]=b[0]*d;c[1]=b[1]*d;c[2]=b[2]*d;c[4]=b[4]*e;c[5]=b[5]*e;c[6]=b[6]*e;c[8]=b[8]*g;c[9]=b[9]*g;c[10]=b[10]*g;return this}}(),makeRotationFromEuler:function(a){!1===a instanceof THREE.Euler&&console.error(\"THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.\");var b=this.elements,c=a.x,d=a.y,e=a.z,g=Math.cos(c),c=Math.sin(c),f=Math.cos(d),d=Math.sin(d),h=Math.cos(e),\ne=Math.sin(e);if(\"XYZ\"===a.order){a=g*h;var k=g*e,l=c*h,n=c*e;b[0]=f*h;b[4]=-f*e;b[8]=d;b[1]=k+l*d;b[5]=a-n*d;b[9]=-c*f;b[2]=n-a*d;b[6]=l+k*d;b[10]=g*f}else\"YXZ\"===a.order?(a=f*h,k=f*e,l=d*h,n=d*e,b[0]=a+n*c,b[4]=l*c-k,b[8]=g*d,b[1]=g*e,b[5]=g*h,b[9]=-c,b[2]=k*c-l,b[6]=n+a*c,b[10]=g*f):\"ZXY\"===a.order?(a=f*h,k=f*e,l=d*h,n=d*e,b[0]=a-n*c,b[4]=-g*e,b[8]=l+k*c,b[1]=k+l*c,b[5]=g*h,b[9]=n-a*c,b[2]=-g*d,b[6]=c,b[10]=g*f):\"ZYX\"===a.order?(a=g*h,k=g*e,l=c*h,n=c*e,b[0]=f*h,b[4]=l*d-k,b[8]=a*d+n,b[1]=f*e,b[5]=\nn*d+a,b[9]=k*d-l,b[2]=-d,b[6]=c*f,b[10]=g*f):\"YZX\"===a.order?(a=g*f,k=g*d,l=c*f,n=c*d,b[0]=f*h,b[4]=n-a*e,b[8]=l*e+k,b[1]=e,b[5]=g*h,b[9]=-c*h,b[2]=-d*h,b[6]=k*e+l,b[10]=a-n*e):\"XZY\"===a.order&&(a=g*f,k=g*d,l=c*f,n=c*d,b[0]=f*h,b[4]=-e,b[8]=d*h,b[1]=a*e+n,b[5]=g*h,b[9]=k*e-l,b[2]=l*e-k,b[6]=c*h,b[10]=n*e+a);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},setRotationFromQuaternion:function(a){console.warn(\"THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().\");\nreturn this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,g=a.w,f=c+c,h=d+d,k=e+e;a=c*f;var l=c*h,c=c*k,n=d*h,d=d*k,e=e*k,f=g*f,h=g*h,g=g*k;b[0]=1-(n+e);b[4]=l-g;b[8]=c+h;b[1]=l+g;b[5]=1-(a+e);b[9]=d-f;b[2]=c-h;b[6]=d+f;b[10]=1-(a+n);b[3]=0;b[7]=0;b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return this},lookAt:function(){var a,b,c;return function(d,e,g){void 0===a&&(a=new THREE.Vector3);void 0===b&&(b=new THREE.Vector3);void 0===c&&(c=new THREE.Vector3);\nvar f=this.elements;c.subVectors(d,e).normalize();0===c.length()&&(c.z=1);a.crossVectors(g,c).normalize();0===a.length()&&(c.x+=1E-4,a.crossVectors(g,c).normalize());b.crossVectors(c,a);f[0]=a.x;f[4]=b.x;f[8]=c.x;f[1]=a.y;f[5]=b.y;f[9]=c.y;f[2]=a.z;f[6]=b.z;f[10]=c.z;return this}}(),multiply:function(a,b){return void 0!==b?(console.warn(\"THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,\nb){var c=a.elements,d=b.elements,e=this.elements,g=c[0],f=c[4],h=c[8],k=c[12],l=c[1],n=c[5],p=c[9],m=c[13],q=c[2],t=c[6],r=c[10],u=c[14],w=c[3],v=c[7],B=c[11],c=c[15],x=d[0],H=d[4],I=d[8],z=d[12],D=d[1],G=d[5],O=d[9],C=d[13],F=d[2],K=d[6],L=d[10],E=d[14],J=d[3],y=d[7],P=d[11],d=d[15];e[0]=g*x+f*D+h*F+k*J;e[4]=g*H+f*G+h*K+k*y;e[8]=g*I+f*O+h*L+k*P;e[12]=g*z+f*C+h*E+k*d;e[1]=l*x+n*D+p*F+m*J;e[5]=l*H+n*G+p*K+m*y;e[9]=l*I+n*O+p*L+m*P;e[13]=l*z+n*C+p*E+m*d;e[2]=q*x+t*D+r*F+u*J;e[6]=q*H+t*G+r*K+u*y;e[10]=\nq*I+t*O+r*L+u*P;e[14]=q*z+t*C+r*E+u*d;e[3]=w*x+v*D+B*F+c*J;e[7]=w*H+v*G+B*K+c*y;e[11]=w*I+v*O+B*L+c*P;e[15]=w*z+v*C+B*E+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=\na;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn(\"THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.\");return a.applyProjection(this)},multiplyVector4:function(a){console.warn(\"THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},multiplyVector3Array:function(a){console.warn(\"THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.\");\nreturn this.applyToVector3Array(a)},applyToVector3Array:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length);for(var e=0;e<d;e+=3,c+=3)a.fromArray(b,c),a.applyMatrix4(this),a.toArray(b,c);return b}}(),applyToBuffer:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Vector3);void 0===c&&(c=0);void 0===d&&(d=b.length/b.itemSize);for(var e=0;e<d;e++,c++)a.x=b.getX(c),a.y=b.getY(c),a.z=b.getZ(c),a.applyMatrix4(this),b.setXYZ(a.x,\na.y,a.z);return b}}(),rotateAxis:function(a){console.warn(\"THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.\");a.transformDirection(this)},crossVector:function(a){console.warn(\"THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.\");return a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],g=a[1],f=a[5],h=a[9],k=a[13],l=a[2],n=a[6],p=a[10],m=a[14];return a[3]*(+e*h*n-d*k*\nn-e*f*p+c*k*p+d*f*m-c*h*m)+a[7]*(+b*h*m-b*k*p+e*g*p-d*g*m+d*k*l-e*h*l)+a[11]*(+b*k*n-b*f*m-e*g*n+c*g*m+e*f*l-c*k*l)+a[15]*(-d*f*l-b*h*n+b*f*p+d*g*n-c*g*p+c*h*l)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=\nc[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a;return function(){void 0===a&&(a=new THREE.Vector3);console.warn(\"THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.\");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(a,b){var c=\nthis.elements,d=a.elements,e=d[0],g=d[4],f=d[8],h=d[12],k=d[1],l=d[5],n=d[9],p=d[13],m=d[2],q=d[6],t=d[10],r=d[14],u=d[3],w=d[7],v=d[11],d=d[15];c[0]=n*r*w-p*t*w+p*q*v-l*r*v-n*q*d+l*t*d;c[4]=h*t*w-f*r*w-h*q*v+g*r*v+f*q*d-g*t*d;c[8]=f*p*w-h*n*w+h*l*v-g*p*v-f*l*d+g*n*d;c[12]=h*n*q-f*p*q-h*l*t+g*p*t+f*l*r-g*n*r;c[1]=p*t*u-n*r*u-p*m*v+k*r*v+n*m*d-k*t*d;c[5]=f*r*u-h*t*u+h*m*v-e*r*v-f*m*d+e*t*d;c[9]=h*n*u-f*p*u-h*k*v+e*p*v+f*k*d-e*n*d;c[13]=f*p*m-h*n*m+h*k*t-e*p*t-f*k*r+e*n*r;c[2]=l*r*u-p*q*u+p*m*w-k*r*\nw-l*m*d+k*q*d;c[6]=h*q*u-g*r*u-h*m*w+e*r*w+g*m*d-e*q*d;c[10]=g*p*u-h*l*u+h*k*w-e*p*w-g*k*d+e*l*d;c[14]=h*l*m-g*p*m-h*k*q+e*p*q+g*k*r-e*l*r;c[3]=n*q*u-l*t*u-n*m*w+k*t*w+l*m*v-k*q*v;c[7]=g*t*u-f*q*u+f*m*w-e*t*w-g*m*v+e*q*v;c[11]=f*l*u-g*n*u-f*k*w+e*n*w+g*k*v-e*l*v;c[15]=g*n*m-f*l*m+f*k*q-e*n*q-g*k*t+e*l*t;c=e*c[0]+k*c[4]+m*c[8]+u*c[12];if(0===c){if(b)throw Error(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");console.warn(\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\");\nthis.identity();return this}this.multiplyScalar(1/c);return this},translate:function(a){console.error(\"THREE.Matrix4: .translate() has been removed.\")},rotateX:function(a){console.error(\"THREE.Matrix4: .rotateX() has been removed.\")},rotateY:function(a){console.error(\"THREE.Matrix4: .rotateY() has been removed.\")},rotateZ:function(a){console.error(\"THREE.Matrix4: .rotateZ() has been removed.\")},rotateByAxis:function(a,b){console.error(\"THREE.Matrix4: .rotateByAxis() has been removed.\")},scale:function(a){var b=\nthis.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,\n0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,g=a.x,f=a.y,h=a.z,k=e*g,l=e*f;this.set(k*g+c,k*f-d*h,k*h+d*f,0,k*f+d*h,l*f+c,l*h-d*g,0,k*h-d*f,l*h+d*g,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,\n0,0,0,0,c,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a,b;return function(c,d,e){void 0===a&&(a=new THREE.Vector3);void 0===b&&(b=new THREE.Matrix4);var g=this.elements,f=a.set(g[0],g[1],g[2]).length(),h=a.set(g[4],g[5],g[6]).length(),k=a.set(g[8],g[9],g[10]).length();0>this.determinant()&&(f=-f);c.x=g[12];c.y=g[13];c.z=g[14];b.elements.set(this.elements);c=1/f;var g=1/h,l=1/k;b.elements[0]*=\nc;b.elements[1]*=c;b.elements[2]*=c;b.elements[4]*=g;b.elements[5]*=g;b.elements[6]*=g;b.elements[8]*=l;b.elements[9]*=l;b.elements[10]*=l;d.setFromRotationMatrix(b);e.x=f;e.y=h;e.z=k;return this}}(),makeFrustum:function(a,b,c,d,e,g){var f=this.elements;f[0]=2*e/(b-a);f[4]=0;f[8]=(b+a)/(b-a);f[12]=0;f[1]=0;f[5]=2*e/(d-c);f[9]=(d+c)/(d-c);f[13]=0;f[2]=0;f[6]=0;f[10]=-(g+e)/(g-e);f[14]=-2*g*e/(g-e);f[3]=0;f[7]=0;f[11]=-1;f[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(THREE.Math.degToRad(.5*\na));var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,g){var f=this.elements,h=b-a,k=c-d,l=g-e;f[0]=2/h;f[4]=0;f[8]=0;f[12]=-((b+a)/h);f[1]=0;f[5]=2/k;f[9]=0;f[13]=-((c+d)/k);f[2]=0;f[6]=0;f[10]=-2/l;f[14]=-((g+e)/l);f[3]=0;f[7]=0;f[11]=0;f[15]=1;return this},equals:function(a){var b=this.elements;a=a.elements;for(var c=0;16>c;c++)if(b[c]!==a[c])return!1;return!0},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],\na[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]}};THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};\nTHREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(a,\nb){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(0>c)return this.origin.distanceToSquared(b);a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceToSquared(b)}}(),\ndistanceSqToSegment:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,g,f){a.copy(d).add(e).multiplyScalar(.5);b.copy(e).sub(d).normalize();c.copy(this.origin).sub(a);var h=.5*d.distanceTo(e),k=-this.direction.dot(b),l=c.dot(this.direction),n=-c.dot(b),p=c.lengthSq(),m=Math.abs(1-k*k),q;0<m?(d=k*n-l,e=k*l-n,q=h*m,0<=d?e>=-q?e<=q?(h=1/m,d*=h,e*=h,k=d*(d+k*e+2*l)+e*(k*d+e+2*n)+p):(e=h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*n)+p):(e=-h,d=Math.max(0,-(k*e+l)),\nk=-d*d+e*(e+2*n)+p):e<=-q?(d=Math.max(0,-(-k*h+l)),e=0<d?-h:Math.min(Math.max(-h,-n),h),k=-d*d+e*(e+2*n)+p):e<=q?(d=0,e=Math.min(Math.max(-h,-n),h),k=e*(e+2*n)+p):(d=Math.max(0,-(k*h+l)),e=0<d?h:Math.min(Math.max(-h,-n),h),k=-d*d+e*(e+2*n)+p)):(e=0<k?-h:h,d=Math.max(0,-(k*e+l)),k=-d*d+e*(e+2*n)+p);g&&g.copy(this.direction).multiplyScalar(d).add(this.origin);f&&f.copy(b).multiplyScalar(e).add(a);return k}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},intersectSphere:function(){var a=\nnew THREE.Vector3;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,g=b.radius*b.radius;if(e>g)return null;g=Math.sqrt(g-e);e=d-g;d+=g;return 0>e&&0>d?null:0>e?this.at(d,c):this.at(e,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);return 0===b||0>a.normal.dot(this.direction)*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;a=-(this.origin.dot(a.normal)+\na.constant)/b;return 0<=a?a:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,g,f;d=1/this.direction.x;g=1/this.direction.y;f=1/this.direction.z;var h=this.origin;0<=d?(c=(a.min.x-h.x)*d,d*=a.max.x-h.x):(c=(a.max.x-h.x)*d,d*=a.min.x-h.x);0<=g?(e=(a.min.y-h.y)*g,g*=a.max.y-h.y):(e=(a.max.y-h.y)*g,g*=a.min.y-\nh.y);if(c>g||e>d)return null;if(e>c||c!==c)c=e;if(g<d||d!==d)d=g;0<=f?(e=(a.min.z-h.z)*f,f*=a.max.z-h.z):(e=(a.max.z-h.z)*f,f*=a.min.z-h.z);if(c>f||e>d)return null;if(e>c||c!==c)c=e;if(f<d||d!==d)d=f;return 0>d?null:this.at(0<=c?c:d,b)},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,g,f,h,k){b.subVectors(g,e);c.subVectors(f,e);d.crossVectors(b,c);g=this.direction.dot(d);if(0<g){if(h)return null;h=1}else if(0>g)h=-1,\ng=-g;else return null;a.subVectors(this.origin,e);e=h*this.direction.dot(c.crossVectors(a,c));if(0>e)return null;f=h*this.direction.dot(b.cross(a));if(0>f||e+f>g)return null;e=-h*a.dot(d);return 0>e?null:this.at(e/g,k)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}};\nTHREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};\nTHREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,g=0,f=b.length;g<f;g++)e=Math.max(e,d.distanceToSquared(b[g]));this.radius=Math.sqrt(e);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},\nempty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));\nreturn d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius}};\nTHREE.Frustum=function(a,b,c,d,e,g){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==g?g:new THREE.Plane]};\nTHREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,g){var f=this.planes;f[0].copy(a);f[1].copy(b);f[2].copy(c);f[3].copy(d);f[4].copy(e);f[5].copy(g);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],g=c[3],f=c[4],h=c[5],k=c[6],l=c[7],n=c[8],p=c[9],m=c[10],q=c[11],t=c[12],r=c[13],u=c[14],\nc=c[15];b[0].setComponents(g-a,l-f,q-n,c-t).normalize();b[1].setComponents(g+a,l+f,q+n,c+t).normalize();b[2].setComponents(g+d,l+h,q+p,c+r).normalize();b[3].setComponents(g-d,l-h,q-p,c-r).normalize();b[4].setComponents(g-e,l-k,q-m,c-u).normalize();b[5].setComponents(g+e,l+k,q+m,c+u).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;null===c.boundingSphere&&c.computeBoundingSphere();a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);\nreturn this.intersectsSphere(a)}}(),intersectsSphere:function(a){var b=this.planes,c=a.center;a=-a.radius;for(var d=0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var g=d[e];a.x=0<g.normal.x?c.min.x:c.max.x;b.x=0<g.normal.x?c.max.x:c.min.x;a.y=0<g.normal.y?c.min.y:c.max.y;b.y=0<g.normal.y?c.max.y:c.min.y;a.z=0<g.normal.z?c.min.z:c.max.z;b.z=0<g.normal.z?c.max.z:c.min.z;\nvar f=g.distanceToPoint(a),g=g.distanceToPoint(b);if(0>f&&0>g)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};\nTHREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){d=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();this.setFromNormalAndCoplanarPoint(d,\nc);return this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,\nb){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a);return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start);a=this.distanceToPoint(a.end);return 0>b&&0<a||0>a&&0<b},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),g=this.normal.dot(e);if(0===g){if(0===this.distanceToPoint(b.start))return d.copy(b.start)}else return g=\n-(b.start.dot(this.normal)+this.constant)/g,0>g||1<g?void 0:d.copy(e).multiplyScalar(g).add(b.start)}}(),coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var g=e||c.getNormalMatrix(d),g=a.copy(this.normal).applyMatrix3(g),f=this.coplanarPoint(b);f.applyMatrix4(d);this.setFromNormalAndCoplanarPoint(g,f);return this}}(),translate:function(a){this.constant-=\na.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant===this.constant}};\nTHREE.Math={generateUUID:function(){var a=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split(\"\"),b=Array(36),c=0,d;return function(){for(var e=0;36>e;e++)8===e||13===e||18===e||23===e?b[e]=\"-\":14===e?b[e]=\"4\":(2>=c&&(c=33554432+16777216*Math.random()|0),d=c&15,c>>=4,b[e]=a[19===e?d&3|8:d]);return b.join(\"\")}}(),clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},euclideanModulo:function(a,b){return(a%b+b)%b},mapLinear:function(a,b,c,d,e){return d+\n(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*(3-2*a)},smootherstep:function(a,b,c){if(a<=b)return 0;if(a>=c)return 1;a=(a-b)/(c-b);return a*a*a*(a*(6*a-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(){var a=Math.PI/\n180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a}};\nTHREE.Spline=function(a){function b(a,b,c,d,e,g,f){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*f+(-3*(b-c)-2*a-d)*g+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,g,f,h,k,l,n,p,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;g=Math.floor(e);f=e-g;c[0]=0===g?g:g-1;c[1]=g;c[2]=g>this.points.length-2?this.points.length-1:g+1;c[3]=g>this.points.length-3?this.points.length-1:g+\n2;l=this.points[c[0]];n=this.points[c[1]];p=this.points[c[2]];m=this.points[c[3]];h=f*f;k=f*h;d.x=b(l.x,n.x,p.x,m.x,f,h,k);d.y=b(l.y,n.y,p.y,m.y,f,h,k);d.z=b(l.z,n.z,p.z,m.z,f,h,k);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,g=new THREE.Vector3,f=new THREE.Vector3,h=[],k=0;h[0]=0;a||(a=100);c=this.points.length*a;g.copy(this.points[0]);for(a=1;a<c;a++)b=\na/c,d=this.getPoint(b),f.copy(d),k+=f.distanceTo(g),g.copy(d),b*=this.points.length-1,b=Math.floor(b),b!==e&&(h[b]=k,e=b);h[h.length]=k;return{chunks:h,total:k}};this.reparametrizeByArcLength=function(a){var b,c,d,e,g,f,h=[],k=new THREE.Vector3,m=this.getLength();h.push(k.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=m.chunks[b]-m.chunks[b-1];f=Math.ceil(a*c/m.total);e=(b-1)/(this.points.length-1);g=b/(this.points.length-1);for(c=1;c<f-1;c++)d=e+1/f*c*(g-e),d=this.getPoint(d),\nh.push(k.copy(d).clone());h.push(k.copy(this.points[b]).clone())}this.points=h}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){e=e||new THREE.Vector3;e.subVectors(d,c);a.subVectors(b,c);e.cross(a);b=e.lengthSq();return 0<b?e.multiplyScalar(1/Math.sqrt(b)):e.set(0,0,0)}}();\nTHREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,g,f,h){a.subVectors(f,e);b.subVectors(g,e);c.subVectors(d,e);d=a.dot(a);e=a.dot(b);g=a.dot(c);var k=b.dot(b);f=b.dot(c);var l=d*k-e*e;h=h||new THREE.Vector3;if(0===l)return h.set(-2,-1,-1);l=1/l;k=(k*g-e*f)*l;d=(d*f-e*g)*l;return h.set(1-k-d,d,k)}}();\nTHREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){b=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return 0<=b.x&&0<=b.y&&1>=b.x+b.y}}();\nTHREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,\nthis.b);return.5*a.cross(b).length()}}(),midpoint:function(a){return(a||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},\nequals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};\nTHREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),\na=.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a}};THREE.EventDispatcher=function(){};\nTHREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]);-1===c[a].indexOf(b)&&\nc[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners[a];if(void 0!==c){var d=c.indexOf(b);-1!==d&&c.splice(d,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners[a.type];if(void 0!==b){a.target=this;for(var c=[],d=b.length,e=0;e<d;e++)c[e]=b[e];for(e=0;e<d;e++)c[e].call(this,a)}}}};\n(function(a){function b(a,b){return a.distance-b.distance}a.Raycaster=function(b,c,g,f){this.ray=new a.Ray(b,c);this.near=g||0;this.far=f||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn(\"THREE.Raycaster: params.PointCloud has been renamed to params.Points.\");return this.Points}}})};var c=function(a,b,g,f){if(!1!==a.visible&&(a.raycast(b,g),!0===f)){a=a.children;f=0;for(var h=a.length;f<h;f++)c(a[f],\nb,g,!0)}};a.Raycaster.prototype={constructor:a.Raycaster,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,c){c instanceof a.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(c.matrixWorld),this.ray.direction.set(b.x,b.y,.5).unproject(c).sub(this.ray.origin).normalize()):c instanceof a.OrthographicCamera?(this.ray.origin.set(b.x,b.y,-1).unproject(c),this.ray.direction.set(0,0,-1).transformDirection(c.matrixWorld)):console.error(\"THREE.Raycaster: Unsupported camera type.\")},\nintersectObject:function(a,e){var g=[];c(a,this,g,e);g.sort(b);return g},intersectObjects:function(a,e){var g=[];if(!1===Array.isArray(a))return console.warn(\"THREE.Raycaster.intersectObjects: objects is not an Array.\"),g;for(var f=0,h=a.length;f<h;f++)c(a[f],this,g,e);g.sort(b);return g}}})(THREE);\nTHREE.Object3D=function(){Object.defineProperty(this,\"id\",{value:THREE.Object3DIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Object3D\";this.parent=null;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1);b.onChange(function(){c.setFromEuler(b,!1)});c.onChange(function(){b.setFromQuaternion(c,void 0,!1)});Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,\nvalue:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}});this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.userData={}};\nTHREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.DefaultMatrixAutoUpdate=!0;\nTHREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){console.warn(\"THREE.Object3D: .eulerOrder has been moved to .rotation.order.\");return this.rotation.order},set eulerOrder(a){console.warn(\"THREE.Object3D: .eulerOrder has been moved to .rotation.order.\");this.rotation.order=a},get useQuaternion(){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},set useQuaternion(a){console.warn(\"THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.\")},\nset renderDepth(a){console.warn(\"THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.\")},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},\nrotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,\nc){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));return this}}(),translate:function(a,b){console.warn(\"THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.\");return this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=\nnew THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(1<arguments.length){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);\nreturn this}if(a===this)return console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",a),this;a instanceof THREE.Object3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:\"added\"}),this.children.push(a)):console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",a);return this},remove:function(a){if(1<arguments.length)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);b=this.children.indexOf(a);-1!==b&&(a.parent=null,a.dispatchEvent({type:\"removed\"}),\nthis.children.splice(b,1))},getChildByName:function(a){console.warn(\"THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().\");return this.getObjectByName(a)},getObjectById:function(a){return this.getObjectByProperty(\"id\",a)},getObjectByName:function(a){return this.getObjectByProperty(\"name\",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c].getObjectByProperty(a,b);if(void 0!==e)return e}},getWorldPosition:function(a){a=\na||new THREE.Vector3;this.updateMatrixWorld(!0);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){c=c||new THREE.Quaternion;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Euler;this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=\nnew THREE.Vector3,b=new THREE.Quaternion;return function(c){c=c||new THREE.Vector3;this.updateMatrixWorld(!0);this.matrixWorld.decompose(a,b,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=this.children,c=0,d=b.length;c<d;c++)b[c].traverse(a)},traverseVisible:function(a){if(!1!==this.visible){a(this);for(var b=\nthis.children,c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}},traverseAncestors:function(a){var b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,\nthis.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},toJSON:function(a){function b(a){var b=[],c;for(c in a){var d=a[c];delete d.metadata;b.push(d)}return b}var c=void 0===a,d={},e={object:d};c&&(a={geometries:{},materials:{},textures:{},images:{}},e.metadata={version:4.4,type:\"Object\",generator:\"Object3D.toJSON\"});d.uuid=this.uuid;d.type=this.type;\"\"!==this.name&&(d.name=this.name);\"{}\"!==JSON.stringify(this.userData)&&\n(d.userData=this.userData);!0!==this.visible&&(d.visible=this.visible);d.matrix=this.matrix.toArray();if(0<this.children.length){d.children=[];for(var g=0;g<this.children.length;g++)d.children.push(this.children[g].toJSON(a).object)}c&&(c=b(a.geometries),d=b(a.materials),g=b(a.textures),a=b(a.images),0<c.length&&(e.geometries=c),0<d.length&&(e.materials=d),0<g.length&&(e.textures=g),0<a.length&&(e.images=a));return e},clone:function(a){return(new this.constructor).copy(this,a)},copy:function(a,b){void 0===\nb&&(b=!0);this.name=a.name;this.up.copy(a.up);this.position.copy(a.position);this.quaternion.copy(a.quaternion);this.scale.copy(a.scale);this.rotationAutoUpdate=a.rotationAutoUpdate;this.matrix.copy(a.matrix);this.matrixWorld.copy(a.matrixWorld);this.matrixAutoUpdate=a.matrixAutoUpdate;this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;this.visible=a.visible;this.castShadow=a.castShadow;this.receiveShadow=a.receiveShadow;this.frustumCulled=a.frustumCulled;this.renderOrder=a.renderOrder;this.userData=\nJSON.parse(JSON.stringify(a.userData));if(!0===b)for(var c=0;c<a.children.length;c++)this.add(a.children[c].clone());return this}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;\nTHREE.Face3=function(a,b,c,d,e,g){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=Array.isArray(d)?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=Array.isArray(e)?e:[];this.materialIndex=void 0!==g?g:0};\nTHREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.a=a.a;this.b=a.b;this.c=a.c;this.normal.copy(a.normal);this.color.copy(a.color);this.materialIndex=a.materialIndex;for(var b=0,c=a.vertexNormals.length;b<c;b++)this.vertexNormals[b]=a.vertexNormals[b].clone();b=0;for(c=a.vertexColors.length;b<c;b++)this.vertexColors[b]=a.vertexColors[b].clone();return this}};\nTHREE.Face4=function(a,b,c,d,e,g,f){console.warn(\"THREE.Face4 has been removed. A THREE.Face3 will be created instead.\");return new THREE.Face3(a,b,c,e,g,f)};THREE.BufferAttribute=function(a,b){this.uuid=THREE.Math.generateUUID();this.array=a;this.itemSize=b;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.version=0};\nTHREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");return this.array.length},get count(){return this.array.length/this.itemSize},set needsUpdate(a){!0===a&&this.version++},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.dynamic=a.dynamic;return this},copyAt:function(a,b,c){a*=this.itemSize;\nc*=b.itemSize;for(var d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this},copyArray:function(a){this.array.set(a);return this},copyColorsArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var g=a[d];void 0===g&&(console.warn(\"THREE.BufferAttribute.copyColorsArray(): color is undefined\",d),g=new THREE.Color);b[c++]=g.r;b[c++]=g.g;b[c++]=g.b}return this},copyIndicesArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var g=a[d];b[c++]=g.a;b[c++]=g.b;b[c++]=\ng.c}return this},copyVector2sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var g=a[d];void 0===g&&(console.warn(\"THREE.BufferAttribute.copyVector2sArray(): vector is undefined\",d),g=new THREE.Vector2);b[c++]=g.x;b[c++]=g.y}return this},copyVector3sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var g=a[d];void 0===g&&(console.warn(\"THREE.BufferAttribute.copyVector3sArray(): vector is undefined\",d),g=new THREE.Vector3);b[c++]=g.x;b[c++]=g.y;b[c++]=g.z}return this},\ncopyVector4sArray:function(a){for(var b=this.array,c=0,d=0,e=a.length;d<e;d++){var g=a[d];void 0===g&&(console.warn(\"THREE.BufferAttribute.copyVector4sArray(): vector is undefined\",d),g=new THREE.Vector4);b[c++]=g.x;b[c++]=g.y;b[c++]=g.z;b[c++]=g.w}return this},set:function(a,b){void 0===b&&(b=0);this.array.set(a,b);return this},getX:function(a){return this.array[a*this.itemSize]},setX:function(a,b){this.array[a*this.itemSize]=b;return this},getY:function(a){return this.array[a*this.itemSize+1]},\nsetY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*this.itemSize+3]},setW:function(a,b){this.array[a*this.itemSize+3]=b;return this},setXY:function(a,b,c){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;return this},setXYZ:function(a,b,c,d){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;return this},setXYZW:function(a,\nb,c,d,e){a*=this.itemSize;this.array[a+0]=b;this.array[a+1]=c;this.array[a+2]=d;this.array[a+3]=e;return this},clone:function(){return(new this.constructor).copy(this)}};THREE.Int8Attribute=function(a,b){return new THREE.BufferAttribute(new Int8Array(a),b)};THREE.Uint8Attribute=function(a,b){return new THREE.BufferAttribute(new Uint8Array(a),b)};THREE.Uint8ClampedAttribute=function(a,b){return new THREE.BufferAttribute(new Uint8ClampedArray(a),b)};\nTHREE.Int16Attribute=function(a,b){return new THREE.BufferAttribute(new Int16Array(a),b)};THREE.Uint16Attribute=function(a,b){return new THREE.BufferAttribute(new Uint16Array(a),b)};THREE.Int32Attribute=function(a,b){return new THREE.BufferAttribute(new Int32Array(a),b)};THREE.Uint32Attribute=function(a,b){return new THREE.BufferAttribute(new Uint32Array(a),b)};THREE.Float32Attribute=function(a,b){return new THREE.BufferAttribute(new Float32Array(a),b)};\nTHREE.Float64Attribute=function(a,b){return new THREE.BufferAttribute(new Float64Array(a),b)};THREE.DynamicBufferAttribute=function(a,b){console.warn(\"THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.\");return(new THREE.BufferAttribute(a,b)).setDynamic(!0)};THREE.InstancedBufferAttribute=function(a,b,c){THREE.BufferAttribute.call(this,a,b);this.meshPerAttribute=c||1};THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);\nTHREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute;THREE.InstancedBufferAttribute.prototype.copy=function(a){THREE.BufferAttribute.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBuffer=function(a,b){this.uuid=THREE.Math.generateUUID();this.array=a;this.stride=b;this.dynamic=!1;this.updateRange={offset:0,count:-1};this.version=0};\nTHREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(a){!0===a&&this.version++},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.stride=a.stride;this.dynamic=a.dynamic},copyAt:function(a,b,c){a*=this.stride;c*=b.stride;for(var d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,\nb){void 0===b&&(b=0);this.array.set(a,b);return this},clone:function(){return(new this.constructor).copy(this)}};THREE.InstancedInterleavedBuffer=function(a,b,c){THREE.InterleavedBuffer.call(this,a,b);this.meshPerAttribute=c||1};THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype);THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer;\nTHREE.InstancedInterleavedBuffer.prototype.copy=function(a){THREE.InterleavedBuffer.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBufferAttribute=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.data=a;this.itemSize=b;this.offset=c};\nTHREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){console.warn(\"THREE.BufferAttribute: .length has been deprecated. Please use .count.\");return this.array.length},get count(){return this.data.array.length/this.data.stride},setX:function(a,b){this.data.array[a*this.data.stride+this.offset]=b;return this},setY:function(a,b){this.data.array[a*this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+\n2]=b;return this},setW:function(a,b){this.data.array[a*this.data.stride+this.offset+3]=b;return this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(a,b,c){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;\nreturn this},setXYZ:function(a,b,c,d){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;return this},setXYZW:function(a,b,c,d,e){a=a*this.data.stride+this.offset;this.data.array[a+0]=b;this.data.array[a+1]=c;this.data.array[a+2]=d;this.data.array[a+3]=e;return this}};\nTHREE.Geometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Geometry\";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=\nthis.elementsNeedUpdate=this.verticesNeedUpdate=!1};\nTHREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){a=this.faces[c];a.normal.applyMatrix3(b).normalize();for(var e=0,g=a.vertexNormals.length;e<g;e++)a.vertexNormals[e].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();this.normalsNeedUpdate=\nthis.verticesNeedUpdate=!0},rotateX:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);\na.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeScale(b,c,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function(b){void 0===a&&(a=new THREE.Object3D);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),fromBufferGeometry:function(a){var b=this,c=null!==a.index?a.index.array:void 0,d=a.attributes,e=d.position.array,g=void 0!==d.normal?d.normal.array:void 0,f=void 0!==\nd.color?d.color.array:void 0,h=void 0!==d.uv?d.uv.array:void 0,k=void 0!==d.uv2?d.uv2.array:void 0;void 0!==k&&(this.faceVertexUvs[1]=[]);for(var l=[],n=[],p=[],m=d=0;d<e.length;d+=3,m+=2)b.vertices.push(new THREE.Vector3(e[d],e[d+1],e[d+2])),void 0!==g&&l.push(new THREE.Vector3(g[d],g[d+1],g[d+2])),void 0!==f&&b.colors.push(new THREE.Color(f[d],f[d+1],f[d+2])),void 0!==h&&n.push(new THREE.Vector2(h[m],h[m+1])),void 0!==k&&p.push(new THREE.Vector2(k[m],k[m+1]));var q=function(a,c,d){var e=void 0!==\ng?[l[a].clone(),l[c].clone(),l[d].clone()]:[],m=void 0!==f?[b.colors[a].clone(),b.colors[c].clone(),b.colors[d].clone()]:[],e=new THREE.Face3(a,c,d,e,m);b.faces.push(e);void 0!==h&&b.faceVertexUvs[0].push([n[a].clone(),n[c].clone(),n[d].clone()]);void 0!==k&&b.faceVertexUvs[1].push([p[a].clone(),p[c].clone(),p[d].clone()])};if(void 0!==c)if(e=a.groups,0<e.length)for(d=0;d<e.length;d++)for(var m=e[d],t=m.start,r=m.count,m=t,t=t+r;m<t;m+=3)q(c[m],c[m+1],c[m+2]);else for(d=0;d<c.length;d+=3)q(c[d],c[d+\n1],c[d+2]);else for(d=0;d<e.length/3;d+=3)q(d,d+1,d+2);this.computeFaceNormals();null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var a=this.boundingSphere.center,b=this.boundingSphere.radius,b=0===b?1:1/b,c=new THREE.Matrix4;c.set(b,\n0,0,-b*a.x,0,b,0,-b*a.y,0,0,b,-b*a.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],g=this.vertices[e.a],f=this.vertices[e.b];a.subVectors(this.vertices[e.c],f);b.subVectors(g,f);a.cross(b);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d;d=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)d[b]=new THREE.Vector3;if(a){var e,g,f,h=\nnew THREE.Vector3,k=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=this.vertices[c.a],g=this.vertices[c.b],f=this.vertices[c.c],h.subVectors(f,g),k.subVectors(e,g),h.cross(k),d[c.a].add(h),d[c.b].add(h),d[c.c].add(h)}else for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],d[c.a].add(c.normal),d[c.b].add(c.normal),d[c.c].add(c.normal);b=0;for(c=this.vertices.length;b<c;b++)d[b].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],e=c.vertexNormals,3===e.length?\n(e[0].copy(d[c.a]),e[1].copy(d[c.b]),e[2].copy(d[c.c])):(e[0]=d[c.a].clone(),e[1]=d[c.b].clone(),e[2]=d[c.c].clone())},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=\ne.vertexNormals[a].clone();var g=new THREE.Geometry;g.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];e=this.morphNormals[a].faceNormals;var f=this.morphNormals[a].vertexNormals,h,k;c=0;for(d=this.faces.length;c<d;c++)h=new THREE.Vector3,k={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},e.push(h),f.push(k)}f=this.morphNormals[a];g.vertices=this.morphTargets[a].vertices;\ng.computeFaceNormals();g.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=f.faceNormals[c],k=f.vertexNormals[c],h.copy(e.normal),k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){console.warn(\"THREE.Geometry: .computeTangents() has been removed.\")},computeLineDistances:function(){for(var a=\n0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(!1===a instanceof THREE.Geometry)console.error(\"THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.\",\na);else{var d,e=this.vertices.length,g=this.vertices,f=a.vertices,h=this.faces,k=a.faces,l=this.faceVertexUvs[0];a=a.faceVertexUvs[0];void 0===c&&(c=0);void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var n=0,p=f.length;n<p;n++){var m=f[n].clone();void 0!==b&&m.applyMatrix4(b);g.push(m)}n=0;for(p=k.length;n<p;n++){var f=k[n],q,t=f.vertexNormals,r=f.vertexColors,m=new THREE.Face3(f.a+e,f.b+e,f.c+e);m.normal.copy(f.normal);void 0!==d&&m.normal.applyMatrix3(d).normalize();b=0;for(g=t.length;b<\ng;b++)q=t[b].clone(),void 0!==d&&q.applyMatrix3(d).normalize(),m.vertexNormals.push(q);m.color.copy(f.color);b=0;for(g=r.length;b<g;b++)q=r[b],m.vertexColors.push(q.clone());m.materialIndex=f.materialIndex+c;h.push(m)}n=0;for(p=a.length;n<p;n++)if(c=a[n],d=[],void 0!==c){b=0;for(g=c.length;b<g;b++)d.push(c[b].clone());l.push(d)}}},mergeMesh:function(a){!1===a instanceof THREE.Mesh?console.error(\"THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.\",a):(a.matrixAutoUpdate&&a.updateMatrix(),\nthis.merge(a.geometry,a.matrix))},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),g,f;g=0;for(f=this.vertices.length;g<f;g++)d=this.vertices[g],d=Math.round(d.x*e)+\"_\"+Math.round(d.y*e)+\"_\"+Math.round(d.z*e),void 0===a[d]?(a[d]=g,b.push(this.vertices[g]),c[g]=b.length-1):c[g]=c[a[d]];a=[];g=0;for(f=this.faces.length;g<f;g++)for(e=this.faces[g],e.a=c[e.a],e.b=c[e.b],e.c=c[e.c],e=[e.a,e.b,e.c],d=0;3>d;d++)if(e[d]===e[(d+1)%3]){a.push(g);break}for(g=a.length-1;0<=g;g--)for(e=a[g],this.faces.splice(e,\n1),c=0,f=this.faceVertexUvs.length;c<f;c++)this.faceVertexUvs[c].splice(e,1);g=this.vertices.length-b.length;this.vertices=b;return g},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();if(void 0!==l[b])return l[b];l[b]=k.length/3;k.push(a.x,a.y,a.z);return l[b]}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();if(void 0!==p[b])return p[b];p[b]=n.length;n.push(a.getHex());return p[b]}function d(a){var b=a.x.toString()+\na.y.toString();if(void 0!==q[b])return q[b];q[b]=m.length/2;m.push(a.x,a.y);return q[b]}var e={metadata:{version:4.4,type:\"Geometry\",generator:\"Geometry.toJSON\"}};e.uuid=this.uuid;e.type=this.type;\"\"!==this.name&&(e.name=this.name);if(void 0!==this.parameters){var g=this.parameters,f;for(f in g)void 0!==g[f]&&(e[f]=g[f]);return e}g=[];for(f=0;f<this.vertices.length;f++){var h=this.vertices[f];g.push(h.x,h.y,h.z)}var h=[],k=[],l={},n=[],p={},m=[],q={};for(f=0;f<this.faces.length;f++){var t=this.faces[f],\nr=void 0!==this.faceVertexUvs[0][f],u=0<t.normal.length(),w=0<t.vertexNormals.length,v=1!==t.color.r||1!==t.color.g||1!==t.color.b,B=0<t.vertexColors.length,x=0,x=a(x,0,0),x=a(x,1,!1),x=a(x,2,!1),x=a(x,3,r),x=a(x,4,u),x=a(x,5,w),x=a(x,6,v),x=a(x,7,B);h.push(x);h.push(t.a,t.b,t.c);r&&(r=this.faceVertexUvs[0][f],h.push(d(r[0]),d(r[1]),d(r[2])));u&&h.push(b(t.normal));w&&(u=t.vertexNormals,h.push(b(u[0]),b(u[1]),b(u[2])));v&&h.push(c(t.color));B&&(t=t.vertexColors,h.push(c(t[0]),c(t[1]),c(t[2])))}e.data=\n{};e.data.vertices=g;e.data.normals=k;0<n.length&&(e.data.colors=n);0<m.length&&(e.data.uvs=[m]);e.data.faces=h;return e},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.vertices=[];this.faces=[];this.faceVertexUvs=[[]];for(var b=a.vertices,c=0,d=b.length;c<d;c++)this.vertices.push(b[c].clone());b=a.faces;c=0;for(d=b.length;c<d;c++)this.faces.push(b[c].clone());c=0;for(d=a.faceVertexUvs.length;c<d;c++){b=a.faceVertexUvs[c];void 0===this.faceVertexUvs[c]&&(this.faceVertexUvs[c]=\n[]);for(var e=0,g=b.length;e<g;e++){for(var f=b[e],h=[],k=0,l=f.length;k<l;k++)h.push(f[k].clone());this.faceVertexUvs[c].push(h)}}return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;\nTHREE.DirectGeometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"DirectGeometry\";this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1};\nTHREE.DirectGeometry.prototype={constructor:THREE.DirectGeometry,computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn(\"THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.\")},computeVertexNormals:function(){console.warn(\"THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.\")},computeGroups:function(a){var b,c=[],\nd;a=a.faces;for(var e=0;e<a.length;e++){var g=a[e];g.materialIndex!==d&&(d=g.materialIndex,void 0!==b&&(b.count=3*e-b.start,c.push(b)),b={start:3*e,materialIndex:d})}void 0!==b&&(b.count=3*e-b.start,c.push(b));this.groups=c},fromGeometry:function(a){var b=a.faces,c=a.vertices,d=a.faceVertexUvs,e=d[0]&&0<d[0].length,g=d[1]&&0<d[1].length,f=a.morphTargets,h=f.length;if(0<h){for(var k=[],l=0;l<h;l++)k[l]=[];this.morphTargets.position=k}var n=a.morphNormals,p=n.length;if(0<p){for(var m=[],l=0;l<p;l++)m[l]=\n[];this.morphTargets.normal=m}for(var q=a.skinIndices,t=a.skinWeights,r=q.length===c.length,u=t.length===c.length,l=0;l<b.length;l++){var w=b[l];this.vertices.push(c[w.a],c[w.b],c[w.c]);var v=w.vertexNormals;3===v.length?this.normals.push(v[0],v[1],v[2]):(v=w.normal,this.normals.push(v,v,v));v=w.vertexColors;3===v.length?this.colors.push(v[0],v[1],v[2]):(v=w.color,this.colors.push(v,v,v));!0===e&&(v=d[0][l],void 0!==v?this.uvs.push(v[0],v[1],v[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv \",\nl),this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)));!0===g&&(v=d[1][l],void 0!==v?this.uvs2.push(v[0],v[1],v[2]):(console.warn(\"THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 \",l),this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)));for(v=0;v<h;v++){var B=f[v].vertices;k[v].push(B[w.a],B[w.b],B[w.c])}for(v=0;v<p;v++)B=n[v].vertexNormals[l],m[v].push(B.a,B.b,B.c);r&&this.skinIndices.push(q[w.a],q[w.b],q[w.c]);u&&this.skinWeights.push(t[w.a],t[w.b],\nt[w.c])}this.computeGroups(a);this.verticesNeedUpdate=a.verticesNeedUpdate;this.normalsNeedUpdate=a.normalsNeedUpdate;this.colorsNeedUpdate=a.colorsNeedUpdate;this.uvsNeedUpdate=a.uvsNeedUpdate;this.groupsNeedUpdate=a.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype);\nTHREE.BufferGeometry=function(){Object.defineProperty(this,\"id\",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"BufferGeometry\";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingSphere=this.boundingBox=null;this.drawRange={start:0,count:Infinity}};\nTHREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addIndex:function(a){console.warn(\"THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().\");this.setIndex(a)},getIndex:function(){return this.index},setIndex:function(a){this.index=a},addAttribute:function(a,b,c){!1===b instanceof THREE.BufferAttribute&&!1===b instanceof THREE.InterleavedBufferAttribute?(console.warn(\"THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).\"),this.addAttribute(a,new THREE.BufferAttribute(b,\nc))):\"index\"===a?(console.warn(\"THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.\"),this.setIndex(b)):this.attributes[a]=b},getAttribute:function(a){return this.attributes[a]},removeAttribute:function(a){delete this.attributes[a]},get drawcalls(){console.error(\"THREE.BufferGeometry: .drawcalls has been renamed to .groups.\");return this.groups},get offsets(){console.warn(\"THREE.BufferGeometry: .offsets has been renamed to .groups.\");return this.groups},addDrawCall:function(a,\nb,c){void 0!==c&&console.warn(\"THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.\");console.warn(\"THREE.BufferGeometry: .addDrawCall() is now .addGroup().\");this.addGroup(a,b)},clearDrawCalls:function(){console.warn(\"THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().\");this.clearGroups()},addGroup:function(a,b,c){this.groups.push({start:a,count:b,materialIndex:void 0!==c?c:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(a,b){this.drawRange.start=a;this.drawRange.count=\nb},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),b.needsUpdate=!0);b=this.attributes.normal;void 0!==b&&((new THREE.Matrix3).getNormalMatrix(a).applyToVector3Array(b.array),b.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere()},rotateX:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationX(b);this.applyMatrix(a);return this}}(),rotateY:function(){var a;\nreturn function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationY(b);this.applyMatrix(a);return this}}(),rotateZ:function(){var a;return function(b){void 0===a&&(a=new THREE.Matrix4);a.makeRotationZ(b);this.applyMatrix(a);return this}}(),translate:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeTranslation(b,c,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function(b,c,d){void 0===a&&(a=new THREE.Matrix4);a.makeScale(b,c,d);this.applyMatrix(a);\nreturn this}}(),lookAt:function(){var a;return function(b){void 0===a&&(a=new THREE.Object3D);a.lookAt(b);a.updateMatrix();this.applyMatrix(a.matrix)}}(),center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(a){var b=a.geometry;if(a instanceof THREE.Points||a instanceof THREE.Line){a=new THREE.Float32Attribute(3*b.vertices.length,3);var c=new THREE.Float32Attribute(3*b.colors.length,3);this.addAttribute(\"position\",\na.copyVector3sArray(b.vertices));this.addAttribute(\"color\",c.copyColorsArray(b.colors));b.lineDistances&&b.lineDistances.length===b.vertices.length&&(a=new THREE.Float32Attribute(b.lineDistances.length,1),this.addAttribute(\"lineDistance\",a.copyArray(b.lineDistances)));null!==b.boundingSphere&&(this.boundingSphere=b.boundingSphere.clone());null!==b.boundingBox&&(this.boundingBox=b.boundingBox.clone())}else a instanceof THREE.Mesh&&b instanceof THREE.Geometry&&this.fromGeometry(b);return this},updateFromObject:function(a){var b=\na.geometry;if(a instanceof THREE.Mesh){var c=b.__directGeometry;if(void 0===c)return this.fromGeometry(b);c.verticesNeedUpdate=b.verticesNeedUpdate;c.normalsNeedUpdate=b.normalsNeedUpdate;c.colorsNeedUpdate=b.colorsNeedUpdate;c.uvsNeedUpdate=b.uvsNeedUpdate;c.groupsNeedUpdate=b.groupsNeedUpdate;b.verticesNeedUpdate=!1;b.normalsNeedUpdate=!1;b.colorsNeedUpdate=!1;b.uvsNeedUpdate=!1;b.groupsNeedUpdate=!1;b=c}!0===b.verticesNeedUpdate&&(c=this.attributes.position,void 0!==c&&(c.copyVector3sArray(b.vertices),\nc.needsUpdate=!0),b.verticesNeedUpdate=!1);!0===b.normalsNeedUpdate&&(c=this.attributes.normal,void 0!==c&&(c.copyVector3sArray(b.normals),c.needsUpdate=!0),b.normalsNeedUpdate=!1);!0===b.colorsNeedUpdate&&(c=this.attributes.color,void 0!==c&&(c.copyColorsArray(b.colors),c.needsUpdate=!0),b.colorsNeedUpdate=!1);b.lineDistancesNeedUpdate&&(c=this.attributes.lineDistance,void 0!==c&&(c.copyArray(b.lineDistances),c.needsUpdate=!0),b.lineDistancesNeedUpdate=!1);b.groupsNeedUpdate&&(b.computeGroups(a.geometry),\nthis.groups=b.groups,b.groupsNeedUpdate=!1);return this},fromGeometry:function(a){a.__directGeometry=(new THREE.DirectGeometry).fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(a){var b=new Float32Array(3*a.vertices.length);this.addAttribute(\"position\",(new THREE.BufferAttribute(b,3)).copyVector3sArray(a.vertices));0<a.normals.length&&(b=new Float32Array(3*a.normals.length),this.addAttribute(\"normal\",(new THREE.BufferAttribute(b,3)).copyVector3sArray(a.normals)));\n0<a.colors.length&&(b=new Float32Array(3*a.colors.length),this.addAttribute(\"color\",(new THREE.BufferAttribute(b,3)).copyColorsArray(a.colors)));0<a.uvs.length&&(b=new Float32Array(2*a.uvs.length),this.addAttribute(\"uv\",(new THREE.BufferAttribute(b,2)).copyVector2sArray(a.uvs)));0<a.uvs2.length&&(b=new Float32Array(2*a.uvs2.length),this.addAttribute(\"uv2\",(new THREE.BufferAttribute(b,2)).copyVector2sArray(a.uvs2)));0<a.indices.length&&(b=new (65535<a.vertices.length?Uint32Array:Uint16Array)(3*a.indices.length),\nthis.setIndex((new THREE.BufferAttribute(b,1)).copyIndicesArray(a.indices)));this.groups=a.groups;for(var c in a.morphTargets){for(var b=[],d=a.morphTargets[c],e=0,g=d.length;e<g;e++){var f=d[e],h=new THREE.Float32Attribute(3*f.length,3);b.push(h.copyVector3sArray(f))}this.morphAttributes[c]=b}0<a.skinIndices.length&&(c=new THREE.Float32Attribute(4*a.skinIndices.length,4),this.addAttribute(\"skinIndex\",c.copyVector4sArray(a.skinIndices)));0<a.skinWeights.length&&(c=new THREE.Float32Attribute(4*a.skinWeights.length,\n4),this.addAttribute(\"skinWeight\",c.copyVector4sArray(a.skinWeights)));null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone());null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone());return this},computeBoundingBox:function(){var a=new THREE.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var b=this.attributes.position.array;if(b){var c=this.boundingBox;c.makeEmpty();for(var d=0,e=b.length;d<e;d+=3)a.fromArray(b,d),c.expandByPoint(a)}if(void 0===\nb||0===b.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0);(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this)}}(),computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;\nif(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,g=c.length;e<g;e+=3)b.fromArray(c,e),a.expandByPoint(b);a.center(d);for(var f=0,e=0,g=c.length;e<g;e+=3)b.fromArray(c,e),f=Math.max(f,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(f);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=\nthis.index,b=this.attributes,c=this.groups;if(b.position){var d=b.position.array;if(void 0===b.normal)this.addAttribute(\"normal\",new THREE.BufferAttribute(new Float32Array(d.length),3));else for(var e=b.normal.array,g=0,f=e.length;g<f;g++)e[g]=0;var e=b.normal.array,h,k,l,n=new THREE.Vector3,p=new THREE.Vector3,m=new THREE.Vector3,q=new THREE.Vector3,t=new THREE.Vector3;if(a){a=a.array;0===c.length&&this.addGroup(0,a.length);for(var r=0,u=c.length;r<u;++r)for(g=c[r],f=g.start,h=g.count,g=f,f+=h;g<\nf;g+=3)h=3*a[g+0],k=3*a[g+1],l=3*a[g+2],n.fromArray(d,h),p.fromArray(d,k),m.fromArray(d,l),q.subVectors(m,p),t.subVectors(n,p),q.cross(t),e[h]+=q.x,e[h+1]+=q.y,e[h+2]+=q.z,e[k]+=q.x,e[k+1]+=q.y,e[k+2]+=q.z,e[l]+=q.x,e[l+1]+=q.y,e[l+2]+=q.z}else for(g=0,f=d.length;g<f;g+=9)n.fromArray(d,g),p.fromArray(d,g+3),m.fromArray(d,g+6),q.subVectors(m,p),t.subVectors(n,p),q.cross(t),e[g]=q.x,e[g+1]=q.y,e[g+2]=q.z,e[g+3]=q.x,e[g+4]=q.y,e[g+5]=q.z,e[g+6]=q.x,e[g+7]=q.y,e[g+8]=q.z;this.normalizeNormals();b.normal.needsUpdate=\n!0}},computeTangents:function(){console.warn(\"THREE.BufferGeometry: .computeTangents() has been removed.\")},computeOffsets:function(a){console.warn(\"THREE.BufferGeometry: .computeOffsets() has been removed.\")},merge:function(a,b){if(!1===a instanceof THREE.BufferGeometry)console.error(\"THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.\",a);else{void 0===b&&(b=0);var c=this.attributes,d;for(d in c)if(void 0!==a.attributes[d])for(var e=c[d].array,g=a.attributes[d],f=g.array,\nh=0,g=g.itemSize*b;h<f.length;h++,g++)e[g]=f[h];return this}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,g=a.length;e<g;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},toJSON:function(){var a={metadata:{version:4.4,type:\"BufferGeometry\",generator:\"BufferGeometry.toJSON\"}};a.uuid=this.uuid;a.type=this.type;\"\"!==this.name&&(a.name=this.name);if(void 0!==this.parameters){var b=this.parameters,c;for(c in b)void 0!==b[c]&&(a[c]=b[c]);\nreturn a}a.data={attributes:{}};var d=this.index;null!==d&&(b=Array.prototype.slice.call(d.array),a.data.index={type:d.array.constructor.name,array:b});d=this.attributes;for(c in d){var e=d[c],b=Array.prototype.slice.call(e.array);a.data.attributes[c]={itemSize:e.itemSize,type:e.array.constructor.name,array:b}}c=this.groups;0<c.length&&(a.data.groups=JSON.parse(JSON.stringify(c)));c=this.boundingSphere;null!==c&&(a.data.boundingSphere={center:c.center.toArray(),radius:c.radius});return a},clone:function(){return(new this.constructor).copy(this)},\ncopy:function(a){var b=a.index;null!==b&&this.setIndex(b.clone());var b=a.attributes,c;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count)}return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.BufferGeometry.MaxIndex=65535;\nTHREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this);this.type=\"InstancedBufferGeometry\";this.maxInstancedCount=void 0};THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry;THREE.InstancedBufferGeometry.prototype.addGroup=function(a,b,c){this.groups.push({start:a,count:b,instances:c})};\nTHREE.InstancedBufferGeometry.prototype.copy=function(a){var b=a.index;null!==b&&this.setIndex(b.clone());var b=a.attributes,c;for(c in b)this.addAttribute(c,b[c].clone());a=a.groups;c=0;for(b=a.length;c<b;c++){var d=a[c];this.addGroup(d.start,d.count,d.instances)}return this};THREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype);THREE.Camera=function(){THREE.Object3D.call(this);this.type=\"Camera\";this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4};\nTHREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){b=b||new THREE.Vector3;this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(){return(new this.constructor).copy(this)};\nTHREE.Camera.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.matrixWorldInverse.copy(a.matrixWorldInverse);this.projectionMatrix.copy(a.projectionMatrix);return this};\nTHREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);this.type=\"CubeCamera\";var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,1);g.lookAt(new THREE.Vector3(0,1,0));this.add(g);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,-1);f.lookAt(new THREE.Vector3(0,-1,0));\nthis.add(f);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var k=new THREE.PerspectiveCamera(90,1,a,b);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,-1));this.add(k);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){null===this.parent&&this.updateMatrixWorld();var c=this.renderTarget,m=c.generateMipmaps;c.generateMipmaps=\n!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=2;a.render(b,g,c);c.activeCubeFace=3;a.render(b,f,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=m;c.activeCubeFace=5;a.render(b,k,c);a.setRenderTarget(null)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;\nTHREE.OrthographicCamera=function(a,b,c,d,e,g){THREE.Camera.call(this);this.type=\"OrthographicCamera\";this.zoom=1;this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:.1;this.far=void 0!==g?g:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(c-a,c+a,d+b,d-b,this.near,this.far)};THREE.OrthographicCamera.prototype.copy=function(a){THREE.Camera.prototype.copy.call(this,a);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;return this};\nTHREE.OrthographicCamera.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;return a};THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.type=\"PerspectiveCamera\";this.zoom=1;this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};\nTHREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,g){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=g;this.updateProjectionMatrix()};\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var a=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var b=this.fullWidth/this.fullHeight,a=Math.tan(THREE.Math.degToRad(.5*a))*this.near,c=-a,d=b*c,b=Math.abs(b*a-d),c=Math.abs(a-c);this.projectionMatrix.makeFrustum(d+this.x*b/this.fullWidth,d+(this.x+this.width)*b/this.fullWidth,a-(this.y+this.height)*c/this.fullHeight,a-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(a,\nthis.aspect,this.near,this.far)};THREE.PerspectiveCamera.prototype.copy=function(a){THREE.Camera.prototype.copy.call(this,a);this.fov=a.fov;this.aspect=a.aspect;this.near=a.near;this.far=a.far;this.zoom=a.zoom;return this};THREE.PerspectiveCamera.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.zoom=this.zoom;a.object.fov=this.fov;a.object.aspect=this.aspect;a.object.near=this.near;a.object.far=this.far;return a};\nTHREE.Light=function(a){THREE.Object3D.call(this);this.type=\"Light\";this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.color.copy(a.color);return this};THREE.AmbientLight=function(a){THREE.Light.call(this,a);this.type=\"AmbientLight\"};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);\nTHREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.AmbientLight.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.color=this.color.getHex();return a};\nTHREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.type=\"DirectionalLight\";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=\nthis.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;\nTHREE.DirectionalLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.intensity=a.intensity;this.target=a.target.clone();this.castShadow=a.castShadow;this.onlyShadow=a.onlyShadow;this.shadowCameraNear=a.shadowCameraNear;this.shadowCameraFar=a.shadowCameraFar;this.shadowCameraLeft=a.shadowCameraLeft;this.shadowCameraRight=a.shadowCameraRight;this.shadowCameraTop=a.shadowCameraTop;this.shadowCameraBottom=a.shadowCameraBottom;this.shadowCameraVisible=a.shadowCameraVisible;this.shadowBias=\na.shadowBias;this.shadowDarkness=a.shadowDarkness;this.shadowMapWidth=a.shadowMapWidth;this.shadowMapHeight=a.shadowMapHeight;return this};THREE.DirectionalLight.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.color=this.color.getHex();a.object.intensity=this.intensity;return a};\nTHREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.type=\"HemisphereLight\";this.position.set(0,1,0);this.updateMatrix();this.groundColor=new THREE.Color(b);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight;THREE.HemisphereLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);this.intensity=a.intensity;return this};\nTHREE.HemisphereLight.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.color=this.color.getHex();a.object.groundColor=this.groundColor.getHex();a.object.intensity=this.intensity;return a};THREE.PointLight=function(a,b,c,d){THREE.Light.call(this,a);this.type=\"PointLight\";this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.decay=void 0!==d?d:1};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.constructor=THREE.PointLight;\nTHREE.PointLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.intensity=a.intensity;this.distance=a.distance;this.decay=a.decay;return this};THREE.PointLight.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.color=this.color.getHex();a.object.intensity=this.intensity;a.object.distance=this.distance;a.object.decay=this.decay;return a};\nTHREE.SpotLight=function(a,b,c,d,e,g){THREE.Light.call(this,a);this.type=\"SpotLight\";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/3;this.exponent=void 0!==e?e:10;this.decay=void 0!==g?g:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=.5;this.shadowMapHeight=\nthis.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;\nTHREE.SpotLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.intensity=a.intensity;this.distance=a.distance;this.angle=a.angle;this.exponent=a.exponent;this.decay=a.decay;this.target=a.target.clone();this.castShadow=a.castShadow;this.onlyShadow=a.onlyShadow;this.shadowCameraNear=a.shadowCameraNear;this.shadowCameraFar=a.shadowCameraFar;this.shadowCameraFov=a.shadowCameraFov;this.shadowCameraVisible=a.shadowCameraVisible;this.shadowBias=a.shadowBias;this.shadowDarkness=a.shadowDarkness;\nthis.shadowMapWidth=a.shadowMapWidth;this.shadowMapHeight=a.shadowMapHeight;return this};THREE.SpotLight.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.color=this.color.getHex();a.object.intensity=this.intensity;a.object.distance=this.distance;a.object.angle=this.angle;a.object.exponent=this.exponent;a.object.decay=this.decay;return a};\nTHREE.Cache={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};THREE.Loader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};\nTHREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,extractUrlBase:function(a){a=a.split(\"/\");if(1===a.length)return\"./\";a.pop();return a.join(\"/\")+\"/\"},initMaterials:function(a,b,c){for(var d=[],e=0;e<a.length;++e)d[e]=this.createMaterial(a[e],b,c);return d},createMaterial:function(){var a;return function(b,c,d){function e(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function g(b,g,f,h,k,l,u){var w=c+f,v,B=THREE.Loader.Handlers.get(w);null!==B?v=B.load(w):(v=new THREE.Texture,\nB=a,B.setCrossOrigin(d),B.load(w,function(a){if(!1===THREE.Math.isPowerOfTwo(a.width)||!1===THREE.Math.isPowerOfTwo(a.height)){var b=e(a.width),c=e(a.height),d=document.createElement(\"canvas\");d.width=b;d.height=c;d.getContext(\"2d\").drawImage(a,0,0,b,c);v.image=d}else v.image=a;v.needsUpdate=!0}));v.sourceFile=f;h&&(v.repeat.set(h[0],h[1]),1!==h[0]&&(v.wrapS=THREE.RepeatWrapping),1!==h[1]&&(v.wrapT=THREE.RepeatWrapping));k&&v.offset.set(k[0],k[1]);l&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},\nvoid 0!==f[l[0]]&&(v.wrapS=f[l[0]]),void 0!==f[l[1]]&&(v.wrapT=f[l[1]]));u&&(v.anisotropy=u);b[g]=v}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}void 0===d&&void 0!==this.crossOrigin&&(d=this.crossOrigin);void 0===a&&(a=new THREE.ImageLoader);var h=\"MeshLambertMaterial\",k={};if(b.shading){var l=b.shading.toLowerCase();\"phong\"===l?h=\"MeshPhongMaterial\":\"basic\"===l&&(h=\"MeshBasicMaterial\")}void 0!==b.blending&&void 0!==THREE[b.blending]&&(k.blending=THREE[b.blending]);void 0!==b.transparent&&\n(k.transparent=b.transparent);void 0!==b.opacity&&1>b.opacity&&(k.transparent=!0);void 0!==b.depthTest&&(k.depthTest=b.depthTest);void 0!==b.depthWrite&&(k.depthWrite=b.depthWrite);void 0!==b.visible&&(k.visible=b.visible);void 0!==b.flipSided&&(k.side=THREE.BackSide);void 0!==b.doubleSided&&(k.side=THREE.DoubleSide);void 0!==b.wireframe&&(k.wireframe=b.wireframe);void 0!==b.vertexColors&&(\"face\"===b.vertexColors?k.vertexColors=THREE.FaceColors:b.vertexColors&&(k.vertexColors=THREE.VertexColors));\nb.colorDiffuse?k.color=f(b.colorDiffuse):b.DbgColor&&(k.color=b.DbgColor);b.colorEmissive&&(k.emissive=f(b.colorEmissive));\"MeshPhongMaterial\"===h&&(b.colorSpecular&&(k.specular=f(b.colorSpecular)),b.specularCoef&&(k.shininess=b.specularCoef));void 0!==b.transparency&&(console.warn(\"THREE.Loader: transparency has been renamed to opacity\"),b.opacity=b.transparency);void 0!==b.opacity&&(k.opacity=b.opacity);c&&(b.mapDiffuse&&g(k,\"map\",b.mapDiffuse,b.mapDiffuseRepeat,b.mapDiffuseOffset,b.mapDiffuseWrap,\nb.mapDiffuseAnisotropy),b.mapLight&&g(k,\"lightMap\",b.mapLight,b.mapLightRepeat,b.mapLightOffset,b.mapLightWrap,b.mapLightAnisotropy),b.mapAO&&g(k,\"aoMap\",b.mapAO,b.mapAORepeat,b.mapAOOffset,b.mapAOWrap,b.mapAOAnisotropy),b.mapBump&&g(k,\"bumpMap\",b.mapBump,b.mapBumpRepeat,b.mapBumpOffset,b.mapBumpWrap,b.mapBumpAnisotropy),b.mapNormal&&g(k,\"normalMap\",b.mapNormal,b.mapNormalRepeat,b.mapNormalOffset,b.mapNormalWrap,b.mapNormalAnisotropy),b.mapSpecular&&g(k,\"specularMap\",b.mapSpecular,b.mapSpecularRepeat,\nb.mapSpecularOffset,b.mapSpecularWrap,b.mapSpecularAnisotropy),b.mapAlpha&&g(k,\"alphaMap\",b.mapAlpha,b.mapAlphaRepeat,b.mapAlphaOffset,b.mapAlphaWrap,b.mapAlphaAnisotropy));b.mapBumpScale&&(k.bumpScale=b.mapBumpScale);b.mapNormalFactor&&(k.normalScale=new THREE.Vector2(b.mapNormalFactor,b.mapNormalFactor));h=new THREE[h](k);void 0!==b.DbgName&&(h.name=b.DbgName);return h}}()};\nTHREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=0,c=this.handlers.length;b<c;b+=2){var d=this.handlers[b+1];if(this.handlers[b].test(a))return d}return null}};THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,g=THREE.Cache.get(a);if(void 0!==g)return b&&setTimeout(function(){b(g)},0),g;var f=new XMLHttpRequest;f.open(\"GET\",a,!0);f.addEventListener(\"load\",function(c){THREE.Cache.add(a,this.response);b&&b(this.response);e.manager.itemEnd(a)},!1);void 0!==c&&f.addEventListener(\"progress\",function(a){c(a)},!1);f.addEventListener(\"error\",function(b){d&&d(b);e.manager.itemError(a)},!1);void 0!==this.crossOrigin&&(f.crossOrigin=\nthis.crossOrigin);void 0!==this.responseType&&(f.responseType=this.responseType);void 0!==this.withCredentials&&(f.withCredentials=this.withCredentials);f.send(null);e.manager.itemStart(a);return f},setResponseType:function(a){this.responseType=a},setCrossOrigin:function(a){this.crossOrigin=a},setWithCredentials:function(a){this.withCredentials=a}};THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,g=THREE.Cache.get(a);if(void 0!==g)return b&&setTimeout(function(){b(g)},0),g;var f=document.createElement(\"img\");f.addEventListener(\"load\",function(c){THREE.Cache.add(a,this);b&&b(this);e.manager.itemEnd(a)},!1);void 0!==c&&f.addEventListener(\"progress\",function(a){c(a)},!1);f.addEventListener(\"error\",function(b){d&&d(b);e.manager.itemError(a)},!1);void 0!==this.crossOrigin&&(f.crossOrigin=this.crossOrigin);\ne.manager.itemStart(a);f.src=a;return f},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.JSONLoader=function(a){\"boolean\"===typeof a&&(console.warn(\"THREE.JSONLoader: showStatus parameter has been removed from constructor.\"),a=void 0);this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.withCredentials=!1};\nTHREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){void 0===this._statusDomElement&&(this._statusDomElement=document.createElement(\"div\"));console.warn(\"THREE.JSONLoader: .statusDomElement has been removed.\");return this._statusDomElement},load:function(a,b,c,d){var e=this,g=this.texturePath&&\"string\"===typeof this.texturePath?this.texturePath:THREE.Loader.prototype.extractUrlBase(a);c=new THREE.XHRLoader(this.manager);c.setCrossOrigin(this.crossOrigin);c.setWithCredentials(this.withCredentials);\nc.load(a,function(c){c=JSON.parse(c);var d=c.metadata;if(void 0!==d){if(\"object\"===d.type){console.error(\"THREE.JSONLoader: \"+a+\" should be loaded with THREE.ObjectLoader instead.\");return}if(\"scene\"===d.type){console.error(\"THREE.JSONLoader: \"+a+\" should be loaded with THREE.SceneLoader instead.\");return}}c=e.parse(c,g);b(c.geometry,c.materials)})},setCrossOrigin:function(a){this.crossOrigin=a},setTexturePath:function(a){this.texturePath=a},parse:function(a,b){var c=new THREE.Geometry,d=void 0!==\na.scale?1/a.scale:1;(function(b){var d,f,h,k,l,n,p,m,q,t,r,u,w,v=a.faces;n=a.vertices;var B=a.normals,x=a.colors,H=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&H++;for(d=0;d<H;d++)c.faceVertexUvs[d]=[]}k=0;for(l=n.length;k<l;)d=new THREE.Vector3,d.x=n[k++]*b,d.y=n[k++]*b,d.z=n[k++]*b,c.vertices.push(d);k=0;for(l=v.length;k<l;)if(b=v[k++],q=b&1,h=b&2,d=b&8,p=b&16,t=b&32,n=b&64,b&=128,q){q=new THREE.Face3;q.a=v[k];q.b=v[k+1];q.c=v[k+3];r=new THREE.Face3;r.a=v[k+1];r.b=v[k+2];r.c=\nv[k+3];k+=4;h&&(h=v[k++],q.materialIndex=h,r.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<H;d++)for(u=a.uvs[d],c.faceVertexUvs[d][h]=[],c.faceVertexUvs[d][h+1]=[],f=0;4>f;f++)m=v[k++],w=u[2*m],m=u[2*m+1],w=new THREE.Vector2(w,m),2!==f&&c.faceVertexUvs[d][h].push(w),0!==f&&c.faceVertexUvs[d][h+1].push(w);p&&(p=3*v[k++],q.normal.set(B[p++],B[p++],B[p]),r.normal.copy(q.normal));if(t)for(d=0;4>d;d++)p=3*v[k++],t=new THREE.Vector3(B[p++],B[p++],B[p]),2!==d&&q.vertexNormals.push(t),0!==d&&r.vertexNormals.push(t);\nn&&(n=v[k++],n=x[n],q.color.setHex(n),r.color.setHex(n));if(b)for(d=0;4>d;d++)n=v[k++],n=x[n],2!==d&&q.vertexColors.push(new THREE.Color(n)),0!==d&&r.vertexColors.push(new THREE.Color(n));c.faces.push(q);c.faces.push(r)}else{q=new THREE.Face3;q.a=v[k++];q.b=v[k++];q.c=v[k++];h&&(h=v[k++],q.materialIndex=h);h=c.faces.length;if(d)for(d=0;d<H;d++)for(u=a.uvs[d],c.faceVertexUvs[d][h]=[],f=0;3>f;f++)m=v[k++],w=u[2*m],m=u[2*m+1],w=new THREE.Vector2(w,m),c.faceVertexUvs[d][h].push(w);p&&(p=3*v[k++],q.normal.set(B[p++],\nB[p++],B[p]));if(t)for(d=0;3>d;d++)p=3*v[k++],t=new THREE.Vector3(B[p++],B[p++],B[p]),q.vertexNormals.push(t);n&&(n=v[k++],q.color.setHex(x[n]));if(b)for(d=0;3>d;d++)n=v[k++],q.vertexColors.push(new THREE.Color(x[n]));c.faces.push(q)}})(d);(function(){var b=void 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var d=0,f=a.skinWeights.length;d<f;d+=b)c.skinWeights.push(new THREE.Vector4(a.skinWeights[d],1<b?a.skinWeights[d+1]:0,2<b?a.skinWeights[d+2]:0,3<b?a.skinWeights[d+3]:\n0));if(a.skinIndices)for(d=0,f=a.skinIndices.length;d<f;d+=b)c.skinIndices.push(new THREE.Vector4(a.skinIndices[d],1<b?a.skinIndices[d+1]:0,2<b?a.skinIndices[d+2]:0,3<b?a.skinIndices[d+3]:0));c.bones=a.bones;c.bones&&0<c.bones.length&&(c.skinWeights.length!==c.skinIndices.length||c.skinIndices.length!==c.vertices.length)&&console.warn(\"When skinning, number of vertices (\"+c.vertices.length+\"), skinIndices (\"+c.skinIndices.length+\"), and skinWeights (\"+c.skinWeights.length+\") should match.\");c.animation=\na.animation;c.animations=a.animations})();(function(b){if(void 0!==a.morphTargets){var d,f,h,k,l,n;d=0;for(f=a.morphTargets.length;d<f;d++)for(c.morphTargets[d]={},c.morphTargets[d].name=a.morphTargets[d].name,c.morphTargets[d].vertices=[],l=c.morphTargets[d].vertices,n=a.morphTargets[d].vertices,h=0,k=n.length;h<k;h+=3){var p=new THREE.Vector3;p.x=n[h]*b;p.y=n[h+1]*b;p.z=n[h+2]*b;l.push(p)}}if(void 0!==a.morphColors)for(d=0,f=a.morphColors.length;d<f;d++)for(c.morphColors[d]={},c.morphColors[d].name=\na.morphColors[d].name,c.morphColors[d].colors=[],k=c.morphColors[d].colors,l=a.morphColors[d].colors,b=0,h=l.length;b<h;b+=3)n=new THREE.Color(16755200),n.setRGB(l[b],l[b+1],l[b+2]),k.push(n)})(d);c.computeFaceNormals();c.computeBoundingSphere();if(void 0===a.materials||0===a.materials.length)return{geometry:c};d=THREE.Loader.prototype.initMaterials(a.materials,b,this.crossOrigin);return{geometry:c,materials:d}}};\nTHREE.LoadingManager=function(a,b,c){var d=this,e=!1,g=0,f=0;this.onStart=void 0;this.onLoad=a;this.onProgress=b;this.onError=c;this.itemStart=function(a){f++;if(!1===e&&void 0!==d.onStart)d.onStart(a,g,f);e=!0};this.itemEnd=function(a){g++;if(void 0!==d.onProgress)d.onProgress(a,g,f);if(g===f&&(e=!1,void 0!==d.onLoad))d.onLoad()};this.itemError=function(a){if(void 0!==d.onError)d.onError(a)}};THREE.DefaultLoadingManager=new THREE.LoadingManager;\nTHREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var e=this,g=new THREE.XHRLoader(e.manager);g.setCrossOrigin(this.crossOrigin);g.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,c=a.data.index;void 0!==c&&(c=new self[c.type](c.array),b.setIndex(new THREE.BufferAttribute(c,1)));var d=a.data.attributes,e;for(e in d){var g=d[e],c=new self[g.type](g.array);\nb.addAttribute(e,new THREE.BufferAttribute(c,g.itemSize))}e=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==e)for(c=0,d=e.length;c!==d;++c)g=e[c],b.addGroup(g.start,g.count);a=a.data.boundingSphere;void 0!==a&&(e=new THREE.Vector3,void 0!==a.center&&e.fromArray(a.center),b.boundingSphere=new THREE.Sphere(e,a.radius));return b}};THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.textures={}};\nTHREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,c,d){var e=this,g=new THREE.XHRLoader(e.manager);g.setCrossOrigin(this.crossOrigin);g.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},setTextures:function(a){this.textures=a},getTexture:function(a){var b=this.textures;void 0===b[a]&&console.warn(\"THREE.MaterialLoader: Undefined texture\",a);return b[a]},parse:function(a){var b=new THREE[a.type];b.uuid=a.uuid;void 0!==\na.name&&(b.name=a.name);void 0!==a.color&&b.color.setHex(a.color);void 0!==a.emissive&&b.emissive.setHex(a.emissive);void 0!==a.specular&&b.specular.setHex(a.specular);void 0!==a.shininess&&(b.shininess=a.shininess);void 0!==a.uniforms&&(b.uniforms=a.uniforms);void 0!==a.vertexShader&&(b.vertexShader=a.vertexShader);void 0!==a.fragmentShader&&(b.fragmentShader=a.fragmentShader);void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors);void 0!==a.shading&&(b.shading=a.shading);void 0!==a.blending&&\n(b.blending=a.blending);void 0!==a.side&&(b.side=a.side);void 0!==a.opacity&&(b.opacity=a.opacity);void 0!==a.transparent&&(b.transparent=a.transparent);void 0!==a.alphaTest&&(b.alphaTest=a.alphaTest);void 0!==a.depthTest&&(b.depthTest=a.depthTest);void 0!==a.depthWrite&&(b.depthWrite=a.depthWrite);void 0!==a.wireframe&&(b.wireframe=a.wireframe);void 0!==a.wireframeLinewidth&&(b.wireframeLinewidth=a.wireframeLinewidth);void 0!==a.size&&(b.size=a.size);void 0!==a.sizeAttenuation&&(b.sizeAttenuation=\na.sizeAttenuation);void 0!==a.map&&(b.map=this.getTexture(a.map));void 0!==a.alphaMap&&(b.alphaMap=this.getTexture(a.alphaMap),b.transparent=!0);void 0!==a.bumpMap&&(b.bumpMap=this.getTexture(a.bumpMap));void 0!==a.bumpScale&&(b.bumpScale=a.bumpScale);void 0!==a.normalMap&&(b.normalMap=this.getTexture(a.normalMap));a.normalScale&&(b.normalScale=new THREE.Vector2(a.normalScale,a.normalScale));void 0!==a.displacementMap&&(b.displacementMap=this.getTexture(a.displacementMap));void 0!==a.displacementScale&&\n(b.displacementScale=a.displacementScale);void 0!==a.displacementBias&&(b.displacementBias=a.displacementBias);void 0!==a.specularMap&&(b.specularMap=this.getTexture(a.specularMap));void 0!==a.envMap&&(b.envMap=this.getTexture(a.envMap),b.combine=THREE.MultiplyOperation);a.reflectivity&&(b.reflectivity=a.reflectivity);void 0!==a.lightMap&&(b.lightMap=this.getTexture(a.lightMap));void 0!==a.lightMapIntensity&&(b.lightMapIntensity=a.lightMapIntensity);void 0!==a.aoMap&&(b.aoMap=this.getTexture(a.aoMap));\nvoid 0!==a.aoMapIntensity&&(b.aoMapIntensity=a.aoMapIntensity);if(void 0!==a.materials)for(var c=0,d=a.materials.length;c<d;c++)b.materials.push(this.parse(a.materials[c]));return b}};THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this.texturePath=\"\"};\nTHREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,c,d){\"\"===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf(\"/\")+1));var e=this,g=new THREE.XHRLoader(e.manager);g.setCrossOrigin(this.crossOrigin);g.load(a,function(a){e.parse(JSON.parse(a),b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==b&&b(e)}),\nd=this.parseTextures(a.textures,d),d=this.parseMaterials(a.materials,d),e=this.parseObject(a.object,c,d);void 0!==a.images&&0!==a.images.length||void 0===b||b(e);return e},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,e=0,g=a.length;e<g;e++){var f,h=a[e];switch(h.type){case \"PlaneGeometry\":case \"PlaneBufferGeometry\":f=new THREE[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case \"BoxGeometry\":case \"CubeGeometry\":f=\nnew THREE.BoxGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case \"CircleBufferGeometry\":f=new THREE.CircleBufferGeometry(h.radius,h.segments,h.thetaStart,h.thetaLength);break;case \"CircleGeometry\":f=new THREE.CircleGeometry(h.radius,h.segments,h.thetaStart,h.thetaLength);break;case \"CylinderGeometry\":f=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case \"SphereGeometry\":f=\nnew THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case \"SphereBufferGeometry\":f=new THREE.SphereBufferGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case \"DodecahedronGeometry\":f=new THREE.DodecahedronGeometry(h.radius,h.detail);break;case \"IcosahedronGeometry\":f=new THREE.IcosahedronGeometry(h.radius,h.detail);break;case \"OctahedronGeometry\":f=new THREE.OctahedronGeometry(h.radius,\nh.detail);break;case \"TetrahedronGeometry\":f=new THREE.TetrahedronGeometry(h.radius,h.detail);break;case \"RingGeometry\":f=new THREE.RingGeometry(h.innerRadius,h.outerRadius,h.thetaSegments,h.phiSegments,h.thetaStart,h.thetaLength);break;case \"TorusGeometry\":f=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case \"TorusKnotGeometry\":f=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case \"TextGeometry\":f=\nnew THREE.TextGeometry(h.text,h.data);break;case \"BufferGeometry\":f=d.parse(h);break;case \"Geometry\":f=c.parse(h.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+h.type+'\"');continue}f.uuid=h.uuid;void 0!==h.name&&(f.name=h.name);b[h.uuid]=f}return b},parseMaterials:function(a,b){var c={};if(void 0!==a){var d=new THREE.MaterialLoader;d.setTextures(b);for(var e=0,g=a.length;e<g;e++){var f=d.parse(a[e]);c[f.uuid]=f}}return c},parseImages:function(a,\nb){function c(a){d.manager.itemStart(a);return f.load(a,function(){d.manager.itemEnd(a)})}var d=this,e={};if(void 0!==a&&0<a.length){var g=new THREE.LoadingManager(b),f=new THREE.ImageLoader(g);f.setCrossOrigin(this.crossOrigin);for(var g=0,h=a.length;g<h;g++){var k=a[g],l=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(k.url)?k.url:d.texturePath+k.url;e[k.uuid]=c(l)}}return e},parseTextures:function(a,b){function c(a){if(\"number\"===typeof a)return a;console.warn(\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\",\na);return THREE[a]}var d={};if(void 0!==a)for(var e=0,g=a.length;e<g;e++){var f=a[e];void 0===f.image&&console.warn('THREE.ObjectLoader: No \"image\" specified for',f.uuid);void 0===b[f.image]&&console.warn(\"THREE.ObjectLoader: Undefined image\",f.image);var h=new THREE.Texture(b[f.image]);h.needsUpdate=!0;h.uuid=f.uuid;void 0!==f.name&&(h.name=f.name);void 0!==f.mapping&&(h.mapping=c(f.mapping));void 0!==f.offset&&(h.offset=new THREE.Vector2(f.offset[0],f.offset[1]));void 0!==f.repeat&&(h.repeat=new THREE.Vector2(f.repeat[0],\nf.repeat[1]));void 0!==f.minFilter&&(h.minFilter=c(f.minFilter));void 0!==f.magFilter&&(h.magFilter=c(f.magFilter));void 0!==f.anisotropy&&(h.anisotropy=f.anisotropy);Array.isArray(f.wrap)&&(h.wrapS=c(f.wrap[0]),h.wrapT=c(f.wrap[1]));d[f.uuid]=h}return d},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){var e;e=function(a){void 0===c[a]&&console.warn(\"THREE.ObjectLoader: Undefined geometry\",a);return c[a]};var g=function(a){void 0===d[a]&&console.warn(\"THREE.ObjectLoader: Undefined material\",\na);return d[a]};switch(b.type){case \"Scene\":e=new THREE.Scene;break;case \"PerspectiveCamera\":e=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);break;case \"OrthographicCamera\":e=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case \"AmbientLight\":e=new THREE.AmbientLight(b.color);break;case \"DirectionalLight\":e=new THREE.DirectionalLight(b.color,b.intensity);break;case \"PointLight\":e=new THREE.PointLight(b.color,b.intensity,b.distance,b.decay);break;case \"SpotLight\":e=\nnew THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.exponent,b.decay);break;case \"HemisphereLight\":e=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case \"Mesh\":e=new THREE.Mesh(e(b.geometry),g(b.material));break;case \"LOD\":e=new THREE.LOD;break;case \"Line\":e=new THREE.Line(e(b.geometry),g(b.material),b.mode);break;case \"PointCloud\":case \"Points\":e=new THREE.Points(e(b.geometry),g(b.material));break;case \"Sprite\":e=new THREE.Sprite(g(b.material));break;case \"Group\":e=new THREE.Group;\nbreak;default:e=new THREE.Object3D}e.uuid=b.uuid;void 0!==b.name&&(e.name=b.name);void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(e.position,e.quaternion,e.scale)):(void 0!==b.position&&e.position.fromArray(b.position),void 0!==b.rotation&&e.rotation.fromArray(b.rotation),void 0!==b.scale&&e.scale.fromArray(b.scale));void 0!==b.castShadow&&(e.castShadow=b.castShadow);void 0!==b.receiveShadow&&(e.receiveShadow=b.receiveShadow);void 0!==b.visible&&(e.visible=b.visible);void 0!==b.userData&&(e.userData=\nb.userData);if(void 0!==b.children)for(var f in b.children)e.add(this.parseObject(b.children[f],c,d));if(\"LOD\"===b.type)for(b=b.levels,g=0;g<b.length;g++){var h=b[g];f=e.getObjectByProperty(\"uuid\",h.object);void 0!==f&&e.addLevel(f,h.distance)}return e}}()};THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};\nTHREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,c,d){var e=new THREE.ImageLoader(this.manager);e.setCrossOrigin(this.crossOrigin);e.load(a,function(a){a=new THREE.Texture(a);a.needsUpdate=!0;void 0!==b&&b(a)},c,d)},setCrossOrigin:function(a){this.crossOrigin=a}};THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this._parser=null};\nTHREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(a,b,c,d){var e=this,g=new THREE.DataTexture,f=new THREE.XHRLoader(this.manager);f.setCrossOrigin(this.crossOrigin);f.setResponseType(\"arraybuffer\");f.load(a,function(a){if(a=e._parser(a))void 0!==a.image?g.image=a.image:void 0!==a.data&&(g.image.width=a.width,g.image.height=a.height,g.image.data=a.data),g.wrapS=void 0!==a.wrapS?a.wrapS:THREE.ClampToEdgeWrapping,g.wrapT=void 0!==a.wrapT?a.wrapT:THREE.ClampToEdgeWrapping,\ng.magFilter=void 0!==a.magFilter?a.magFilter:THREE.LinearFilter,g.minFilter=void 0!==a.minFilter?a.minFilter:THREE.LinearMipMapLinearFilter,g.anisotropy=void 0!==a.anisotropy?a.anisotropy:1,void 0!==a.format&&(g.format=a.format),void 0!==a.type&&(g.type=a.type),void 0!==a.mipmaps&&(g.mipmaps=a.mipmaps),1===a.mipmapCount&&(g.minFilter=THREE.LinearFilter),g.needsUpdate=!0,b&&b(g,a)},c,d);return g},setCrossOrigin:function(a){this.crossOrigin=a}};\nTHREE.CompressedTextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager;this._parser=null};\nTHREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(a,b,c,d){var e=this,g=[],f=new THREE.CompressedTexture;f.image=g;var h=new THREE.XHRLoader(this.manager);h.setCrossOrigin(this.crossOrigin);h.setResponseType(\"arraybuffer\");if(Array.isArray(a))for(var k=0,l=function(m){h.load(a[m],function(a){a=e._parser(a,!0);g[m]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps};k+=1;6===k&&(1===a.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.format=\na.format,f.needsUpdate=!0,b&&b(f))},c,d)},n=0,p=a.length;n<p;++n)l(n);else h.load(a,function(a){a=e._parser(a,!0);if(a.isCubemap)for(var c=a.mipmaps.length/a.mipmapCount,d=0;d<c;d++){g[d]={mipmaps:[]};for(var h=0;h<a.mipmapCount;h++)g[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+h]),g[d].format=a.format,g[d].width=a.width,g[d].height=a.height}else f.image.width=a.width,f.image.height=a.height,f.mipmaps=a.mipmaps;1===a.mipmapCount&&(f.minFilter=THREE.LinearFilter);f.format=a.format;f.needsUpdate=!0;b&&\nb(f)},c,d);return f},setCrossOrigin:function(a){this.crossOrigin=a}};\nTHREE.Material=function(){Object.defineProperty(this,\"id\",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name=\"\";this.type=\"Material\";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.depthFunc=THREE.LessEqualDepth;this.colorWrite=this.depthWrite=\nthis.depthTest=!0;this.precision=null;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this._needsUpdate=this.visible=!0};\nTHREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){!0===a&&this.update();this._needsUpdate=a},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn(\"THREE.Material: '\"+b+\"' parameter is undefined.\");else{var d=this[b];void 0===d?console.warn(\"THREE.\"+this.type+\": '\"+b+\"' is not a property of this material.\"):d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):\nthis[b]=\"overdraw\"===b?Number(c):c}}},toJSON:function(a){var b={metadata:{version:4.4,type:\"Material\",generator:\"Material.toJSON\"}};b.uuid=this.uuid;b.type=this.type;\"\"!==this.name&&(b.name=this.name);this.color instanceof THREE.Color&&(b.color=this.color.getHex());this.emissive instanceof THREE.Color&&(b.emissive=this.emissive.getHex());this.specular instanceof THREE.Color&&(b.specular=this.specular.getHex());void 0!==this.shininess&&(b.shininess=this.shininess);this.map instanceof THREE.Texture&&\n(b.map=this.map.toJSON(a).uuid);this.alphaMap instanceof THREE.Texture&&(b.alphaMap=this.alphaMap.toJSON(a).uuid);this.lightMap instanceof THREE.Texture&&(b.lightMap=this.lightMap.toJSON(a).uuid);this.bumpMap instanceof THREE.Texture&&(b.bumpMap=this.bumpMap.toJSON(a).uuid,b.bumpScale=this.bumpScale);this.normalMap instanceof THREE.Texture&&(b.normalMap=this.normalMap.toJSON(a).uuid,b.normalScale=this.normalScale);this.displacementMap instanceof THREE.Texture&&(b.displacementMap=this.displacementMap.toJSON(a).uuid,\nb.displacementScale=this.displacementScale,b.displacementBias=this.displacementBias);this.specularMap instanceof THREE.Texture&&(b.specularMap=this.specularMap.toJSON(a).uuid);this.envMap instanceof THREE.Texture&&(b.envMap=this.envMap.toJSON(a).uuid,b.reflectivity=this.reflectivity);void 0!==this.size&&(b.size=this.size);void 0!==this.sizeAttenuation&&(b.sizeAttenuation=this.sizeAttenuation);void 0!==this.vertexColors&&this.vertexColors!==THREE.NoColors&&(b.vertexColors=this.vertexColors);void 0!==\nthis.shading&&this.shading!==THREE.SmoothShading&&(b.shading=this.shading);void 0!==this.blending&&this.blending!==THREE.NormalBlending&&(b.blending=this.blending);void 0!==this.side&&this.side!==THREE.FrontSide&&(b.side=this.side);1>this.opacity&&(b.opacity=this.opacity);!0===this.transparent&&(b.transparent=this.transparent);0<this.alphaTest&&(b.alphaTest=this.alphaTest);!0===this.wireframe&&(b.wireframe=this.wireframe);1<this.wireframeLinewidth&&(b.wireframeLinewidth=this.wireframeLinewidth);return b},\nclone:function(){return(new this.constructor).copy(this)},copy:function(a){this.name=a.name;this.side=a.side;this.opacity=a.opacity;this.transparent=a.transparent;this.blending=a.blending;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=a.blendDstAlpha;this.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.precision=a.precision;this.polygonOffset=\na.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.alphaTest=a.alphaTest;this.overdraw=a.overdraw;this.visible=a.visible;return this},update:function(){this.dispatchEvent({type:\"update\"})},dispose:function(){this.dispatchEvent({type:\"dispose\"})},get wrapAround(){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")},set wrapAround(a){console.warn(\"THREE.\"+this.type+\": .wrapAround has been removed.\")},get wrapRGB(){console.warn(\"THREE.\"+\nthis.type+\": .wrapRGB has been removed.\");return new THREE.Color}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type=\"LineBasicMaterial\";this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap=\"round\";this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);\nTHREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;THREE.LineBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};\nTHREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type=\"LineDashedMaterial\";this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;\nTHREE.LineDashedMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};\nTHREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type=\"MeshBasicMaterial\";this.color=new THREE.Color(16777215);this.aoMap=this.map=null;this.aoMapIntensity=1;this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=\n!1;this.setValues(a)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;\nTHREE.MeshBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;\nthis.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};\nTHREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type=\"MeshLambertMaterial\";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.envMap=this.alphaMap=this.specularMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};\nTHREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;\nTHREE.MeshLambertMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.emissive.copy(a.emissive);this.map=a.map;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;\nthis.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};\nTHREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type=\"MeshPhongMaterial\";this.color=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.lightMap=this.map=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.bumpMap=this.emissiveMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=\n0;this.envMap=this.alphaMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=\"round\";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;\nTHREE.MeshPhongMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.emissive.copy(a.emissive);this.specular.copy(a.specular);this.shininess=a.shininess;this.metal=a.metal;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissiveMap=a.emissiveMap;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);\nthis.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=\na.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type=\"MeshDepthMaterial\";this.wireframe=this.morphTargets=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;\nTHREE.MeshDepthMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type=\"MeshNormalMaterial\";this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;\nTHREE.MeshNormalMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};THREE.MultiMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type=\"MultiMaterial\";this.materials=a instanceof Array?a:[];this.visible=!0};\nTHREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(){for(var a={metadata:{version:4.2,type:\"material\",generator:\"MaterialExporter\"},uuid:this.uuid,type:this.type,materials:[]},b=0,c=this.materials.length;b<c;b++)a.materials.push(this.materials[b].toJSON());a.visible=this.visible;return a},clone:function(){for(var a=new this.constructor,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());a.visible=this.visible;return a}};THREE.MeshFaceMaterial=THREE.MultiMaterial;\nTHREE.PointsMaterial=function(a){THREE.Material.call(this);this.type=\"PointsMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=THREE.NoColors;this.fog=!0;this.setValues(a)};THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial;\nTHREE.PointsMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};THREE.PointCloudMaterial=function(a){console.warn(\"THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)};\nTHREE.ParticleBasicMaterial=function(a){console.warn(\"THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)};THREE.ParticleSystemMaterial=function(a){console.warn(\"THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.\");return new THREE.PointsMaterial(a)};\nTHREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type=\"ShaderMaterial\";this.defines={};this.uniforms={};this.vertexShader=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";this.fragmentShader=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.derivatives=this.morphNormals=\nthis.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=void 0;void 0!==a&&(void 0!==a.attributes&&console.error(\"THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.\"),this.setValues(a))};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;\nTHREE.ShaderMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.attributes=a.attributes;this.defines=a.defines;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.fog=a.fog;this.lights=a.lights;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=\na.morphNormals;this.derivatives=a.derivatives;return this};THREE.ShaderMaterial.prototype.toJSON=function(a){a=THREE.Material.prototype.toJSON.call(this,a);a.uniforms=this.uniforms;a.attributes=this.attributes;a.vertexShader=this.vertexShader;a.fragmentShader=this.fragmentShader;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type=\"RawShaderMaterial\"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);\nTHREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type=\"SpriteMaterial\";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=!1;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;\nTHREE.SpriteMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;this.fog=a.fog;return this};\nTHREE.Texture=function(a,b,c,d,e,g,f,h,k){Object.defineProperty(this,\"id\",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.sourceFile=this.name=\"\";this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==g?g:THREE.LinearMipMapLinearFilter;\nthis.anisotropy=void 0!==k?k:1;this.format=void 0!==f?f:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.version=0;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=void 0;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;\nTHREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(a){!0===a&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;this.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=\na.premultiplyAlpha;this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;return this},toJSON:function(a){if(void 0!==a.textures[this.uuid])return a.textures[this.uuid];var b={metadata:{version:4.4,type:\"Texture\",generator:\"Texture.toJSON\"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(void 0!==this.image){var c=\nthis.image;void 0===c.uuid&&(c.uuid=THREE.Math.generateUUID());if(void 0===a.images[c.uuid]){var d=a.images,e=c.uuid,g=c.uuid,f;void 0!==c.toDataURL?f=c:(f=document.createElement(\"canvas\"),f.width=c.width,f.height=c.height,f.getContext(\"2d\").drawImage(c,0,0,c.width,c.height));f=2048<f.width||2048<f.height?f.toDataURL(\"image/jpeg\",.6):f.toDataURL(\"image/png\");d[e]={uuid:g,url:f}}b.image=c.uuid}return a.textures[this.uuid]=b},dispose:function(){this.dispatchEvent({type:\"dispose\"})},transformUv:function(a){if(this.mapping===\nTHREE.UVMapping){a.multiply(this.repeat);a.add(this.offset);if(0>a.x||1<a.x)switch(this.wrapS){case THREE.RepeatWrapping:a.x-=Math.floor(a.x);break;case THREE.ClampToEdgeWrapping:a.x=0>a.x?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x-=Math.floor(a.x)}if(0>a.y||1<a.y)switch(this.wrapT){case THREE.RepeatWrapping:a.y-=Math.floor(a.y);break;case THREE.ClampToEdgeWrapping:a.y=0>a.y?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(a.y)%\n2)?a.y=Math.ceil(a.y)-a.y:a.y-=Math.floor(a.y)}this.flipY&&(a.y=1-a.y)}}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CanvasTexture=function(a,b,c,d,e,g,f,h,k){THREE.Texture.call(this,a,b,c,d,e,g,f,h,k);this.needsUpdate=!0};THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture;\nTHREE.CubeTexture=function(a,b,c,d,e,g,f,h,k){b=void 0!==b?b:THREE.CubeReflectionMapping;THREE.Texture.call(this,a,b,c,d,e,g,f,h,k);this.images=a;this.flipY=!1};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;THREE.CubeTexture.prototype.copy=function(a){THREE.Texture.prototype.copy.call(this,a);this.images=a.images;return this};\nTHREE.CompressedTexture=function(a,b,c,d,e,g,f,h,k,l,n){THREE.Texture.call(this,null,g,f,h,k,l,d,e,n);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=this.flipY=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;\nTHREE.DataTexture=function(a,b,c,d,e,g,f,h,k,l,n){THREE.Texture.call(this,null,g,f,h,k,l,d,e,n);this.image={data:a,width:b,height:c};this.magFilter=void 0!==k?k:THREE.NearestFilter;this.minFilter=void 0!==l?l:THREE.NearestFilter;this.generateMipmaps=this.flipY=!1};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;\nTHREE.VideoTexture=function(a,b,c,d,e,g,f,h,k){THREE.Texture.call(this,a,b,c,d,e,g,f,h,k);this.generateMipmaps=!1;var l=this,n=function(){requestAnimationFrame(n);a.readyState===a.HAVE_ENOUGH_DATA&&(l.needsUpdate=!0)};n()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;THREE.Group=function(){THREE.Object3D.call(this);this.type=\"Group\"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Group.prototype.constructor=THREE.Group;THREE.Points=function(a,b){THREE.Object3D.call(this);this.type=\"Points\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.PointsMaterial({color:16777215*Math.random()})};THREE.Points.prototype=Object.create(THREE.Object3D.prototype);THREE.Points.prototype.constructor=THREE.Points;\nTHREE.Points.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray;return function(c,d){function e(a,e){var f=b.distanceSqToPoint(a);if(f<k){var h=b.closestPointToPoint(a);h.applyMatrix4(g.matrixWorld);var l=c.ray.origin.distanceTo(h);l<c.near||l>c.far||d.push({distance:l,distanceToRay:Math.sqrt(f),point:h.clone(),index:e,face:null,object:g})}}var g=this,f=g.geometry,h=c.params.Points.threshold;a.getInverse(this.matrixWorld);b.copy(c.ray).applyMatrix4(a);if(null===f.boundingBox||!1!==\nb.isIntersectionBox(f.boundingBox)){var h=h/((this.scale.x+this.scale.y+this.scale.z)/3),k=h*h,h=new THREE.Vector3;if(f instanceof THREE.BufferGeometry){var l=f.index,f=f.attributes.position.array;if(null!==l)for(var n=l.array,l=0,p=n.length;l<p;l++){var m=n[l];h.fromArray(f,3*m);e(h,m)}else for(l=0,n=f.length/3;l<n;l++)h.fromArray(f,3*l),e(h,l)}else for(h=f.vertices,l=0,n=h.length;l<n;l++)e(h[l],l)}}}();THREE.Points.prototype.clone=function(){return(new this.constructor(this.geometry,this.material)).copy(this)};\nTHREE.Points.prototype.toJSON=function(a){var b=THREE.Object3D.prototype.toJSON.call(this,a);void 0===a.geometries[this.geometry.uuid]&&(a.geometries[this.geometry.uuid]=this.geometry.toJSON());void 0===a.materials[this.material.uuid]&&(a.materials[this.material.uuid]=this.material.toJSON());b.object.geometry=this.geometry.uuid;b.object.material=this.material.uuid;return b};\nTHREE.PointCloud=function(a,b){console.warn(\"THREE.PointCloud has been renamed to THREE.Points.\");return new THREE.Points(a,b)};THREE.ParticleSystem=function(a,b){console.warn(\"THREE.ParticleSystem has been renamed to THREE.Points.\");return new THREE.Points(a,b)};\nTHREE.Line=function(a,b,c){if(1===c)return console.warn(\"THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.\"),new THREE.LineSegments(a,b);THREE.Object3D.call(this);this.type=\"Line\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()})};THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.constructor=THREE.Line;\nTHREE.Line.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var g=d.linePrecision,g=g*g,f=this.geometry;null===f.boundingSphere&&f.computeBoundingSphere();c.copy(f.boundingSphere);c.applyMatrix4(this.matrixWorld);if(!1!==d.ray.isIntersectionSphere(c)){a.getInverse(this.matrixWorld);b.copy(d.ray).applyMatrix4(a);var h=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector3,p=this instanceof THREE.LineSegments?2:1;if(f instanceof\nTHREE.BufferGeometry){var m=f.index,q=f.attributes;if(null!==m)for(var f=m.array,q=q.position.array,m=0,t=f.length-1;m<t;m+=p){var r=f[m+1];h.fromArray(q,3*f[m]);k.fromArray(q,3*r);r=b.distanceSqToSegment(h,k,n,l);r>g||(n.applyMatrix4(this.matrixWorld),r=d.ray.origin.distanceTo(n),r<d.near||r>d.far||e.push({distance:r,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this}))}else for(q=q.position.array,m=0,t=q.length/3-1;m<t;m+=p)h.fromArray(q,3*m),k.fromArray(q,\n3*m+3),r=b.distanceSqToSegment(h,k,n,l),r>g||(n.applyMatrix4(this.matrixWorld),r=d.ray.origin.distanceTo(n),r<d.near||r>d.far||e.push({distance:r,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this}))}else if(f instanceof THREE.Geometry)for(h=f.vertices,k=h.length,m=0;m<k-1;m+=p)r=b.distanceSqToSegment(h[m],h[m+1],n,l),r>g||(n.applyMatrix4(this.matrixWorld),r=d.ray.origin.distanceTo(n),r<d.near||r>d.far||e.push({distance:r,point:l.clone().applyMatrix4(this.matrixWorld),\nindex:m,face:null,faceIndex:null,object:this}))}}}();THREE.Line.prototype.clone=function(){return(new this.constructor(this.geometry,this.material)).copy(this)};\nTHREE.Line.prototype.toJSON=function(a){var b=THREE.Object3D.prototype.toJSON.call(this,a);void 0===a.geometries[this.geometry.uuid]&&(a.geometries[this.geometry.uuid]=this.geometry.toJSON());void 0===a.materials[this.material.uuid]&&(a.materials[this.material.uuid]=this.material.toJSON());b.object.geometry=this.geometry.uuid;b.object.material=this.material.uuid;return b};THREE.LineStrip=0;THREE.LinePieces=1;THREE.LineSegments=function(a,b){THREE.Line.call(this,a,b);this.type=\"LineSegments\"};\nTHREE.LineSegments.prototype=Object.create(THREE.Line.prototype);THREE.LineSegments.prototype.constructor=THREE.LineSegments;THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.type=\"Mesh\";this.geometry=void 0!==a?a:new THREE.Geometry;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.constructor=THREE.Mesh;\nTHREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};\nTHREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.warn(\"THREE.Mesh.getMorphTargetIndexByName: morph target \"+a+\" does not exist. Returning 0.\");return 0};\nTHREE.Mesh.prototype.raycast=function(){function a(a,b,c,d,e,f,g){THREE.Triangle.barycoordFromPoint(a,b,c,d,q);e.multiplyScalar(q.x);f.multiplyScalar(q.y);g.multiplyScalar(q.z);e.add(f).add(g);return e.clone()}var b=new THREE.Matrix4,c=new THREE.Ray,d=new THREE.Sphere,e=new THREE.Vector3,g=new THREE.Vector3,f=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,n=new THREE.Vector2,p=new THREE.Vector2,m=new THREE.Vector2,q=new THREE.Vector3,t=new THREE.Vector3,r=new THREE.Vector3;\nreturn function(q,w){var v=this.geometry,B=this.material;if(void 0!==B&&(null===v.boundingSphere&&v.computeBoundingSphere(),d.copy(v.boundingSphere),d.applyMatrix4(this.matrixWorld),!1!==q.ray.isIntersectionSphere(d)&&(b.getInverse(this.matrixWorld),c.copy(q.ray).applyMatrix4(b),null===v.boundingBox||!1!==c.isIntersectionBox(v.boundingBox)))){var x,H,I;if(v instanceof THREE.BufferGeometry)if(x=v.index,v=v.attributes,null!==x)for(var z=x.array,D=v.position.array,G=0,O=z.length;G<O;G+=3){x=z[G];H=z[G+\n1];I=z[G+2];e.fromArray(D,3*x);g.fromArray(D,3*H);f.fromArray(D,3*I);if(B.side===THREE.BackSide){if(null===c.intersectTriangle(f,g,e,!0,t))continue}else if(null===c.intersectTriangle(e,g,f,B.side!==THREE.DoubleSide,t))continue;r.copy(t);r.applyMatrix4(this.matrixWorld);var C=q.ray.origin.distanceTo(r);if(!(C<q.near||C>q.far)){var F;void 0!==v.uv&&(F=v.uv.array,n.fromArray(F,2*x),p.fromArray(F,2*H),m.fromArray(F,2*I),F=a(t,e,g,f,n,p,m));w.push({distance:C,point:r.clone(),uv:F,face:new THREE.Face3(x,\nH,I,THREE.Triangle.normal(e,g,f)),faceIndex:Math.floor(G/3),object:this})}}else for(D=v.position.array,G=0,O=D.length;G<O;G+=9){e.fromArray(D,G);g.fromArray(D,G+3);f.fromArray(D,G+6);if(B.side===THREE.BackSide){if(null===c.intersectTriangle(f,g,e,!0,t))continue}else if(null===c.intersectTriangle(e,g,f,B.side!==THREE.DoubleSide,t))continue;r.copy(t);r.applyMatrix4(this.matrixWorld);C=q.ray.origin.distanceTo(r);C<q.near||C>q.far||(void 0!==v.uv&&(F=v.uv.array,n.fromArray(F,G),p.fromArray(F,G+2),m.fromArray(F,\nG+4),F=a(t,e,g,f,n,p,m)),x=G/3,H=x+1,I=x+2,w.push({distance:C,point:r.clone(),uv:F,face:new THREE.Face3(x,H,I,THREE.Triangle.normal(e,g,f)),index:x,object:this}))}else if(v instanceof THREE.Geometry)for(var z=B instanceof THREE.MeshFaceMaterial,D=!0===z?B.materials:null,G=v.vertices,O=v.faces,K=0,L=O.length;K<L;K++){var E=O[K],C=!0===z?D[E.materialIndex]:B;if(void 0!==C){x=G[E.a];H=G[E.b];I=G[E.c];if(!0===C.morphTargets){var J=v.morphTargets,y=this.morphTargetInfluences;e.set(0,0,0);g.set(0,0,0);\nf.set(0,0,0);for(var P=0,U=J.length;P<U;P++){var Q=y[P];if(0!==Q){var R=J[P].vertices;e.addScaledVector(h.subVectors(R[E.a],x),Q);g.addScaledVector(k.subVectors(R[E.b],H),Q);f.addScaledVector(l.subVectors(R[E.c],I),Q)}}e.add(x);g.add(H);f.add(I);x=e;H=g;I=f}if(C.side===THREE.BackSide){if(null===c.intersectTriangle(I,H,x,!0,t))continue}else if(null===c.intersectTriangle(x,H,I,C.side!==THREE.DoubleSide,t))continue;r.copy(t);r.applyMatrix4(this.matrixWorld);C=q.ray.origin.distanceTo(r);C<q.near||C>q.far||\n(0<v.faceVertexUvs[0].length&&(F=v.faceVertexUvs[0][K],n.copy(F[0]),p.copy(F[1]),m.copy(F[2]),F=a(t,x,H,I,n,p,m)),w.push({distance:C,point:r.clone(),uv:F,face:E,faceIndex:K,object:this}))}}}}}();THREE.Mesh.prototype.clone=function(){return(new this.constructor(this.geometry,this.material)).copy(this)};\nTHREE.Mesh.prototype.toJSON=function(a){var b=THREE.Object3D.prototype.toJSON.call(this,a);void 0===a.geometries[this.geometry.uuid]&&(a.geometries[this.geometry.uuid]=this.geometry.toJSON(a));void 0===a.materials[this.material.uuid]&&(a.materials[this.material.uuid]=this.material.toJSON(a));b.object.geometry=this.geometry.uuid;b.object.material=this.material.uuid;return b};THREE.Bone=function(a){THREE.Object3D.call(this);this.type=\"Bone\";this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.skin=a.skin;return this};\nTHREE.Skeleton=function(a,b,c){this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;a=a||[];this.bones=a.slice(0);this.useVertexTexture?(a=Math.sqrt(4*this.bones.length),a=THREE.Math.nextPowerOfTwo(Math.ceil(a)),this.boneTextureHeight=this.boneTextureWidth=a=Math.max(a,4),this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)):\nthis.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else for(console.warn(\"THREE.Skeleton bonInverses is the wrong length.\"),this.boneInverses=[],b=0,a=this.bones.length;b<a;b++)this.boneInverses.push(new THREE.Matrix4)};\nTHREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,b=this.bones.length;a<b;a++){var c=new THREE.Matrix4;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld);this.boneInverses.push(c)}};\nTHREE.Skeleton.prototype.pose=function(){for(var a,b=0,c=this.bones.length;b<c;b++)(a=this.bones[b])&&a.matrixWorld.getInverse(this.boneInverses[b]);b=0;for(c=this.bones.length;b<c;b++)if(a=this.bones[b])a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale)};\nTHREE.Skeleton.prototype.update=function(){var a=new THREE.Matrix4;return function(){for(var b=0,c=this.bones.length;b<c;b++)a.multiplyMatrices(this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();THREE.Skeleton.prototype.clone=function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)};\nTHREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.type=\"SkinnedMesh\";this.bindMode=\"attached\";this.bindMatrix=new THREE.Matrix4;this.bindMatrixInverse=new THREE.Matrix4;a=[];if(this.geometry&&void 0!==this.geometry.bones){for(var d,e=0,g=this.geometry.bones.length;e<g;++e)d=this.geometry.bones[e],b=new THREE.Bone(this),a.push(b),b.name=d.name,b.position.fromArray(d.pos),b.quaternion.fromArray(d.rotq),void 0!==d.scl&&b.scale.fromArray(d.scl);e=0;for(g=this.geometry.bones.length;e<g;++e)d=\nthis.geometry.bones[e],-1!==d.parent?a[d.parent].add(a[e]):this.add(a[e])}this.normalizeSkinWeights();this.updateMatrixWorld(!0);this.bind(new THREE.Skeleton(a,void 0,c),this.matrixWorld)};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a;void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld);this.bindMatrix.copy(b);this.bindMatrixInverse.getInverse(b)};\nTHREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};\nTHREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0);\"attached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):\"detached\"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn(\"THREE.SkinnedMesh unrecognized bindMode: \"+this.bindMode)};THREE.SkinnedMesh.prototype.clone=function(){return(new this.constructor(this.geometry,this.material,this.useVertexTexture)).copy(this)};\nTHREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.type=\"MorphAnimMesh\";this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,a.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;\nTHREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};\nTHREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)_?(\\d+)/,e=0,g=a.morphTargets.length;e<g;e++){var f=a.morphTargets[e].name.match(d);if(f&&1<f.length){f=f[1];c[f]||(c[f]={start:Infinity,end:-Infinity});var h=c[f];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=f)}}a.firstAnimation=b};\nTHREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=(c.end-c.start)/b*1E3,this.time=0):console.warn(\"THREE.MorphAnimMesh: animation[\"+a+\"] undefined in .playAnimation()\")};\nTHREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);var c=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a=this.morphTargetInfluences;\nc!==this.currentKeyframe&&(a[this.lastKeyframe]=0,a[this.currentKeyframe]=1,a[c]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=c);b=this.time%b/b;this.directionBackwards&&(b=1-b);a[this.currentKeyframe]=b;a[this.lastKeyframe]=1-b};THREE.MorphAnimMesh.prototype.interpolateTargets=function(a,b,c){for(var d=this.morphTargetInfluences,e=0,g=d.length;e<g;e++)d[e]=0;-1<a&&(d[a]=1-c);-1<b&&(d[b]=c)};\nTHREE.MorphAnimMesh.prototype.copy=function(a){THREE.Mesh.prototype.copy.call(this,a);this.duration=a.duration;this.mirroredLoop=a.mirroredLoop;this.time=a.time;this.lastKeyframe=a.lastKeyframe;this.currentKeyframe=a.currentKeyframe;this.direction=a.direction;this.directionBackwards=a.directionBackwards;return this};\nTHREE.LOD=function(){THREE.Object3D.call(this);this.type=\"LOD\";Object.defineProperties(this,{levels:{enumerable:!0,value:[]},objects:{get:function(){console.warn(\"THREE.LOD: .objects has been renamed to .levels.\");return this.levels}}})};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.constructor=THREE.LOD;\nTHREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=this.levels,d=0;d<c.length&&!(b<c[d].distance);d++);c.splice(d,0,{distance:b,object:a});this.add(a)};THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=this.levels,c=1,d=b.length;c<d&&!(a<b[c].distance);c++);return b[c-1].object};\nTHREE.LOD.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}();\nTHREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){var d=this.levels;if(1<d.length){a.setFromMatrixPosition(c.matrixWorld);b.setFromMatrixPosition(this.matrixWorld);c=a.distanceTo(b);d[0].object.visible=!0;for(var e=1,g=d.length;e<g;e++)if(c>=d[e].distance)d[e-1].object.visible=!1,d[e].object.visible=!0;else break;for(;e<g;e++)d[e].object.visible=!1}}}();\nTHREE.LOD.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a,!1);a=a.levels;for(var b=0,c=a.length;b<c;b++){var d=a[b];this.addLevel(d.object.clone(),d.distance)}return this};THREE.LOD.prototype.toJSON=function(a){a=THREE.Object3D.prototype.toJSON.call(this,a);a.object.levels=[];for(var b=this.levels,c=0,d=b.length;c<d;c++){var e=b[c];a.object.levels.push({object:e.object.uuid,distance:e.distance})}return a};\nTHREE.Sprite=function(){var a=new Uint16Array([0,1,2,0,2,3]),b=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),c=new Float32Array([0,0,1,0,1,1,0,1]),d=new THREE.BufferGeometry;d.setIndex(new THREE.BufferAttribute(a,1));d.addAttribute(\"position\",new THREE.BufferAttribute(b,3));d.addAttribute(\"uv\",new THREE.BufferAttribute(c,2));return function(a){THREE.Object3D.call(this);this.type=\"Sprite\";this.geometry=d;this.material=void 0!==a?a:new THREE.SpriteMaterial}}();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceSqToPoint(a);d>this.scale.x*this.scale.y||c.push({distance:Math.sqrt(d),point:this.position,face:null,object:this})}}();THREE.Sprite.prototype.clone=function(){return(new this.constructor(this.material)).copy(this)};\nTHREE.Sprite.prototype.toJSON=function(a){var b=THREE.Object3D.prototype.toJSON.call(this,a);void 0===a.materials[this.material.uuid]&&(a.materials[this.material.uuid]=this.material.toJSON());b.object.material=this.material.uuid;return b};THREE.Particle=THREE.Sprite;THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.add=function(a,b,c,d,e,g){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===g&&(g=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:g,color:e,blending:d})};\nTHREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)};\nTHREE.LensFlare.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.positionScreen.copy(a.positionScreen);this.customUpdateCallback=a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this};THREE.Scene=function(){THREE.Object3D.call(this);this.type=\"Scene\";this.overrideMaterial=this.fog=null;this.autoUpdate=!0};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.constructor=THREE.Scene;\nTHREE.Scene.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);null!==a.fog&&(this.fog=a.fog.clone());null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone());this.autoUpdate=a.autoUpdate;this.matrixAutoUpdate=a.matrixAutoUpdate;return this};THREE.Fog=function(a,b,c){this.name=\"\";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};\nTHREE.FogExp2=function(a,b){this.name=\"\";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";THREE.ShaderChunk.alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\n\\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";THREE.ShaderChunk.alphatest_fragment=\"#ifdef ALPHATEST\\n\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.aomap_fragment=\"#ifdef USE_AOMAP\\n\\n\\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";THREE.ShaderChunk.aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n\\n#endif\";THREE.ShaderChunk.begin_vertex=\"\\nvec3 transformed = vec3( position );\\n\";THREE.ShaderChunk.beginnormal_vertex=\"\\nvec3 objectNormal = vec3( normal );\\n\";THREE.ShaderChunk.bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\n\\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\\tvec2 dHdxy_fwd() {\\n\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\\t\\treturn vec2( dBx, dBy );\\n\\n\\t}\\n\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\t\\t// normalized\\n\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\\t}\\n\\n#endif\\n\";\nTHREE.ShaderChunk.color_fragment=\"#ifdef USE_COLOR\\n\\n\\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";THREE.ShaderChunk.color_pars_fragment=\"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\\n\";THREE.ShaderChunk.color_pars_vertex=\"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\";THREE.ShaderChunk.color_vertex=\"#ifdef USE_COLOR\\n\\n\\tvColor.xyz = color.xyz;\\n\\n#endif\";THREE.ShaderChunk.common=\"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\\tif ( decayExponent > 0.0 ) {\\n\\n\\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\\t}\\n\\n\\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\\t// Original approximation by Christophe Schlick '94\\n\\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\\t// geometry term is (n\\u22c5l)(n\\u22c5v) / 4(n\\u22c5l)(n\\u22c5v)\\n\\n\\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\\t// factor of 1/PI in distribution term omitted\\n\\n\\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\\t#ifdef GAMMA_INPUT\\n\\n\\t\\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\\t#else\\n\\n\\t\\treturn a;\\n\\n\\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\\t#ifdef GAMMA_OUTPUT\\n\\n\\t\\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\\t#else\\n\\n\\t\\treturn a;\\n\\n\\t#endif\\n\\n}\\n\";\nTHREE.ShaderChunk.defaultnormal_vertex=\"#ifdef FLIP_SIDED\\n\\n\\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";THREE.ShaderChunk.displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";THREE.ShaderChunk.displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";THREE.ShaderChunk.emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\n\\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";THREE.ShaderChunk.envmap_fragment=\"#ifdef USE_ENVMAP\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\\t\\t// Transforming Normal Vectors with the Inverse Transformation\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t\\t#endif\\n\\n\\t#else\\n\\n\\t\\tvec3 reflectVec = vReflect;\\n\\n\\t#endif\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#else\\n\\t\\tfloat flipNormal = 1.0;\\n\\t#endif\\n\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#endif\\n\\n\\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_pars_fragment=\"#ifdef USE_ENVMAP\\n\\n\\tuniform float reflectivity;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\\t\\tuniform float refractionRatio;\\n\\n\\t#else\\n\\n\\t\\tvarying vec3 vReflect;\\n\\n\\t#endif\\n\\n#endif\\n\";THREE.ShaderChunk.envmap_pars_vertex=\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\\tvarying vec3 vReflect;\\n\\n\\tuniform float refractionRatio;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.envmap_vertex=\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\\t#else\\n\\n\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.fog_fragment=\"#ifdef USE_FOG\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\\t#else\\n\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\\t#endif\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\\t#else\\n\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\\t#endif\\n\\t\\n\\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\nTHREE.ShaderChunk.fog_pars_fragment=\"#ifdef USE_FOG\\n\\n\\tuniform vec3 fogColor;\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tuniform float fogDensity;\\n\\n\\t#else\\n\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n\\n#endif\";THREE.ShaderChunk.lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\n\\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";THREE.ShaderChunk.lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n\\n#endif\";\nTHREE.ShaderChunk.lights_lambert_pars_vertex=\"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_lambert_vertex=\"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lightColor = pointLightColor[ i ];\\n\\n\\t\\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\\t\\tvec3 lightDir = normalize( lVector );\\n\\n\\t\\t// attenuation\\n\\n\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat dotProduct = dot( normal, lightDir );\\n\\n\\t\\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\\t\\t#endif\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lightColor = spotLightColor[ i ];\\n\\n\\t\\tvec3 lightPosition = spotLightPosition[ i ];\\n\\t\\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\\t\\tvec3 lightDir = normalize( lVector );\\n\\n\\t\\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\\t\\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\\t\\t\\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\\t\\t\\t// attenuation\\n\\n\\t\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\\t\\t\\tattenuation *= spotEffect;\\n\\n\\t\\t\\t// diffuse\\n\\n\\t\\t\\tfloat dotProduct = dot( normal, lightDir );\\n\\n\\t\\t\\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\\t\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\t\\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t}\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\\t\\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat dotProduct = dot( normal, lightDir );\\n\\n\\t\\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\\t\\t#endif\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat dotProduct = dot( normal, lightDir );\\n\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\\t\\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\t\\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\\t\\t\\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\\t\\t#endif\\n\\n\\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_fragment=\"#ifndef FLAT_SHADED\\n\\n\\tvec3 normal = normalize( vNormal );\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\n\\t\\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\\t#endif\\n\\n#else\\n\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lightColor = pointLightColor[ i ];\\n\\n\\t\\tvec3 lightPosition = pointLightPosition[ i ];\\n\\t\\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\\t\\tvec3 lightDir = normalize( lVector );\\n\\n\\t\\t// attenuation\\n\\n\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\\t\\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\\t\\t// specular\\n\\n\\t\\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\\t\\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lightColor = spotLightColor[ i ];\\n\\n\\t\\tvec3 lightPosition = spotLightPosition[ i ];\\n\\t\\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\\t\\tvec3 lightDir = normalize( lVector );\\n\\n\\t\\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\\t\\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\\t\\t\\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\\t\\t\\t// attenuation\\n\\n\\t\\t\\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\\t\\t\\tattenuation *= spotEffect;\\n\\n\\t\\t\\t// diffuse\\n\\n\\t\\t\\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\\t\\t\\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\\t\\t\\t// specular\\n\\n\\t\\t\\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\\t\\t\\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\t\\t}\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\\t\\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\\t\\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\\t\\t// specular\\n\\n\\t\\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\\t\\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\\t\\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\\t\\t// diffuse\\n\\n\\t\\tfloat dotProduct = dot( normal, lightDir );\\n\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\\t\\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\\t\\ttotalDiffuseLight += lightColor;\\n\\n\\t\\t// specular (sky term only)\\n\\n\\t\\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\\t\\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_pars_fragment=\"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\\tvarying vec3 vNormal;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.lights_phong_pars_vertex=\"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";THREE.ShaderChunk.lights_phong_vertex=\"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";THREE.ShaderChunk.linear_to_gamma_fragment=\"\\n\\toutgoingLight = linearToOutput( outgoingLight );\\n\";THREE.ShaderChunk.logdepthbuf_fragment=\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\nTHREE.ShaderChunk.logdepthbuf_pars_fragment=\"#ifdef USE_LOGDEPTHBUF\\n\\n\\tuniform float logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n#endif\\n\";THREE.ShaderChunk.logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n\\tuniform float logDepthBufFC;\\n\\n#endif\";THREE.ShaderChunk.logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\\t#endif\\n\\n#endif\";\nTHREE.ShaderChunk.map_fragment=\"#ifdef USE_MAP\\n\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\n\\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";THREE.ShaderChunk.map_pars_fragment=\"#ifdef USE_MAP\\n\\n\\tuniform sampler2D map;\\n\\n#endif\";THREE.ShaderChunk.map_particle_fragment=\"#ifdef USE_MAP\\n\\n\\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\nTHREE.ShaderChunk.map_particle_pars_fragment=\"#ifdef USE_MAP\\n\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n\\n#endif\\n\";THREE.ShaderChunk.morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\nTHREE.ShaderChunk.morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\n\\t#else\\n\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\n\\t#endif\\n\\n#endif\";THREE.ShaderChunk.morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\n\\t// Per-Pixel Tangent Space Normal Mapping\\n\\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\n\\t}\\n\\n#endif\\n\";\nTHREE.ShaderChunk.project_vertex=\"#ifdef USE_SKINNING\\n\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";THREE.ShaderChunk.shadowmap_fragment=\"#ifdef USE_SHADOWMAP\\n\\n\\t#ifdef SHADOWMAP_DEBUG\\n\\n\\t\\tvec3 frustumColors[3];\\n\\t\\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\\t\\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\\t\\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\\t#endif\\n\\n\\tfloat fDepth;\\n\\tvec3 shadowColor = vec3( 1.0 );\\n\\n\\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\\t\\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\\t\\t\\t\\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\\t\\t\\t\\t// if ( all( something, something ) ) using this instead\\n\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\n\\t\\tif ( frustumTest ) {\\n\\n\\t\\t\\tshadowCoord.z += shadowBias[ i ];\\n\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\\t\\t\\t\\t\\t\\t// Percentage-close filtering\\n\\t\\t\\t\\t\\t\\t// (9 pixel kernel)\\n\\t\\t\\t\\t\\t\\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\\t\\t\\t\\tfloat shadow = 0.0;\\n\\n\\t\\t/*\\n\\t\\t\\t\\t\\t\\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\\t\\t\\t\\t\\t\\t// must enroll loop manually\\n\\n\\t\\t\\t\\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\\t\\t\\t\\t\\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\\t\\t\\t\\t\\t\\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\\t\\t\\t\\t\\t\\t\\t\\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\\t\\t\\t\\t\\t\\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\\t\\t\\t\\t\\t\\tif ( fDepth < shadowCoord.z )\\n\\t\\t\\t\\t\\t\\t\\tshadow += 1.0;\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tshadow /= 9.0;\\n\\n\\t\\t*/\\n\\n\\t\\t\\t\\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\\t\\t\\t\\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\\t\\t\\t\\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\\t\\t\\t\\tfloat dx0 = -1.25 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy0 = -1.25 * yPixelOffset;\\n\\t\\t\\t\\tfloat dx1 = 1.25 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\\t\\t\\t\\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\\t\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\\t\\t\\t\\t\\t\\t// Percentage-close filtering\\n\\t\\t\\t\\t\\t\\t// (9 pixel kernel)\\n\\t\\t\\t\\t\\t\\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\\t\\t\\t\\tfloat shadow = 0.0;\\n\\n\\t\\t\\t\\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\\t\\t\\t\\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\\t\\t\\t\\tfloat dx0 = -1.0 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy0 = -1.0 * yPixelOffset;\\n\\t\\t\\t\\tfloat dx1 = 1.0 * xPixelOffset;\\n\\t\\t\\t\\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\\t\\t\\t\\tmat3 shadowKernel;\\n\\t\\t\\t\\tmat3 depthKernel;\\n\\n\\t\\t\\t\\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\\t\\t\\t\\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\\t\\t\\t\\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\\t\\t\\t\\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\\t\\t\\t\\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\\t\\t\\t\\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\\t\\t\\t\\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\\t\\t\\t\\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\\t\\t\\t\\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\\t\\t\\t\\tvec3 shadowZ = vec3( shadowCoord.z );\\n\\t\\t\\t\\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\\t\\t\\t\\tshadowKernel[0] *= vec3(0.25);\\n\\n\\t\\t\\t\\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\\t\\t\\t\\tshadowKernel[1] *= vec3(0.25);\\n\\n\\t\\t\\t\\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\\t\\t\\t\\tshadowKernel[2] *= vec3(0.25);\\n\\n\\t\\t\\t\\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\\t\\t\\t\\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\\t\\t\\t\\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\\t\\t\\t\\tvec4 shadowValues;\\n\\t\\t\\t\\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\\t\\t\\t\\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\\t\\t\\t\\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\\t\\t\\t\\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\\t\\t\\t\\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\\t\\t\\t\\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\\t\\t\\t#else\\n\\n\\t\\t\\t\\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\\t\\t\\t\\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\\t\\t\\t\\tif ( fDepth < shadowCoord.z )\\n\\n\\t\\t// spot with multiple shadows is darker\\n\\n\\t\\t\\t\\t\\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\\t\\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\\t\\t// \\t\\t\\t\\t\\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\\t\\t\\t#endif\\n\\n\\t\\t}\\n\\n\\n\\t\\t#ifdef SHADOWMAP_DEBUG\\n\\n\\t\\t\\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\\t\\t#endif\\n\\n\\t}\\n\\n\\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\n\\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\\t\\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\\t\\tfloat depth = dot( rgba_depth, bit_shift );\\n\\t\\treturn depth;\\n\\n\\t}\\n\\n#endif\";\nTHREE.ShaderChunk.shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\n\\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";THREE.ShaderChunk.shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\n\\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\\t\\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\\t}\\n\\n#endif\";THREE.ShaderChunk.skinbase_vertex=\"#ifdef USE_SKINNING\\n\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\nTHREE.ShaderChunk.skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\n\\t#ifdef BONE_TEXTURE\\n\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#else\\n\\n\\t\\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.ShaderChunk.skinning_vertex=\"#ifdef USE_SKINNING\\n\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";THREE.ShaderChunk.skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\nTHREE.ShaderChunk.specularmap_fragment=\"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\\tspecularStrength = 1.0;\\n\\n#endif\";THREE.ShaderChunk.specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\n\\tuniform sampler2D specularMap;\\n\\n#endif\";THREE.ShaderChunk.uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tvarying vec2 vUv2;\\n\\n#endif\";\nTHREE.ShaderChunk.uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\n#endif\";THREE.ShaderChunk.uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tvUv2 = uv2;\\n\\n#endif\";THREE.ShaderChunk.uv_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\\tvarying vec2 vUv;\\n\\n#endif\";\nTHREE.ShaderChunk.uv_pars_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";THREE.ShaderChunk.uv_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\nTHREE.ShaderChunk.worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\\t#ifdef USE_SKINNING\\n\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\\t#else\\n\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\\t#endif\\n\\n#endif\\n\";\nTHREE.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]),e;for(e in d)b[e]=d[e]}return b},clone:function(a){var b={},c;for(c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix3||e instanceof THREE.Matrix4||e instanceof THREE.Texture?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}}return b}};\nTHREE.UniformsLib={common:{diffuse:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",value:1},map:{type:\"t\",value:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},specularMap:{type:\"t\",value:null},alphaMap:{type:\"t\",value:null},envMap:{type:\"t\",value:null},flipEnvMap:{type:\"f\",value:-1},reflectivity:{type:\"f\",value:1},refractionRatio:{type:\"f\",value:.98}},aomap:{aoMap:{type:\"t\",value:null},aoMapIntensity:{type:\"f\",value:1}},lightmap:{lightMap:{type:\"t\",value:null},lightMapIntensity:{type:\"f\",\nvalue:1}},emissivemap:{emissiveMap:{type:\"t\",value:null}},bumpmap:{bumpMap:{type:\"t\",value:null},bumpScale:{type:\"f\",value:1}},normalmap:{normalMap:{type:\"t\",value:null},normalScale:{type:\"v2\",value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{type:\"t\",value:null},displacementScale:{type:\"f\",value:1},displacementBias:{type:\"f\",value:0}},fog:{fogDensity:{type:\"f\",value:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},fogColor:{type:\"c\",value:new THREE.Color(16777215)}},\nlights:{ambientLightColor:{type:\"fv\",value:[]},directionalLightDirection:{type:\"fv\",value:[]},directionalLightColor:{type:\"fv\",value:[]},hemisphereLightDirection:{type:\"fv\",value:[]},hemisphereLightSkyColor:{type:\"fv\",value:[]},hemisphereLightGroundColor:{type:\"fv\",value:[]},pointLightColor:{type:\"fv\",value:[]},pointLightPosition:{type:\"fv\",value:[]},pointLightDistance:{type:\"fv1\",value:[]},pointLightDecay:{type:\"fv1\",value:[]},spotLightColor:{type:\"fv\",value:[]},spotLightPosition:{type:\"fv\",value:[]},\nspotLightDirection:{type:\"fv\",value:[]},spotLightDistance:{type:\"fv1\",value:[]},spotLightAngleCos:{type:\"fv1\",value:[]},spotLightExponent:{type:\"fv1\",value:[]},spotLightDecay:{type:\"fv1\",value:[]}},points:{psColor:{type:\"c\",value:new THREE.Color(15658734)},opacity:{type:\"f\",value:1},size:{type:\"f\",value:1},scale:{type:\"f\",value:1},map:{type:\"t\",value:null},offsetRepeat:{type:\"v4\",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:\"f\",value:2.5E-4},fogNear:{type:\"f\",value:1},fogFar:{type:\"f\",value:2E3},\nfogColor:{type:\"c\",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:\"tv\",value:[]},shadowMapSize:{type:\"v2v\",value:[]},shadowBias:{type:\"fv1\",value:[]},shadowDarkness:{type:\"fv1\",value:[]},shadowMatrix:{type:\"m4v\",value:[]}}};\nTHREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\n\"void main() {\",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,\"\\t#ifdef USE_ENVMAP\",THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,\"\\t#endif\",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,\nTHREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,\nTHREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tvec3 totalAmbientLight = vec3( 1.0 );\",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.aomap_fragment,\"\\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\",\nTHREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:\"c\",value:new THREE.Color(0)}}]),vertexShader:[\"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\",\nTHREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,\nTHREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\",\nTHREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\",\nTHREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,\"\\t#ifdef DOUBLE_SIDED\\n\\t\\tif ( gl_FrontFacing )\\n\\t\\t\\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\\n\\t\\telse\\n\\t\\t\\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\\n\\t#else\\n\\t\\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\\n\\t#endif\",THREE.ShaderChunk.envmap_fragment,\nTHREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:\"c\",\nvalue:new THREE.Color(0)},specular:{type:\"c\",value:new THREE.Color(1118481)},shininess:{type:\"f\",value:30}}]),vertexShader:[\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.displacementmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,\nTHREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,\"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\",THREE.ShaderChunk.begin_vertex,\nTHREE.ShaderChunk.displacementmap_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"\\tvViewPosition = - mvPosition.xyz;\",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\",\nTHREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.emissivemap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,\nTHREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tvec3 totalAmbientLight = ambientLightColor;\\n\\tvec3 totalEmissiveLight = emissive;\",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,\nTHREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.aomap_fragment,THREE.ShaderChunk.emissivemap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.shadowmap]),vertexShader:[\"uniform float size;\\nuniform float scale;\",\nTHREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.color_vertex,\"\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\tgl_Position = projectionMatrix * mvPosition;\",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,\nTHREE.ShaderChunk.shadowmap_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 psColor;\\nuniform float opacity;\",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( psColor, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,\nTHREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,\"\\toutgoingLight = diffuseColor.rgb;\",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:\"f\",value:1},dashSize:{type:\"f\",value:1},totalSize:{type:\"f\",value:2}}]),vertexShader:[\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\",\nTHREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.color_vertex,\"\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\",THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\",THREE.ShaderChunk.common,\nTHREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,\"\\toutgoingLight = diffuseColor.rgb;\",THREE.ShaderChunk.fog_fragment,\"\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n}\"].join(\"\\n\")},\ndepth:{uniforms:{mNear:{type:\"f\",value:1},mFar:{type:\"f\",value:2E3},opacity:{type:\"f\",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float mNear;\\nuniform float mFar;\\nuniform float opacity;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\n\"void main() {\",THREE.ShaderChunk.logdepthbuf_fragment,\"\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\\n\\tgl_FragColor = vec4( vec3( color ), opacity );\\n}\"].join(\"\\n\")},normal:{uniforms:{opacity:{type:\"f\",value:1}},vertexShader:[\"varying vec3 vNormal;\",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\n\"void main() {\\n\\tvNormal = normalize( normalMatrix * normal );\",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\\nvarying vec3 vNormal;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\n\\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",THREE.ShaderChunk.logdepthbuf_fragment,\"}\"].join(\"\\n\")},cube:{uniforms:{tCube:{type:\"t\",\nvalue:null},tFlip:{type:\"f\",value:-1}},vertexShader:[\"varying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\n\"void main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",THREE.ShaderChunk.logdepthbuf_fragment,\"}\"].join(\"\\n\")},equirect:{uniforms:{tEquirect:{type:\"t\",value:null},tFlip:{type:\"f\",value:-1}},vertexShader:[\"varying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\nTHREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[\"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\"void main() {\\nvec3 direction = normalize( vWorldPosition );\\nvec2 sampleUV;\\nsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\nsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\ngl_FragColor = texture2D( tEquirect, sampleUV );\",THREE.ShaderChunk.logdepthbuf_fragment,\n\"}\"].join(\"\\n\")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,\"void main() {\",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,\"}\"].join(\"\\n\"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,\n\"vec4 pack_depth( const in float depth ) {\\n\\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\\n\\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\\n\\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\\n\\tres -= res.xxyz * bit_mask;\\n\\treturn res;\\n}\\nvoid main() {\",THREE.ShaderChunk.logdepthbuf_fragment,\"\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\\n\\t#else\\n\\t\\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\\n\\t#endif\\n}\"].join(\"\\n\")}};\nTHREE.WebGLRenderer=function(a){function b(a,b,c,d){!0===Q&&(a*=d,b*=d,c*=d);s.clearColor(a,b,c,d)}function c(){M.init();s.viewport(Ja,Ka,ta,ua);b(A.r,A.g,A.b,ia)}function d(){Sa=ib=null;pa=\"\";Ta=-1;db=!0;M.reset()}function e(a){a.preventDefault();d();c();Y.clear()}function g(a){a=a.target;a.removeEventListener(\"dispose\",g);a:{var b=Y.get(a);if(a.image&&b.__image__webglTextureCube)s.deleteTexture(b.__image__webglTextureCube);else{if(void 0===b.__webglInit)break a;s.deleteTexture(b.__webglTexture)}Y.delete(a)}La.textures--}\nfunction f(a){a=a.target;a.removeEventListener(\"dispose\",f);var b=Y.get(a);if(a&&void 0!==b.__webglTexture){s.deleteTexture(b.__webglTexture);if(a instanceof THREE.WebGLRenderTargetCube)for(var c=0;6>c;c++)s.deleteFramebuffer(b.__webglFramebuffer[c]),s.deleteRenderbuffer(b.__webglRenderbuffer[c]);else s.deleteFramebuffer(b.__webglFramebuffer),s.deleteRenderbuffer(b.__webglRenderbuffer);Y.delete(a)}La.textures--}function h(a){a=a.target;a.removeEventListener(\"dispose\",h);k(a);Y.delete(a)}function k(a){var b=\nY.get(a).program;a.program=void 0;void 0!==b&&Ua.releaseProgram(b)}function l(a,b){return b[0]-a[0]}function n(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function p(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function m(a,b,c,d,e){var f;c.transparent?(d=va,f=++ma):(d=fa,f=++V);\nf=d[f];void 0!==f?(f.id=a.id,f.object=a,f.geometry=b,f.material=c,f.z=$.z,f.group=e):(f={id:a.id,object:a,geometry:b,material:c,z:$.z,group:e},d.push(f))}function q(a){if(!1!==a.visible){if(a instanceof THREE.Light)Z.push(a);else if(a instanceof THREE.Sprite)Ba.push(a);else if(a instanceof THREE.LensFlare)Va.push(a);else if(a instanceof THREE.ImmediateRenderObject){var b,c;a.material.transparent?(b=wa,c=++qa):(b=ja,c=++Ca);c<b.length?b[c]=a:b.push(a)}else if(a instanceof THREE.Mesh||a instanceof THREE.Line||\na instanceof THREE.Points)if(a instanceof THREE.SkinnedMesh&&a.skeleton.update(),!1===a.frustumCulled||!0===Wa.intersectsObject(a)){var d=a.material;if(!0===d.visible)if(!0===la.sortObjects&&($.setFromMatrixPosition(a.matrixWorld),$.applyProjection(Da)),b=Ea.update(a),d instanceof THREE.MeshFaceMaterial){c=b.groups;for(var e=d.materials,d=0,f=c.length;d<f;d++){var g=c[d],h=e[g.materialIndex];!0===h.visible&&m(a,b,h,$.z,g)}}else m(a,b,d,$.z)}a=a.children;d=0;for(f=a.length;d<f;d++)q(a[d])}}function t(a,\nb,c,d,e){for(var f=0,g=a.length;f<g;f++){var h=a[f],k=h.object,l=h.geometry,m=void 0===e?h.material:e,h=h.group;k.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,k.matrixWorld);k.normalMatrix.getNormalMatrix(k.modelViewMatrix);la.renderBufferDirect(b,c,d,l,m,k,h)}}function r(a,b,c,d,e){for(var f=e,g=0,h=a.length;g<h;g++){var k=a[g];k.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,k.matrixWorld);k.normalMatrix.getNormalMatrix(k.modelViewMatrix);void 0===e&&(f=k.material);u(f);var l=w(b,\nc,d,f,k);pa=\"\";k.render(function(a){la.renderBufferImmediate(a,l,f)})}}function u(a){a.side!==THREE.DoubleSide?M.enable(s.CULL_FACE):M.disable(s.CULL_FACE);M.setFlipSided(a.side===THREE.BackSide);!0===a.transparent?M.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha):M.setBlending(THREE.NoBlending);M.setDepthFunc(a.depthFunc);M.setDepthTest(a.depthTest);M.setDepthWrite(a.depthWrite);M.setColorWrite(a.colorWrite);M.setPolygonOffset(a.polygonOffset,\na.polygonOffsetFactor,a.polygonOffsetUnits)}function w(a,b,c,d,e){eb=0;var f=Y.get(d);if(d.needsUpdate||!f.program){a:{var l=Y.get(d),m=Ua.getParameters(d,b,c,e),n=Ua.getProgramCode(d,m),q=l.program,p=!0;if(void 0===q)d.addEventListener(\"dispose\",h);else if(q.code!==n)k(d);else if(void 0!==m.shaderID)break a;else p=!1;if(p){if(m.shaderID){var t=THREE.ShaderLib[m.shaderID];l.__webglShader={name:d.type,uniforms:THREE.UniformsUtils.clone(t.uniforms),vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}}else l.__webglShader=\n{name:d.type,uniforms:d.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader};d.__webglShader=l.__webglShader;q=Ua.acquireProgram(d,m,n);l.program=q;d.program=q}var r=q.getAttributes();if(d.morphTargets)for(var w=d.numSupportedMorphTargets=0;w<la.maxMorphTargets;w++)0<=r[\"morphTarget\"+w]&&d.numSupportedMorphTargets++;if(d.morphNormals)for(w=d.numSupportedMorphNormals=0;w<la.maxMorphNormals;w++)0<=r[\"morphNormal\"+w]&&d.numSupportedMorphNormals++;l.uniformsList=[];var u=l.program.getUniforms(),\nG;for(G in l.__webglShader.uniforms){var z=u[G];z&&l.uniformsList.push([l.__webglShader.uniforms[G],z])}}d.needsUpdate=!1}var D=!1,E=!1,K=!1,J=f.program,A=J.getUniforms(),y=f.__webglShader.uniforms;J.id!==ib&&(s.useProgram(J.program),ib=J.id,K=E=D=!0);d.id!==Ta&&(-1===Ta&&(K=!0),Ta=d.id,E=!0);if(D||a!==Sa)s.uniformMatrix4fv(A.projectionMatrix,!1,a.projectionMatrix.elements),na.logarithmicDepthBuffer&&s.uniform1f(A.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==Sa&&(Sa=a),(d instanceof THREE.ShaderMaterial||\nd instanceof THREE.MeshPhongMaterial||d.envMap)&&void 0!==A.cameraPosition&&($.setFromMatrixPosition(a.matrixWorld),s.uniform3f(A.cameraPosition,$.x,$.y,$.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshBasicMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&void 0!==A.viewMatrix&&s.uniformMatrix4fv(A.viewMatrix,!1,a.matrixWorldInverse.elements);if(d.skinning)if(e.bindMatrix&&void 0!==A.bindMatrix&&s.uniformMatrix4fv(A.bindMatrix,!1,\ne.bindMatrix.elements),e.bindMatrixInverse&&void 0!==A.bindMatrixInverse&&s.uniformMatrix4fv(A.bindMatrixInverse,!1,e.bindMatrixInverse.elements),na.floatVertexTextures&&e.skeleton&&e.skeleton.useVertexTexture){if(void 0!==A.boneTexture){var P=B();s.uniform1i(A.boneTexture,P);la.setTexture(e.skeleton.boneTexture,P)}void 0!==A.boneTextureWidth&&s.uniform1i(A.boneTextureWidth,e.skeleton.boneTextureWidth);void 0!==A.boneTextureHeight&&s.uniform1i(A.boneTextureHeight,e.skeleton.boneTextureHeight)}else e.skeleton&&\ne.skeleton.boneMatrices&&void 0!==A.boneGlobalMatrices&&s.uniformMatrix4fv(A.boneGlobalMatrices,!1,e.skeleton.boneMatrices);if(E){c&&d.fog&&(y.fogColor.value=c.color,c instanceof THREE.Fog?(y.fogNear.value=c.near,y.fogFar.value=c.far):c instanceof THREE.FogExp2&&(y.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(db){var K=!0,F,L,V,Q=0,U=0,R=0,ja,X,va,ma,Z,aa=tb,qa=a.matrixWorldInverse,Ca=aa.directional.colors,Ba=aa.directional.positions,\nwa=aa.point.colors,Ra=aa.point.positions,Va=aa.point.distances,ia=aa.point.decays,fa=aa.spot.colors,ga=aa.spot.positions,sa=aa.spot.distances,pa=aa.spot.directions,Ea=aa.spot.anglesCos,Ja=aa.spot.exponents,Ka=aa.spot.decays,ta=aa.hemi.skyColors,ua=aa.hemi.groundColors,Aa=aa.hemi.positions,Xa=0,Fa=0,ra=0,Ma=0,Da=0,jb=0,kb=0,fb=0,Ya=0,Za=0,xa=0,Na=0;F=0;for(L=b.length;F<L;F++)V=b[F],V.onlyShadow||(ja=V.color,ma=V.intensity,Z=V.distance,V instanceof THREE.AmbientLight?V.visible&&(Q+=ja.r,U+=ja.g,R+=\nja.b):V instanceof THREE.DirectionalLight?(Da+=1,V.visible&&(ca.setFromMatrixPosition(V.matrixWorld),$.setFromMatrixPosition(V.target.matrixWorld),ca.sub($),ca.transformDirection(qa),Ya=3*Xa,Ba[Ya+0]=ca.x,Ba[Ya+1]=ca.y,Ba[Ya+2]=ca.z,x(Ca,Ya,ja,ma),Xa+=1)):V instanceof THREE.PointLight?(jb+=1,V.visible&&(Za=3*Fa,x(wa,Za,ja,ma),$.setFromMatrixPosition(V.matrixWorld),$.applyMatrix4(qa),Ra[Za+0]=$.x,Ra[Za+1]=$.y,Ra[Za+2]=$.z,Va[Fa]=Z,ia[Fa]=0===V.distance?0:V.decay,Fa+=1)):V instanceof THREE.SpotLight?\n(kb+=1,V.visible&&(xa=3*ra,x(fa,xa,ja,ma),ca.setFromMatrixPosition(V.matrixWorld),$.copy(ca).applyMatrix4(qa),ga[xa+0]=$.x,ga[xa+1]=$.y,ga[xa+2]=$.z,sa[ra]=Z,$.setFromMatrixPosition(V.target.matrixWorld),ca.sub($),ca.transformDirection(qa),pa[xa+0]=ca.x,pa[xa+1]=ca.y,pa[xa+2]=ca.z,Ea[ra]=Math.cos(V.angle),Ja[ra]=V.exponent,Ka[ra]=0===V.distance?0:V.decay,ra+=1)):V instanceof THREE.HemisphereLight&&(fb+=1,V.visible&&(ca.setFromMatrixPosition(V.matrixWorld),ca.transformDirection(qa),Na=3*Ma,Aa[Na+0]=\nca.x,Aa[Na+1]=ca.y,Aa[Na+2]=ca.z,X=V.color,va=V.groundColor,x(ta,Na,X,ma),x(ua,Na,va,ma),Ma+=1)));F=3*Xa;for(L=Math.max(Ca.length,3*Da);F<L;F++)Ca[F]=0;F=3*Fa;for(L=Math.max(wa.length,3*jb);F<L;F++)wa[F]=0;F=3*ra;for(L=Math.max(fa.length,3*kb);F<L;F++)fa[F]=0;F=3*Ma;for(L=Math.max(ta.length,3*fb);F<L;F++)ta[F]=0;F=3*Ma;for(L=Math.max(ua.length,3*fb);F<L;F++)ua[F]=0;aa.directional.length=Xa;aa.point.length=Fa;aa.spot.length=ra;aa.hemi.length=Ma;aa.ambient[0]=Q;aa.ambient[1]=U;aa.ambient[2]=R;db=!1}if(K){var ea=\ntb;y.ambientLightColor.value=ea.ambient;y.directionalLightColor.value=ea.directional.colors;y.directionalLightDirection.value=ea.directional.positions;y.pointLightColor.value=ea.point.colors;y.pointLightPosition.value=ea.point.positions;y.pointLightDistance.value=ea.point.distances;y.pointLightDecay.value=ea.point.decays;y.spotLightColor.value=ea.spot.colors;y.spotLightPosition.value=ea.spot.positions;y.spotLightDistance.value=ea.spot.distances;y.spotLightDirection.value=ea.spot.directions;y.spotLightAngleCos.value=\nea.spot.anglesCos;y.spotLightExponent.value=ea.spot.exponents;y.spotLightDecay.value=ea.spot.decays;y.hemisphereLightSkyColor.value=ea.hemi.skyColors;y.hemisphereLightGroundColor.value=ea.hemi.groundColors;y.hemisphereLightDirection.value=ea.hemi.positions;v(y,!0)}else v(y,!1)}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){y.opacity.value=d.opacity;y.diffuse.value=d.color;d.emissive&&(y.emissive.value=d.emissive);y.map.value=\nd.map;y.specularMap.value=d.specularMap;y.alphaMap.value=d.alphaMap;d.aoMap&&(y.aoMap.value=d.aoMap,y.aoMapIntensity.value=d.aoMapIntensity);var oa;d.map?oa=d.map:d.specularMap?oa=d.specularMap:d.displacementMap?oa=d.displacementMap:d.normalMap?oa=d.normalMap:d.bumpMap?oa=d.bumpMap:d.alphaMap?oa=d.alphaMap:d.emissiveMap&&(oa=d.emissiveMap);if(void 0!==oa){var Wa=oa.offset,bb=oa.repeat;y.offsetRepeat.value.set(Wa.x,Wa.y,bb.x,bb.y)}y.envMap.value=d.envMap;y.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?\n1:-1;y.reflectivity.value=d.reflectivity;y.refractionRatio.value=d.refractionRatio}if(d instanceof THREE.LineBasicMaterial)y.diffuse.value=d.color,y.opacity.value=d.opacity;else if(d instanceof THREE.LineDashedMaterial)y.diffuse.value=d.color,y.opacity.value=d.opacity,y.dashSize.value=d.dashSize,y.totalSize.value=d.dashSize+d.gapSize,y.scale.value=d.scale;else if(d instanceof THREE.PointsMaterial){if(y.psColor.value=d.color,y.opacity.value=d.opacity,y.size.value=d.size,y.scale.value=C.height/2,y.map.value=\nd.map,null!==d.map){var cb=d.map.offset,ub=d.map.repeat;y.offsetRepeat.value.set(cb.x,cb.y,ub.x,ub.y)}}else d instanceof THREE.MeshPhongMaterial?(y.specular.value=d.specular,y.shininess.value=d.shininess,d.lightMap&&(y.lightMap.value=d.lightMap,y.lightMapIntensity.value=d.lightMapIntensity),d.emissiveMap&&(y.emissiveMap.value=d.emissiveMap),d.bumpMap&&(y.bumpMap.value=d.bumpMap,y.bumpScale.value=d.bumpScale),d.normalMap&&(y.normalMap.value=d.normalMap,y.normalScale.value.copy(d.normalScale)),d.displacementMap&&\n(y.displacementMap.value=d.displacementMap,y.displacementScale.value=d.displacementScale,y.displacementBias.value=d.displacementBias)):d instanceof THREE.MeshDepthMaterial?(y.mNear.value=a.near,y.mFar.value=a.far,y.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(y.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&y.shadowMatrix)for(var Oa=0,lb=0,pb=b.length;lb<pb;lb++){var ya=b[lb];ya.castShadow&&(ya instanceof THREE.SpotLight||ya instanceof THREE.DirectionalLight)&&(y.shadowMap.value[Oa]=\nya.shadowMap,y.shadowMapSize.value[Oa]=ya.shadowMapSize,y.shadowMatrix.value[Oa]=ya.shadowMatrix,y.shadowDarkness.value[Oa]=ya.shadowDarkness,y.shadowBias.value[Oa]=ya.shadowBias,Oa++)}for(var mb=f.uniformsList,ka,Ga,gb=0,qb=mb.length;gb<qb;gb++){var S=mb[gb][0];if(!1!==S.needsUpdate){var vb=S.type,N=S.value,W=mb[gb][1];switch(vb){case \"1i\":s.uniform1i(W,N);break;case \"1f\":s.uniform1f(W,N);break;case \"2f\":s.uniform2f(W,N[0],N[1]);break;case \"3f\":s.uniform3f(W,N[0],N[1],N[2]);break;case \"4f\":s.uniform4f(W,\nN[0],N[1],N[2],N[3]);break;case \"1iv\":s.uniform1iv(W,N);break;case \"3iv\":s.uniform3iv(W,N);break;case \"1fv\":s.uniform1fv(W,N);break;case \"2fv\":s.uniform2fv(W,N);break;case \"3fv\":s.uniform3fv(W,N);break;case \"4fv\":s.uniform4fv(W,N);break;case \"Matrix3fv\":s.uniformMatrix3fv(W,!1,N);break;case \"Matrix4fv\":s.uniformMatrix4fv(W,!1,N);break;case \"i\":s.uniform1i(W,N);break;case \"f\":s.uniform1f(W,N);break;case \"v2\":s.uniform2f(W,N.x,N.y);break;case \"v3\":s.uniform3f(W,N.x,N.y,N.z);break;case \"v4\":s.uniform4f(W,\nN.x,N.y,N.z,N.w);break;case \"c\":s.uniform3f(W,N.r,N.g,N.b);break;case \"iv1\":s.uniform1iv(W,N);break;case \"iv\":s.uniform3iv(W,N);break;case \"fv1\":s.uniform1fv(W,N);break;case \"fv\":s.uniform3fv(W,N);break;case \"v2v\":void 0===S._array&&(S._array=new Float32Array(2*N.length));for(var T=0,hb=0,ha=N.length;T<ha;T++,hb+=2)S._array[hb+0]=N[T].x,S._array[hb+1]=N[T].y;s.uniform2fv(W,S._array);break;case \"v3v\":void 0===S._array&&(S._array=new Float32Array(3*N.length));for(var $a=T=0,ha=N.length;T<ha;T++,$a+=\n3)S._array[$a+0]=N[T].x,S._array[$a+1]=N[T].y,S._array[$a+2]=N[T].z;s.uniform3fv(W,S._array);break;case \"v4v\":void 0===S._array&&(S._array=new Float32Array(4*N.length));for(var Pa=T=0,ha=N.length;T<ha;T++,Pa+=4)S._array[Pa+0]=N[T].x,S._array[Pa+1]=N[T].y,S._array[Pa+2]=N[T].z,S._array[Pa+3]=N[T].w;s.uniform4fv(W,S._array);break;case \"m3\":s.uniformMatrix3fv(W,!1,N.elements);break;case \"m3v\":void 0===S._array&&(S._array=new Float32Array(9*N.length));T=0;for(ha=N.length;T<ha;T++)N[T].flattenToArrayOffset(S._array,\n9*T);s.uniformMatrix3fv(W,!1,S._array);break;case \"m4\":s.uniformMatrix4fv(W,!1,N.elements);break;case \"m4v\":void 0===S._array&&(S._array=new Float32Array(16*N.length));T=0;for(ha=N.length;T<ha;T++)N[T].flattenToArrayOffset(S._array,16*T);s.uniformMatrix4fv(W,!1,S._array);break;case \"t\":ka=N;Ga=B();s.uniform1i(W,Ga);if(!ka)continue;if(ka instanceof THREE.CubeTexture||Array.isArray(ka.image)&&6===ka.image.length){var ba=ka,wb=Ga,Qa=Y.get(ba);if(6===ba.image.length)if(0<ba.version&&Qa.__version!==ba.version){Qa.__image__webglTextureCube||\n(ba.addEventListener(\"dispose\",g),Qa.__image__webglTextureCube=s.createTexture(),La.textures++);M.activeTexture(s.TEXTURE0+wb);M.bindTexture(s.TEXTURE_CUBE_MAP,Qa.__image__webglTextureCube);s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,ba.flipY);for(var xb=ba instanceof THREE.CompressedTexture,nb=ba.image[0]instanceof THREE.DataTexture,Ha=[],da=0;6>da;da++)Ha[da]=!la.autoScaleCubemaps||xb||nb?nb?ba.image[da].image:ba.image[da]:I(ba.image[da],na.maxCubemapSize);var yb=Ha[0],zb=THREE.Math.isPowerOfTwo(yb.width)&&\nTHREE.Math.isPowerOfTwo(yb.height),za=O(ba.format),ob=O(ba.type);H(s.TEXTURE_CUBE_MAP,ba,zb);for(da=0;6>da;da++)if(xb)for(var Ia,Ab=Ha[da].mipmaps,ab=0,rb=Ab.length;ab<rb;ab++)Ia=Ab[ab],ba.format!==THREE.RGBAFormat&&ba.format!==THREE.RGBFormat?-1<M.getCompressedTextureFormats().indexOf(za)?M.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+da,ab,za,Ia.width,Ia.height,0,Ia.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\"):M.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+\nda,ab,za,Ia.width,Ia.height,0,za,ob,Ia.data);else nb?M.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+da,0,za,Ha[da].width,Ha[da].height,0,za,ob,Ha[da].data):M.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+da,0,za,za,ob,Ha[da]);ba.generateMipmaps&&zb&&s.generateMipmap(s.TEXTURE_CUBE_MAP);Qa.__version=ba.version;if(ba.onUpdate)ba.onUpdate(ba)}else M.activeTexture(s.TEXTURE0+wb),M.bindTexture(s.TEXTURE_CUBE_MAP,Qa.__image__webglTextureCube)}else if(ka instanceof THREE.WebGLRenderTargetCube){var sb=ka;M.activeTexture(s.TEXTURE0+\nGa);M.bindTexture(s.TEXTURE_CUBE_MAP,Y.get(sb).__webglTexture)}else la.setTexture(ka,Ga);break;case \"tv\":void 0===S._array&&(S._array=[]);T=0;for(ha=S.value.length;T<ha;T++)S._array[T]=B();s.uniform1iv(W,S._array);T=0;for(ha=S.value.length;T<ha;T++)ka=S.value[T],Ga=S._array[T],ka&&la.setTexture(ka,Ga);break;default:console.warn(\"THREE.WebGLRenderer: Unknown uniform type: \"+vb)}}}}s.uniformMatrix4fv(A.modelViewMatrix,!1,e.modelViewMatrix.elements);A.normalMatrix&&s.uniformMatrix3fv(A.normalMatrix,\n!1,e.normalMatrix.elements);void 0!==A.modelMatrix&&s.uniformMatrix4fv(A.modelMatrix,!1,e.matrixWorld.elements);return J}function v(a,b){a.ambientLightColor.needsUpdate=b;a.directionalLightColor.needsUpdate=b;a.directionalLightDirection.needsUpdate=b;a.pointLightColor.needsUpdate=b;a.pointLightPosition.needsUpdate=b;a.pointLightDistance.needsUpdate=b;a.pointLightDecay.needsUpdate=b;a.spotLightColor.needsUpdate=b;a.spotLightPosition.needsUpdate=b;a.spotLightDistance.needsUpdate=b;a.spotLightDirection.needsUpdate=\nb;a.spotLightAngleCos.needsUpdate=b;a.spotLightExponent.needsUpdate=b;a.spotLightDecay.needsUpdate=b;a.hemisphereLightSkyColor.needsUpdate=b;a.hemisphereLightGroundColor.needsUpdate=b;a.hemisphereLightDirection.needsUpdate=b}function B(){var a=eb;a>=na.maxTextures&&console.warn(\"WebGLRenderer: trying to use \"+a+\" texture units while this GPU supports only \"+na.maxTextures);eb+=1;return a}function x(a,b,c,d){a[b+0]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function H(a,b,c){c?(s.texParameteri(a,s.TEXTURE_WRAP_S,\nO(b.wrapS)),s.texParameteri(a,s.TEXTURE_WRAP_T,O(b.wrapT)),s.texParameteri(a,s.TEXTURE_MAG_FILTER,O(b.magFilter)),s.texParameteri(a,s.TEXTURE_MIN_FILTER,O(b.minFilter))):(s.texParameteri(a,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(a,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),b.wrapS===THREE.ClampToEdgeWrapping&&b.wrapT===THREE.ClampToEdgeWrapping||console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( \"+b.sourceFile+\n\" )\"),s.texParameteri(a,s.TEXTURE_MAG_FILTER,G(b.magFilter)),s.texParameteri(a,s.TEXTURE_MIN_FILTER,G(b.minFilter)),b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter&&console.warn(\"THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( \"+b.sourceFile+\" )\"));!(c=X.get(\"EXT_texture_filter_anisotropic\"))||b.type===THREE.FloatType&&null===X.get(\"OES_texture_float_linear\")||b.type===THREE.HalfFloatType&&null===\nX.get(\"OES_texture_half_float_linear\")||!(1<b.anisotropy||Y.get(b).__currentAnisotropy)||(s.texParameterf(a,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,la.getMaxAnisotropy())),Y.get(b).__currentAnisotropy=b.anisotropy)}function I(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElement(\"canvas\");d.width=Math.floor(a.width*c);d.height=Math.floor(a.height*c);d.getContext(\"2d\").drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height);console.warn(\"THREE.WebGLRenderer: image is too big (\"+\na.width+\"x\"+a.height+\"). Resized to \"+d.width+\"x\"+d.height,a);return d}return a}function z(a,b,c){s.bindFramebuffer(s.FRAMEBUFFER,a);s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,c,Y.get(b).__webglTexture,0)}function D(a,b){s.bindRenderbuffer(s.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_COMPONENT16,b.width,b.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(s.renderbufferStorage(s.RENDERBUFFER,\ns.DEPTH_STENCIL,b.width,b.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,a)):s.renderbufferStorage(s.RENDERBUFFER,s.RGBA4,b.width,b.height)}function G(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?s.NEAREST:s.LINEAR}function O(a){var b;if(a===THREE.RepeatWrapping)return s.REPEAT;if(a===THREE.ClampToEdgeWrapping)return s.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return s.MIRRORED_REPEAT;\nif(a===THREE.NearestFilter)return s.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return s.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return s.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return s.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return s.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return s.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return s.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return s.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return s.UNSIGNED_SHORT_5_5_5_1;\nif(a===THREE.UnsignedShort565Type)return s.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return s.BYTE;if(a===THREE.ShortType)return s.SHORT;if(a===THREE.UnsignedShortType)return s.UNSIGNED_SHORT;if(a===THREE.IntType)return s.INT;if(a===THREE.UnsignedIntType)return s.UNSIGNED_INT;if(a===THREE.FloatType)return s.FLOAT;b=X.get(\"OES_texture_half_float\");if(null!==b&&a===THREE.HalfFloatType)return b.HALF_FLOAT_OES;if(a===THREE.AlphaFormat)return s.ALPHA;if(a===THREE.RGBFormat)return s.RGB;if(a===THREE.RGBAFormat)return s.RGBA;\nif(a===THREE.LuminanceFormat)return s.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return s.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return s.FUNC_ADD;if(a===THREE.SubtractEquation)return s.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return s.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return s.ZERO;if(a===THREE.OneFactor)return s.ONE;if(a===THREE.SrcColorFactor)return s.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return s.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return s.SRC_ALPHA;\nif(a===THREE.OneMinusSrcAlphaFactor)return s.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return s.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return s.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return s.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return s.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return s.SRC_ALPHA_SATURATE;b=X.get(\"WEBGL_compressed_texture_s3tc\");if(null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;\nif(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}b=X.get(\"WEBGL_compressed_texture_pvrtc\");if(null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}b=\nX.get(\"EXT_blend_minmax\");if(null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}console.log(\"THREE.WebGLRenderer\",THREE.REVISION);a=a||{};var C=void 0!==a.canvas?a.canvas:document.createElement(\"canvas\"),F=void 0!==a.context?a.context:null,K=C.width,L=C.height,E=1,J=void 0!==a.alpha?a.alpha:!1,y=void 0!==a.depth?a.depth:!0,P=void 0!==a.stencil?a.stencil:!0,U=void 0!==a.antialias?a.antialias:!1,Q=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:\n!0,R=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,A=new THREE.Color(0),ia=0,Z=[],fa=[],V=-1,va=[],ma=-1,ja=[],Ca=-1,wa=[],qa=-1,Ra=new Float32Array(8),Ba=[],Va=[];this.domElement=C;this.context=null;this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.gammaFactor=2;this.gammaOutput=this.gammaInput=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;var la=this,ib=null,Aa=null,Ta=-1,pa=\"\",Sa=null,eb=0,Ja=0,Ka=0,\nta=C.width,ua=C.height,bb=0,cb=0,Wa=new THREE.Frustum,Da=new THREE.Matrix4,$=new THREE.Vector3,ca=new THREE.Vector3,db=!0,tb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},La={geometries:0,textures:0},sa={calls:0,vertices:0,faces:0,points:0};this.info={render:sa,\nmemory:La,programs:null};var s;try{J={alpha:J,depth:y,stencil:P,antialias:U,premultipliedAlpha:Q,preserveDrawingBuffer:R};s=F||C.getContext(\"webgl\",J)||C.getContext(\"experimental-webgl\",J);if(null===s){if(null!==C.getContext(\"webgl\"))throw\"Error creating WebGL context with your selected attributes.\";throw\"Error creating WebGL context.\";}C.addEventListener(\"webglcontextlost\",e,!1)}catch(pb){console.error(\"THREE.WebGLRenderer: \"+pb)}var X=new THREE.WebGLExtensions(s);X.get(\"OES_texture_float\");X.get(\"OES_texture_float_linear\");\nX.get(\"OES_texture_half_float\");X.get(\"OES_texture_half_float_linear\");X.get(\"OES_standard_derivatives\");X.get(\"ANGLE_instanced_arrays\");X.get(\"OES_element_index_uint\")&&(THREE.BufferGeometry.MaxIndex=4294967296);var na=new THREE.WebGLCapabilities(s,X,a),M=new THREE.WebGLState(s,X,O),Y=new THREE.WebGLProperties,Ea=new THREE.WebGLObjects(s,Y,this.info),Ua=new THREE.WebGLPrograms(this,na);this.info.programs=Ua.programs;var qb=new THREE.WebGLBufferRenderer(s,X,sa),rb=new THREE.WebGLIndexedBufferRenderer(s,\nX,sa);c();this.context=s;this.capabilities=na;this.extensions=X;this.state=M;var ga=new THREE.WebGLShadowMap(this,Z,Ea);this.shadowMap=ga;var sb=new THREE.SpritePlugin(this,Ba),Bb=new THREE.LensFlarePlugin(this,Va);this.getContext=function(){return s};this.getContextAttributes=function(){return s.getContextAttributes()};this.forceContextLoss=function(){X.get(\"WEBGL_lose_context\").loseContext()};this.getMaxAnisotropy=function(){var a;return function(){if(void 0!==a)return a;var b=X.get(\"EXT_texture_filter_anisotropic\");\nreturn a=null!==b?s.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}();this.getPrecision=function(){return na.precision};this.getPixelRatio=function(){return E};this.setPixelRatio=function(a){void 0!==a&&(E=a)};this.getSize=function(){return{width:K,height:L}};this.setSize=function(a,b,c){K=a;L=b;C.width=a*E;C.height=b*E;!1!==c&&(C.style.width=a+\"px\",C.style.height=b+\"px\");this.setViewport(0,0,a,b)};this.setViewport=function(a,b,c,d){Ja=a*E;Ka=b*E;ta=c*E;ua=d*E;s.viewport(Ja,Ka,ta,ua)};this.setScissor=\nfunction(a,b,c,d){s.scissor(a*E,b*E,c*E,d*E)};this.enableScissorTest=function(a){M.setScissorTest(a)};this.getClearColor=function(){return A};this.setClearColor=function(a,c){A.set(a);ia=void 0!==c?c:1;b(A.r,A.g,A.b,ia)};this.getClearAlpha=function(){return ia};this.setClearAlpha=function(a){ia=a;b(A.r,A.g,A.b,ia)};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=s.COLOR_BUFFER_BIT;if(void 0===b||b)d|=s.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=s.STENCIL_BUFFER_BIT;s.clear(d)};this.clearColor=function(){s.clear(s.COLOR_BUFFER_BIT)};\nthis.clearDepth=function(){s.clear(s.DEPTH_BUFFER_BIT)};this.clearStencil=function(){s.clear(s.STENCIL_BUFFER_BIT)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.resetGLState=d;this.dispose=function(){C.removeEventListener(\"webglcontextlost\",e,!1)};this.renderBufferImmediate=function(a,b,c){M.initAttributes();var d=Y.get(a);a.hasPositions&&!d.position&&(d.position=s.createBuffer());a.hasNormals&&!d.normal&&(d.normal=s.createBuffer());a.hasUvs&&!d.uv&&(d.uv=s.createBuffer());\na.hasColors&&!d.color&&(d.color=s.createBuffer());b=b.getAttributes();a.hasPositions&&(s.bindBuffer(s.ARRAY_BUFFER,d.position),s.bufferData(s.ARRAY_BUFFER,a.positionArray,s.DYNAMIC_DRAW),M.enableAttribute(b.position),s.vertexAttribPointer(b.position,3,s.FLOAT,!1,0,0));if(a.hasNormals){s.bindBuffer(s.ARRAY_BUFFER,d.normal);if(\"MeshPhongMaterial\"!==c.type&&c.shading===THREE.FlatShading)for(var e=0,f=3*a.count;e<f;e+=9){var g=a.normalArray,h=(g[e+0]+g[e+3]+g[e+6])/3,k=(g[e+1]+g[e+4]+g[e+7])/3,l=(g[e+\n2]+g[e+5]+g[e+8])/3;g[e+0]=h;g[e+1]=k;g[e+2]=l;g[e+3]=h;g[e+4]=k;g[e+5]=l;g[e+6]=h;g[e+7]=k;g[e+8]=l}s.bufferData(s.ARRAY_BUFFER,a.normalArray,s.DYNAMIC_DRAW);M.enableAttribute(b.normal);s.vertexAttribPointer(b.normal,3,s.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(s.bindBuffer(s.ARRAY_BUFFER,d.uv),s.bufferData(s.ARRAY_BUFFER,a.uvArray,s.DYNAMIC_DRAW),M.enableAttribute(b.uv),s.vertexAttribPointer(b.uv,2,s.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(s.bindBuffer(s.ARRAY_BUFFER,d.color),s.bufferData(s.ARRAY_BUFFER,\na.colorArray,s.DYNAMIC_DRAW),M.enableAttribute(b.color),s.vertexAttribPointer(b.color,3,s.FLOAT,!1,0,0));M.disableUnusedAttributes();s.drawArrays(s.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f,g){u(e);var h=w(a,b,c,e,f),k=!1;a=d.id+\"_\"+h.id+\"_\"+e.wireframe;a!==pa&&(pa=a,k=!0);a=f.morphTargetInfluences;if(void 0!==a){b=[];c=0;for(k=a.length;c<k;c++){var m=a[c];b.push([m,c])}b.sort(l);8<b.length&&(b.length=8);var n=d.morphAttributes;c=0;for(k=b.length;c<k;c++)m=b[c],\nRa[c]=m[0],0!==m[0]?(a=m[1],!0===e.morphTargets&&n.position&&d.addAttribute(\"morphTarget\"+c,n.position[a]),!0===e.morphNormals&&n.normal&&d.addAttribute(\"morphNormal\"+c,n.normal[a])):(!0===e.morphTargets&&d.removeAttribute(\"morphTarget\"+c),!0===e.morphNormals&&d.removeAttribute(\"morphNormal\"+c));a=h.getUniforms();null!==a.morphTargetInfluences&&s.uniform1fv(a.morphTargetInfluences,Ra);k=!0}a=d.index;c=d.attributes.position;!0===e.wireframe&&(a=Ea.getWireframeAttribute(d));null!==a?(b=rb,b.setIndex(a)):\nb=qb;if(k){a:{var k=void 0,q;if(d instanceof THREE.InstancedBufferGeometry&&(q=X.get(\"ANGLE_instanced_arrays\"),null===q)){console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");break a}void 0===k&&(k=0);M.initAttributes();var m=d.attributes,h=h.getAttributes(),n=e.defaultAttributeValues,p;for(p in h){var t=h[p];if(0<=t){var r=m[p];if(void 0!==r){M.enableAttribute(t);var v=r.itemSize,x=Ea.getAttributeBuffer(r);\nif(r instanceof THREE.InterleavedBufferAttribute){var G=r.data,B=G.stride,r=r.offset;s.bindBuffer(s.ARRAY_BUFFER,x);s.vertexAttribPointer(t,v,s.FLOAT,!1,B*G.array.BYTES_PER_ELEMENT,(k*B+r)*G.array.BYTES_PER_ELEMENT);if(G instanceof THREE.InstancedInterleavedBuffer){if(null===q){console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.\");break a}q.vertexAttribDivisorANGLE(t,G.meshPerAttribute);void 0===\nd.maxInstancedCount&&(d.maxInstancedCount=G.meshPerAttribute*G.count)}}else if(s.bindBuffer(s.ARRAY_BUFFER,x),s.vertexAttribPointer(t,v,s.FLOAT,!1,0,k*v*4),r instanceof THREE.InstancedBufferAttribute){if(null===q){console.error(\"THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.\");break a}q.vertexAttribDivisorANGLE(t,r.meshPerAttribute);void 0===d.maxInstancedCount&&(d.maxInstancedCount=r.meshPerAttribute*\nr.count)}}else if(void 0!==n&&(v=n[p],void 0!==v))switch(v.length){case 2:s.vertexAttrib2fv(t,v);break;case 3:s.vertexAttrib3fv(t,v);break;case 4:s.vertexAttrib4fv(t,v);break;default:s.vertexAttrib1fv(t,v)}}}M.disableUnusedAttributes()}null!==a&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,Ea.getAttributeBuffer(a))}void 0===g&&(g=d.drawRange,g={start:g.start,count:Math.min(g.count,null!==a?a.array.length:c.count)});f instanceof THREE.Mesh?(!0===e.wireframe?(M.setLineWidth(e.wireframeLinewidth*E),b.setMode(s.LINES)):\nb.setMode(s.TRIANGLES),d instanceof THREE.InstancedBufferGeometry&&0<d.maxInstancedCount?b.renderInstances(d):b.render(g.start,g.count)):f instanceof THREE.Line?(d=e.linewidth,void 0===d&&(d=1),M.setLineWidth(d*E),f instanceof THREE.LineSegments?b.setMode(s.LINES):b.setMode(s.LINE_STRIP),b.render(g.start,g.count)):f instanceof THREE.Points&&(b.setMode(s.POINTS),b.render(g.start,g.count))};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error(\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\");\nelse{var e=a.fog;pa=\"\";Ta=-1;Sa=null;db=!0;!0===a.autoUpdate&&a.updateMatrixWorld();null===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);Da.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);Wa.setFromMatrix(Da);Z.length=0;qa=Ca=ma=V=-1;Ba.length=0;Va.length=0;q(a);fa.length=V+1;va.length=ma+1;ja.length=Ca+1;wa.length=qa+1;!0===la.sortObjects&&(fa.sort(n),va.sort(p));ga.render(a,b);sa.calls=0;sa.vertices=0;sa.faces=0;sa.points=0;this.setRenderTarget(c);(this.autoClear||\nd)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);a.overrideMaterial?(d=a.overrideMaterial,t(fa,b,Z,e,d),t(va,b,Z,e,d),r(ja,b,Z,e,d),r(wa,b,Z,e,d)):(M.setBlending(THREE.NoBlending),t(fa,b,Z,e),r(ja,b,Z,e),t(va,b,Z,e),r(wa,b,Z,e));sb.render(a,b);Bb.render(a,b,bb,cb);c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&(c instanceof THREE.WebGLRenderTargetCube?(M.bindTexture(s.TEXTURE_CUBE_MAP,Y.get(c).__webglTexture),s.generateMipmap(s.TEXTURE_CUBE_MAP),\nM.bindTexture(s.TEXTURE_CUBE_MAP,null)):(M.bindTexture(s.TEXTURE_2D,Y.get(c).__webglTexture),s.generateMipmap(s.TEXTURE_2D),M.bindTexture(s.TEXTURE_2D,null)));M.setDepthTest(!0);M.setDepthWrite(!0);M.setColorWrite(!0)}};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?M.disable(s.CULL_FACE):(b===THREE.FrontFaceDirectionCW?s.frontFace(s.CW):s.frontFace(s.CCW),a===THREE.CullFaceBack?s.cullFace(s.BACK):a===THREE.CullFaceFront?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK),M.enable(s.CULL_FACE))};\nthis.setTexture=function(a,b){var c=Y.get(a);if(0<a.version&&c.__version!==a.version){var d=a.image;if(void 0===d)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is undefined\",a);else if(!1===d.complete)console.warn(\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\",a);else{void 0===c.__webglInit&&(c.__webglInit=!0,a.__webglInit=!0,a.addEventListener(\"dispose\",g),c.__webglTexture=s.createTexture(),La.textures++);M.activeTexture(s.TEXTURE0+b);M.bindTexture(s.TEXTURE_2D,\nc.__webglTexture);s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,a.flipY);s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);s.pixelStorei(s.UNPACK_ALIGNMENT,a.unpackAlignment);a.image=I(a.image,na.maxTextureSize);var e=a.image,d=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height),f=O(a.format),h=O(a.type);H(s.TEXTURE_2D,a,d);var k=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<k.length&&d){for(var l=0,m=k.length;l<m;l++)e=k[l],M.texImage2D(s.TEXTURE_2D,l,f,e.width,e.height,\n0,f,h,e.data);a.generateMipmaps=!1}else M.texImage2D(s.TEXTURE_2D,0,f,e.width,e.height,0,f,h,e.data);else if(a instanceof THREE.CompressedTexture)for(l=0,m=k.length;l<m;l++)e=k[l],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?-1<M.getCompressedTextureFormats().indexOf(f)?M.compressedTexImage2D(s.TEXTURE_2D,l,f,e.width,e.height,0,e.data):console.warn(\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"):M.texImage2D(s.TEXTURE_2D,l,f,e.width,e.height,\n0,f,h,e.data);else if(0<k.length&&d){l=0;for(m=k.length;l<m;l++)e=k[l],M.texImage2D(s.TEXTURE_2D,l,f,f,h,e);a.generateMipmaps=!1}else M.texImage2D(s.TEXTURE_2D,0,f,f,h,a.image);a.generateMipmaps&&d&&s.generateMipmap(s.TEXTURE_2D);c.__version=a.version;if(a.onUpdate)a.onUpdate(a)}}else M.activeTexture(s.TEXTURE0+b),M.bindTexture(s.TEXTURE_2D,c.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&void 0===Y.get(a).__webglFramebuffer){var c=Y.get(a);\nvoid 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener(\"dispose\",f);c.__webglTexture=s.createTexture();La.textures++;var d=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),e=O(a.format),g=O(a.type);if(b){c.__webglFramebuffer=[];c.__webglRenderbuffer=[];M.bindTexture(s.TEXTURE_CUBE_MAP,c.__webglTexture);H(s.TEXTURE_CUBE_MAP,a,d);for(var h=0;6>h;h++)c.__webglFramebuffer[h]=s.createFramebuffer(),c.__webglRenderbuffer[h]=s.createRenderbuffer(),\nM.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+h,0,e,a.width,a.height,0,e,g,null),z(c.__webglFramebuffer[h],a,s.TEXTURE_CUBE_MAP_POSITIVE_X+h),D(c.__webglRenderbuffer[h],a);a.generateMipmaps&&d&&s.generateMipmap(s.TEXTURE_CUBE_MAP)}else c.__webglFramebuffer=s.createFramebuffer(),c.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:s.createRenderbuffer(),M.bindTexture(s.TEXTURE_2D,c.__webglTexture),H(s.TEXTURE_2D,a,d),M.texImage2D(s.TEXTURE_2D,0,e,a.width,a.height,0,e,g,null),z(c.__webglFramebuffer,\na,s.TEXTURE_2D),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,c.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,c.__webglRenderbuffer):D(c.__webglRenderbuffer,a),a.generateMipmaps&&d&&s.generateMipmap(s.TEXTURE_2D);b?M.bindTexture(s.TEXTURE_CUBE_MAP,null):M.bindTexture(s.TEXTURE_2D,null);s.bindRenderbuffer(s.RENDERBUFFER,null);s.bindFramebuffer(s.FRAMEBUFFER,\nnull)}a?(c=Y.get(a),b=b?c.__webglFramebuffer[a.activeCubeFace]:c.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=ta,a=ua,d=Ja,e=Ka);b!==Aa&&(s.bindFramebuffer(s.FRAMEBUFFER,b),s.viewport(d,e,c,a),Aa=b);bb=c;cb=a};this.readRenderTargetPixels=function(a,b,c,d,e,f){if(!(a instanceof THREE.WebGLRenderTarget))console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\");else if(Y.get(a).__webglFramebuffer)if(a.format!==THREE.RGBAFormat)console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.\");\nelse{var g=!1;Y.get(a).__webglFramebuffer!==Aa&&(s.bindFramebuffer(s.FRAMEBUFFER,Y.get(a).__webglFramebuffer),g=!0);s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE?s.readPixels(b,c,d,e,s.RGBA,s.UNSIGNED_BYTE,f):console.error(\"THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.\");g&&s.bindFramebuffer(s.FRAMEBUFFER,Aa)}};this.supportsFloatTextures=function(){console.warn(\"THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).\");\nreturn X.get(\"OES_texture_float\")};this.supportsHalfFloatTextures=function(){console.warn(\"THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).\");return X.get(\"OES_texture_half_float\")};this.supportsStandardDerivatives=function(){console.warn(\"THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).\");return X.get(\"OES_standard_derivatives\")};this.supportsCompressedTextureS3TC=function(){console.warn(\"THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).\");\nreturn X.get(\"WEBGL_compressed_texture_s3tc\")};this.supportsCompressedTexturePVRTC=function(){console.warn(\"THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).\");return X.get(\"WEBGL_compressed_texture_pvrtc\")};this.supportsBlendMinMax=function(){console.warn(\"THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).\");return X.get(\"EXT_blend_minmax\")};this.supportsVertexTextures=function(){return na.vertexTextures};\nthis.supportsInstancedArrays=function(){console.warn(\"THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).\");return X.get(\"ANGLE_instanced_arrays\")};this.initMaterial=function(){console.warn(\"THREE.WebGLRenderer: .initMaterial() has been removed.\")};this.addPrePlugin=function(){console.warn(\"THREE.WebGLRenderer: .addPrePlugin() has been removed.\")};this.addPostPlugin=function(){console.warn(\"THREE.WebGLRenderer: .addPostPlugin() has been removed.\")};\nthis.updateShadowMap=function(){console.warn(\"THREE.WebGLRenderer: .updateShadowMap() has been removed.\")};Object.defineProperties(this,{shadowMapEnabled:{get:function(){return ga.enabled},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.\");ga.enabled=a}},shadowMapType:{get:function(){return ga.type},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.\");ga.type=a}},shadowMapCullFace:{get:function(){return ga.cullFace},\nset:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.\");ga.cullFace=a}},shadowMapDebug:{get:function(){return ga.debug},set:function(a){console.warn(\"THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.\");ga.debug=a}}})};\nTHREE.WebGLRenderTarget=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,\n1);this.format=void 0!==c.format?c.format:THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=void 0!==c.shareDepthFrom?c.shareDepthFrom:null};\nTHREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){if(this.width!==a||this.height!==b)this.width=a,this.height=b,this.dispose()},clone:function(){return(new this.constructor).copy(this)},copy:function(a){this.width=a.width;this.height=a.height;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.format=a.format;this.type=a.type;this.depthBuffer=\na.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.generateMipmaps=a.generateMipmaps;this.shareDepthFrom=a.shareDepthFrom;return this},dispose:function(){this.dispatchEvent({type:\"dispose\"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);\nTHREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;\nTHREE.WebGLBufferRenderer=function(a,b,c){var d;this.setMode=function(a){d=a};this.render=function(b,g){a.drawArrays(d,b,g);c.calls++;c.vertices+=g;d===a.TRIANGLES&&(c.faces+=g/3)};this.renderInstances=function(a){var c=b.get(\"ANGLE_instanced_arrays\");if(null===c)console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\");else{var f=a.attributes.position;f instanceof THREE.InterleavedBufferAttribute?c.drawArraysInstancedANGLE(d,\n0,f.data.count,a.maxInstancedCount):c.drawArraysInstancedANGLE(d,0,f.count,a.maxInstancedCount)}}};\nTHREE.WebGLIndexedBufferRenderer=function(a,b,c){var d,e,g;this.setMode=function(a){d=a};this.setIndex=function(c){c.array instanceof Uint32Array&&b.get(\"OES_element_index_uint\")?(e=a.UNSIGNED_INT,g=4):(e=a.UNSIGNED_SHORT,g=2)};this.render=function(b,h){a.drawElements(d,h,e,b*g);c.calls++;c.vertices+=h;d===a.TRIANGLES&&(c.faces+=h/3)};this.renderInstances=function(a){var c=b.get(\"ANGLE_instanced_arrays\");null===c?console.error(\"THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.\"):\nc.drawElementsInstancedANGLE(d,a.index.array.length,e,0,a.maxInstancedCount)}};\nTHREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case \"EXT_texture_filter_anisotropic\":d=a.getExtension(\"EXT_texture_filter_anisotropic\")||a.getExtension(\"MOZ_EXT_texture_filter_anisotropic\")||a.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\");break;case \"WEBGL_compressed_texture_s3tc\":d=a.getExtension(\"WEBGL_compressed_texture_s3tc\")||a.getExtension(\"MOZ_WEBGL_compressed_texture_s3tc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\nbreak;case \"WEBGL_compressed_texture_pvrtc\":d=a.getExtension(\"WEBGL_compressed_texture_pvrtc\")||a.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");break;default:d=a.getExtension(c)}null===d&&console.warn(\"THREE.WebGLRenderer: \"+c+\" extension not supported.\");return b[c]=d}};\nTHREE.WebGLCapabilities=function(a,b,c){function d(b){if(\"highp\"===b){if(0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return\"highp\";b=\"mediump\"}return\"mediump\"===b&&0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision?\"mediump\":\"lowp\"}this.getMaxPrecision=d;this.precision=void 0!==c.precision?c.precision:\"highp\";\nthis.logarithmicDepthBuffer=void 0!==c.logarithmicDepthBuffer?c.logarithmicDepthBuffer:!1;this.maxTextures=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS);this.maxVertexTextures=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS);this.maxTextureSize=a.getParameter(a.MAX_TEXTURE_SIZE);this.maxCubemapSize=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE);this.maxAttributes=a.getParameter(a.MAX_VERTEX_ATTRIBS);this.maxVertexUniforms=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS);this.maxVaryings=a.getParameter(a.MAX_VARYING_VECTORS);\nthis.maxFragmentUniforms=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS);this.vertexTextures=0<this.maxVertexTextures;this.floatFragmentTextures=!!b.get(\"OES_texture_float\");this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;c=d(this.precision);c!==this.precision&&(console.warn(\"THREE.WebGLRenderer:\",this.precision,\"not supported, using\",c,\"instead.\"),this.precision=c);this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!b.get(\"EXT_frag_depth\"))};\nTHREE.WebGLGeometries=function(a,b,c){function d(a){a=a.target;var h=g[a.id].attributes,k;for(k in h)e(h[k]);a.removeEventListener(\"dispose\",d);delete g[a.id];k=b.get(a);k.wireframe&&e(k.wireframe);c.memory.geometries--}function e(c){var d;d=c instanceof THREE.InterleavedBufferAttribute?b.get(c.data).__webglBuffer:b.get(c).__webglBuffer;void 0!==d&&(a.deleteBuffer(d),c instanceof THREE.InterleavedBufferAttribute?b.delete(c.data):b.delete(c))}var g={};this.get=function(a){var b=a.geometry;if(void 0!==\ng[b.id])return g[b.id];b.addEventListener(\"dispose\",d);var e;b instanceof THREE.BufferGeometry?e=b:b instanceof THREE.Geometry&&(void 0===b._bufferGeometry&&(b._bufferGeometry=(new THREE.BufferGeometry).setFromObject(a)),e=b._bufferGeometry);g[b.id]=e;c.memory.geometries++;return e}};\nTHREE.WebGLObjects=function(a,b,c){function d(c,d){var e=c instanceof THREE.InterleavedBufferAttribute?c.data:c,g=b.get(e);void 0===g.__webglBuffer?(g.__webglBuffer=a.createBuffer(),a.bindBuffer(d,g.__webglBuffer),a.bufferData(d,e.array,e.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW),g.version=e.version):g.version!==e.version&&(a.bindBuffer(d,g.__webglBuffer),!1===e.dynamic||-1===e.updateRange.count?a.bufferSubData(d,0,e.array):0===e.updateRange.count?console.error(\"THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.\"):\n(a.bufferSubData(d,e.updateRange.offset*e.array.BYTES_PER_ELEMENT,e.array.subarray(e.updateRange.offset,e.updateRange.offset+e.updateRange.count)),e.updateRange.count=0),g.version=e.version)}function e(a,b,c){if(b>c){var d=b;b=c;c=d}d=a[b];return void 0===d?(a[b]=[c],!0):-1===d.indexOf(c)?(d.push(c),!0):!1}var g=new THREE.WebGLGeometries(a,b,c);this.getAttributeBuffer=function(a){return a instanceof THREE.InterleavedBufferAttribute?b.get(a.data).__webglBuffer:b.get(a).__webglBuffer};this.getWireframeAttribute=\nfunction(c){var g=b.get(c);if(void 0!==g.wireframe)return g.wireframe;var k=[],l=c.index,n=c.attributes;c=n.position;if(null!==l)for(var n={},l=l.array,p=0,m=l.length;p<m;p+=3){var q=l[p+0],t=l[p+1],r=l[p+2];e(n,q,t)&&k.push(q,t);e(n,t,r)&&k.push(t,r);e(n,r,q)&&k.push(r,q)}else for(l=n.position.array,p=0,m=l.length/3-1;p<m;p+=3)q=p+0,t=p+1,r=p+2,k.push(q,t,t,r,r,q);k=new THREE.BufferAttribute(new (65535<c.count?Uint32Array:Uint16Array)(k),1);d(k,a.ELEMENT_ARRAY_BUFFER);return g.wireframe=k};this.update=\nfunction(b){var c=g.get(b);b.geometry instanceof THREE.Geometry&&c.updateFromObject(b);b=c.index;var e=c.attributes;null!==b&&d(b,a.ELEMENT_ARRAY_BUFFER);for(var l in e)d(e[l],a.ARRAY_BUFFER);b=c.morphAttributes;for(l in b)for(var e=b[l],n=0,p=e.length;n<p;n++)d(e[n],a.ARRAY_BUFFER);return c}};\nTHREE.WebGLProgram=function(){function a(a){var b=[],c;for(c in a){var f=a[c];!1!==f&&b.push(\"#define \"+c+\" \"+f)}return b.join(\"\\n\")}function b(a){return\"\"!==a}var c=0;return function(d,e,g,f){var h=d.context,k=g.defines,l=g.__webglShader.vertexShader,n=g.__webglShader.fragmentShader,p=\"SHADOWMAP_TYPE_BASIC\";f.shadowMapType===THREE.PCFShadowMap?p=\"SHADOWMAP_TYPE_PCF\":f.shadowMapType===THREE.PCFSoftShadowMap&&(p=\"SHADOWMAP_TYPE_PCF_SOFT\");var m=\"ENVMAP_TYPE_CUBE\",q=\"ENVMAP_MODE_REFLECTION\",t=\"ENVMAP_BLENDING_MULTIPLY\";\nif(f.envMap){switch(g.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:m=\"ENVMAP_TYPE_CUBE\";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:m=\"ENVMAP_TYPE_EQUIREC\";break;case THREE.SphericalReflectionMapping:m=\"ENVMAP_TYPE_SPHERE\"}switch(g.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:q=\"ENVMAP_MODE_REFRACTION\"}switch(g.combine){case THREE.MultiplyOperation:t=\"ENVMAP_BLENDING_MULTIPLY\";\nbreak;case THREE.MixOperation:t=\"ENVMAP_BLENDING_MIX\";break;case THREE.AddOperation:t=\"ENVMAP_BLENDING_ADD\"}}var r=0<d.gammaFactor?d.gammaFactor:1,u=a(k),w=h.createProgram();g instanceof THREE.RawShaderMaterial?d=k=\"\":(k=[\"precision \"+f.precision+\" float;\",\"precision \"+f.precision+\" int;\",\"#define SHADER_NAME \"+g.__webglShader.name,u,f.supportsVertexTextures?\"#define VERTEX_TEXTURES\":\"\",d.gammaInput?\"#define GAMMA_INPUT\":\"\",d.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",\"#define GAMMA_FACTOR \"+r,\"#define MAX_DIR_LIGHTS \"+\nf.maxDirLights,\"#define MAX_POINT_LIGHTS \"+f.maxPointLights,\"#define MAX_SPOT_LIGHTS \"+f.maxSpotLights,\"#define MAX_HEMI_LIGHTS \"+f.maxHemiLights,\"#define MAX_SHADOWS \"+f.maxShadows,\"#define MAX_BONES \"+f.maxBones,f.map?\"#define USE_MAP\":\"\",f.envMap?\"#define USE_ENVMAP\":\"\",f.envMap?\"#define \"+q:\"\",f.lightMap?\"#define USE_LIGHTMAP\":\"\",f.aoMap?\"#define USE_AOMAP\":\"\",f.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",f.bumpMap?\"#define USE_BUMPMAP\":\"\",f.normalMap?\"#define USE_NORMALMAP\":\"\",f.displacementMap&&\nf.supportsVertexTextures?\"#define USE_DISPLACEMENTMAP\":\"\",f.specularMap?\"#define USE_SPECULARMAP\":\"\",f.alphaMap?\"#define USE_ALPHAMAP\":\"\",f.vertexColors?\"#define USE_COLOR\":\"\",f.flatShading?\"#define FLAT_SHADED\":\"\",f.skinning?\"#define USE_SKINNING\":\"\",f.useVertexTexture?\"#define BONE_TEXTURE\":\"\",f.morphTargets?\"#define USE_MORPHTARGETS\":\"\",f.morphNormals&&!1===f.flatShading?\"#define USE_MORPHNORMALS\":\"\",f.doubleSided?\"#define DOUBLE_SIDED\":\"\",f.flipSided?\"#define FLIP_SIDED\":\"\",f.shadowMapEnabled?\n\"#define USE_SHADOWMAP\":\"\",f.shadowMapEnabled?\"#define \"+p:\"\",f.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\"\",f.sizeAttenuation?\"#define USE_SIZEATTENUATION\":\"\",f.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",f.logarithmicDepthBuffer&&d.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\"\",\"uniform mat4 modelMatrix;\",\"uniform mat4 modelViewMatrix;\",\"uniform mat4 projectionMatrix;\",\"uniform mat4 viewMatrix;\",\"uniform mat3 normalMatrix;\",\"uniform vec3 cameraPosition;\",\"attribute vec3 position;\",\n\"attribute vec3 normal;\",\"attribute vec2 uv;\",\"#ifdef USE_COLOR\",\"\\tattribute vec3 color;\",\"#endif\",\"#ifdef USE_MORPHTARGETS\",\"\\tattribute vec3 morphTarget0;\",\"\\tattribute vec3 morphTarget1;\",\"\\tattribute vec3 morphTarget2;\",\"\\tattribute vec3 morphTarget3;\",\"\\t#ifdef USE_MORPHNORMALS\",\"\\t\\tattribute vec3 morphNormal0;\",\"\\t\\tattribute vec3 morphNormal1;\",\"\\t\\tattribute vec3 morphNormal2;\",\"\\t\\tattribute vec3 morphNormal3;\",\"\\t#else\",\"\\t\\tattribute vec3 morphTarget4;\",\"\\t\\tattribute vec3 morphTarget5;\",\n\"\\t\\tattribute vec3 morphTarget6;\",\"\\t\\tattribute vec3 morphTarget7;\",\"\\t#endif\",\"#endif\",\"#ifdef USE_SKINNING\",\"\\tattribute vec4 skinIndex;\",\"\\tattribute vec4 skinWeight;\",\"#endif\",\"\\n\"].filter(b).join(\"\\n\"),d=[f.bumpMap||f.normalMap||f.flatShading||g.derivatives?\"#extension GL_OES_standard_derivatives : enable\":\"\",f.logarithmicDepthBuffer&&d.extensions.get(\"EXT_frag_depth\")?\"#extension GL_EXT_frag_depth : enable\":\"\",\"precision \"+f.precision+\" float;\",\"precision \"+f.precision+\" int;\",\"#define SHADER_NAME \"+\ng.__webglShader.name,u,\"#define MAX_DIR_LIGHTS \"+f.maxDirLights,\"#define MAX_POINT_LIGHTS \"+f.maxPointLights,\"#define MAX_SPOT_LIGHTS \"+f.maxSpotLights,\"#define MAX_HEMI_LIGHTS \"+f.maxHemiLights,\"#define MAX_SHADOWS \"+f.maxShadows,f.alphaTest?\"#define ALPHATEST \"+f.alphaTest:\"\",d.gammaInput?\"#define GAMMA_INPUT\":\"\",d.gammaOutput?\"#define GAMMA_OUTPUT\":\"\",\"#define GAMMA_FACTOR \"+r,f.useFog&&f.fog?\"#define USE_FOG\":\"\",f.useFog&&f.fogExp?\"#define FOG_EXP2\":\"\",f.map?\"#define USE_MAP\":\"\",f.envMap?\"#define USE_ENVMAP\":\n\"\",f.envMap?\"#define \"+m:\"\",f.envMap?\"#define \"+q:\"\",f.envMap?\"#define \"+t:\"\",f.lightMap?\"#define USE_LIGHTMAP\":\"\",f.aoMap?\"#define USE_AOMAP\":\"\",f.emissiveMap?\"#define USE_EMISSIVEMAP\":\"\",f.bumpMap?\"#define USE_BUMPMAP\":\"\",f.normalMap?\"#define USE_NORMALMAP\":\"\",f.specularMap?\"#define USE_SPECULARMAP\":\"\",f.alphaMap?\"#define USE_ALPHAMAP\":\"\",f.vertexColors?\"#define USE_COLOR\":\"\",f.flatShading?\"#define FLAT_SHADED\":\"\",f.metal?\"#define METAL\":\"\",f.doubleSided?\"#define DOUBLE_SIDED\":\"\",f.flipSided?\"#define FLIP_SIDED\":\n\"\",f.shadowMapEnabled?\"#define USE_SHADOWMAP\":\"\",f.shadowMapEnabled?\"#define \"+p:\"\",f.shadowMapDebug?\"#define SHADOWMAP_DEBUG\":\"\",f.logarithmicDepthBuffer?\"#define USE_LOGDEPTHBUF\":\"\",f.logarithmicDepthBuffer&&d.extensions.get(\"EXT_frag_depth\")?\"#define USE_LOGDEPTHBUF_EXT\":\"\",\"uniform mat4 viewMatrix;\",\"uniform vec3 cameraPosition;\",\"\\n\"].filter(b).join(\"\\n\"));n=d+n;l=THREE.WebGLShader(h,h.VERTEX_SHADER,k+l);n=THREE.WebGLShader(h,h.FRAGMENT_SHADER,n);h.attachShader(w,l);h.attachShader(w,n);void 0!==\ng.index0AttributeName?h.bindAttribLocation(w,0,g.index0AttributeName):!0===f.morphTargets&&h.bindAttribLocation(w,0,\"position\");h.linkProgram(w);f=h.getProgramInfoLog(w);p=h.getShaderInfoLog(l);m=h.getShaderInfoLog(n);t=q=!0;if(!1===h.getProgramParameter(w,h.LINK_STATUS))q=!1,console.error(\"THREE.WebGLProgram: shader error: \",h.getError(),\"gl.VALIDATE_STATUS\",h.getProgramParameter(w,h.VALIDATE_STATUS),\"gl.getProgramInfoLog\",f,p,m);else if(\"\"!==f)console.warn(\"THREE.WebGLProgram: gl.getProgramInfoLog()\",\nf);else if(\"\"===p||\"\"===m)t=!1;t&&(this.diagnostics={runnable:q,material:g,programLog:f,vertexShader:{log:p,prefix:k},fragmentShader:{log:m,prefix:d}});h.deleteShader(l);h.deleteShader(n);var v;this.getUniforms=function(){if(void 0===v){for(var a={},b=h.getProgramParameter(w,h.ACTIVE_UNIFORMS),c=0;c<b;c++){var d=h.getActiveUniform(w,c).name,e=h.getUniformLocation(w,d),f=d.lastIndexOf(\"[0]\");-1!==f&&f===d.length-3&&(a[d.substr(0,f)]=e);a[d]=e}v=a}return v};var B;this.getAttributes=function(){if(void 0===\nB){for(var a={},b=h.getProgramParameter(w,h.ACTIVE_ATTRIBUTES),c=0;c<b;c++){var d=h.getActiveAttrib(w,c).name;a[d]=h.getAttribLocation(w,d)}B=a}return B};this.destroy=function(){h.deleteProgram(w);this.program=void 0};Object.defineProperties(this,{uniforms:{get:function(){console.warn(\"THREE.WebGLProgram: .uniforms is now .getUniforms().\");return this.getUniforms()}},attributes:{get:function(){console.warn(\"THREE.WebGLProgram: .attributes is now .getAttributes().\");return this.getAttributes()}}});\nthis.id=c++;this.code=e;this.usedTimes=1;this.program=w;this.vertexShader=l;this.fragmentShader=n;return this}}();\nTHREE.WebGLPrograms=function(a,b){var c=[],d={MeshDepthMaterial:\"depth\",MeshNormalMaterial:\"normal\",MeshBasicMaterial:\"basic\",MeshLambertMaterial:\"lambert\",MeshPhongMaterial:\"phong\",LineBasicMaterial:\"basic\",LineDashedMaterial:\"dashed\",PointsMaterial:\"points\"},e=\"precision supportsVertexTextures map envMap envMapMode lightMap aoMap emissiveMap bumpMap normalMap specularMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals maxDirLights maxPointLights maxSpotLights maxHemiLights maxShadows shadowMapEnabled shadowMapType shadowMapDebug alphaTest metal doubleSided flipSided\".split(\" \");this.getParameters=\nfunction(c,e,h,k){for(var l,n,p,m,q=d[c.type],t=m=p=n=l=0,r=e.length;t<r;t++){var u=e[t];u.onlyShadow||!1===u.visible||(u instanceof THREE.DirectionalLight&&l++,u instanceof THREE.PointLight&&n++,u instanceof THREE.SpotLight&&p++,u instanceof THREE.HemisphereLight&&m++)}r=t=0;for(u=e.length;r<u;r++){var w=e[r];w.castShadow&&(w instanceof THREE.SpotLight&&t++,w instanceof THREE.DirectionalLight&&t++)}e=t;b.floatVertexTextures&&k&&k.skeleton&&k.skeleton.useVertexTexture?t=1024:(t=Math.floor((b.maxVertexUniforms-\n20)/4),void 0!==k&&k instanceof THREE.SkinnedMesh&&(t=Math.min(k.skeleton.bones.length,t),t<k.skeleton.bones.length&&console.warn(\"WebGLRenderer: too many bones - \"+k.skeleton.bones.length+\", this GPU supports just \"+t+\" (try OpenGL instead of ANGLE)\")));r=a.getPrecision();null!==c.precision&&(r=b.getMaxPrecision(c.precision),r!==c.precision&&console.warn(\"THREE.WebGLRenderer.initMaterial:\",c.precision,\"not supported, using\",r,\"instead.\"));return{shaderID:q,precision:r,supportsVertexTextures:b.vertexTextures,\nmap:!!c.map,envMap:!!c.envMap,envMapMode:c.envMap&&c.envMap.mapping,lightMap:!!c.lightMap,aoMap:!!c.aoMap,emissiveMap:!!c.emissiveMap,bumpMap:!!c.bumpMap,normalMap:!!c.normalMap,displacementMap:!!c.displacementMap,specularMap:!!c.specularMap,alphaMap:!!c.alphaMap,combine:c.combine,vertexColors:c.vertexColors,fog:h,useFog:c.fog,fogExp:h instanceof THREE.FogExp2,flatShading:c.shading===THREE.FlatShading,sizeAttenuation:c.sizeAttenuation,logarithmicDepthBuffer:b.logarithmicDepthBuffer,skinning:c.skinning,\nmaxBones:t,useVertexTexture:b.floatVertexTextures&&k&&k.skeleton&&k.skeleton.useVertexTexture,morphTargets:c.morphTargets,morphNormals:c.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,maxDirLights:l,maxPointLights:n,maxSpotLights:p,maxHemiLights:m,maxShadows:e,shadowMapEnabled:a.shadowMap.enabled&&k.receiveShadow&&0<e,shadowMapType:a.shadowMap.type,shadowMapDebug:a.shadowMap.debug,alphaTest:c.alphaTest,metal:c.metal,doubleSided:c.side===THREE.DoubleSide,flipSided:c.side===\nTHREE.BackSide}};this.getProgramCode=function(a,b){var c=[];b.shaderID?c.push(b.shaderID):(c.push(a.fragmentShader),c.push(a.vertexShader));if(void 0!==a.defines)for(var d in a.defines)c.push(d),c.push(a.defines[d]);for(d=0;d<e.length;d++){var l=e[d];c.push(l);c.push(b[l])}return c.join()};this.acquireProgram=function(b,d,e){for(var k,l=0,n=c.length;l<n;l++){var p=c[l];if(p.code===e){k=p;++k.usedTimes;break}}void 0===k&&(k=new THREE.WebGLProgram(a,e,b,d),c.push(k));return k};this.releaseProgram=function(a){if(0===\n--a.usedTimes){var b=c.indexOf(a);c[b]=c[c.length-1];c.pop();a.destroy()}};this.programs=c};THREE.WebGLProperties=function(){var a={};this.get=function(b){b=b.uuid;var c=a[b];void 0===c&&(c={},a[b]=c);return c};this.delete=function(b){delete a[b.uuid]};this.clear=function(){a={}}};\nTHREE.WebGLShader=function(){var a=function(a){a=a.split(\"\\n\");for(var c=0;c<a.length;c++)a[c]=c+1+\": \"+a[c];return a.join(\"\\n\")};return function(b,c,d){var e=b.createShader(c);b.shaderSource(e,d);b.compileShader(e);!1===b.getShaderParameter(e,b.COMPILE_STATUS)&&console.error(\"THREE.WebGLShader: Shader couldn't compile.\");\"\"!==b.getShaderInfoLog(e)&&console.warn(\"THREE.WebGLShader: gl.getShaderInfoLog()\",c===b.VERTEX_SHADER?\"vertex\":\"fragment\",b.getShaderInfoLog(e),a(d));return e}}();\nTHREE.WebGLShadowMap=function(a,b,c){function d(a,b){var c=a.geometry,c=void 0!==c.morphTargets&&0<c.morphTargets.length&&b.morphTargets,d=a instanceof THREE.SkinnedMesh&&b.skinning,c=a.customDepthMaterial?a.customDepthMaterial:d?c?u:r:c?t:q;c.visible=b.visible;c.wireframe=b.wireframe;c.wireframeLinewidth=b.wireframeLinewidth;return c}function e(a,b){if(!1!==a.visible){(a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.Points)&&a.castShadow&&(!1===a.frustumCulled||!0===h.intersectsObject(a))&&\n!0===a.material.visible&&(a.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld),n.push(a));for(var c=a.children,d=0,f=c.length;d<f;d++)e(c[d],b)}}var g=a.context,f=a.state,h=new THREE.Frustum,k=new THREE.Matrix4;new THREE.Vector3;new THREE.Vector3;var l=new THREE.Vector3,n=[],p=THREE.ShaderLib.depthRGBA,m=THREE.UniformsUtils.clone(p.uniforms),q=new THREE.ShaderMaterial({uniforms:m,vertexShader:p.vertexShader,fragmentShader:p.fragmentShader}),t=new THREE.ShaderMaterial({uniforms:m,\nvertexShader:p.vertexShader,fragmentShader:p.fragmentShader,morphTargets:!0}),r=new THREE.ShaderMaterial({uniforms:m,vertexShader:p.vertexShader,fragmentShader:p.fragmentShader,skinning:!0}),u=new THREE.ShaderMaterial({uniforms:m,vertexShader:p.vertexShader,fragmentShader:p.fragmentShader,morphTargets:!0,skinning:!0});q._shadowPass=!0;t._shadowPass=!0;r._shadowPass=!0;u._shadowPass=!0;var w=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=THREE.PCFShadowMap;this.cullFace=THREE.CullFaceFront;\nthis.render=function(m,q){if(!1!==w.enabled&&(!1!==w.autoUpdate||!1!==w.needsUpdate)){g.clearColor(1,1,1,1);f.disable(g.BLEND);f.enable(g.CULL_FACE);g.frontFace(g.CCW);w.cullFace===THREE.CullFaceFront?g.cullFace(g.FRONT):g.cullFace(g.BACK);f.setDepthTest(!0);for(var p=0,t=b.length;p<t;p++){var r=b[p];if(r.castShadow){if(!r.shadowMap){var u=THREE.LinearFilter;w.type===THREE.PCFSoftShadowMap&&(u=THREE.NearestFilter);r.shadowMap=new THREE.WebGLRenderTarget(r.shadowMapWidth,r.shadowMapHeight,{minFilter:u,\nmagFilter:u,format:THREE.RGBAFormat});r.shadowMapSize=new THREE.Vector2(r.shadowMapWidth,r.shadowMapHeight);r.shadowMatrix=new THREE.Matrix4}if(!r.shadowCamera){if(r instanceof THREE.SpotLight)r.shadowCamera=new THREE.PerspectiveCamera(r.shadowCameraFov,r.shadowMapWidth/r.shadowMapHeight,r.shadowCameraNear,r.shadowCameraFar);else if(r instanceof THREE.DirectionalLight)r.shadowCamera=new THREE.OrthographicCamera(r.shadowCameraLeft,r.shadowCameraRight,r.shadowCameraTop,r.shadowCameraBottom,r.shadowCameraNear,\nr.shadowCameraFar);else{console.error(\"THREE.ShadowMapPlugin: Unsupported light type for shadow\",r);continue}m.add(r.shadowCamera);!0===m.autoUpdate&&m.updateMatrixWorld()}r.shadowCameraVisible&&!r.cameraHelper&&(r.cameraHelper=new THREE.CameraHelper(r.shadowCamera),m.add(r.cameraHelper));var D=r.shadowMap,G=r.shadowMatrix,u=r.shadowCamera;u.position.setFromMatrixPosition(r.matrixWorld);l.setFromMatrixPosition(r.target.matrixWorld);u.lookAt(l);u.updateMatrixWorld();u.matrixWorldInverse.getInverse(u.matrixWorld);\nr.cameraHelper&&(r.cameraHelper.visible=r.shadowCameraVisible);r.shadowCameraVisible&&r.cameraHelper.update();G.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);G.multiply(u.projectionMatrix);G.multiply(u.matrixWorldInverse);k.multiplyMatrices(u.projectionMatrix,u.matrixWorldInverse);h.setFromMatrix(k);a.setRenderTarget(D);a.clear();n.length=0;e(m,u);r=0;for(D=n.length;r<D;r++){var G=n[r],O=c.update(G),C=G.material;if(C instanceof THREE.MeshFaceMaterial)for(var F=O.groups,C=C.materials,K=0,L=F.length;K<\nL;K++){var E=F[K],J=C[E.materialIndex];!0===J.visible&&a.renderBufferDirect(u,b,null,O,d(G,J),G,E)}else a.renderBufferDirect(u,b,null,O,d(G,C),G)}}}p=a.getClearColor();t=a.getClearAlpha();a.setClearColor(p,t);f.enable(g.BLEND);w.cullFace===THREE.CullFaceFront&&g.cullFace(g.BACK);a.resetGLState();w.needsUpdate=!1}}};\nTHREE.WebGLState=function(a,b,c){var d=this,e=new Uint8Array(16),g=new Uint8Array(16),f={},h=null,k=null,l=null,n=null,p=null,m=null,q=null,t=null,r=null,u=null,w=null,v=null,B=null,x=null,H=null,I=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),z=void 0,D={};this.init=function(){a.clearColor(0,0,0,1);a.clearDepth(1);a.clearStencil(0);this.enable(a.DEPTH_TEST);a.depthFunc(a.LEQUAL);a.frontFace(a.CCW);a.cullFace(a.BACK);this.enable(a.CULL_FACE);this.enable(a.BLEND);a.blendEquation(a.FUNC_ADD);a.blendFunc(a.SRC_ALPHA,\na.ONE_MINUS_SRC_ALPHA)};this.initAttributes=function(){for(var a=0,b=e.length;a<b;a++)e[a]=0};this.enableAttribute=function(b){e[b]=1;0===g[b]&&(a.enableVertexAttribArray(b),g[b]=1)};this.disableUnusedAttributes=function(){for(var b=0,c=g.length;b<c;b++)g[b]!==e[b]&&(a.disableVertexAttribArray(b),g[b]=0)};this.enable=function(b){!0!==f[b]&&(a.enable(b),f[b]=!0)};this.disable=function(b){!1!==f[b]&&(a.disable(b),f[b]=!1)};this.getCompressedTextureFormats=function(){if(null===h&&(h=[],b.get(\"WEBGL_compressed_texture_pvrtc\")||\nb.get(\"WEBGL_compressed_texture_s3tc\")))for(var c=a.getParameter(a.COMPRESSED_TEXTURE_FORMATS),d=0;d<c.length;d++)h.push(c[d]);return h};this.setBlending=function(b,d,e,f,g,h,r){b!==k&&(b===THREE.NoBlending?this.disable(a.BLEND):b===THREE.AdditiveBlending?(this.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE)):b===THREE.SubtractiveBlending?(this.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)):b===THREE.MultiplyBlending?(this.enable(a.BLEND),\na.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR)):b===THREE.CustomBlending?this.enable(a.BLEND):(this.enable(a.BLEND),a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)),k=b);if(b===THREE.CustomBlending){g=g||d;h=h||e;r=r||f;if(d!==l||g!==m)a.blendEquationSeparate(c(d),c(g)),l=d,m=g;if(e!==n||f!==p||h!==q||r!==t)a.blendFuncSeparate(c(e),c(f),c(h),c(r)),n=e,p=f,q=h,t=r}else t=q=m=p=n=l=null};this.setDepthFunc=\nfunction(b){if(r!==b){if(b)switch(b){case THREE.NeverDepth:a.depthFunc(a.NEVER);break;case THREE.AlwaysDepth:a.depthFunc(a.ALWAYS);break;case THREE.LessDepth:a.depthFunc(a.LESS);break;case THREE.LessEqualDepth:a.depthFunc(a.LEQUAL);break;case THREE.EqualDepth:a.depthFunc(a.EQUAL);break;case THREE.GreaterEqualDepth:a.depthFunc(a.GEQUAL);break;case THREE.GreaterDepth:a.depthFunc(a.GREATER);break;case THREE.NotEqualDepth:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}else a.depthFunc(a.LEQUAL);\nr=b}};this.setDepthTest=function(b){b?this.enable(a.DEPTH_TEST):this.disable(a.DEPTH_TEST)};this.setDepthWrite=function(b){u!==b&&(a.depthMask(b),u=b)};this.setColorWrite=function(b){w!==b&&(a.colorMask(b,b,b,b),w=b)};this.setFlipSided=function(b){v!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),v=b)};this.setLineWidth=function(b){b!==B&&(a.lineWidth(b),B=b)};this.setPolygonOffset=function(b,c,d){b?this.enable(a.POLYGON_OFFSET_FILL):this.disable(a.POLYGON_OFFSET_FILL);!b||x===c&&H===d||(a.polygonOffset(c,\nd),x=c,H=d)};this.setScissorTest=function(b){b?this.enable(a.SCISSOR_TEST):this.disable(a.SCISSOR_TEST)};this.activeTexture=function(b){void 0===b&&(b=a.TEXTURE0+I-1);z!==b&&(a.activeTexture(b),z=b)};this.bindTexture=function(b,c){void 0===z&&d.activeTexture();var e=D[z];void 0===e&&(e={type:void 0,texture:void 0},D[z]=e);if(e.type!==b||e.texture!==c)a.bindTexture(b,c),e.type=b,e.texture=c};this.compressedTexImage2D=function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error(b)}};\nthis.texImage2D=function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error(b)}};this.reset=function(){for(var b=0;b<g.length;b++)1===g[b]&&(a.disableVertexAttribArray(b),g[b]=0);f={};v=w=u=k=h=null}};\nTHREE.LensFlarePlugin=function(a,b){var c,d,e,g,f,h,k,l,n,p,m=a.context,q=a.state,t,r,u,w,v,B;this.render=function(x,H,I,z){if(0!==b.length){x=new THREE.Vector3;var D=z/I,G=.5*I,O=.5*z,C=16/z,F=new THREE.Vector2(C*D,C),K=new THREE.Vector3(1,1,0),L=new THREE.Vector2(1,1);if(void 0===u){var C=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),E=new Uint16Array([0,1,2,0,2,3]);t=m.createBuffer();r=m.createBuffer();m.bindBuffer(m.ARRAY_BUFFER,t);m.bufferData(m.ARRAY_BUFFER,C,m.STATIC_DRAW);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,\nr);m.bufferData(m.ELEMENT_ARRAY_BUFFER,E,m.STATIC_DRAW);v=m.createTexture();B=m.createTexture();q.bindTexture(m.TEXTURE_2D,v);m.texImage2D(m.TEXTURE_2D,0,m.RGB,16,16,0,m.RGB,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST);q.bindTexture(m.TEXTURE_2D,B);m.texImage2D(m.TEXTURE_2D,0,\nm.RGBA,16,16,0,m.RGBA,m.UNSIGNED_BYTE,null);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST);m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST);var C=(w=0<m.getParameter(m.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:\"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nuniform sampler2D occlusionMap;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\nvVisibility =        visibility.r / 9.0;\\nvVisibility *= 1.0 - visibility.g / 9.0;\\nvVisibility *=       visibility.b / 9.0;\\nvVisibility *= 1.0 - visibility.a / 9.0;\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\nfragmentShader:\"uniform lowp int renderType;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvarying float vVisibility;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * vVisibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"}:{vertexShader:\"uniform lowp int renderType;\\nuniform vec3 screenPosition;\\nuniform vec2 scale;\\nuniform float rotation;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uv;\\nvec2 pos = position;\\nif( renderType == 2 ) {\\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\n}\\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\n}\",\nfragmentShader:\"precision mediump float;\\nuniform lowp int renderType;\\nuniform sampler2D map;\\nuniform sampler2D occlusionMap;\\nuniform float opacity;\\nuniform vec3 color;\\nvarying vec2 vUV;\\nvoid main() {\\nif( renderType == 0 ) {\\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\\n} else if( renderType == 1 ) {\\ngl_FragColor = texture2D( map, vUV );\\n} else {\\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\\nvisibility = ( 1.0 - visibility / 4.0 );\\nvec4 texture = texture2D( map, vUV );\\ntexture.a *= opacity * visibility;\\ngl_FragColor = texture;\\ngl_FragColor.rgb *= color;\\n}\\n}\"},\nE=m.createProgram(),J=m.createShader(m.FRAGMENT_SHADER),y=m.createShader(m.VERTEX_SHADER),P=\"precision \"+a.getPrecision()+\" float;\\n\";m.shaderSource(J,P+C.fragmentShader);m.shaderSource(y,P+C.vertexShader);m.compileShader(J);m.compileShader(y);m.attachShader(E,J);m.attachShader(E,y);m.linkProgram(E);u=E;n=m.getAttribLocation(u,\"position\");p=m.getAttribLocation(u,\"uv\");c=m.getUniformLocation(u,\"renderType\");d=m.getUniformLocation(u,\"map\");e=m.getUniformLocation(u,\"occlusionMap\");g=m.getUniformLocation(u,\n\"opacity\");f=m.getUniformLocation(u,\"color\");h=m.getUniformLocation(u,\"scale\");k=m.getUniformLocation(u,\"rotation\");l=m.getUniformLocation(u,\"screenPosition\")}m.useProgram(u);q.initAttributes();q.enableAttribute(n);q.enableAttribute(p);q.disableUnusedAttributes();m.uniform1i(e,0);m.uniform1i(d,1);m.bindBuffer(m.ARRAY_BUFFER,t);m.vertexAttribPointer(n,2,m.FLOAT,!1,16,0);m.vertexAttribPointer(p,2,m.FLOAT,!1,16,8);m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,r);q.disable(m.CULL_FACE);m.depthMask(!1);E=0;for(J=\nb.length;E<J;E++)if(C=16/z,F.set(C*D,C),y=b[E],x.set(y.matrixWorld.elements[12],y.matrixWorld.elements[13],y.matrixWorld.elements[14]),x.applyMatrix4(H.matrixWorldInverse),x.applyProjection(H.projectionMatrix),K.copy(x),L.x=K.x*G+G,L.y=K.y*O+O,w||0<L.x&&L.x<I&&0<L.y&&L.y<z){q.activeTexture(m.TEXTURE0);q.bindTexture(m.TEXTURE_2D,null);q.activeTexture(m.TEXTURE1);q.bindTexture(m.TEXTURE_2D,v);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGB,L.x-8,L.y-8,16,16,0);m.uniform1i(c,0);m.uniform2f(h,F.x,F.y);m.uniform3f(l,\nK.x,K.y,K.z);q.disable(m.BLEND);q.enable(m.DEPTH_TEST);m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0);q.activeTexture(m.TEXTURE0);q.bindTexture(m.TEXTURE_2D,B);m.copyTexImage2D(m.TEXTURE_2D,0,m.RGBA,L.x-8,L.y-8,16,16,0);m.uniform1i(c,1);q.disable(m.DEPTH_TEST);q.activeTexture(m.TEXTURE1);q.bindTexture(m.TEXTURE_2D,v);m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0);y.positionScreen.copy(K);y.customUpdateCallback?y.customUpdateCallback(y):y.updateLensFlares();m.uniform1i(c,2);q.enable(m.BLEND);for(var P=\n0,U=y.lensFlares.length;P<U;P++){var Q=y.lensFlares[P];.001<Q.opacity&&.001<Q.scale&&(K.x=Q.x,K.y=Q.y,K.z=Q.z,C=Q.size*Q.scale/z,F.x=C*D,F.y=C,m.uniform3f(l,K.x,K.y,K.z),m.uniform2f(h,F.x,F.y),m.uniform1f(k,Q.rotation),m.uniform1f(g,Q.opacity),m.uniform3f(f,Q.color.r,Q.color.g,Q.color.b),q.setBlending(Q.blending,Q.blendEquation,Q.blendSrc,Q.blendDst),a.setTexture(Q.texture,1),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0))}}q.enable(m.CULL_FACE);q.enable(m.DEPTH_TEST);m.depthMask(!0);a.resetGLState()}}};\nTHREE.SpritePlugin=function(a,b){var c,d,e,g,f,h,k,l,n,p,m,q,t,r,u,w,v;function B(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var x=a.context,H=a.state,I,z,D,G,O=new THREE.Vector3,C=new THREE.Quaternion,F=new THREE.Vector3;this.render=function(K,L){if(0!==b.length){if(void 0===D){var E=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),J=new Uint16Array([0,1,2,0,2,3]);I=x.createBuffer();z=x.createBuffer();x.bindBuffer(x.ARRAY_BUFFER,I);x.bufferData(x.ARRAY_BUFFER,E,x.STATIC_DRAW);x.bindBuffer(x.ELEMENT_ARRAY_BUFFER,\nz);x.bufferData(x.ELEMENT_ARRAY_BUFFER,J,x.STATIC_DRAW);var E=x.createProgram(),J=x.createShader(x.VERTEX_SHADER),y=x.createShader(x.FRAGMENT_SHADER);x.shaderSource(J,[\"precision \"+a.getPrecision()+\" float;\",\"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\nattribute vec2 position;\\nattribute vec2 uv;\\nvarying vec2 vUV;\\nvoid main() {\\nvUV = uvOffset + uv * uvScale;\\nvec2 alignedPosition = position * scale;\\nvec2 rotatedPosition;\\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\nvec4 finalPosition;\\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\nfinalPosition.xy += rotatedPosition;\\nfinalPosition = projectionMatrix * finalPosition;\\ngl_Position = finalPosition;\\n}\"].join(\"\\n\"));\nx.shaderSource(y,[\"precision \"+a.getPrecision()+\" float;\",\"uniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\nuniform int fogType;\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float alphaTest;\\nvarying vec2 vUV;\\nvoid main() {\\nvec4 texture = texture2D( map, vUV );\\nif ( texture.a < alphaTest ) discard;\\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\\nif ( fogType > 0 ) {\\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\nfloat fogFactor = 0.0;\\nif ( fogType == 1 ) {\\nfogFactor = smoothstep( fogNear, fogFar, depth );\\n} else {\\nconst float LOG2 = 1.442695;\\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\\n}\\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n}\\n}\"].join(\"\\n\"));\nx.compileShader(J);x.compileShader(y);x.attachShader(E,J);x.attachShader(E,y);x.linkProgram(E);D=E;w=x.getAttribLocation(D,\"position\");v=x.getAttribLocation(D,\"uv\");c=x.getUniformLocation(D,\"uvOffset\");d=x.getUniformLocation(D,\"uvScale\");e=x.getUniformLocation(D,\"rotation\");g=x.getUniformLocation(D,\"scale\");f=x.getUniformLocation(D,\"color\");h=x.getUniformLocation(D,\"map\");k=x.getUniformLocation(D,\"opacity\");l=x.getUniformLocation(D,\"modelViewMatrix\");n=x.getUniformLocation(D,\"projectionMatrix\");p=\nx.getUniformLocation(D,\"fogType\");m=x.getUniformLocation(D,\"fogDensity\");q=x.getUniformLocation(D,\"fogNear\");t=x.getUniformLocation(D,\"fogFar\");r=x.getUniformLocation(D,\"fogColor\");u=x.getUniformLocation(D,\"alphaTest\");E=document.createElement(\"canvas\");E.width=8;E.height=8;J=E.getContext(\"2d\");J.fillStyle=\"white\";J.fillRect(0,0,8,8);G=new THREE.Texture(E);G.needsUpdate=!0}x.useProgram(D);H.initAttributes();H.enableAttribute(w);H.enableAttribute(v);H.disableUnusedAttributes();H.disable(x.CULL_FACE);\nH.enable(x.BLEND);x.bindBuffer(x.ARRAY_BUFFER,I);x.vertexAttribPointer(w,2,x.FLOAT,!1,16,0);x.vertexAttribPointer(v,2,x.FLOAT,!1,16,8);x.bindBuffer(x.ELEMENT_ARRAY_BUFFER,z);x.uniformMatrix4fv(n,!1,L.projectionMatrix.elements);H.activeTexture(x.TEXTURE0);x.uniform1i(h,0);J=E=0;(y=K.fog)?(x.uniform3f(r,y.color.r,y.color.g,y.color.b),y instanceof THREE.Fog?(x.uniform1f(q,y.near),x.uniform1f(t,y.far),x.uniform1i(p,1),J=E=1):y instanceof THREE.FogExp2&&(x.uniform1f(m,y.density),x.uniform1i(p,2),J=E=2)):\n(x.uniform1i(p,0),J=E=0);for(var y=0,P=b.length;y<P;y++){var U=b[y];U.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,U.matrixWorld);U.z=-U.modelViewMatrix.elements[14]}b.sort(B);for(var Q=[],y=0,P=b.length;y<P;y++){var U=b[y],R=U.material;x.uniform1f(u,R.alphaTest);x.uniformMatrix4fv(l,!1,U.modelViewMatrix.elements);U.matrixWorld.decompose(O,C,F);Q[0]=F.x;Q[1]=F.y;U=0;K.fog&&R.fog&&(U=J);E!==U&&(x.uniform1i(p,U),E=U);null!==R.map?(x.uniform2f(c,R.map.offset.x,R.map.offset.y),x.uniform2f(d,\nR.map.repeat.x,R.map.repeat.y)):(x.uniform2f(c,0,0),x.uniform2f(d,1,1));x.uniform1f(k,R.opacity);x.uniform3f(f,R.color.r,R.color.g,R.color.b);x.uniform1f(e,R.rotation);x.uniform2fv(g,Q);H.setBlending(R.blending,R.blendEquation,R.blendSrc,R.blendDst);H.setDepthTest(R.depthTest);H.setDepthWrite(R.depthWrite);R.map&&R.map.image&&R.map.image.width?a.setTexture(R.map,0):a.setTexture(G,0);x.drawElements(x.TRIANGLES,6,x.UNSIGNED_SHORT,0)}H.enable(x.CULL_FACE);a.resetGLState()}}};\nTHREE.GeometryUtils={merge:function(a,b,c){console.warn(\"THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.\");var d;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,b=b.geometry);a.merge(b,d,c)},center:function(a){console.warn(\"THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.\");return a.center()}};\nTHREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var g=new THREE.Texture(void 0,b);e.load(a,function(a){g.image=a;g.needsUpdate=!0;c&&c(g)},void 0,function(a){d&&d(a)});g.sourceFile=a;return g},loadTextureCube:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var g=new THREE.CubeTexture([],b),f=0;b=function(b){e.load(a[b],function(a){g.images[b]=a;f+=1;6===f&&(g.needsUpdate=!0,c&&c(g))},void 0,\nd)};for(var h=0,k=a.length;h<k;++h)b(h);return g},loadCompressedTexture:function(){console.error(\"THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.\")},loadCompressedTextureCube:function(){console.error(\"THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.\")},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,g=document.createElement(\"canvas\");\ng.width=d;g.height=e;var f=g.getContext(\"2d\");f.drawImage(a,0,0);for(var h=f.getImageData(0,0,d,e).data,k=f.createImageData(d,e),l=k.data,n=0;n<d;n++)for(var p=0;p<e;p++){var m=0>p-1?0:p-1,q=p+1>e-1?e-1:p+1,t=0>n-1?0:n-1,r=n+1>d-1?d-1:n+1,u=[],w=[0,0,h[4*(p*d+n)]/255*b];u.push([-1,0,h[4*(p*d+t)]/255*b]);u.push([-1,-1,h[4*(m*d+t)]/255*b]);u.push([0,-1,h[4*(m*d+n)]/255*b]);u.push([1,-1,h[4*(m*d+r)]/255*b]);u.push([1,0,h[4*(p*d+r)]/255*b]);u.push([1,1,h[4*(q*d+r)]/255*b]);u.push([0,1,h[4*(q*d+n)]/255*\nb]);u.push([-1,1,h[4*(q*d+t)]/255*b]);m=[];t=u.length;for(q=0;q<t;q++){var r=u[q],v=u[(q+1)%t],r=[r[0]-w[0],r[1]-w[1],r[2]-w[2]],v=[v[0]-w[0],v[1]-w[1],v[2]-w[2]];m.push(c([r[1]*v[2]-r[2]*v[1],r[2]*v[0]-r[0]*v[2],r[0]*v[1]-r[1]*v[0]]))}u=[0,0,0];for(q=0;q<m.length;q++)u[0]+=m[q][0],u[1]+=m[q][1],u[2]+=m[q][2];u[0]/=m.length;u[1]/=m.length;u[2]/=m.length;w=4*(p*d+n);l[w]=(u[0]+1)/2*255|0;l[w+1]=(u[1]+1)/2*255|0;l[w+2]=255*u[2]|0;l[w+3]=255}f.putImageData(k,0,0);return g},generateDataTexture:function(a,\nb,c){var d=a*b,e=new Uint8Array(3*d),g=Math.floor(255*c.r),f=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)e[3*h]=g,e[3*h+1]=f,e[3*h+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};\nTHREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Group,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};\nTHREE.FontUtils={faces:{},face:\"helvetiker\",weight:\"normal\",style:\"normal\",size:150,divisions:10,getFace:function(){try{return this.faces[this.face.toLowerCase()][this.weight][this.style]}catch(a){throw\"The font \"+this.face+\" with \"+this.weight+\" weight and \"+this.style+\" style is missing.\";}},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=\na},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=String(a).split(\"\"),g=e.length,f=[];for(a=0;a<g;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;f.push(h.path)}return{paths:f,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var g=[],f,h,k,l,n,p,m,q,t,r,u,w=b.glyphs[a]||b.glyphs[\"?\"];if(w){if(w.o)for(b=w._cachedOutline||(w._cachedOutline=w.o.split(\" \")),l=b.length,a=0;a<l;)switch(k=b[a++],k){case \"m\":k=b[a++]*c+d;n=b[a++]*c;e.moveTo(k,n);\nbreak;case \"l\":k=b[a++]*c+d;n=b[a++]*c;e.lineTo(k,n);break;case \"q\":k=b[a++]*c+d;n=b[a++]*c;q=b[a++]*c+d;t=b[a++]*c;e.quadraticCurveTo(q,t,k,n);if(f=g[g.length-1])for(p=f.x,m=f.y,f=1,h=this.divisions;f<=h;f++){var v=f/h;THREE.Shape.Utils.b2(v,p,q,k);THREE.Shape.Utils.b2(v,m,t,n)}break;case \"b\":if(k=b[a++]*c+d,n=b[a++]*c,q=b[a++]*c+d,t=b[a++]*c,r=b[a++]*c+d,u=b[a++]*c,e.bezierCurveTo(q,t,r,u,k,n),f=g[g.length-1])for(p=f.x,m=f.y,f=1,h=this.divisions;f<=h;f++)v=f/h,THREE.Shape.Utils.b3(v,p,q,r,k),THREE.Shape.Utils.b3(v,\nm,t,u,n)}return{offset:w.ha*c,path:e}}}};\nTHREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:\"helvetiker\",e=void 0!==b.weight?b.weight:\"normal\",g=void 0!==b.style?b.style:\"normal\";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=g;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(g=c.length;e<g;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};\n(function(a){var b=function(a){for(var b=a.length,e=0,g=b-1,f=0;f<b;g=f++)e+=a[g].x*a[f].y-a[f].x*a[g].y;return.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var g=[],f=[],h=[],k,l,n;if(0<b(a))for(l=0;l<e;l++)f[l]=l;else for(l=0;l<e;l++)f[l]=e-1-l;var p=2*e;for(l=e-1;2<e;){if(0>=p--){console.warn(\"THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()\");break}k=l;e<=k&&(k=0);l=k+1;e<=l&&(l=0);n=l+1;e<=n&&(n=0);var m;a:{var q=m=void 0,t=void 0,r=void 0,\nu=void 0,w=void 0,v=void 0,B=void 0,x=void 0,q=a[f[k]].x,t=a[f[k]].y,r=a[f[l]].x,u=a[f[l]].y,w=a[f[n]].x,v=a[f[n]].y;if(1E-10>(r-q)*(v-t)-(u-t)*(w-q))m=!1;else{var H=void 0,I=void 0,z=void 0,D=void 0,G=void 0,O=void 0,C=void 0,F=void 0,K=void 0,L=void 0,K=F=C=x=B=void 0,H=w-r,I=v-u,z=q-w,D=t-v,G=r-q,O=u-t;for(m=0;m<e;m++)if(B=a[f[m]].x,x=a[f[m]].y,!(B===q&&x===t||B===r&&x===u||B===w&&x===v)&&(C=B-q,F=x-t,K=B-r,L=x-u,B-=w,x-=v,K=H*L-I*K,C=G*F-O*C,F=z*x-D*B,-1E-10<=K&&-1E-10<=F&&-1E-10<=C)){m=!1;break a}m=\n!0}}if(m){g.push([a[f[k]],a[f[l]],a[f[n]]]);h.push([f[k],f[l],f[n]]);k=l;for(n=l+1;n<e;k++,n++)f[k]=f[n];e--;p=2*e}}return d?h:g};a.Triangulate.area=b;return a})(THREE.FontUtils);THREE.typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};\"undefined\"!==typeof self&&(self._typeface_js=THREE.typeface_js);\nTHREE.Audio=function(a){THREE.Object3D.call(this);this.type=\"Audio\";this.context=a.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.panner=this.context.createPanner();this.panner.connect(this.gain);this.autoplay=!1;this.startTime=0;this.playbackRate=1;this.isPlaying=!1};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.Audio.prototype.constructor=THREE.Audio;THREE.Audio.prototype.load=function(a){var b=this,c=new XMLHttpRequest;c.open(\"GET\",a,!0);c.responseType=\"arraybuffer\";c.onload=function(a){b.context.decodeAudioData(this.response,function(a){b.source.buffer=a;b.autoplay&&b.play()})};c.send();return this};\nTHREE.Audio.prototype.play=function(){if(!0===this.isPlaying)console.warn(\"THREE.Audio: Audio is already playing.\");else{var a=this.context.createBufferSource();a.buffer=this.source.buffer;a.loop=this.source.loop;a.onended=this.source.onended;a.start(0,this.startTime);a.playbackRate.value=this.playbackRate;this.isPlaying=!0;this.source=a;this.connect()}};THREE.Audio.prototype.pause=function(){this.source.stop();this.startTime=this.context.currentTime};\nTHREE.Audio.prototype.stop=function(){this.source.stop();this.startTime=0};THREE.Audio.prototype.connect=function(){void 0!==this.filter?(this.source.connect(this.filter),this.filter.connect(this.panner)):this.source.connect(this.panner)};THREE.Audio.prototype.disconnect=function(){void 0!==this.filter?(this.source.disconnect(this.filter),this.filter.disconnect(this.panner)):this.source.disconnect(this.panner)};\nTHREE.Audio.prototype.setFilter=function(a){!0===this.isPlaying?(this.disconnect(),this.filter=a,this.connect()):this.filter=a};THREE.Audio.prototype.getFilter=function(){return this.filter};THREE.Audio.prototype.setPlaybackRate=function(a){this.playbackRate=a;!0===this.isPlaying&&(this.source.playbackRate.value=this.playbackRate)};THREE.Audio.prototype.getPlaybackRate=function(){return this.playbackRate};THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1};\nTHREE.Audio.prototype.setLoop=function(a){this.source.loop=a};THREE.Audio.prototype.getLoop=function(){return this.source.loop};THREE.Audio.prototype.setRefDistance=function(a){this.panner.refDistance=a};THREE.Audio.prototype.getRefDistance=function(){return this.panner.refDistance};THREE.Audio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a};THREE.Audio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor};\nTHREE.Audio.prototype.setVolume=function(a){this.gain.gain.value=a};THREE.Audio.prototype.getVolume=function(){return this.gain.gain.value};THREE.Audio.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3;return function(b){THREE.Object3D.prototype.updateMatrixWorld.call(this,b);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}}();THREE.AudioListener=function(){THREE.Object3D.call(this);this.type=\"AudioListener\";this.context=new (window.AudioContext||window.webkitAudioContext)};\nTHREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;\nTHREE.AudioListener.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3;return function(e){THREE.Object3D.prototype.updateMatrixWorld.call(this,e);e=this.context.listener;var g=this.up;this.matrixWorld.decompose(a,b,c);d.set(0,0,-1).applyQuaternion(b);e.setPosition(a.x,a.y,a.z);e.setOrientation(d.x,d.y,d.z,g.x,g.y,g.z)}}();THREE.Curve=function(){};\nTHREE.Curve.prototype.getPoint=function(a){console.warn(\"THREE.Curve: Warning, getPoint() not implemented!\");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};\nTHREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,g=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),g+=c.distanceTo(d),b.push(g),d=c;return this.cacheArcLengths=b};\nTHREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,g;g=b?b:a*c[e-1];for(var f=0,h=e-1,k;f<=h;)if(d=Math.floor(f+(h-f)/2),k=c[d]-g,0>k)f=d+1;else if(0<k)h=d-1;else{h=d;break}d=h;if(c[d]===g)return d/(e-1);f=c[d];return c=(d+(g-f)/(c[d+1]-f))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};\nTHREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};\nTHREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=.5*(c-a);d=.5*(d-b);var g=e*e;return(2*b-2*c+a+d)*e*g+(-3*b+3*c-2*a-d)*g+a*e+b}};\nTHREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};\nTHREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};\nTHREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};\nTHREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,g,f;b=c=Number.NEGATIVE_INFINITY;e=g=Number.POSITIVE_INFINITY;var h,k,l,n,p=a[0]instanceof THREE.Vector3;n=p?new THREE.Vector3:new THREE.Vector2;k=0;for(l=a.length;k<l;k++)h=a[k],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<g&&(g=h.y),p&&(h.z>d?d=h.z:h.z<f&&(f=h.z)),n.add(h);a={minX:e,minY:g,maxX:b,maxY:c};p&&(a.maxZ=d,a.minZ=f);return a};\nTHREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};\nTHREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};\nTHREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,g,f,h,k;d=0;for(e=a.length;d<e;d++)g=a[d],f=g.x,h=g.y,k=f/c.maxX,k=b.getUtoTmapping(k,f),f=b.getPoint(k),k=b.getTangent(k),k.set(-k.y,k.x).multiplyScalar(h),g.x=f.x+k.x,g.y=f.y+k.y;return a};THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;\nTHREE.PathActions={MOVE_TO:\"moveTo\",LINE_TO:\"lineTo\",QUADRATIC_CURVE_TO:\"quadraticCurveTo\",BEZIER_CURVE_TO:\"bezierCurveTo\",CSPLINE_THRU:\"splineThru\",ARC:\"arc\",ELLIPSE:\"ellipse\"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};\nTHREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};\nTHREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,g=new THREE.QuadraticBezierCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(g);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};\nTHREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,g){var f=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,g));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:f})};\nTHREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,g){var f=this.actions[this.actions.length-1].args;this.absarc(a+f[f.length-2],b+f[f.length-1],c,d,e,g)};\nTHREE.Path.prototype.absarc=function(a,b,c,d,e,g){this.absellipse(a,b,c,c,d,e,g)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,g,f,h){var k=this.actions[this.actions.length-1].args;this.absellipse(a+k[k.length-2],b+k[k.length-1],c,d,e,g,f,h)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,g,f,h){var k=[a,b,c,d,e,g,f,h||0];a=new THREE.EllipseCurve(a,b,c,d,e,g,f,h);this.curves.push(a);a=a.getPoint(1);k.push(a.x);k.push(a.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:k})};\nTHREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var c=[],d=0;d<a;d++)c.push(this.getPoint(d/a));return c};\nTHREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return this.getSpacedPoints(a,b);a=a||12;var c=[],d,e,g,f,h,k,l,n,p,m,q,t,r;d=0;for(e=this.actions.length;d<e;d++)switch(g=this.actions[d],f=g.action,g=g.args,f){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=g[2];k=g[3];p=g[0];m=g[1];0<c.length?(f=c[c.length-1],q=f.x,t=f.y):(f=this.actions[d-\n1].args,q=f[f.length-2],t=f[f.length-1]);for(g=1;g<=a;g++)r=g/a,f=THREE.Shape.Utils.b2(r,q,p,h),r=THREE.Shape.Utils.b2(r,t,m,k),c.push(new THREE.Vector2(f,r));break;case THREE.PathActions.BEZIER_CURVE_TO:h=g[4];k=g[5];p=g[0];m=g[1];l=g[2];n=g[3];0<c.length?(f=c[c.length-1],q=f.x,t=f.y):(f=this.actions[d-1].args,q=f[f.length-2],t=f[f.length-1]);for(g=1;g<=a;g++)r=g/a,f=THREE.Shape.Utils.b3(r,q,p,l,h),r=THREE.Shape.Utils.b3(r,t,m,n,k),c.push(new THREE.Vector2(f,r));break;case THREE.PathActions.CSPLINE_THRU:f=\nthis.actions[d-1].args;r=[new THREE.Vector2(f[f.length-2],f[f.length-1])];f=a*g[0].length;r=r.concat(g[0]);r=new THREE.SplineCurve(r);for(g=1;g<=f;g++)c.push(r.getPointAt(g/f));break;case THREE.PathActions.ARC:h=g[0];k=g[1];m=g[2];l=g[3];f=g[4];p=!!g[5];q=f-l;t=2*a;for(g=1;g<=t;g++)r=g/t,p||(r=1-r),r=l+r*q,f=h+m*Math.cos(r),r=k+m*Math.sin(r),c.push(new THREE.Vector2(f,r));break;case THREE.PathActions.ELLIPSE:h=g[0];k=g[1];m=g[2];n=g[3];l=g[4];f=g[5];p=!!g[6];var u=g[7];q=f-l;t=2*a;var w,v;0!==u&&\n(w=Math.cos(u),v=Math.sin(u));for(g=1;g<=t;g++){r=g/t;p||(r=1-r);r=l+r*q;f=h+m*Math.cos(r);r=k+n*Math.sin(r);if(0!==u){var B=f;f=(B-h)*w-(r-k)*v+h;r=(B-h)*v+(r-k)*w+k}c.push(new THREE.Vector2(f,r))}}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};\nTHREE.Path.prototype.toShapes=function(a,b){function c(a){for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions;f.curves=e.curves;b.push(f)}return b}function d(a,b){for(var c=b.length,d=!1,e=c-1,f=0;f<c;e=f++){var g=b[e],h=b[f],k=h.x-g.x,l=h.y-g.y;if(1E-10<Math.abs(l)){if(0>l&&(g=b[f],k=-k,h=b[e],l=-l),!(a.y<g.y||a.y>h.y))if(a.y===g.y){if(a.x===g.x)return!0}else{e=l*(a.x-g.x)-k*(a.y-g.y);if(0===e)return!0;0>e||(d=!d)}}else if(a.y===g.y&&(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&\na.x<=h.x))return!0}return d}var e=function(a){var b,c,d,e,f=[],g=new THREE.Path;b=0;for(c=a.length;b<c;b++)d=a[b],e=d.args,d=d.action,d===THREE.PathActions.MOVE_TO&&0!==g.actions.length&&(f.push(g),g=new THREE.Path),g[d].apply(g,e);0!==g.actions.length&&f.push(g);return f}(this.actions);if(0===e.length)return[];if(!0===b)return c(e);var g,f,h,k=[];if(1===e.length)return f=e[0],h=new THREE.Shape,h.actions=f.actions,h.curves=f.curves,k.push(h),k;var l=!THREE.Shape.Utils.isClockWise(e[0].getPoints()),\nl=a?!l:l;h=[];var n=[],p=[],m=0,q;n[m]=void 0;p[m]=[];var t,r;t=0;for(r=e.length;t<r;t++)f=e[t],q=f.getPoints(),g=THREE.Shape.Utils.isClockWise(q),(g=a?!g:g)?(!l&&n[m]&&m++,n[m]={s:new THREE.Shape,p:q},n[m].s.actions=f.actions,n[m].s.curves=f.curves,l&&m++,p[m]=[]):p[m].push({h:f,p:q[0]});if(!n[0])return c(e);if(1<n.length){t=!1;r=[];f=0;for(e=n.length;f<e;f++)h[f]=[];f=0;for(e=n.length;f<e;f++)for(g=p[f],l=0;l<g.length;l++){m=g[l];q=!0;for(var u=0;u<n.length;u++)d(m.p,n[u].p)&&(f!==u&&r.push({froms:f,\ntos:u,hole:l}),q?(q=!1,h[u].push(m)):t=!0);q&&h[f].push(m)}0<r.length&&(t||(p=h))}t=0;for(r=n.length;t<r;t++)for(h=n[t].s,k.push(h),f=p[t],e=0,g=f.length;e<g;e++)h.holes.push(f[e].h);return k};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};\nTHREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};\nTHREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};\nTHREE.Shape.Utils={triangulateShape:function(a,b){function c(a,b,c){return a.x!==b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=b.x-a.x,h=b.y-a.y,k=e.x-d.x,l=e.y-d.y,n=a.x-d.x,p=a.y-d.y,z=h*k-g*l,D=h*n-g*p;if(1E-10<Math.abs(z)){if(0<z){if(0>D||D>z)return[];k=l*n-k*p;if(0>k||k>z)return[]}else{if(0<D||D<z)return[];k=l*n-k*p;if(0<k||k<z)return[]}if(0===k)return!f||0!==D&&D!==z?[a]:[];if(k===z)return!f||0!==D&&D!==z?[b]:[];if(0===\nD)return[d];if(D===z)return[e];f=k/z;return[{x:a.x+f*g,y:a.y+f*h}]}if(0!==D||l*n!==k*p)return[];h=0===g&&0===h;k=0===k&&0===l;if(h&&k)return a.x!==d.x||a.y!==d.y?[]:[a];if(h)return c(d,e,a)?[a]:[];if(k)return c(a,b,d)?[d]:[];0!==g?(a.x<b.x?(g=a,k=a.x,h=b,a=b.x):(g=b,k=b.x,h=a,a=a.x),d.x<e.x?(b=d,z=d.x,l=e,d=e.x):(b=e,z=e.x,l=d,d=d.x)):(a.y<b.y?(g=a,k=a.y,h=b,a=b.y):(g=b,k=b.y,h=a,a=a.y),d.y<e.y?(b=d,z=d.y,l=e,d=e.y):(b=e,z=e.y,l=d,d=d.y));return k<=z?a<z?[]:a===z?f?[]:[b]:a<=d?[b,h]:[b,l]:k>d?[]:\nk===d?f?[]:[g]:a<=d?[g,h]:[g,l]}function e(a,b,c,d){var e=b.x-a.x,f=b.y-a.y;b=c.x-a.x;c=c.y-a.y;var g=d.x-a.x;d=d.y-a.y;a=e*c-f*b;e=e*d-f*g;return 1E-10<Math.abs(a)?(b=g*c-d*b,0<a?0<=e&&0<=b:0<=e||0<=b):0<e}var g,f,h,k,l,n={};h=a.concat();g=0;for(f=b.length;g<f;g++)Array.prototype.push.apply(h,b[g]);g=0;for(f=h.length;g<f;g++)l=h[g].x+\":\"+h[g].y,void 0!==n[l]&&console.warn(\"THREE.Shape: Duplicate point\",l),n[l]=g;g=function(a,b){function c(a,b){var d=h.length-1,f=a-1;0>f&&(f=d);var g=a+1;g>d&&(g=\n0);d=e(h[a],h[f],h[g],k[b]);if(!d)return!1;d=k.length-1;f=b-1;0>f&&(f=d);g=b+1;g>d&&(g=0);return(d=e(k[b],k[f],k[g],h[a]))?!0:!1}function f(a,b){var c,e;for(c=0;c<h.length;c++)if(e=c+1,e%=h.length,e=d(a,b,h[c],h[e],!0),0<e.length)return!0;return!1}function g(a,c){var e,f,h,k;for(e=0;e<l.length;e++)for(f=b[l[e]],h=0;h<f.length;h++)if(k=h+1,k%=f.length,k=d(a,c,f[h],f[k],!0),0<k.length)return!0;return!1}var h=a.concat(),k,l=[],n,p,I,z,D,G=[],O,C,F,K=0;for(n=b.length;K<n;K++)l.push(K);O=0;for(var L=2*\nl.length;0<l.length;){L--;if(0>L){console.log(\"Infinite Loop! Holes left:\"+l.length+\", Probably Hole outside Shape!\");break}for(p=O;p<h.length;p++){I=h[p];n=-1;for(K=0;K<l.length;K++)if(z=l[K],D=I.x+\":\"+I.y+\":\"+z,void 0===G[D]){k=b[z];for(C=0;C<k.length;C++)if(z=k[C],c(p,C)&&!f(I,z)&&!g(I,z)){n=C;l.splice(K,1);O=h.slice(0,p+1);z=h.slice(p);C=k.slice(n);F=k.slice(0,n+1);h=O.concat(C).concat(F).concat(z);O=p;break}if(0<=n)break;G[D]=!0}if(0<=n)break}}return h}(a,b);var p=THREE.FontUtils.Triangulate(g,\n!1);g=0;for(f=p.length;g<f;g++)for(k=p[g],h=0;3>h;h++)l=k[h].x+\":\"+k[h].y,l=n[l],void 0!==l&&(k[h]=l);return p.concat()},isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-\na)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};\nTHREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;\nTHREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=new THREE.Vector2;b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return b};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=new THREE.Vector2;b.x=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);return b.normalize()};\nTHREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};\nTHREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;\nTHREE.SplineCurve.prototype.getPoint=function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0===c?c:c-1],e=b[c],g=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=new THREE.Vector2;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,g.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,g.y,b.y,a);return c};\nTHREE.EllipseCurve=function(a,b,c,d,e,g,f,h){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=g;this.aClockwise=f;this.aRotation=h||0};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;\nTHREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI);b>2*Math.PI&&(b-=2*Math.PI);b=!0===this.aClockwise?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);var c=this.aY+this.yRadius*Math.sin(b);if(0!==this.aRotation){var b=Math.cos(this.aRotation),d=Math.sin(this.aRotation),e=a;a=(e-this.aX)*b-(c-this.aY)*d+this.aX;c=(e-this.aX)*d+(c-this.aY)*b+this.aY}return new THREE.Vector2(a,c)};\nTHREE.ArcCurve=function(a,b,c,d,e,g){THREE.EllipseCurve.call(this,a,b,c,c,d,e,g)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});\nTHREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b=new THREE.Vector3;b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);b.z=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return b});\nTHREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b=new THREE.Vector3;b.x=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);b.y=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b.z=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return b});\nTHREE.SplineCurve3=THREE.Curve.create(function(a){console.warn(\"THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3\");this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-1;var c=Math.floor(a);a-=c;var d=b[0==c?c:c-1],e=b[c],g=b[c>b.length-2?b.length-1:c+1],b=b[c>b.length-3?b.length-1:c+2],c=new THREE.Vector3;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,g.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,g.y,b.y,a);c.z=THREE.Curve.Utils.interpolate(d.z,e.z,g.z,\nb.z,a);return c});\nTHREE.CatmullRomCurve3=function(){function a(){}var b=new THREE.Vector3,c=new a,d=new a,e=new a;a.prototype.init=function(a,b,c,d){this.c0=a;this.c1=c;this.c2=-3*a+3*b-2*c-d;this.c3=2*a-2*b+c+d};a.prototype.initNonuniformCatmullRom=function(a,b,c,d,e,n,p){a=((b-a)/e-(c-a)/(e+n)+(c-b)/n)*n;d=((c-b)/n-(d-b)/(n+p)+(d-c)/p)*n;this.init(b,c,a,d)};a.prototype.initCatmullRom=function(a,b,c,d,e){this.init(b,c,e*(c-a),e*(d-b))};a.prototype.calc=function(a){var b=a*a;return this.c0+this.c1*a+this.c2*b+this.c3*\nb*a};return THREE.Curve.create(function(a){this.points=a||[]},function(a){var f=this.points,h,k;k=f.length;2>k&&console.log(\"duh, you need at least 2 points\");a*=k-1;h=Math.floor(a);a-=h;0===a&&h===k-1&&(h=k-2,a=1);var l,n,p;0===h?(b.subVectors(f[0],f[1]).add(f[0]),l=b):l=f[h-1];n=f[h];p=f[h+1];h+2<k?f=f[h+2]:(b.subVectors(f[k-1],f[k-2]).add(f[k-2]),f=b);if(void 0===this.type||\"centripetal\"===this.type||\"chordal\"===this.type){var m=\"chordal\"===this.type?.5:.25;k=Math.pow(l.distanceToSquared(n),m);\nh=Math.pow(n.distanceToSquared(p),m);m=Math.pow(p.distanceToSquared(f),m);1E-4>h&&(h=1);1E-4>k&&(k=h);1E-4>m&&(m=h);c.initNonuniformCatmullRom(l.x,n.x,p.x,f.x,k,h,m);d.initNonuniformCatmullRom(l.y,n.y,p.y,f.y,k,h,m);e.initNonuniformCatmullRom(l.z,n.z,p.z,f.z,k,h,m)}else\"catmullrom\"===this.type&&(k=void 0!==this.tension?this.tension:.5,c.initCatmullRom(l.x,n.x,p.x,f.x,k),d.initCatmullRom(l.y,n.y,p.y,f.y,k),e.initCatmullRom(l.z,n.z,p.z,f.z,k));return new THREE.Vector3(c.calc(a),d.calc(a),e.calc(a))})}();\nTHREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points;a*=b.length-0;var c=Math.floor(a);a-=c;var c=c+(0<c?0:(Math.floor(Math.abs(c)/b.length)+1)*b.length),d=b[(c-1)%b.length],e=b[c%b.length],g=b[(c+1)%b.length],b=b[(c+2)%b.length],c=new THREE.Vector3;c.x=THREE.Curve.Utils.interpolate(d.x,e.x,g.x,b.x,a);c.y=THREE.Curve.Utils.interpolate(d.y,e.y,g.y,b.y,a);c.z=THREE.Curve.Utils.interpolate(d.z,e.z,g.z,b.z,a);return c});\nTHREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn(\"THREE.AnimationHandler.add() has been deprecated.\")},get:function(){console.warn(\"THREE.AnimationHandler.get() has been deprecated.\")},remove:function(){console.warn(\"THREE.AnimationHandler.remove() has been deprecated.\")},animations:[],init:function(a){if(!0===a.initialized)return a;for(var b=0;b<a.hierarchy.length;b++){for(var c=0;c<a.hierarchy[b].keys.length;c++)if(0>a.hierarchy[b].keys[c].time&&(a.hierarchy[b].keys[c].time=\n0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=(new THREE.Quaternion).fromArray(d)}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){d={};for(c=0;c<a.hierarchy[b].keys.length;c++)for(var e=0;e<a.hierarchy[b].keys[c].morphTargets.length;e++){var g=a.hierarchy[b].keys[c].morphTargets[e];d[g]=-1}a.hierarchy[b].usedMorphTargets=d;for(c=0;c<a.hierarchy[b].keys.length;c++){var f=\n{};for(g in d){for(e=0;e<a.hierarchy[b].keys[c].morphTargets.length;e++)if(a.hierarchy[b].keys[c].morphTargets[e]===g){f[g]=a.hierarchy[b].keys[c].morphTargetsInfluences[e];break}e===a.hierarchy[b].keys[c].morphTargets.length&&(f[g]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=f}}for(c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}a.initialized=\n!0;return a},parse:function(a){var b=function(a,c){c.push(a);for(var d=0;d<a.children.length;d++)b(a.children[d],c)},c=[];if(a instanceof THREE.SkinnedMesh)for(var d=0;d<a.skeleton.bones.length;d++)c.push(a.skeleton.bones[d]);else b(a,c);return c},play:function(a){-1===this.animations.indexOf(a)&&this.animations.push(a)},stop:function(a){a=this.animations.indexOf(a);-1!==a&&this.animations.splice(a,1)},update:function(a){for(var b=0;b<this.animations.length;b++)this.animations[b].resetBlendWeights();\nfor(b=0;b<this.animations.length;b++)this.animations[b].update(a)}};THREE.Animation=function(a,b){this.root=a;this.data=THREE.AnimationHandler.init(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=!0;this.weight=0;this.interpolationType=THREE.AnimationHandler.LINEAR};\nTHREE.Animation.prototype={constructor:THREE.Animation,keyTypes:[\"pos\",\"rot\",\"scl\"],play:function(a,b){this.currentTime=void 0!==a?a:0;this.weight=void 0!==b?b:1;this.isPlaying=!0;this.reset();THREE.AnimationHandler.play(this)},stop:function(){this.isPlaying=!1;THREE.AnimationHandler.stop(this)},reset:function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a];void 0===c.animationCache&&(c.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});\nvar d=this.data.name,e=c.animationCache.animations,g=e[d];void 0===g&&(g={prevKey:{pos:0,rot:0,scl:0},nextKey:{pos:0,rot:0,scl:0},originalMatrix:c.matrix},e[d]=g);for(c=0;3>c;c++){for(var d=this.keyTypes[c],e=this.data.hierarchy[a].keys[0],f=this.getNextKeyWith(d,a,1);f.time<this.currentTime&&f.index>e.index;)e=f,f=this.getNextKeyWith(d,a,f.index+1);g.prevKey[d]=e;g.nextKey[d]=f}}},resetBlendWeights:function(){for(var a=0,b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a].animationCache;void 0!==\nc&&(c=c.blending,c.positionWeight=0,c.quaternionWeight=0,c.scaleWeight=0)}},update:function(){var a=[],b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Quaternion,e=function(a,b){var c=[],d=[],e,p,m,q,t,r;e=(a.length-1)*b;p=Math.floor(e);e-=p;c[0]=0===p?p:p-1;c[1]=p;c[2]=p>a.length-2?p:p+1;c[3]=p>a.length-3?p:p+2;p=a[c[0]];q=a[c[1]];t=a[c[2]];r=a[c[3]];c=e*e;m=e*c;d[0]=g(p[0],q[0],t[0],r[0],e,c,m);d[1]=g(p[1],q[1],t[1],r[1],e,c,m);d[2]=g(p[2],q[2],t[2],r[2],e,c,m);return d},g=function(a,b,c,d,\ne,g,m){a=.5*(c-a);d=.5*(d-b);return(2*(b-c)+a+d)*m+(-3*(b-c)-2*a-d)*g+a*e+b};return function(f){if(!1!==this.isPlaying&&(this.currentTime+=f*this.timeScale,0!==this.weight)){f=this.data.length;if(this.currentTime>f||0>this.currentTime)this.loop?(this.currentTime%=f,0>this.currentTime&&(this.currentTime+=f),this.reset()):this.stop();f=0;for(var g=this.hierarchy.length;f<g;f++)for(var k=this.hierarchy[f],l=k.animationCache.animations[this.data.name],n=k.animationCache.blending,p=0;3>p;p++){var m=this.keyTypes[p],\nq=l.prevKey[m],t=l.nextKey[m];if(0<this.timeScale&&t.time<=this.currentTime||0>this.timeScale&&q.time>=this.currentTime){q=this.data.hierarchy[f].keys[0];for(t=this.getNextKeyWith(m,f,1);t.time<this.currentTime&&t.index>q.index;)q=t,t=this.getNextKeyWith(m,f,t.index+1);l.prevKey[m]=q;l.nextKey[m]=t}var r=(this.currentTime-q.time)/(t.time-q.time),u=q[m],w=t[m];0>r&&(r=0);1<r&&(r=1);if(\"pos\"===m)if(this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=u[0]+(w[0]-u[0])*r,c.y=u[1]+(w[1]-u[1])*r,\nc.z=u[2]+(w[2]-u[2])*r,q=this.weight/(this.weight+n.positionWeight),k.position.lerp(c,q),n.positionWeight+=this.weight;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)a[0]=this.getPrevKeyWith(\"pos\",f,q.index-1).pos,a[1]=u,a[2]=w,a[3]=this.getNextKeyWith(\"pos\",f,t.index+1).pos,r=.33*r+.33,t=e(a,r),q=this.weight/(this.weight+n.positionWeight),n.positionWeight+=this.weight,m=k.position,m.x+=(t[0]-m.x)*q,m.y+=(t[1]-\nm.y)*q,m.z+=(t[2]-m.z)*q,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(r=e(a,1.01*r),b.set(r[0],r[1],r[2]),b.sub(m),b.y=0,b.normalize(),r=Math.atan2(b.x,b.z),k.rotation.set(0,r,0))}else\"rot\"===m?(THREE.Quaternion.slerp(u,w,d,r),0===n.quaternionWeight?(k.quaternion.copy(d),n.quaternionWeight=this.weight):(q=this.weight/(this.weight+n.quaternionWeight),THREE.Quaternion.slerp(k.quaternion,d,k.quaternion,q),n.quaternionWeight+=this.weight)):\"scl\"===m&&(c.x=u[0]+(w[0]-u[0])*r,c.y=\nu[1]+(w[1]-u[1])*r,c.z=u[2]+(w[2]-u[2])*r,q=this.weight/(this.weight+n.scaleWeight),k.scale.lerp(c,q),n.scaleWeight+=this.weight)}return!0}}}(),getNextKeyWith:function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]},getPrevKeyWith:function(a,b,c){var d=\nthis.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]}};\nTHREE.KeyFrameAnimation=function(a){this.root=a.node;this.data=THREE.AnimationHandler.init(a);this.hierarchy=THREE.AnimationHandler.parse(this.root);this.currentTime=0;this.timeScale=.001;this.isPlaying=!1;this.loop=this.isPaused=!0;a=0;for(var b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var g=c[e],f=this.getNextKeyWith(g,a,0);f&&f.apply(g)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();\nd.matrixWorldNeedsUpdate=!0}}};\nTHREE.KeyFrameAnimation.prototype={constructor:THREE.KeyFrameAnimation,play:function(a){this.currentTime=void 0!==a?a:0;if(!1===this.isPlaying){this.isPlaying=!0;var b=this.hierarchy.length,c,d;for(a=0;a<b;a++)c=this.hierarchy[a],d=this.data.hierarchy[a],void 0===d.animationCache&&(d.animationCache={},d.animationCache.prevKey=null,d.animationCache.nextKey=null,d.animationCache.originalMatrix=c.matrix),c=this.data.hierarchy[a].keys,c.length&&(d.animationCache.prevKey=c[0],d.animationCache.nextKey=\nc[1],this.startTime=Math.min(c[0].time,this.startTime),this.endTime=Math.max(c[c.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.play(this)},stop:function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.stop(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;d.copy(b.matrix);b.matrix=d;delete c.animationCache}}},update:function(a){if(!1!==\nthis.isPlaying){this.currentTime+=a*this.timeScale;a=this.data.length;!0===this.loop&&this.currentTime>a&&(this.currentTime%=a);this.currentTime=Math.min(this.currentTime,a);a=0;for(var b=this.hierarchy.length;a<b;a++){var c=this.hierarchy[a],d=this.data.hierarchy[a],e=d.keys,d=d.animationCache;if(e.length){var g=d.prevKey,f=d.nextKey;if(f.time<=this.currentTime){for(;f.time<this.currentTime&&f.index>g.index;)g=f,f=e[g.index+1];d.prevKey=g;d.nextKey=f}f.time>=this.currentTime?g.interpolate(f,this.currentTime):\ng.interpolate(f,f.time);this.data.hierarchy[a].node.updateMatrix();c.matrixWorldNeedsUpdate=!0}}}},getNextKeyWith:function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]},getPrevKeyWith:function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]}};\nTHREE.MorphAnimation=function(a){this.mesh=a;this.frames=a.morphTargetInfluences.length;this.currentTime=0;this.duration=1E3;this.loop=!0;this.currentFrame=this.lastFrame=0;this.isPlaying=!1};\nTHREE.MorphAnimation.prototype={constructor:THREE.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(a){if(!1!==this.isPlaying){this.currentTime+=a;!0===this.loop&&this.currentTime>this.duration&&(this.currentTime%=this.duration);this.currentTime=Math.min(this.currentTime,this.duration);var b=this.duration/this.frames;a=Math.floor(this.currentTime/b);var c=this.mesh.morphTargetInfluences;a!==this.currentFrame&&(c[this.lastFrame]=0,c[this.currentFrame]=\n1,c[a]=0,this.lastFrame=this.currentFrame,this.currentFrame=a);b=this.currentTime%b/b;c[a]=b;c[this.lastFrame]=1-b}}};\nTHREE.BoxGeometry=function(a,b,c,d,e,g){function f(a,b,c,d,e,f,g,r){var u,w=h.widthSegments,v=h.heightSegments,B=e/2,x=f/2,H=h.vertices.length;if(\"x\"===a&&\"y\"===b||\"y\"===a&&\"x\"===b)u=\"z\";else if(\"x\"===a&&\"z\"===b||\"z\"===a&&\"x\"===b)u=\"y\",v=h.depthSegments;else if(\"z\"===a&&\"y\"===b||\"y\"===a&&\"z\"===b)u=\"x\",w=h.depthSegments;var I=w+1,z=v+1,D=e/w,G=f/v,O=new THREE.Vector3;O[u]=0<g?1:-1;for(e=0;e<z;e++)for(f=0;f<I;f++){var C=new THREE.Vector3;C[a]=(f*D-B)*c;C[b]=(e*G-x)*d;C[u]=g;h.vertices.push(C)}for(e=\n0;e<v;e++)for(f=0;f<w;f++)x=f+I*e,a=f+I*(e+1),b=f+1+I*(e+1),c=f+1+I*e,d=new THREE.Vector2(f/w,1-e/v),g=new THREE.Vector2(f/w,1-(e+1)/v),u=new THREE.Vector2((f+1)/w,1-(e+1)/v),B=new THREE.Vector2((f+1)/w,1-e/v),x=new THREE.Face3(x+H,a+H,c+H),x.normal.copy(O),x.vertexNormals.push(O.clone(),O.clone(),O.clone()),x.materialIndex=r,h.faces.push(x),h.faceVertexUvs[0].push([d,g,B]),x=new THREE.Face3(a+H,b+H,c+H),x.normal.copy(O),x.vertexNormals.push(O.clone(),O.clone(),O.clone()),x.materialIndex=r,h.faces.push(x),\nh.faceVertexUvs[0].push([g.clone(),u,B.clone()])}THREE.Geometry.call(this);this.type=\"BoxGeometry\";this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:g};this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=g||1;var h=this;d=a/2;e=b/2;g=c/2;f(\"z\",\"y\",-1,-1,c,b,d,0);f(\"z\",\"y\",1,-1,c,b,-d,1);f(\"x\",\"z\",1,1,a,c,e,2);f(\"x\",\"z\",1,-1,a,c,-e,3);f(\"x\",\"y\",1,-1,a,b,g,4);f(\"x\",\"y\",-1,-1,a,b,-g,5);this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);\nTHREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;THREE.BoxGeometry.prototype.clone=function(){return new THREE.BoxGeometry(this.parameters.width,this.parameters.height,this.parameters.depth,this.parameters.widthSegments,this.parameters.heightSegments,this.parameters.depthSegments)};THREE.CubeGeometry=THREE.BoxGeometry;\nTHREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"CircleGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e,g=[];e=new THREE.Vector3;var f=new THREE.Vector2(.5,.5);this.vertices.push(e);g.push(f);for(e=0;e<=b;e++){var h=new THREE.Vector3,k=c+e/b*d;h.x=a*Math.cos(k);h.y=a*Math.sin(k);this.vertices.push(h);g.push(new THREE.Vector2((h.x/a+1)/2,(h.y/a+1)/2))}c=new THREE.Vector3(0,\n0,1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([g[e].clone(),g[e+1].clone(),f.clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;\nTHREE.CircleGeometry.prototype.clone=function(){return new THREE.CircleGeometry(this.parameters.radius,this.parameters.segments,this.parameters.thetaStart,this.parameters.thetaLength)};\nTHREE.CircleBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"CircleBufferGeometry\";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};a=a||50;b=void 0!==b?Math.max(3,b):8;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;var e=b+2,g=new Float32Array(3*e),f=new Float32Array(3*e),e=new Float32Array(2*e);f[3]=1;e[0]=.5;e[1]=.5;for(var h=0,k=3,l=2;h<=b;h++,k+=3,l+=2){var n=c+h/b*d;g[k]=a*Math.cos(n);g[k+1]=a*Math.sin(n);f[k+2]=1;e[l]=(g[k]/a+1)/2;e[l+1]=(g[k+1]/a+1)/2}c=\n[];for(k=1;k<=b;k++)c.push(k),c.push(k+1),c.push(0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(c),1));this.addAttribute(\"position\",new THREE.BufferAttribute(g,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(f,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(e,2));this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry;\nTHREE.CircleBufferGeometry.prototype.clone=function(){var a=new THREE.CircleBufferGeometry(this.parameters.radius,this.parameters.segments,this.parameters.thetaStart,this.parameters.thetaLength);a.copy(this);return a};\nTHREE.CylinderGeometry=function(a,b,c,d,e,g,f,h){THREE.Geometry.call(this);this.type=\"CylinderGeometry\";this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:g,thetaStart:f,thetaLength:h};a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;d=d||8;e=e||1;g=void 0!==g?g:!1;f=void 0!==f?f:0;h=void 0!==h?h:2*Math.PI;var k=c/2,l,n,p=[],m=[];for(n=0;n<=e;n++){var q=[],t=[],r=n/e,u=r*(b-a)+a;for(l=0;l<=d;l++){var w=l/d,v=new THREE.Vector3;v.x=u*Math.sin(w*h+\nf);v.y=-r*c+k;v.z=u*Math.cos(w*h+f);this.vertices.push(v);q.push(this.vertices.length-1);t.push(new THREE.Vector2(w,1-r))}p.push(q);m.push(t)}c=(b-a)/c;for(l=0;l<d;l++)for(0!==a?(f=this.vertices[p[0][l]].clone(),h=this.vertices[p[0][l+1]].clone()):(f=this.vertices[p[1][l]].clone(),h=this.vertices[p[1][l+1]].clone()),f.setY(Math.sqrt(f.x*f.x+f.z*f.z)*c).normalize(),h.setY(Math.sqrt(h.x*h.x+h.z*h.z)*c).normalize(),n=0;n<e;n++){var q=p[n][l],t=p[n+1][l],r=p[n+1][l+1],u=p[n][l+1],w=f.clone(),v=f.clone(),\nB=h.clone(),x=h.clone(),H=m[n][l].clone(),I=m[n+1][l].clone(),z=m[n+1][l+1].clone(),D=m[n][l+1].clone();this.faces.push(new THREE.Face3(q,t,u,[w,v,x]));this.faceVertexUvs[0].push([H,I,D]);this.faces.push(new THREE.Face3(t,r,u,[v.clone(),B,x.clone()]));this.faceVertexUvs[0].push([I.clone(),z,D.clone()])}if(!1===g&&0<a)for(this.vertices.push(new THREE.Vector3(0,k,0)),l=0;l<d;l++)q=p[0][l],t=p[0][l+1],r=this.vertices.length-1,w=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),B=new THREE.Vector3(0,\n1,0),H=m[0][l].clone(),I=m[0][l+1].clone(),z=new THREE.Vector2(I.x,0),this.faces.push(new THREE.Face3(q,t,r,[w,v,B],void 0,1)),this.faceVertexUvs[0].push([H,I,z]);if(!1===g&&0<b)for(this.vertices.push(new THREE.Vector3(0,-k,0)),l=0;l<d;l++)q=p[e][l+1],t=p[e][l],r=this.vertices.length-1,w=new THREE.Vector3(0,-1,0),v=new THREE.Vector3(0,-1,0),B=new THREE.Vector3(0,-1,0),H=m[e][l+1].clone(),I=m[e][l].clone(),z=new THREE.Vector2(I.x,1),this.faces.push(new THREE.Face3(q,t,r,[w,v,B],void 0,2)),this.faceVertexUvs[0].push([H,\nI,z]);this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.CylinderGeometry.prototype.clone=function(){return new THREE.CylinderGeometry(this.parameters.radiusTop,this.parameters.radiusBottom,this.parameters.height,this.parameters.radialSegments,this.parameters.heightSegments,this.parameters.openEnded,this.parameters.thetaStart,this.parameters.thetaLength)};\nTHREE.EdgesGeometry=function(a,b){THREE.BufferGeometry.call(this);var c=Math.cos(THREE.Math.degToRad(void 0!==b?b:1)),d=[0,0],e={},g=function(a,b){return a-b},f=[\"a\",\"b\",\"c\"],h;a instanceof THREE.BufferGeometry?(h=new THREE.Geometry,h.fromBufferGeometry(a)):h=a.clone();h.mergeVertices();h.computeFaceNormals();var k=h.vertices;h=h.faces;for(var l=0,n=h.length;l<n;l++)for(var p=h[l],m=0;3>m;m++){d[0]=p[f[m]];d[1]=p[f[(m+1)%3]];d.sort(g);var q=d.toString();void 0===e[q]?e[q]={vert1:d[0],vert2:d[1],face1:l,\nface2:void 0}:e[q].face2=l}d=[];for(q in e)if(g=e[q],void 0===g.face2||h[g.face1].normal.dot(h[g.face2].normal)<=c)f=k[g.vert1],d.push(f.x),d.push(f.y),d.push(f.z),f=k[g.vert2],d.push(f.x),d.push(f.y),d.push(f.z);this.addAttribute(\"position\",new THREE.BufferAttribute(new Float32Array(d),3))};THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry;\nTHREE.ExtrudeGeometry=function(a,b){\"undefined\"!==typeof a&&(THREE.Geometry.call(this),this.type=\"ExtrudeGeometry\",a=Array.isArray(a)?a:[a],this.addShapeList(a,b),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};\nTHREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.error(\"THREE.ExtrudeGeometry: vec does not exist\");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=1,d=a.x-b.x,e=a.y-b.y,f=c.x-a.x,g=c.y-a.y,h=d*d+e*e;if(1E-10<Math.abs(d*g-e*f)){var k=Math.sqrt(h),l=Math.sqrt(f*f+g*g),h=b.x-e/k;b=b.y+d/k;f=((c.x-g/l-h)*g-(c.y+f/l-b)*f)/(d*g-e*f);c=h+d*f-a.x;a=b+e*f-a.y;d=c*c+a*a;if(2>=d)return new THREE.Vector2(c,a);d=Math.sqrt(d/2)}else a=!1,1E-10<d?1E-10<f&&(a=\n!0):-1E-10>d?-1E-10>f&&(a=!0):Math.sign(e)===Math.sign(g)&&(a=!0),a?(c=-e,a=d,d=Math.sqrt(h)):(c=d,a=e,d=Math.sqrt(h/2));return new THREE.Vector2(c/d,a/d)}function e(a,b){var c,d;for(A=a.length;0<=--A;){c=A;d=A-1;0>d&&(d=a.length-1);for(var e=0,f=q+2*n,e=0;e<f;e++){var g=U*e,h=U*(e+1),k=b+c+g,g=b+d+g,l=b+d+h,h=b+c+h,k=k+O,g=g+O,l=l+O,h=h+O;G.faces.push(new THREE.Face3(k,g,h));G.faces.push(new THREE.Face3(g,l,h));k=w.generateSideWallUV(G,k,g,l,h);G.faceVertexUvs[0].push([k[0],k[1],k[3]]);G.faceVertexUvs[0].push([k[1],\nk[2],k[3]])}}}function g(a,b,c){G.vertices.push(new THREE.Vector3(a,b,c))}function f(a,b,c){a+=O;b+=O;c+=O;G.faces.push(new THREE.Face3(a,b,c));a=w.generateTopUV(G,a,b,c);G.faceVertexUvs[0].push(a)}var h=void 0!==b.amount?b.amount:100,k=void 0!==b.bevelThickness?b.bevelThickness:6,l=void 0!==b.bevelSize?b.bevelSize:k-2,n=void 0!==b.bevelSegments?b.bevelSegments:3,p=void 0!==b.bevelEnabled?b.bevelEnabled:!0,m=void 0!==b.curveSegments?b.curveSegments:12,q=void 0!==b.steps?b.steps:1,t=b.extrudePath,\nr,u=!1,w=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,v,B,x,H;t&&(r=t.getSpacedPoints(q),u=!0,p=!1,v=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(t,q,!1),B=new THREE.Vector3,x=new THREE.Vector3,H=new THREE.Vector3);p||(l=k=n=0);var I,z,D,G=this,O=this.vertices.length,t=a.extractPoints(m),m=t.shape,C=t.holes;if(t=!THREE.Shape.Utils.isClockWise(m)){m=m.reverse();z=0;for(D=C.length;z<D;z++)I=C[z],THREE.Shape.Utils.isClockWise(I)&&(C[z]=I.reverse());t=\n!1}var F=THREE.Shape.Utils.triangulateShape(m,C),K=m;z=0;for(D=C.length;z<D;z++)I=C[z],m=m.concat(I);var L,E,J,y,P,U=m.length,Q,R=F.length,t=[],A=0;J=K.length;L=J-1;for(E=A+1;A<J;A++,L++,E++)L===J&&(L=0),E===J&&(E=0),t[A]=d(K[A],K[L],K[E]);var ia=[],Z,fa=t.concat();z=0;for(D=C.length;z<D;z++){I=C[z];Z=[];A=0;J=I.length;L=J-1;for(E=A+1;A<J;A++,L++,E++)L===J&&(L=0),E===J&&(E=0),Z[A]=d(I[A],I[L],I[E]);ia.push(Z);fa=fa.concat(Z)}for(L=0;L<n;L++){J=L/n;y=k*(1-J);E=l*Math.sin(J*Math.PI/2);A=0;for(J=K.length;A<\nJ;A++)P=c(K[A],t[A],E),g(P.x,P.y,-y);z=0;for(D=C.length;z<D;z++)for(I=C[z],Z=ia[z],A=0,J=I.length;A<J;A++)P=c(I[A],Z[A],E),g(P.x,P.y,-y)}E=l;for(A=0;A<U;A++)P=p?c(m[A],fa[A],E):m[A],u?(x.copy(v.normals[0]).multiplyScalar(P.x),B.copy(v.binormals[0]).multiplyScalar(P.y),H.copy(r[0]).add(x).add(B),g(H.x,H.y,H.z)):g(P.x,P.y,0);for(J=1;J<=q;J++)for(A=0;A<U;A++)P=p?c(m[A],fa[A],E):m[A],u?(x.copy(v.normals[J]).multiplyScalar(P.x),B.copy(v.binormals[J]).multiplyScalar(P.y),H.copy(r[J]).add(x).add(B),g(H.x,\nH.y,H.z)):g(P.x,P.y,h/q*J);for(L=n-1;0<=L;L--){J=L/n;y=k*(1-J);E=l*Math.sin(J*Math.PI/2);A=0;for(J=K.length;A<J;A++)P=c(K[A],t[A],E),g(P.x,P.y,h+y);z=0;for(D=C.length;z<D;z++)for(I=C[z],Z=ia[z],A=0,J=I.length;A<J;A++)P=c(I[A],Z[A],E),u?g(P.x,P.y+r[q-1].y,r[q-1].x+y):g(P.x,P.y,h+y)}(function(){if(p){var a;a=0*U;for(A=0;A<R;A++)Q=F[A],f(Q[2]+a,Q[1]+a,Q[0]+a);a=q+2*n;a*=U;for(A=0;A<R;A++)Q=F[A],f(Q[0]+a,Q[1]+a,Q[2]+a)}else{for(A=0;A<R;A++)Q=F[A],f(Q[2],Q[1],Q[0]);for(A=0;A<R;A++)Q=F[A],f(Q[0]+U*q,Q[1]+\nU*q,Q[2]+U*q)}})();(function(){var a=0;e(K,a);a+=K.length;z=0;for(D=C.length;z<D;z++)I=C[z],e(I,a),a+=I.length})()};\nTHREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d){a=a.vertices;b=a[b];c=a[c];d=a[d];return[new THREE.Vector2(b.x,b.y),new THREE.Vector2(c.x,c.y),new THREE.Vector2(d.x,d.y)]},generateSideWallUV:function(a,b,c,d,e){a=a.vertices;b=a[b];c=a[c];d=a[d];e=a[e];return.01>Math.abs(b.y-c.y)?[new THREE.Vector2(b.x,1-b.z),new THREE.Vector2(c.x,1-c.z),new THREE.Vector2(d.x,1-d.z),new THREE.Vector2(e.x,1-e.z)]:[new THREE.Vector2(b.y,1-b.z),new THREE.Vector2(c.y,1-c.z),new THREE.Vector2(d.y,\n1-d.z),new THREE.Vector2(e.y,1-e.z)]}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type=\"ShapeGeometry\";!1===Array.isArray(a)&&(a=[a]);this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};\nTHREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,g,f,h=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var k=e.shape,l=e.holes;if(!THREE.Shape.Utils.isClockWise(k))for(k=k.reverse(),e=0,g=l.length;e<g;e++)f=l[e],THREE.Shape.Utils.isClockWise(f)&&(l[e]=f.reverse());var n=THREE.Shape.Utils.triangulateShape(k,l);e=0;for(g=l.length;e<g;e++)f=l[e],\nk=k.concat(f);l=k.length;g=n.length;for(e=0;e<l;e++)f=k[e],this.vertices.push(new THREE.Vector3(f.x,f.y,0));for(e=0;e<g;e++)l=n[e],k=l[0]+h,f=l[1]+h,l=l[2]+h,this.faces.push(new THREE.Face3(k,f,l,null,null,c)),this.faceVertexUvs[0].push(d.generateTopUV(this,k,f,l))};\nTHREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"LatheGeometry\";this.parameters={points:a,segments:b,phiStart:c,phiLength:d};b=b||12;c=c||0;d=d||2*Math.PI;for(var e=1/(a.length-1),g=1/b,f=0,h=b;f<=h;f++)for(var k=c+f*g*d,l=Math.cos(k),n=Math.sin(k),k=0,p=a.length;k<p;k++){var m=a[k],q=new THREE.Vector3;q.x=l*m.x-n*m.y;q.y=n*m.x+l*m.y;q.z=m.z;this.vertices.push(q)}c=a.length;f=0;for(h=b;f<h;f++)for(k=0,p=a.length-1;k<p;k++){b=n=k+c*f;d=n+c;var l=n+1+c,n=n+1,m=f*g,q=k*e,t=\nm+g,r=q+e;this.faces.push(new THREE.Face3(b,d,n));this.faceVertexUvs[0].push([new THREE.Vector2(m,q),new THREE.Vector2(t,q),new THREE.Vector2(m,r)]);this.faces.push(new THREE.Face3(d,l,n));this.faceVertexUvs[0].push([new THREE.Vector2(t,q),new THREE.Vector2(t,r),new THREE.Vector2(m,r)])}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;\nTHREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type=\"PlaneGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a,b,c,d))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;\nTHREE.PlaneGeometry.prototype.clone=function(){return new THREE.PlaneGeometry(this.parameters.width,this.parameters.height,this.parameters.widthSegments,this.parameters.heightSegments)};\nTHREE.PlaneBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this);this.type=\"PlaneBufferGeometry\";this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};var e=a/2,g=b/2;c=Math.floor(c)||1;d=Math.floor(d)||1;var f=c+1,h=d+1,k=a/c,l=b/d;b=new Float32Array(f*h*3);a=new Float32Array(f*h*3);for(var n=new Float32Array(f*h*2),p=0,m=0,q=0;q<h;q++)for(var t=q*l-g,r=0;r<f;r++)b[p]=r*k-e,b[p+1]=-t,a[p+2]=1,n[m]=r/c,n[m+1]=1-q/d,p+=3,m+=2;p=0;e=new (65535<b.length/3?Uint32Array:Uint16Array)(c*\nd*6);for(q=0;q<d;q++)for(r=0;r<c;r++)g=r+f*(q+1),h=r+1+f*(q+1),k=r+1+f*q,e[p]=r+f*q,e[p+1]=g,e[p+2]=k,e[p+3]=g,e[p+4]=h,e[p+5]=k,p+=6;this.setIndex(new THREE.BufferAttribute(e,1));this.addAttribute(\"position\",new THREE.BufferAttribute(b,3));this.addAttribute(\"normal\",new THREE.BufferAttribute(a,3));this.addAttribute(\"uv\",new THREE.BufferAttribute(n,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;\nTHREE.PlaneBufferGeometry.prototype.clone=function(){var a=new THREE.PlaneBufferGeometry(this.parameters.width,this.parameters.height,this.parameters.widthSegments,this.parameters.heightSegments);a.copy(this);return a};\nTHREE.RingGeometry=function(a,b,c,d,e,g){THREE.Geometry.call(this);this.type=\"RingGeometry\";this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:g};a=a||0;b=b||50;e=void 0!==e?e:0;g=void 0!==g?g:2*Math.PI;c=void 0!==c?Math.max(3,c):8;d=void 0!==d?Math.max(1,d):8;var f,h=[],k=a,l=(b-a)/d;for(a=0;a<d+1;a++){for(f=0;f<c+1;f++){var n=new THREE.Vector3,p=e+f/c*g;n.x=k*Math.cos(p);n.y=k*Math.sin(p);this.vertices.push(n);h.push(new THREE.Vector2((n.x/b+1)/2,\n(n.y/b+1)/2))}k+=l}b=new THREE.Vector3(0,0,1);for(a=0;a<d;a++)for(e=a*(c+1),f=0;f<c;f++)g=p=f+e,l=p+c+1,n=p+c+2,this.faces.push(new THREE.Face3(g,l,n,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[g].clone(),h[l].clone(),h[n].clone()]),g=p,l=p+c+2,n=p+1,this.faces.push(new THREE.Face3(g,l,n,[b.clone(),b.clone(),b.clone()])),this.faceVertexUvs[0].push([h[g].clone(),h[l].clone(),h[n].clone()]);this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,k)};\nTHREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;THREE.RingGeometry.prototype.clone=function(){return new THREE.RingGeometry(this.parameters.innerRadius,this.parameters.outerRadius,this.parameters.thetaSegments,this.parameters.phiSegments,this.parameters.thetaStart,this.parameters.thetaLength)};\nTHREE.SphereGeometry=function(a,b,c,d,e,g,f){THREE.Geometry.call(this);this.type=\"SphereGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:g,thetaLength:f};this.fromBufferGeometry(new THREE.SphereBufferGeometry(a,b,c,d,e,g,f))};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;\nTHREE.SphereGeometry.prototype.clone=function(){return new THREE.SphereGeometry(this.parameters.radius,this.parameters.widthSegments,this.parameters.heightSegments,this.parameters.phiStart,this.parameters.phiLength,this.parameters.thetaStart,this.parameters.thetaLength)};\nTHREE.SphereBufferGeometry=function(a,b,c,d,e,g,f){THREE.BufferGeometry.call(this);this.type=\"SphereBufferGeometry\";this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:g,thetaLength:f};a=a||50;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;g=void 0!==g?g:0;f=void 0!==f?f:Math.PI;for(var h=g+f,k=(b+1)*(c+1),l=new THREE.BufferAttribute(new Float32Array(3*k),3),n=new THREE.BufferAttribute(new Float32Array(3*\nk),3),k=new THREE.BufferAttribute(new Float32Array(2*k),2),p=0,m=[],q=new THREE.Vector3,t=0;t<=c;t++){for(var r=[],u=t/c,w=0;w<=b;w++){var v=w/b,B=-a*Math.cos(d+v*e)*Math.sin(g+u*f),x=a*Math.cos(g+u*f),H=a*Math.sin(d+v*e)*Math.sin(g+u*f);q.set(B,x,H).normalize();l.setXYZ(p,B,x,H);n.setXYZ(p,q.x,q.y,q.z);k.setXY(p,v,1-u);r.push(p);p++}m.push(r)}d=[];for(t=0;t<c;t++)for(w=0;w<b;w++)e=m[t][w+1],f=m[t][w],p=m[t+1][w],q=m[t+1][w+1],(0!==t||0<g)&&d.push(e,f,q),(t!==c-1||h<Math.PI)&&d.push(f,p,q);this.setIndex(new THREE.BufferAttribute(new Uint16Array(d),\n1));this.addAttribute(\"position\",l);this.addAttribute(\"normal\",n);this.addAttribute(\"uv\",k);this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry;\nTHREE.SphereBufferGeometry.prototype.clone=function(){var a=new THREE.SphereBufferGeometry(this.parameters.radius,this.parameters.widthSegments,this.parameters.heightSegments,this.parameters.phiStart,this.parameters.phiLength,this.parameters.thetaStart,this.parameters.thetaLength);a.copy(this);return a};\nTHREE.TextGeometry=function(a,b){b=b||{};var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b);this.type=\"TextGeometry\"};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;\nTHREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.type=\"TorusGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e};a=a||100;b=b||40;c=c||8;d=d||6;e=e||2*Math.PI;for(var g=new THREE.Vector3,f=[],h=[],k=0;k<=c;k++)for(var l=0;l<=d;l++){var n=l/d*e,p=k/c*Math.PI*2;g.x=a*Math.cos(n);g.y=a*Math.sin(n);var m=new THREE.Vector3;m.x=(a+b*Math.cos(p))*Math.cos(n);m.y=(a+b*Math.cos(p))*Math.sin(n);m.z=b*Math.sin(p);this.vertices.push(m);f.push(new THREE.Vector2(l/\nd,k/c));h.push(m.clone().sub(g).normalize())}for(k=1;k<=c;k++)for(l=1;l<=d;l++)a=(d+1)*k+l-1,b=(d+1)*(k-1)+l-1,e=(d+1)*(k-1)+l,g=(d+1)*k+l,n=new THREE.Face3(a,b,g,[h[a].clone(),h[b].clone(),h[g].clone()]),this.faces.push(n),this.faceVertexUvs[0].push([f[a].clone(),f[b].clone(),f[g].clone()]),n=new THREE.Face3(b,e,g,[h[b].clone(),h[e].clone(),h[g].clone()]),this.faces.push(n),this.faceVertexUvs[0].push([f[b].clone(),f[e].clone(),f[g].clone()]);this.computeFaceNormals()};\nTHREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;THREE.TorusGeometry.prototype.clone=function(){return new THREE.TorusGeometry(this.parameters.radius,this.parameters.tube,this.parameters.radialSegments,this.parameters.tubularSegments,this.parameters.arc)};\nTHREE.TorusKnotGeometry=function(a,b,c,d,e,g,f){function h(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a);a*=b/c;b=Math.cos(a);f*=d*(2+b)*.5;g=d*(2+b)*g*.5;d=e*d*Math.sin(a)*.5;return new THREE.Vector3(f,g,d)}THREE.Geometry.call(this);this.type=\"TorusKnotGeometry\";this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,p:e,q:g,heightScale:f};a=a||100;b=b||40;c=c||64;d=d||8;e=e||2;g=g||3;f=f||1;for(var k=Array(c),l=new THREE.Vector3,n=new THREE.Vector3,p=new THREE.Vector3,m=0;m<c;++m){k[m]=\nArray(d);var q=m/c*2*e*Math.PI,t=h(q,g,e,a,f),q=h(q+.01,g,e,a,f);l.subVectors(q,t);n.addVectors(q,t);p.crossVectors(l,n);n.crossVectors(p,l);p.normalize();n.normalize();for(q=0;q<d;++q){var r=q/d*2*Math.PI,u=-b*Math.cos(r),r=b*Math.sin(r),w=new THREE.Vector3;w.x=t.x+u*n.x+r*p.x;w.y=t.y+u*n.y+r*p.y;w.z=t.z+u*n.z+r*p.z;k[m][q]=this.vertices.push(w)-1}}for(m=0;m<c;++m)for(q=0;q<d;++q)e=(m+1)%c,g=(q+1)%d,a=k[m][q],b=k[e][q],e=k[e][g],g=k[m][g],f=new THREE.Vector2(m/c,q/d),l=new THREE.Vector2((m+1)/c,\nq/d),n=new THREE.Vector2((m+1)/c,(q+1)/d),p=new THREE.Vector2(m/c,(q+1)/d),this.faces.push(new THREE.Face3(a,b,g)),this.faceVertexUvs[0].push([f,l,p]),this.faces.push(new THREE.Face3(b,e,g)),this.faceVertexUvs[0].push([l.clone(),n,p.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;\nTHREE.TorusKnotGeometry.prototype.clone=function(){return new THREE.TorusKnotGeometry(this.parameters.radius,this.parameters.tube,this.parameters.radialSegments,this.parameters.tubularSegments,this.parameters.p,this.parameters.q,this.parameters.heightScale)};\nTHREE.TubeGeometry=function(a,b,c,d,e,g){THREE.Geometry.call(this);this.type=\"TubeGeometry\";this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e};b=b||64;c=c||1;d=d||8;e=e||!1;g=g||THREE.TubeGeometry.NoTaper;var f=[],h,k,l=b+1,n,p,m,q,t,r=new THREE.Vector3,u,w,v;u=new THREE.TubeGeometry.FrenetFrames(a,b,e);w=u.normals;v=u.binormals;this.tangents=u.tangents;this.normals=w;this.binormals=v;for(u=0;u<l;u++)for(f[u]=[],n=u/(l-1),t=a.getPointAt(n),h=w[u],k=v[u],m=c*g(n),n=0;n<d;n++)p=\nn/d*2*Math.PI,q=-m*Math.cos(p),p=m*Math.sin(p),r.copy(t),r.x+=q*h.x+p*k.x,r.y+=q*h.y+p*k.y,r.z+=q*h.z+p*k.z,f[u][n]=this.vertices.push(new THREE.Vector3(r.x,r.y,r.z))-1;for(u=0;u<b;u++)for(n=0;n<d;n++)g=e?(u+1)%b:u+1,l=(n+1)%d,a=f[u][n],c=f[g][n],g=f[g][l],l=f[u][l],r=new THREE.Vector2(u/b,n/d),w=new THREE.Vector2((u+1)/b,n/d),v=new THREE.Vector2((u+1)/b,(n+1)/d),h=new THREE.Vector2(u/b,(n+1)/d),this.faces.push(new THREE.Face3(a,c,l)),this.faceVertexUvs[0].push([r,w,h]),this.faces.push(new THREE.Face3(c,\ng,l)),this.faceVertexUvs[0].push([w.clone(),v,h.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(a){return 1};THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)};\nTHREE.TubeGeometry.FrenetFrames=function(a,b,c){var d=new THREE.Vector3,e=[],g=[],f=[],h=new THREE.Vector3,k=new THREE.Matrix4;b+=1;var l,n,p;this.tangents=e;this.normals=g;this.binormals=f;for(l=0;l<b;l++)n=l/(b-1),e[l]=a.getTangentAt(n),e[l].normalize();g[0]=new THREE.Vector3;f[0]=new THREE.Vector3;a=Number.MAX_VALUE;l=Math.abs(e[0].x);n=Math.abs(e[0].y);p=Math.abs(e[0].z);l<=a&&(a=l,d.set(1,0,0));n<=a&&(a=n,d.set(0,1,0));p<=a&&d.set(0,0,1);h.crossVectors(e[0],d).normalize();g[0].crossVectors(e[0],\nh);f[0].crossVectors(e[0],g[0]);for(l=1;l<b;l++)g[l]=g[l-1].clone(),f[l]=f[l-1].clone(),h.crossVectors(e[l-1],e[l]),1E-4<h.length()&&(h.normalize(),d=Math.acos(THREE.Math.clamp(e[l-1].dot(e[l]),-1,1)),g[l].applyMatrix4(k.makeRotationAxis(h,d))),f[l].crossVectors(e[l],g[l]);if(c)for(d=Math.acos(THREE.Math.clamp(g[0].dot(g[b-1]),-1,1)),d/=b-1,0<e[0].dot(h.crossVectors(g[0],g[b-1]))&&(d=-d),l=1;l<b;l++)g[l].applyMatrix4(k.makeRotationAxis(e[l],d*l)),f[l].crossVectors(e[l],g[l])};\nTHREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=k.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+.5;b.uv=new THREE.Vector2(c,1-a);return b}function g(a,b,c,d){d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()],void 0,d);k.faces.push(d);u.copy(a).add(b).add(c).divideScalar(3);d=Math.atan2(u.z,-u.x);k.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}function f(a,\nb){for(var c=Math.pow(2,b),d=e(k.vertices[a.a]),f=e(k.vertices[a.b]),h=e(k.vertices[a.c]),l=[],m=a.materialIndex,n=0;n<=c;n++){l[n]=[];for(var p=e(d.clone().lerp(h,n/c)),q=e(f.clone().lerp(h,n/c)),r=c-n,t=0;t<=r;t++)l[n][t]=0===t&&n===c?p:e(p.clone().lerp(q,t/r))}for(n=0;n<c;n++)for(t=0;t<2*(c-n)-1;t++)d=Math.floor(t/2),0===t%2?g(l[n][d+1],l[n+1][d],l[n][d],m):g(l[n][d+1],l[n+1][d+1],l[n+1][d],m)}function h(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/\n2/Math.PI+.5,a.y));return a.clone()}THREE.Geometry.call(this);this.type=\"PolyhedronGeometry\";this.parameters={vertices:a,indices:b,radius:c,detail:d};c=c||1;d=d||0;for(var k=this,l=0,n=a.length;l<n;l+=3)e(new THREE.Vector3(a[l],a[l+1],a[l+2]));a=this.vertices;for(var p=[],m=l=0,n=b.length;l<n;l+=3,m++){var q=a[b[l]],t=a[b[l+1]],r=a[b[l+2]];p[m]=new THREE.Face3(q.index,t.index,r.index,[q.clone(),t.clone(),r.clone()],void 0,m)}for(var u=new THREE.Vector3,l=0,n=p.length;l<n;l++)f(p[l],d);l=0;for(n=this.faceVertexUvs[0].length;l<\nn;l++)b=this.faceVertexUvs[0][l],d=b[0].x,a=b[1].x,p=b[2].x,m=Math.max(d,Math.max(a,p)),q=Math.min(d,Math.min(a,p)),.9<m&&.1>q&&(.2>d&&(b[0].x+=1),.2>a&&(b[1].x+=1),.2>p&&(b[2].x+=1));l=0;for(n=this.vertices.length;l<n;l++)this.vertices[l].multiplyScalar(c);this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;\nTHREE.PolyhedronGeometry.prototype.clone=function(){return(new THREE.PolyhedronGeometry(this.parameters.vertices,this.parameters.indices,this.parameters.radius,this.parameters.detail)).copy(this)};THREE.PolyhedronGeometry.prototype.copy=function(a){THREE.Geometry.prototype.copy.call(this,a);return this};\nTHREE.DodecahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2,d=1/c;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,\n12,14,1,14,5,1,5,9],a,b);this.type=\"DodecahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;THREE.DodecahedronGeometry.prototype.clone=function(){var a=new THREE.DodecahedronGeometry(this.parameters.radius,this.parameters.detail);a.copy(this);return a};\nTHREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b);this.type=\"IcosahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);\nTHREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.IcosahedronGeometry.prototype.clone=function(){var a=new THREE.IcosahedronGeometry(this.parameters.radius,this.parameters.detail);a.copy(this);return a};THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b);this.type=\"OctahedronGeometry\";this.parameters={radius:a,detail:b}};\nTHREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;THREE.OctahedronGeometry.prototype.clone=function(){var a=new THREE.OctahedronGeometry(this.parameters.radius,this.parameters.detail);a.copy(this);return a};\nTHREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b);this.type=\"TetrahedronGeometry\";this.parameters={radius:a,detail:b}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;\nTHREE.TetrahedronGeometry.prototype.clone=function(){var a=new THREE.TetrahedronGeometry(this.parameters.radius,this.parameters.detail);a.copy(this);return a};\nTHREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this);this.type=\"ParametricGeometry\";this.parameters={func:a,slices:b,stacks:c};var d=this.vertices,e=this.faces,g=this.faceVertexUvs[0],f,h,k,l,n=b+1;for(f=0;f<=c;f++)for(l=f/c,h=0;h<=b;h++)k=h/b,k=a(k,l),d.push(k);var p,m,q,t;for(f=0;f<c;f++)for(h=0;h<b;h++)a=f*n+h,d=f*n+h+1,l=(f+1)*n+h+1,k=(f+1)*n+h,p=new THREE.Vector2(h/b,f/c),m=new THREE.Vector2((h+1)/b,f/c),q=new THREE.Vector2((h+1)/b,(f+1)/c),t=new THREE.Vector2(h/b,(f+1)/c),e.push(new THREE.Face3(a,\nd,k)),g.push([p,m,t]),e.push(new THREE.Face3(d,l,k)),g.push([m.clone(),q,t.clone()]);this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;\nTHREE.WireframeGeometry=function(a){THREE.BufferGeometry.call(this);var b=[0,0],c={},d=function(a,b){return a-b},e=[\"a\",\"b\",\"c\"];if(a instanceof THREE.Geometry){var g=a.vertices,f=a.faces,h=0,k=new Uint32Array(6*f.length);a=0;for(var l=f.length;a<l;a++)for(var n=f[a],p=0;3>p;p++){b[0]=n[e[p]];b[1]=n[e[(p+1)%3]];b.sort(d);var m=b.toString();void 0===c[m]&&(k[2*h]=b[0],k[2*h+1]=b[1],c[m]=!0,h++)}b=new Float32Array(6*h);a=0;for(l=h;a<l;a++)for(p=0;2>p;p++)c=g[k[2*a+p]],h=6*a+3*p,b[h+0]=c.x,b[h+1]=c.y,\nb[h+2]=c.z;this.addAttribute(\"position\",new THREE.BufferAttribute(b,3))}else if(a instanceof THREE.BufferGeometry){if(null!==a.index){l=a.index.array;g=a.attributes.position;e=a.drawcalls;h=0;0===e.length&&a.addDrawCall(0,l.length);k=new Uint32Array(2*l.length);f=0;for(n=e.length;f<n;++f){a=e[f];p=a.start;m=a.count;a=p;for(var q=p+m;a<q;a+=3)for(p=0;3>p;p++)b[0]=l[a+p],b[1]=l[a+(p+1)%3],b.sort(d),m=b.toString(),void 0===c[m]&&(k[2*h]=b[0],k[2*h+1]=b[1],c[m]=!0,h++)}b=new Float32Array(6*h);a=0;for(l=\nh;a<l;a++)for(p=0;2>p;p++)h=6*a+3*p,c=k[2*a+p],b[h+0]=g.getX(c),b[h+1]=g.getY(c),b[h+2]=g.getZ(c)}else for(g=a.attributes.position.array,h=g.length/3,k=h/3,b=new Float32Array(6*h),a=0,l=k;a<l;a++)for(p=0;3>p;p++)h=18*a+6*p,k=9*a+3*p,b[h+0]=g[k],b[h+1]=g[k+1],b[h+2]=g[k+2],c=9*a+(p+1)%3*3,b[h+3]=g[c],b[h+4]=g[c+1],b[h+5]=g[c+2];this.addAttribute(\"position\",new THREE.BufferAttribute(b,3))}};THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);\nTHREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry;THREE.AxisHelper=function(a){a=a||1;var b=new Float32Array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);a=new THREE.BufferGeometry;a.addAttribute(\"position\",new THREE.BufferAttribute(b,3));a.addAttribute(\"color\",new THREE.BufferAttribute(c,3));b=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,a,b)};THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype);\nTHREE.AxisHelper.prototype.constructor=THREE.AxisHelper;\nTHREE.ArrowHelper=function(){var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var b=new THREE.CylinderGeometry(0,.5,1,5,1);b.translate(0,-.5,0);return function(c,d,e,g,f,h){THREE.Object3D.call(this);void 0===g&&(g=16776960);void 0===e&&(e=1);void 0===f&&(f=.2*e);void 0===h&&(h=.2*f);this.position.copy(d);f<e&&(this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:g})),this.line.matrixAutoUpdate=!1,this.add(this.line));this.cone=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:g}));\nthis.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(c);this.setLength(e,f,h)}}();THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;THREE.ArrowHelper.prototype.setDirection=function(){var a=new THREE.Vector3,b;return function(c){.99999<c.y?this.quaternion.set(0,0,0,1):-.99999>c.y?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}();\nTHREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a);void 0===c&&(c=.2*b);b<a&&(this.line.scale.set(1,a-b,1),this.line.updateMatrix());this.cone.scale.set(c,b,c);this.cone.position.y=a;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(a){void 0!==this.line&&this.line.material.color.set(a);this.cone.material.color.set(a)};\nTHREE.BoxHelper=function(a){var b=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),c=new Float32Array(24),d=new THREE.BufferGeometry;d.setIndex(new THREE.BufferAttribute(b,1));d.addAttribute(\"position\",new THREE.BufferAttribute(c,3));THREE.LineSegments.call(this,d,new THREE.LineBasicMaterial({color:16776960}));void 0!==a&&this.update(a)};THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;\nTHREE.BoxHelper.prototype.update=function(){var a=new THREE.Box3;return function(b){a.setFromObject(b);if(!a.empty()){b=a.min;var c=a.max,d=this.geometry.attributes.position,e=d.array;e[0]=c.x;e[1]=c.y;e[2]=c.z;e[3]=b.x;e[4]=c.y;e[5]=c.z;e[6]=b.x;e[7]=b.y;e[8]=c.z;e[9]=c.x;e[10]=b.y;e[11]=c.z;e[12]=c.x;e[13]=c.y;e[14]=b.z;e[15]=b.x;e[16]=c.y;e[17]=b.z;e[18]=b.x;e[19]=b.y;e[20]=b.z;e[21]=c.x;e[22]=b.y;e[23]=b.z;d.needsUpdate=!0;this.geometry.computeBoundingSphere()}}}();\nTHREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};\nTHREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3);d.colors.push(new THREE.Color(b));void 0===g[a]&&(g[a]=[]);g[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),g={};b(\"n1\",\"n2\",16755200);b(\"n2\",\"n4\",16755200);b(\"n4\",\"n3\",16755200);b(\"n3\",\"n1\",16755200);b(\"f1\",\"f2\",16755200);b(\"f2\",\"f4\",16755200);b(\"f4\",\"f3\",16755200);b(\"f3\",\"f1\",16755200);b(\"n1\",\"f1\",16755200);\nb(\"n2\",\"f2\",16755200);b(\"n3\",\"f3\",16755200);b(\"n4\",\"f4\",16755200);b(\"p\",\"n1\",16711680);b(\"p\",\"n2\",16711680);b(\"p\",\"n3\",16711680);b(\"p\",\"n4\",16711680);b(\"u1\",\"u2\",43775);b(\"u2\",\"u3\",43775);b(\"u3\",\"u1\",43775);b(\"c\",\"t\",16777215);b(\"p\",\"c\",3355443);b(\"cn1\",\"cn2\",3355443);b(\"cn3\",\"cn4\",3355443);b(\"cf1\",\"cf2\",3355443);b(\"cf3\",\"cf4\",3355443);THREE.LineSegments.call(this,d,e);this.camera=a;this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=g;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype);\nTHREE.CameraHelper.prototype.constructor=THREE.CameraHelper;\nTHREE.CameraHelper.prototype.update=function(){var a,b,c=new THREE.Vector3,d=new THREE.Camera,e=function(e,f,h,k){c.set(f,h,k).unproject(d);e=b[e];if(void 0!==e)for(f=0,h=e.length;f<h;f++)a.vertices[e[f]].copy(c)};return function(){a=this.geometry;b=this.pointMap;d.projectionMatrix.copy(this.camera.projectionMatrix);e(\"c\",0,0,-1);e(\"t\",0,0,1);e(\"n1\",-1,-1,-1);e(\"n2\",1,-1,-1);e(\"n3\",-1,1,-1);e(\"n4\",1,1,-1);e(\"f1\",-1,-1,1);e(\"f2\",1,-1,1);e(\"f3\",-1,1,1);e(\"f4\",1,1,1);e(\"u1\",.7,1.1,-1);e(\"u2\",-.7,1.1,\n-1);e(\"u3\",0,2,-1);e(\"cf1\",-1,0,1);e(\"cf2\",1,0,1);e(\"cf3\",0,-1,1);e(\"cf4\",0,1,1);e(\"cn1\",-1,0,-1);e(\"cn2\",1,0,-1);e(\"cn3\",0,-1,-1);e(\"cn4\",0,1,-1);a.verticesNeedUpdate=!0}}();\nTHREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;b=b||1;var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(-b,b,0),new THREE.Vector3(b,b,0),new THREE.Vector3(b,-b,0),new THREE.Vector3(-b,-b,0),new THREE.Vector3(-b,b,0));var d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(c,d);this.add(this.lightPlane);\nc=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3);d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(c,d);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;\nTHREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};\nTHREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);c.subVectors(b,a);this.lightPlane.lookAt(c);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(c);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();\nTHREE.EdgesHelper=function(a,b,c){b=void 0!==b?b:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(a.geometry,c),new THREE.LineBasicMaterial({color:b}));this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;\nTHREE.FaceNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16776960;d=void 0!==d?d:1;b=0;c=this.object.geometry;c instanceof THREE.Geometry?b=c.faces.length:console.warn(\"THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.\");c=new THREE.BufferGeometry;b=new THREE.Float32Attribute(6*b,3);c.addAttribute(\"position\",b);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:a,linewidth:d}));this.matrixAutoUpdate=\n!1;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;\nTHREE.FaceNormalsHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(){this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,g=this.object.geometry,f=g.vertices,g=g.faces,h=0,k=0,l=g.length;k<l;k++){var n=g[k],p=n.normal;a.copy(f[n.a]).add(f[n.b]).add(f[n.c]).divideScalar(3).applyMatrix4(d);b.copy(p).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);\ne.setXYZ(h,a.x,a.y,a.z);h+=1;e.setXYZ(h,b.x,b.y,b.z);h+=1}e.needsUpdate=!0;return this}}();\nTHREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var e=-a;e<=a;e+=b){c.vertices.push(new THREE.Vector3(-a,0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,-a),new THREE.Vector3(e,0,a));var g=0===e?this.color1:this.color2;c.colors.push(g,g,g,g)}THREE.LineSegments.call(this,c,d)};THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype);\nTHREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a);this.color2.set(b);this.geometry.colorsNeedUpdate=!0};\nTHREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];var c=new THREE.SphereGeometry(b,4,2);c.rotateX(-Math.PI/2);for(var d=0;8>d;d++)c.faces[d].color=this.colors[4>d?0:1];d=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(c,d);this.add(this.lightSphere);this.update()};\nTHREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};\nTHREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();\nTHREE.PointLightHelper=function(a,b){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,d);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;\nTHREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};\nTHREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++)this.bones[c].parent instanceof THREE.Bone&&(b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3),b.colors.push(new THREE.Color(0,0,1)),b.colors.push(new THREE.Color(0,1,0)));b.dynamic=!0;c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.LineSegments.call(this,b,c);this.root=a;this.matrix=a.matrixWorld;\nthis.matrixAutoUpdate=!1;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var b=[];a instanceof THREE.Bone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return b};\nTHREE.SkeletonHelper.prototype.update=function(){for(var a=this.geometry,b=(new THREE.Matrix4).getInverse(this.root.matrixWorld),c=new THREE.Matrix4,d=0,e=0;e<this.bones.length;e++){var g=this.bones[e];g.parent instanceof THREE.Bone&&(c.multiplyMatrices(b,g.matrixWorld),a.vertices[d].setFromMatrixPosition(c),c.multiplyMatrices(b,g.parent.matrixWorld),a.vertices[d+1].setFromMatrixPosition(c),d+=2)}a.verticesNeedUpdate=!0;a.computeBoundingSphere()};\nTHREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1;a=new THREE.CylinderGeometry(0,1,1,8,1,!0);a.translate(0,-.5,0);a.rotateX(-Math.PI/2);var b=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(a,b);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;\nTHREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1E4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();\nTHREE.VertexNormalsHelper=function(a,b,c,d){this.object=a;this.size=void 0!==b?b:1;a=void 0!==c?c:16711680;d=void 0!==d?d:1;b=0;c=this.object.geometry;c instanceof THREE.Geometry?b=3*c.faces.length:c instanceof THREE.BufferGeometry&&(b=c.attributes.normal.count);c=new THREE.BufferGeometry;b=new THREE.Float32Attribute(6*b,3);c.addAttribute(\"position\",b);THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:a,linewidth:d}));this.matrixAutoUpdate=!1;this.update()};\nTHREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;\nTHREE.VertexNormalsHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(){var d=[\"a\",\"b\",\"c\"];this.object.updateMatrixWorld(!0);c.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld,g=this.geometry.attributes.position,f=this.object.geometry;if(f instanceof THREE.Geometry)for(var h=f.vertices,k=f.faces,l=f=0,n=k.length;l<n;l++)for(var p=k[l],m=0,q=p.vertexNormals.length;m<q;m++){var t=p.vertexNormals[m];a.copy(h[p[d[m]]]).applyMatrix4(e);\nb.copy(t).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a);g.setXYZ(f,a.x,a.y,a.z);f+=1;g.setXYZ(f,b.x,b.y,b.z);f+=1}else if(f instanceof THREE.BufferGeometry)for(d=f.attributes.position,h=f.attributes.normal,m=f=0,q=d.count;m<q;m++)a.set(d.getX(m),d.getY(m),d.getZ(m)).applyMatrix4(e),b.set(h.getX(m),h.getY(m),h.getZ(m)),b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),g.setXYZ(f,a.x,a.y,a.z),f+=1,g.setXYZ(f,b.x,b.y,b.z),f+=1;g.needsUpdate=!0;return this}}();\nTHREE.WireframeHelper=function(a,b){var c=void 0!==b?b:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(a.geometry),new THREE.LineBasicMaterial({color:c}));this.matrix=a.matrixWorld;this.matrixAutoUpdate=!1};THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);\nTHREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation(\"__default\",0,c-1,c/1);this.setAnimationWeight(\"__default\",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;\nTHREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={start:b,end:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)_?(\\d+)/,c,d={},e=this.geometry,g=0,f=e.morphTargets.length;g<f;g++){var h=e.morphTargets[g].name.match(b);if(h&&1<h.length){var k=h[1];d[k]||(d[k]={start:Infinity,end:-Infinity});h=d[k];g<h.start&&(h.start=g);g>h.end&&(h.end=g);c||(c=k)}}for(k in d)h=d[k],this.createAnimation(k,h.start,h.end,a);this.firstAnimation=c};\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};\nTHREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};\nTHREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn(\"THREE.MorphBlendMesh: animation[\"+a+\"] undefined in .playAnimation()\")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};\nTHREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var g=d.start+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),f=d.weight;g!==d.currentFrame&&\n(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*f,this.morphTargetInfluences[g]=0,d.lastFrame=d.currentFrame,d.currentFrame=g);e=d.time%e/e;d.directionBackwards&&(e=1-e);d.currentFrame!==d.lastFrame?(this.morphTargetInfluences[d.currentFrame]=e*f,this.morphTargetInfluences[d.lastFrame]=(1-e)*f):this.morphTargetInfluences[d.currentFrame]=f}}};"],"names":["a1","b","c","d","e","g","THREE","REVISION","define","amd","exports","module","self","requestAnimationFrame","cancelAnimationFrame","length","setTimeout","Date","now","Math","max","f","clearTimeout","sign","Function","prototype","name","Object","defineProperty","get","toString","match","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","console","error","projectVector","warn","project","unprojectVector","unproject","pickingRay","CanvasRenderer","domElement","document","createElement","clear","render","setClearColor","setSize","Color","arguments","setRGB","set","constructor","r","copy","setHex","setStyle","floor","setHSL","euclideanModulo","clamp","parseFloat","exec","min","parseInt","charAt","ColorKeywords","clone","copyGammaToLinear","pow","copyLinearToGamma","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","slice","getHSL","h","s","l","k","getStyle","offsetHSL","add","addColors","addScalar","multiply","multiplyScalar","lerp","equals","fromArray","toArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Quaternion","_x","_y","_z","_w","x","a","onChangeCallback","y","z","w","setFromEuler","Euler","Error","cos","sin","order","setFromAxisAngle","setFromRotationMatrix","elements","setFromUnitVectors","Vector3","dot","abs","crossVectors","normalize","inverse","conjugate","lengthSq","multiplyQuaternions","multiplyVector3","applyQuaternion","slerp","acos","onChange","Vector2","setX","setY","setComponent","getComponent","addVectors","addScaledVector","sub","subVectors","subScalar","divide","divideScalar","clampScalar","ceil","round","roundToZero","negate","lengthManhattan","distanceTo","distanceToSquared","setLength","lerpVectors","fromAttribute","itemSize","array","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","cross","projectOnVector","projectOnPlane","reflect","angleTo","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","PI","_order","DefaultOrder","RotationOrders","split","n","p","asin","atan2","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","toVector3","Line3","start","end","center","delta","distanceSq","distance","at","closestPointToPointParameter","closestPointToPoint","Box2","Infinity","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","empty","size","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","intersect","union","translate","Box3","setFromObject","updateMatrixWorld","traverse","geometry","Geometry","vertices","BufferGeometry","attributes","position","getBoundingSphere","Sphere","radius","Matrix3","Float32Array","identity","multiplyVector3Array","applyToVector3Array","applyToBuffer","getX","getY","getZ","setXYZ","determinant","transpose","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","m","q","t","u","extractPosition","copyPosition","extractBasis","makeBasis","extractRotation","makeRotationFromEuler","setRotationFromQuaternion","lookAt","v","B","H","I","D","G","O","C","F","K","L","E","J","P","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","scale","getMaxScaleOnAxis","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","compose","decompose","makeFrustum","makePerspective","degToRad","makeOrthographic","Ray","origin","direction","recast","distanceSqToPoint","distanceSqToSegment","isIntersectionSphere","intersectSphere","isIntersectionPlane","normal","distanceToPlane","constant","intersectPlane","intersectBox","intersectTriangle","intersectsSphere","getBoundingBox","Frustum","planes","Plane","setFromMatrix","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","intersectsBox","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","distanceToSphere","projectPoint","orthoPoint","isIntersectionLine","intersectLine","coplanarPoint","generateUUID","Array","random","join","clampBottom","mapLinear","smoothstep","smootherstep","random16","randInt","randFloat","randFloatSpread","radToDeg","isPowerOfTwo","nextPowerOfTwo","Spline","points","initFromArray","getPoint","getControlPointsArray","getLength","chunks","total","reparametrizeByArcLength","push","Triangle","barycoordFromPoint","setFromPointsAndIndices","area","midpoint","plane","Clock","autoStart","elapsedTime","oldTime","startTime","running","performance","stop","getElapsedTime","getDelta","EventDispatcher","apply","addEventListener","hasEventListener","removeEventListener","dispatchEvent","_listeners","indexOf","splice","type","target","call","Raycaster","ray","near","far","params","Mesh","Line","LOD","Points","threshold","Sprite","defineProperties","PointCloud","visible","raycast","children","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","intersectObject","sort","intersectObjects","isArray","Object3D","value","Object3DIdCount","uuid","parent","up","DefaultUp","enumerable","rotation","quaternion","modelViewMatrix","normalMatrix","rotationAutoUpdate","matrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","castShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","renderDepth","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getChildByName","getObjectByName","getObjectById","getObjectByProperty","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","toJSON","metadata","object","geometries","materials","textures","images","version","generator","JSON","stringify","parse","Face3","vertexNormals","color","vertexColors","materialIndex","Face4","BufferAttribute","dynamic","updateRange","offset","count","needsUpdate","setDynamic","copyAt","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","create","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","data","GeometryIdCount","colors","faces","faceVertexUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","groupsNeedUpdate","lineDistancesNeedUpdate","colorsNeedUpdate","normalsNeedUpdate","uvsNeedUpdate","elementsNeedUpdate","verticesNeedUpdate","computeBoundingBox","fromBufferGeometry","index","uv","uv2","groups","computeFaceNormals","computeVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","faceNormals","computeTangents","computeLineDistances","merge","mergeMesh","mergeVertices","parameters","normals","uvs","dispose","DirectGeometry","indices","uvs2","computeGroups","fromGeometry","morphAttributes","drawRange","addIndex","setIndex","getIndex","addAttribute","getAttribute","removeAttribute","drawcalls","offsets","addDrawCall","addGroup","clearDrawCalls","clearGroups","setDrawRange","updateFromObject","__directGeometry","lineDistance","fromDirectGeometry","isNaN","normalizeNormals","computeOffsets","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Camera","matrixWorldInverse","CubeCamera","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","generateMipmaps","activeCubeFace","setRenderTarget","zoom","left","right","top","bottom","updateProjectionMatrix","fov","aspect","setLens","atan","setViewOffset","fullWidth","fullHeight","width","height","Light","AmbientLight","DirectionalLight","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraTop","shadowCameraRight","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapHeight","shadowMapWidth","shadowMatrix","shadowCamera","shadowMapSize","shadowMap","HemisphereLight","groundColor","PointLight","decay","SpotLight","angle","exponent","shadowCameraFov","Cache","enabled","files","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","pop","initMaterials","createMaterial","log","LN2","Handlers","load","Texture","setCrossOrigin","getContext","drawImage","image","sourceFile","repeat","wrapS","wrapT","mirror","anisotropy","ImageLoader","shading","toLowerCase","blending","transparent","opacity","depthTest","depthWrite","flipSided","side","doubleSided","wireframe","colorDiffuse","DbgColor","colorEmissive","emissive","colorSpecular","specular","specularCoef","shininess","transparency","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAO","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","DbgName","handlers","test","XHRLoader","manager","DefaultLoadingManager","XMLHttpRequest","open","response","itemEnd","itemError","responseType","withCredentials","send","itemStart","setResponseType","setWithCredentials","src","JSONLoader","statusDomElement","_statusDomElement","texturePath","setTexturePath","influencesPerVertex","bones","animation","animations","LoadingManager","onStart","onLoad","onProgress","onError","BufferGeometryLoader","MaterialLoader","setTextures","getTexture","uniforms","vertexShader","fragmentShader","alphaTest","wireframeLinewidth","sizeAttenuation","map","alphaMap","bumpMap","normalMap","displacementMap","displacementScale","displacementBias","specularMap","envMap","combine","reflectivity","lightMap","lightMapIntensity","aoMap","aoMapIntensity","ObjectLoader","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleBufferGeometry","segments","thetaStart","thetaLength","CircleGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","SphereBufferGeometry","DodecahedronGeometry","detail","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","TextGeometry","text","url","mapping","wrap","Scene","material","mode","Group","levels","addLevel","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendEquationAlpha","blendDstAlpha","blendSrcAlpha","depthFunc","colorWrite","precision","polygonOffset","overdraw","polygonOffsetUnits","polygonOffsetFactor","_needsUpdate","update","setValues","Number","wrapAround","wrapRGB","LineBasicMaterial","linewidth","linejoin","linecap","fog","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinejoin","wireframeLinecap","skinning","MeshLambertMaterial","MeshPhongMaterial","metal","emissiveMap","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","MeshFaceMaterial","PointsMaterial","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","ShaderMaterial","defines","lights","derivatives","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","toDataURL","transformUv","CanvasTexture","CubeTexture","VideoTexture","readyState","HAVE_ENOUGH_DATA","distanceToRay","point","face","ParticleSystem","LineSegments","faceIndex","LineStrip","LinePieces","updateMorphTargets","morphTargetBase","morphTargetInfluences","morphTargetDictionary","getMorphTargetIndexByName","U","Q","R","Bone","skin","Skeleton","useVertexTexture","identityMatrix","boneTextureHeight","boneTextureWidth","boneMatrices","boneTexture","calculateInverses","boneInverses","pose","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","pos","rotq","scl","normalizeSkinWeights","bind","skeleton","MorphAnimMesh","duration","mirroredLoop","currentKeyframe","lastKeyframe","time","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","setAnimationLabel","playAnimation","updateAnimation","interpolateTargets","objects","getObjectForDistance","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","texture","updateLensFlares","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bumpmap_pars_fragment","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","defaultnormal_vertex","displacementmap_vertex","displacementmap_pars_vertex","emissivemap_fragment","emissivemap_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_fragment","lights_phong_pars_fragment","lights_phong_pars_vertex","lights_phong_vertex","linear_to_gamma_fragment","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normalmap_pars_fragment","project_vertex","shadowmap_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","UniformsLib","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","psColor","shadowmap","ShaderLib","basic","lambert","phong","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","WebGLRenderer","clearColor","M","init","viewport","Ja","Ka","ta","ua","A","ia","Sa","ib","pa","Ta","db","reset","preventDefault","Y","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","delete","La","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","program","Ua","releaseProgram","id","va","ma","fa","V","$","group","la","renderBufferDirect","renderBufferImmediate","enable","CULL_FACE","disable","setFlipSided","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","eb","getParameters","getProgramCode","code","shaderID","__webglShader","acquireProgram","getAttributes","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniformsList","getUniforms","useProgram","uniformMatrix4fv","na","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","uniform1i","setTexture","boneGlobalMatrices","ja","X","Z","qa","Ca","aa","tb","directional","Ba","positions","wa","Ra","Va","distances","decays","spot","ga","sa","directions","Ea","anglesCos","exponents","hemi","skyColors","groundColors","Aa","Xa","Fa","ra","Ma","Da","jb","kb","fb","Ya","Za","xa","Na","ca","ambient","ea","oa","Wa","bb","cb","ub","_shadowPass","Oa","lb","pb","ya","ka","Ga","mb","gb","qb","S","vb","N","W","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniformMatrix3fv","_array","T","hb","ha","$a","Pa","ba","wb","Qa","__version","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","xb","nb","Ha","da","autoScaleCubemaps","maxCubemapSize","yb","zb","za","ob","Ia","Ab","ab","rb","getCompressedTextureFormats","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","texImage2D","generateMipmap","sb","modelMatrix","maxTextures","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","canvas","context","alpha","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","sortObjects","autoClearStencil","autoClearDepth","autoClearColor","autoClear","gammaFactor","gammaOutput","gammaInput","calls","info","memory","programs","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","WebGLBufferRenderer","WebGLIndexedBufferRenderer","capabilities","extensions","state","WebGLShadowMap","SpritePlugin","Bb","LensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","getSize","style","setViewport","setScissor","scissor","enableScissorTest","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","resetGLState","initAttributes","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","bindBuffer","ARRAY_BUFFER","bufferData","positionArray","DYNAMIC_DRAW","enableAttribute","vertexAttribPointer","normalArray","uvArray","colorArray","disableUnusedAttributes","drawArrays","TRIANGLES","getWireframeAttribute","getAttributeBuffer","BYTES_PER_ELEMENT","vertexAttribDivisorANGLE","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","ELEMENT_ARRAY_BUFFER","setLineWidth","setMode","LINES","renderInstances","LINE_STRIP","POINTS","ImmediateRenderObject","TEXTURE_2D","setFaceCulling","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","complete","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","maxTextureSize","createFramebuffer","createRenderbuffer","shareDepthFrom","readRenderTargetPixels","WebGLRenderTarget","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsVertexTextures","vertexTextures","supportsInstancedArrays","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","debug","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","getExtension","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","getMaxPrecision","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","WebGLGeometries","__webglBuffer","deleteBuffer","_bufferGeometry","STATIC_DRAW","bufferSubData","subarray","WebGLProgram","createProgram","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","maxBones","flatShading","filter","useFog","fogExp","WebGLShader","attachShader","bindAttribLocation","linkProgram","getProgramInfoLog","getShaderInfoLog","getProgramParameter","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","runnable","programLog","prefix","deleteShader","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","substr","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","destroy","deleteProgram","usedTimes","envMapMode","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","customDepthMaterial","BLEND","cameraHelper","CameraHelper","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","disableVertexAttribArray","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","lineWidth","POLYGON_OFFSET_FILL","SCISSOR_TEST","TEXTURE1","copyTexImage2D","fillStyle","fillRect","GeometryUtils","ImageUtils","loadTexture","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","getImageData","createImageData","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","weight","divisions","getFace","loadFace","familyName","cssFontWeight","cssFontStyle","drawText","resolution","String","Path","extractGlyphPoints","path","paths","glyphs","o","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","b2","bezierCurveTo","b3","generateShapes","curveSegments","font","toShapes","Triangulate","typeface_js","_typeface_js","Audio","source","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","playbackRate","isPlaying","onload","decodeAudioData","buffer","play","loop","pause","currentTime","disconnect","setFilter","getFilter","setPlaybackRate","getPlaybackRate","setLoop","getLoop","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setVolume","getVolume","AudioListener","window","AudioContext","webkitAudioContext","listener","setOrientation","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","getLengths","__arcLengthDivisions","cacheArcLengths","updateArcLengths","getTangent","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","interpolate","CurvePath","curves","bends","autoClose","checkConnection","closePath","LineCurve","getCurveLengths","cacheLengths","NEGATIVE_INFINITY","POSITIVE_INFINITY","minX","minY","maxX","maxY","maxZ","minZ","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","getTransformedPoints","getWrapPoints","getTransformedSpacedPoints","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","action","args","QuadraticBezierCurve","CubicBezierCurve","splineThru","SplineCurve","absarc","absellipse","ellipse","EllipseCurve","useSpacedPoints","concat","isClockWise","froms","tos","hole","holes","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","getSpacedPointsHoles","extractAllPoints","shape","extractPoints","extractAllSpacedPoints","triangulateShape","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","v1","v2","v0","v3","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","c0","c1","c2","c3","initNonuniformCatmullRom","initCatmullRom","calc","tension","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","keys","rot","usedMorphTargets","morphTargetsInfluences","resetBlendWeights","Animation","root","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","getPrevKeyWith","KeyFrameAnimation","node","isPaused","sids","endTime","hasTarget","MorphAnimation","mesh","frames","currentFrame","lastFrame","CubeGeometry","EdgesGeometry","vert1","vert2","face1","face2","addShapeList","addShape","generateSideWallUV","generateTopUV","amount","bevelThickness","bevelSize","bevelSegments","bevelEnabled","steps","extrudePath","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","reverse","binormals","LatheGeometry","PlaneGeometry","PlaneBufferGeometry","closed","NoTaper","tangents","SinusoidalTaper","MAX_VALUE","PolyhedronGeometry","ParametricGeometry","func","slices","stacks","WireframeGeometry","AxisHelper","ArrowHelper","line","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","box","camera","pointMap","DirectionalLightHelper","light","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","GridHelper","color1","color2","setColors","HemisphereLightHelper","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","SpotLightHelper","VertexNormalsHelper","WireframeHelper","MorphBlendMesh","animationsMap","animationsList","createAnimation","setAnimationWeight","fps","active","autoCreateAnimations","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation"],"version":3,"file":"index.366cbe3a.js.map"}